{"version":3,"sources":["images/icon-all.svg","images/icon-none.svg","images/logo-neg.svg","images/logo.svg","images/user-placeholder.svg","images/bias-placeholder.svg","images/logo-alt.svg","registerServiceWorker.js","reducers/app/types.js","reducers/app/reducers.js","reducers/app/actions.js","reducers/app/operations.js","reducers/app/index.js","reducers/admin/types.js","reducers/admin/reducers.js","utils/constants.js","reducers/admin/actions.js","reducers/admin/operations.js","reducers/admin/index.js","reducers/artists/types.js","reducers/artists/reducers.js","reducers/artists/actions.js","reducers/artists/operations.js","reducers/artists/index.js","reducers/auth/types.js","reducers/auth/reducers.js","reducers/auth/actions.js","reducers/auth/operations.js","reducers/auth/index.js","reducers/db/types.js","reducers/db/reducers.js","reducers/db/operations.js","reducers/db/index.js","reducers/distribute/types.js","reducers/distribute/reducers.js","reducers/distribute/actions.js","reducers/distribute/operations.js","reducers/distribute/index.js","reducers/sync/types.js","reducers/sync/reducers.js","reducers/sync/actions.js","reducers/sync/operations.js","reducers/sync/index.js","reducers/temp/types.js","reducers/temp/reducers.js","reducers/temp/actions.js","reducers/temp/index.js","reducers/index.js","api/utils.js","api/response.js","api/enums.js","api/serializers.js","api/deserializers.js","api/firebase.js","api/index.js","utils/index.js","sagas/api-saga.js","sagas/status-handling.js","sagas/index.js","store.js","app/global/footer/components/Footer.jsx","app/global/footer/index.js","app/global/footer/containers/FooterContainer.js","app/common/components/ActiveSongWidget.jsx","app/common/containers/ActiveSongWidgetContainer.js","app/common/components/ActiveUnitWidget.jsx","app/common/containers/ActiveUnitWidgetContainer.js","app/common/components/ActiveVideoWidget.jsx","app/common/components/Collapsible.jsx","app/common/components/FavoriteIcon.jsx","utils/icons.js","app/common/components/Icon.jsx","app/common/components/Loading.jsx","app/common/components/LoadingIcon.jsx","app/common/components/LoadingWrapper.jsx","app/common/components/member/MemberNationalityFlag.jsx","app/common/components/member/MemberPicture.jsx","app/common/components/member/MemberPositions.jsx","app/common/components/MemberCard.jsx","app/common/components/ModeWidget.jsx","app/common/components/PositionIcon.jsx","app/common/components/RequirementWrapper.jsx","app/common/containers/RequirementWrapperContainer.js","app/common/components/Select.jsx","app/common/components/SortingButton.jsx","app/common/components/Switch.jsx","app/common/components/Tabs.jsx","app/common/components/Typeahead.jsx","app/global/header/components/Menu.jsx","app/global/header/components/LoadingBar.jsx","app/global/header/components/Header.jsx","app/global/header/containers/HeaderContainer.js","app/global/header/index.js","app/global/error-modal/components/ErrorModal.jsx","app/global/error-modal/containers/ErrorModalContainer.js","app/global/error-modal/index.js","app/pages/admin-actions/components/AdminAction.jsx","app/pages/admin-actions/components/AdminActions.jsx","app/pages/admin-actions/containers/AdminActionsContainer.js","app/pages/admin-actions/index.js","app/pages/artists/components/ArtistsTable.jsx","app/pages/artists/components/Artists.jsx","app/pages/artists/containers/ArtistsContainer.js","app/pages/artists/index.js","app/pages/artist/components/BiasPicture.jsx","app/pages/artist/components/DistributedSongPreview.jsx","app/pages/artist/components/DistributedSongsTable.jsx","app/pages/artist/components/Units.jsx","app/pages/artist/components/Artist.jsx","app/pages/artist/containers/ArtistContainer.js","app/pages/artist/index.js","app/pages/distribute/components/DistributeConnect.jsx","app/pages/distribute/components/DistributeEdit.jsx","app/pages/distribute/components/DistributeProgressBar.jsx","app/pages/distribute/components/DistributeView.jsx","app/pages/distribute/components/Distribute.jsx","app/pages/distribute/containers/DistributeContainer.js","app/pages/distribute/index.js","app/pages/home/components/Home.jsx","app/pages/home/containers/HomeContainer.js","app/pages/home/index.js","app/pages/idols/components/Idols.jsx","app/pages/idols/containers/IdolsContainer.js","app/pages/idols/index.js","app/pages/lab/components/Lab.jsx","app/pages/lab/index.js","app/pages/lab/containers/LabContainer.js","app/pages/learn-more/components/LearnMore.jsx","app/pages/learn-more/index.js","app/pages/learn-more/containers/LearnMoreContainer.js","app/pages/lyrics/components/LyricsOutput.jsx","app/pages/lyrics/parser/index.js","app/pages/lyrics/components/Lyrics.jsx","app/pages/lyrics/containers/LyricsContainer.js","app/pages/lyrics/index.js","app/pages/manage/components/ColorReferenceBar.jsx","app/pages/manage/components/ManageArtist.jsx","app/pages/manage/components/ManageUnit.jsx","app/pages/manage/components/ManageMembers.jsx","app/pages/manage/components/Manage.jsx","app/pages/manage/containers/ManageContainer.js","app/pages/manage/index.js","app/pages/songs/components/SongsTable.jsx","app/pages/songs/components/Songs.jsx","app/pages/songs/containers/SongsContainer.js","app/pages/songs/index.js","app/pages/sync/components/SyncStep1VideoId.jsx","app/pages/sync/components/SyncStep2Info.jsx","app/pages/sync/components/SyncStep3Lyrics.jsx","app/pages/sync/components/SyncStep4Buttons.jsx","app/pages/sync/components/SyncStep4Distribution.jsx","app/pages/sync/components/SyncStep5Verify.jsx","app/pages/sync/components/SyncStep5Save.jsx","app/pages/sync/components/Sync.jsx","app/pages/sync/containers/SyncContainer.js","app/pages/sync/index.js","app/pages/ui-reference/components/ColorSheet.jsx","app/pages/ui-reference/components/ComponentsSheet.jsx","app/pages/ui-reference/components/IconSheet.jsx","app/pages/ui-reference/components/UIReference.jsx","app/pages/ui-reference/containers/UIReferenceContainer.js","app/pages/ui-reference/index.js","app/pages/user/components/User.jsx","app/pages/user/index.js","app/pages/user/containers/UserContainer.js","routes.js","index.js","images/loading.svg","images/manage-lock.svg","images/manage-plus.svg","images/icon-leader.svg","images/icon-main-vocalist.svg","images/icon-main-rapper.svg","images/icon-main-dancer.svg","images/icon-lead-vocalist.svg","images/icon-lead-rapper.svg","images/icon-lead-dancer.svg","images/icon-vocalist.svg","images/icon-dancer.svg","images/icon-rapper.svg","images/icon-center.svg","images/icon-visual.svg","images/icon-maknae.svg"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","types","RESET_ERROR","SET_DATABASE_READY","SET_ERROR","SET_ERROR_INLINE","SET_ERROR_MESSAGE","SET_LOADING","SET_PENDING","SET_SUCCESS","SET_SUCCESS_INLINE","SET_SUCCESS_MESSAGE","initialState","databaseReady","errorInline","errorMessage","pending","loading","actions","payload","dispatch","type","operations","init","handleCloseErrorModal","handleSendBugReport","getState","app","body","timestamp","Date","now","content","appReducer","prevState","arguments","length","undefined","action","newState","Object","assign","success","admin_types","SET_COLORS_IN_USE","SET_CREATE_SUCCESS","SET_EDITING_ARTIST","SET_EDITING_MEMBERS","SET_EDITING_UNIT","SET_MANAGE_RESULT","SET_PANELS","SET_UI_REFERENCE_TAB","SET_UNITS_TYPEAHEAD","SET_UNITS_TYPEAHEAD_DICT","colorsInUse","editingArtist","editingMembers","editingUnit","manageResult","panels","artist","unit","members","uiReferenceTab","unitsTypeahead","unitsTypeaheadDict","constants","ARTISTS_GENDERS","FEMALE","MALE","MIXED","COLORS","col000001","col000002","col000003","col000004","col000005","col000006","col000007","col000008","col000009","col000010","col000011","col000012","col000013","col000014","col000015","col000016","col000017","col000018","col000019","col000020","col000021","col000022","col000023","col000024","col000025","col000026","col000027","col000028","col000029","col000030","DEFAULT_COLORS","default","black","blue","gray","green","orange","pink","purple","red","teal","white","yellow","FLAGS_LIST","AMERICAN","BRAZILIAN","BRITISH","CANADIAN","CHINESE","JAPANESE","KOREAN","TAIWANESE","THAI","VIETNAMISE","GENDERS","UNKOWN","GENRES","CPOP","JPOP","KPOP","OTHER","POP","GENRES_DB","C-Pop","J-Pop","K-Pop","Other","Pop","POSITIONS_LIST","POSITIONS_LIST_OBJ","MAIN_VOCALIST","LEAD_VOCALIST","VOCALIST","MAIN_RAPPER","LEAD_RAPPER","RAPPER","MAIN_DANCER","LEAD_DANCER","DANCER","LEADER","CENTER","VISUAL","NATIONALITIES","NATIONALITY_FLAG_URL","PROFILE_PICTURE_URL","SYNC_KEY_LIST","1","2","3","4","5","SYNC_KEY_COLOR_LIST","YOUTUBE_URLS","admin_actions","admin_operations","handleEditArtist","artistId","objectSpread","admin","new","handleEditMember","memberId","formState","toConsumableArray","db","memberIndex","_","findIndex","m","id","addedMember","push","reduce","dict","member","colorId","lastMember","values","positions","gender","nationality","handleEditUnit","unitId","units","currentUnit","u","handleResyncDB","removeMember","index","resetManage","saveManage","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","artistState","unitState","membersState","missingField","editingArtistState","editingUnitState","editingMembersState","wrap","_context2","prev","next","keys","errors","toastr","warning","toString","abrupt","name","genre","debutYear","concat","forEach","birthdate","some","otherNames","private","memberIds","memberList","map","createdBy","official","subUnit","averages","distributions","memberState","newMember","replace","initials","referenceArtist","key","includes","stop","_x2","_x3","apply","this","switchUIReferenceTab","event","_ref","_callee","_context","target","_x","unlockUnit","unlockMembers","updateManageForm","updateMemberColor","value","updateMemberPositions","adminReducer","SET_SONGS","songs","SET_SONG_SEARCH_QUERY","songSearchQuery","artists_types","SET_ARTIST_LIST","SET_ARTIST_PAGE_TAB","SET_BIAS","SET_SEARCH_QUERY","SET_SELECTED_ARTIST","SET_SELECTED_UNIT","SET_SHOW_FAVORITE_ARTISTS_ONLY","artistList","artistPageTab","bias","searchQuery","selectedArtist","selectedUnit","showFavoriteArtistsOnly","userFavoriteArtists","userLatestArtists","artists_actions","findUnitIndex","artists_operations","getBias","biases","auth","user","artists","loadUserArtists","loadArtist","queryParams","updateSearchQuery","toLowerCase","updateLatestUnits","_x4","showFavoriteArtistsOnlyToggle","switchArtistPageTab","_ref3","_callee3","unitIndex","_context3","parentNode","complete","_x5","_x6","artistsReducer","auth_types","SET_ADMIN","SET_AUTHENTICATED","SET_BIASES","SET_USER","isAuthenticated","isAdmin","auth_actions","auth_operations","login","logout","updateBias","_getState$artists$sel","biasId","currentBias","userId","updateFavoriteArtists","favoriteArtists","updateFavoriteMembers","userFavoriteMembers","favoriteMembers","authReducer","db_types","SET_ARTISTS","SET_ARTISTS_TYPEAHEAD","SET_ARTISTS_TYPEAHEAD_DICT","SET_COLORS","SET_MEMBERS","SET_MEMBERS_TYPEAHEAD","SET_MEMBERS_TYPEAHEAD_DICT","artistsTypeahead","artistsTypeaheadDict","colors","membersTypeahead","membersTypeaheadDict","db_operations","loadArtists","loadColors","loadMembers","loadSongs","dbReducer","distribute_types","RESET_DISTRIBUTE","RESET_DISTRIBUTE_SONG","SET_ACTIVE_DISTRIBUTION","SET_ACTIVE_MEMBER_PILL","SET_ACTIVE_SONG","SET_ACTIVE_UNIT","SET_DISTRIBUTE_VIEW","SET_DISTRIBUTION_CATEGORY","SET_DISTRIBUTION_LINES","SET_DISTRIBUTION_REMAINDER","SET_RATES","SET_TIMESTAMPS_DICT","activeMemberPill","activeDistribution","activeSong","activeUnit","category","distributeView","distributionLines","rates","remainder","timestampsDict","distribute_actions","calculateRates","total","remaining","max","l","line","part","duration","mId","_rates$mId","slicedToArray","rate","Number","toFixed","Math","round","calculateRemainder","parseTimestamps","dLines","distribute","membersDict","timestampDict","distributionLine","distributionPart","startTime","floor","endTime","ceil","start","distribute_operations","activateMemberPill","activateSong","find","songsDict","distributionId","activateUnit","artistName","handleDistributeView","label","handleDistributionCategory","handleSaveDistribution","ratesToSave","relationships","entries","entry","Array","isArray","songId","features","JSON","stringify","linkMemberToPart","found","filter","mergeActiveDistribution","distributionRelationships","cloneDeep","prepareSong","distributionString","distribution","buildPartData","data","_data$split","split","_data$split2","parsedLine","insideBracket","i","char","substring","trim","distributeReducer","sync_types","RESET_SYNC","SET_ACTIVE_LINE","SET_ACTIVE_PILL","SET_ARE_LYRICS_LOCKED","SET_FINAL_LYRICS","SET_INFO","SET_IS_DISTRIBUTION_COMPLETE","SET_LINK_SEQUENCE_MODE","SET_LAST_ID_NUM","SET_LYRICS","SET_PILLS","SET_QUEUE","SET_STEP","SET_STEPS","SET_SYNC_DISTRIBUTION_LINES","SET_SYNC_STATS","SET_TIMESTAMPS","SET_VIDEO_ID","activeLine","activePill","areLyricsLocked","finalLyrics","info","isDistributionComplete","linkSequenceMode","lastIdNum","lyrics","pills","queue","step","steps","locked","expanded","stats","lines","linked","timestamps","videoId","sync_actions","unlockNextStep","sync","finalizeLyrics","prepareLines","clearBrackets","preparedLyrics","startsWith","join","parseLyricsToObject","lineCount","link","color","setTimeout","enqueueCapture","newPillId","dequeueCapture","pillId","linksBackUp","connect","lineId","collection","searchId","newValue","nullifyLine","nullifyPill","isComplete","item","partId","k","pill","newLines","finalId","timepstamps","bracket","second","size","totalSize","intervalId","sync_operations","connectSyncLine","_getState$sync","connectSyncPill","_getState$sync2","deleteSyncPill","clearInterval","handleFormInfo","originalArtist","album","groupSize","single","title","handleLyricsEdit","e","text","handleResetSync","handleSyncBoxMouseDown","player","getPlayerState","getCurrentTime","handleSyncBoxMouseUp","handleSyncKeydown","handleSyncKeyup","handleVideoId","youtubeLink","youtubeLinkQuery","linkPillsSequence","pillList","findNextPill","nextActive","el","setInterval","lockLyrics","s","idNum","resetPillLinks","saveSync","_getState$sync3","originalArtistId","unlockSpecificStep","num","st","syncReducer","temp_types","SET_TEST_1","SET_TEST_2","SET_TEST_3","SET_TEST_4","SET_TEST_5","test1","test2","test3","test4","test5","tempReducer","rootReducer","combineReducers","temp","appTypes","adminTypes","artistsTypes","authTypes","dbTypes","distributeTypes","syncTypes","tempTypes","TODAY","ageDict","getNumberFromColorId","makeSixDigit","pad","isNaN","str","wait","ms","Promise","r","j","utils","breadcrumble","path","Error","HttpStatus","UNAUTHORIZED","BAD_REQUEST","urlSplit","fullPath","queryResult","querySplit","subQuery","queryName","queryValue","root","referenceId","subPath","buildArtistQuery","memberNames","buildMemberInitials","toUpperCase","buildSongQuery","calculateAge","birthday","birthdateString","birthDate","ageDate","getTime","abs","getUTCFullYear","ensureGenreEnum","C-POP","J-POP","K-POP","getAlternativeColor","list","random","mergeMembers","unitMembersArr","membersArr","positionsDict","attributes","parseRates","parsedRates","ALL","NONE","parseUnitMembers","membersObj","_key$split","_key$split2","memberName","memberPosition","verifyRequirements","uid","fields","missing","field","NewResponse","classCallCheck","statusCode","dataResponse","errorResponse","code","OK","dt","INTERNAL_SERVER_ERROR","message","throwError","serialize","modifiedBy","query","b","count","g","hex","number","parse","age","primaryGenre","song","email","latestUnits","latesUnits","session","displayName","photoURL","serializeCollection","object","deserialize","post","reportedBy","photoUrl","put","res","fb","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","googleProvider","GoogleAuthProvider","userSession","onAuthStateChanged","users","fullyLoaded","dbRef","API","_authenticated","_admin","_loaded","_loggedInThisSession","_tries","_uid","print","response","status","authenticated","loaded","resolve","database","dbState","emailVerified","get","userRes","NO_CONTENT","setPersistence","Auth","Persistence","LOCAL","signInWithPopup","result","t0","t2","signOut","ok","_context4","warn","syncDB","ref","once","snapshot","val","resyncFunctions","set","throwDBError","route","getFunctions","fetchArtistUnits","fetchArtist","fetchArtists","fetchColor","fetchColors","fetchDistribution","fetchMember","fetchMembers","fetchSong","fetchSongs","fetchUnitDistributions","fetchUnitMembers","fetchUnit","fetchUser","throwPathError","postFunctions","createArtist","createDistribution","createLogEntry","createMember","createSong","createUnit","createUser","putFunctions","updateArtist","updateDistribution","updateMember","updateSong","updateUnit","updateUserBiases","updateUserFavoriteArtists","updateUserFavoriteMembers","updateUserLatestUnits","updateUser","deleteFunctions","destroyUser","snap","_fetchArtists","_callee13","_context13","_fetchArtist","_callee14","_context14","_x9","_fetchArtistUnits","_callee15","_context15","sent","all","_x10","_fetchColors","_callee16","_context16","_fetchColor","_callee17","_context17","_x11","_fetchDistribution","_callee18","_context18","_x12","_fetchMembers","_callee19","_context19","_fetchMember","_callee20","_response$colorId","_context20","_x13","_fetchSongs","_callee21","_context21","_fetchSong","_callee22","_context22","_x14","_fetchUnit","_callee23","_context23","_x15","_fetchUnitDistributions","_callee24","unitDistributionsPromises","unitDistributions","unitSongsPromises","unitSongs","_context24","distributionObject","_x16","_fetchUnitMembers","_callee25","membersResponse","promiseResponse","_context25","_x17","_fetchUser","_callee26","_context26","_x18","_createArtist","_callee27","_context27","update","_x19","_x20","createColor","_createColor","_callee28","_context28","_x21","_createDistribution","_callee29","_context29","_x22","_x23","_createLogEntry","_callee30","subRoute","_context30","_x24","_x25","_x26","_createMember","_callee31","_context31","_x27","_x28","_createSong","_callee32","_context32","_x29","_x30","_createUnit","_callee33","_context33","_x31","_x32","_createUser","_callee34","_context34","_x33","_x34","_updateArtist","_callee35","_context35","_x35","_x36","_x37","_updateDistribution","_callee36","_context36","_x38","_x39","_x40","_updateMember","_callee37","_context37","_x41","_x42","_x43","_updateSong","_callee38","_context38","_x44","_x45","_x46","_updateUnit","_callee39","_context39","_x47","_x48","_x49","_updateUser","_callee40","_context40","_x50","_x51","_updateUserBiases","_callee41","_context41","_x52","_x53","_updateUserFavoriteArtists","_callee42","_context42","_x54","_x55","_updateUserFavoriteMembers","_callee43","_context43","_x56","_x57","_updateUserLatestUnits","_callee44","_context44","_x58","_x59","_destroyUser","_callee45","_context45","remove","defineProperty","_x60","_x61","resetAristsArrays","resetMemberPositions","parseUnits","parseMembers","parseArtists","parseDistributions","membersPositions","parsePositions","Set","sort","unitDict","subUnitDict","unitSameYear","reverse","year","subUnits","memberDict","unitMembers","position","api","spiralCase","string","src_utils","bem","block","modifiers","element","extras","hasBlock","hasModifiers","hasElement","hasExtras","classes","camelCase","word","capitalizeWord","separator","charAt","slice","ensureColorUniqueness","membersList","refactoredMembers","altColorId","altColor","oldColor","generateAdminCode","numDigits","getColorNumber","getMostImportantPosition","POSITIONS_IMPORTANT_ORDER","humanize","option","captalizeFirstLetter","insertAtCursor","valueToInsert","selectionStart","selectionEnd","startPos","endPos","makePositionsEditable","pos","parseBirthDate","d","date","month","day","parseQueryParams","params","pair","parseArrayToObject","instance","parseResponse","responseParser","obj","parseResponseToObject","spiralBirthdate","dateStr","spinalCaseWord","initializer","requestArtists","requestArtist","requestColors","requestDistribution","requestMembers","requestSongs","requestUnit","requestUnitMembers","resyncDatabase","runLogin","runLogout","sendDistribution","sendLog","sendSong","updateCompleteArtist","test","apiSaga","delay","DELAY_DURATION","dbStart","loggedUser","actionType","_marked","sortedArtistList","sortBy","_marked2","selectedUnitId","_response","indexOf","t1","call","_marked3","colorsList","_marked4","selectedDistribution","_context5","_marked5","sortedMembersList","_context6","_marked6","songsList","sortedSongsList","_context7","_marked7","_response2","membersArray","_response3","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","logoff","_marked12","receivedSong","pyt","_marked13","logType","_marked14","_marked15","receivedMembers","receivedArtist","receivedUnit","artistGenre","_marked16","_marked17","_marked18","_marked19","_marked20","_marked21","takeLatest","takeEvery","_marked22","clearPending","errorToast","successInline","successToast","warningToast","statusHandlingSaga","localPendingCache","status_handling_marked","status_handling_marked2","err","status_handling_marked3","status_handling_marked4","_ref4","status_handling_marked5","_ref5","status_handling_marked6","_ref6","status_handling_marked7","_ref7","status_handling_marked8","status_handling_marked9","status_handling_marked10","rootSaga","fork","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","thunkMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","Footer","react_default","createElement","className","href","rel","FooterContainer","withRouter","ActiveSongWidget","inline","props","objectWithoutProperties","inlineClass","onClick","history","components_Icon","defaultProps","mapDispatchToProps","authOperations","ActiveUnitWidget","showMembers","ActiveVideoWidget","_this","possibleConstructorReturn","getPrototypeOf","height","setDimentions","bind","assertThisInitialized","document","getElementById","width","clientWidth","clientHeight","setState","opts","hasVideoClass","YouTube","Component","Collapsible","collapse","enforceProperties","expand","togglePanel","nextProps","synced","collapsed","_this$props","iconComponent","disabled","children","FavoriteIcon","utils_icons","alert","back-arrow","back-arrow-circle","check","chevron-down","chevron-left","chevron-right","chevron-up","clock","gender-female","gender-male","gender-mixed","go-to","hand-negative","hand-positive","heart","heart-hollow","lock","no","plug","plug-available","plug-connected","question-mark","save","sorting-arrows","sub-unit","trash","youtube","Icon","styles","svg","display","verticalAlign","margin","transform","fill","style","viewBox","ICONS","Loading","_ref$message","src","alt","LoadingIcon","LoadingWrapper","MemberNationaltyFlag","flag","flagUrl","MemberPicture","fallback","failed","pictureUrl","GENDER_ENUM","colorNumber","profilePlaceholderCode","pictureFallback","onError","MemberPositions","sortedPositions","positionPriority","MAKNAE","iconBank","iconLeader","iconMainVocalist","iconMainRapper","iconMainDancer","iconLeadVocalist","iconLeadRapper","iconLeadDancer","iconVocalist","iconDancer","iconRapper","iconCenter","iconVisual","iconMaknae","positionName","MemberCard","favoriteState","showId","showReferenceArtist","member_MemberPicture","components_FavoriteIcon","MemberNationalityFlag","react","member_MemberPositions","ModeWidget","labels","active","activeClass","isDisabled","PositionIcon","iconAll","iconNone","RequirementWrapper","authentication","activeArtist","ready","parseRequirements","_this2","requirements","requirement","components_Loading","Link","to","logo","selectKey","Select","options","optionValue","optionName","optionPrefix","placeholder","disablePlaceholder","classNameModifier","onChange","SortingButton","SwitchToggle","checked","left","right","Tabs","tabs","icons","iconConditions","tab","tabObj","isActive","showIcons","condition","show","Typeahead","suggestions","suggestion","Menu","pathname","authHideClass","adminHideClass","activeUnitHideClass","isPending","RUN_LOGIN","userPlaceholder","components_LoadingIcon","LoadingBar","App","components_Menu","components_LoadingBar","appOperations","HeaderContainer","Header","ErrorModal","ErrorModalContainer","AdminAction","generateCode","performAction","verifyCode","actionName","maxLength","NOOP","AdminActions","RequirementWrapperContainer","components_AdminAction","RESYNC_DATABASE","adminOperations","dbOperations","AdminActionsContainer","ArtistsTable","favoriteAction","rowAction","filteredArtists","o","include","emptyTableMessage","hasActiveFilters","colSpan","Artists","_this$props$artists","_this$props$distribut","ActiveUnitWidgetContainer","ActiveSongWidgetContainer","Switch","components_ArtistsTable","REQUEST_ARTISTS","artistsOperations","ArtistsContainer","BiasPicture","biasPlaceholder","DistributedSongPreview","percentage","spanWidth","DistributedSongsTable","humanizeCategory","components_DistributedSongPreview","Units","prevProps","page","_this$props$props","_this$props$props$art","isUnitPending","REQUEST_UNIT","components_Tabs","components_LoadingWrapper","artistRedirect","components_BiasPicture","components_Select","components_MemberCard","components_DistributedSongsTable","Artist","memberColors","search","getMemberColors","isArtistPending","REQUEST_ARTIST","components_Units","distributeOperations","ArtistContainer","DistributeConnect","percentageWidth","role","tabIndex","components_PositionIcon","partIndex","partKey","lineColors","_colors","background","fontStyle","mKey","DistributeEdit","components_ActiveVideoWidget","components_DistributeConnect","defaultValue","DistributeProgressBar","widthStyle","animationInterval","DistributeView","currentTime","isPlaying","isReady","activeCache","membersProgress","onStateChange","onReady","onPlay","onPause","onEnd","setMembers","distributionTotals","currentDPS","currentMember","INTERVAL","pauseVideo","playVideo","seekTo","direction","_this3","_this$props2","barsHeight","barsWidth","components_DistributeProgressBar","togglePlayPause","restartVideo","rewindFastforward","Distribute","getMembers","components_ModeWidget","components_DistributeView","components_DistributeEdit","DistributeContainer","Home","youtubeUrl","frameBorder","allowFullScreen","HomeContainer","Idols","favorite","privacy","order","showIds","filterIdols","sortIdols","evaluation","every","filteredMembers","orderBy","_this$props$auth","REQUEST_MEMBERS","sortedMembers","esm","updateFilters","autoComplete","initialValue","nationalitie","IdolsContainer","Lab","LabContainer","LearnMore","LearnMoreContainer","colorDict","keyNumber","Verse","verse","LyricsOutput_Line","Line","adlib","LyricsOutput_Bracket","LyricsOutput_Part","Part","bitStyle","getBitStyle","Bracket","omit","hasSingers","singers","hasSubSingers","subSingers","omitSub","hasChoirSingers","choirSingers","omitChoir","colorHexes","c","subColors","choirColors","LyricsOutput","colorsDB","col000000","LyricsOutput_Verse","COLOR_BANK","latestUnitId","lastSingers","lastColors","lastSubsingers","lastSubColors","lastChoirSingers","lastChoirColors","wasLastLineEmpty","lastLineHadSubSingers","lastLineHadChoirSings","uses","updateUses","addEntry","n","cleanUpPart","empty","parseLine","insideParentheses","insideCurly","names","currentString","lastCharacter","currentPart","parseLyrics","input","paragraphedResult","paragraphIndex","currentLine","Lyrics","REQUEST_COLORS","dist","cols","rows","components_LyricsOutput","LyricsContainer","ColorReferenceBar","isInUse","PropTypes","ManageArtist","validateTypeahead","isValid","defaultValues","manageLock","managePlus","components_Typeahead","isRequired","isValidName","scope","validateOnBlur","validate","required","ManageUnit","_props$admin","isValidDebutYear","getFullYear","min","ManageMembers","Manage","validArtist","validUnit","validMember","handleEditMemberAndState","resetAll","validateArtist","validateUnit","validateMembers","_this$props$admin","isSaveable","UPDATE_COMPLETE_ARTIST","components_ColorReferenceBar","components_ManageArtist","components_ManageUnit","components_ManageMembers","ManageContainer","MEANT_FOR_TEXT","UNKNOWN","MEANT_FOR_ICON","MEANT_FOR_COLOR","SongsTable","filteredSongs","previouslyDistributedSongsDict","sortedBy","components_SortingButton","previouslyDistributed","Songs","undone","matchGender","handleTableClick","filterSongs","setSort","sortSongs","_this$state","components_SongsTable","REQUEST_SONGS","SongsContainer","SyncStep1VideoId","loadYoutubeVideo","SyncStep2Info","addToOriginalArtistForm","SyncStep3Lyrics","newEl","SyncStep4Buttons","addEventListener","pillColors","boxId","box","onMouseDown","onMouseUp","ICON_COLOR_CODE_HASH","8","12","20","26","SyncStep4Distributions","linesOn","SyncStep5Verify","timestampsList","tsObj","SyncStep5Save","loadYT","Sync","onPlayerStateChange","setHeight","tag","firstScriptTag","getElementsByTagName","insertBefore","onYouTubeIframeAPIReady","YT","Player","youtubePlayerAnchor","events","_this4","_this$props$sync","components_Collapsible","components_SyncStep4Buttons","components_SyncStep5Save","SEND_SONG","components_SyncStep1VideoId","components_SyncStep2Info","components_SyncStep3Lyrics","SyncStep4Distribution","components_SyncStep5Verify","syncOperations","SyncContainer","ColorSheet","colorObj","ComponentSheet","IconSheet","UIReference","tabContent","ComponentsSheet","components_IconSheet","components_ColorSheet","UIReferenceContainer","User","UserContainer","routes","HashRouter","header","error_modal","Route","component","exact","footer","ReactDOM","render","es","lib_default","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","URL","origin","fetch","headers","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1e1999bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-all.c2247d81.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-none.ba42a31e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-neg.048816e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d7f95990.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-placeholder.94d4fc32.svg\";","module.exports = __webpack_public_path__ + \"static/media/bias-placeholder.61f71a68.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-alt.6de76e88.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const RESET_ERROR = 'RESET_ERROR';\nconst SET_DATABASE_READY = 'SET_DATABASE_READY';\nconst SET_ERROR = 'SET_ERROR';\nconst SET_ERROR_INLINE = 'SET_ERROR_INLINE';\nconst SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\nconst SET_LOADING = 'SET_LOADING';\nconst SET_PENDING = 'SET_PENDING';\nconst SET_SUCCESS = 'SET_SUCCESS';\nconst SET_SUCCESS_INLINE = 'SET_SUCCESS_INLINE';\nconst SET_SUCCESS_MESSAGE = 'SET_SUCCESS_MESSAGE';\n\nexport default {\n  RESET_ERROR,\n  SET_DATABASE_READY,\n  SET_ERROR,\n  SET_ERROR_INLINE,\n  SET_ERROR_MESSAGE,\n  SET_LOADING,\n  SET_PENDING,\n  SET_SUCCESS,\n  SET_SUCCESS_INLINE,\n  SET_SUCCESS_MESSAGE,\n};\n","import types from './types';\n\nconst initialState = {\n  databaseReady: false,\n  error: false,\n  errorInline: false,\n  errorMessage: '',\n  pending: {},\n  loading: false,\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_ERROR:\n      newState.error = false;\n      newState.errorInline = false;\n      newState.errorMessage = '';\n      break;\n\n    case types.SET_DATABASE_READY:\n      newState.databaseReady = action.payload;\n      break;\n\n    case types.SET_ERROR:\n      newState.error = action.payload;\n      break;\n\n    case types.SET_ERROR_INLINE:\n      newState.errorInline = action.payload;\n      break;\n\n    case types.SET_ERROR_MESSAGE:\n      newState.errorMessage = action.payload;\n      break;\n\n    case types.SET_PENDING:\n      newState.pending = action.payload;\n      break;\n\n    case types.SET_SUCCESS:\n      newState.success = action.payload;\n      break;\n\n    case types.SET_LOADING:\n      newState.loading = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetError = payload => dispatch =>\n  dispatch({ type: types.RESET_ERROR, payload });\nconst setDatabaseReady = payload => dispatch =>\n  dispatch({ type: types.SET_DATABASE_READY, payload });\n\nexport default {\n  resetError,\n  setDatabaseReady,\n};\n","import actions from './actions';\n\nconst init = () => dispatch => dispatch({ type: 'INITIALIZER' });\n\nconst handleCloseErrorModal = () => dispatch => {\n  dispatch(actions.resetError());\n};\nconst handleSendBugReport = () => (dispatch, getState) => {\n  const { errorMessage } = getState().app;\n  const today = Date.now();\n\n  const body = {\n    type: 'error',\n    timestamp: today,\n    content: errorMessage,\n  };\n\n  dispatch({ type: 'SEND_LOG', body });\n  dispatch(actions.resetError());\n};\n\nexport default {\n  init,\n  handleCloseErrorModal,\n  handleSendBugReport,\n};\n","import appReducer from './reducers';\n\nexport { default as appOperations } from './operations';\nexport { default as appTypes } from './types';\nexport default appReducer;\n","const SET_COLORS_IN_USE = 'SET_COLORS_IN_USE';\nconst SET_CREATE_SUCCESS = 'SET_CREATE_SUCCESS';\nconst SET_EDITING_ARTIST = 'SET_EDITING_ARTIST';\nconst SET_EDITING_MEMBERS = 'SET_EDITING_MEMBERS';\nconst SET_EDITING_UNIT = 'SET_EDITING_UNIT';\nconst SET_MANAGE_RESULT = 'SET_MANAGE_RESULT';\nconst SET_PANELS = 'SET_PANELS';\nconst SET_UI_REFERENCE_TAB = 'SET_UI_REFERENCE_TAB';\nconst SET_UNITS_TYPEAHEAD = 'SET_UNITS_TYPEAHEAD';\nconst SET_UNITS_TYPEAHEAD_DICT = 'SET_UNITS_TYPEAHEAD_DICT';\n\nexport default {\n  SET_COLORS_IN_USE,\n  SET_CREATE_SUCCESS,\n  SET_EDITING_ARTIST,\n  SET_EDITING_MEMBERS,\n  SET_EDITING_UNIT,\n  SET_MANAGE_RESULT,\n  SET_PANELS,\n  SET_UI_REFERENCE_TAB,\n  SET_UNITS_TYPEAHEAD,\n  SET_UNITS_TYPEAHEAD_DICT,\n};\n","import types from './types';\n\nconst initialState = {\n  colorsInUse: {},\n  editingArtist: {},\n  editingMembers: [],\n  editingUnit: {},\n  manageResult: null,\n  panels: {\n    artist: 'open',\n    unit: 'locked',\n    members: 'locked',\n  },\n  uiReferenceTab: null,\n  unitsTypeahead: [],\n  unitsTypeaheadDict: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_COLORS_IN_USE:\n      newState.colorsInUse = action.payload;\n      break;\n\n    case types.SET_EDITING_ARTIST:\n      newState.editingArtist = action.payload;\n      break;\n\n    case types.SET_EDITING_MEMBERS:\n      newState.editingMembers = action.payload;\n      break;\n\n    case types.SET_EDITING_UNIT:\n      newState.editingUnit = action.payload;\n      break;\n\n    case types.SET_MANAGE_RESULT:\n      newState.manageResult = action.payload;\n      break;\n\n    case types.SET_PANELS:\n      newState.panels = action.payload;\n      break;\n\n    case types.SET_SONGS:\n      newState.songs = action.payload;\n      break;\n\n    case types.SET_SONG_SEARCH_QUERY:\n      newState.songSearchQuery = action.payload;\n      break;\n\n    case types.SET_UI_REFERENCE_TAB:\n      newState.uiReferenceTab = action.payload;\n      break;\n\n    case types.SET_UNITS_TYPEAHEAD:\n      newState.unitsTypeahead = action.payload;\n      break;\n\n    case types.SET_UNITS_TYPEAHEAD_DICT:\n      newState.unitsTypeaheadDict = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","const ARTISTS_GENDERS = {\n  FEMALE: 'Female',\n  MALE: 'Male',\n  MIXED: 'Mixed',\n};\n\nconst COLORS = {\n  col000001: 'red',\n  col000002: 'blood',\n  col000003: 'coral',\n  col000004: 'peach',\n  col000005: 'brown',\n  col000006: 'orange',\n  col000007: 'gold',\n  col000008: 'yellow',\n  col000009: 'olive',\n  col000010: 'lemon',\n  col000011: 'lime',\n  col000012: 'green',\n  col000013: 'basil',\n  col000014: 'forest',\n  col000015: 'jade',\n  col000016: 'teal',\n  col000017: 'cyan',\n  col000018: 'turquoise',\n  col000019: 'navy',\n  col000020: 'blue',\n  col000021: 'sky',\n  col000022: 'purple',\n  col000023: 'violet',\n  col000024: 'rose',\n  col000025: 'mauve',\n  col000026: 'magenta',\n  col000027: 'jam',\n  col000028: 'pink',\n  col000029: 'burgundy',\n  col000030: 'salmon',\n};\n\nconst DEFAULT_COLORS = {\n  default: '#000000',\n  black: '#000000',\n  blue: '#598ffd',\n  gray: '#707070',\n  green: '#49d156',\n  orange: '#fea245',\n  pink: '#fb9cf0',\n  purple: '#9e8ef0',\n  red: '#d14949',\n  teal: '#34ac9e',\n  white: 'FFFFFF',\n  yellow: '#ffd700',\n};\n\nconst FLAGS_LIST = {\n  AMERICAN: 'usa',\n  BRAZILIAN: 'brazil',\n  BRITISH: 'uk',\n  CANADIAN: 'canada',\n  CHINESE: 'china',\n  JAPANESE: 'japan',\n  KOREAN: 'korea',\n  TAIWANESE: 'taiwan',\n  THAI: 'thailand',\n  VIETNAMISE: 'vietnamise',\n};\n\nconst GENDERS = {\n  FEMALE: 'Female',\n  MALE: 'Male',\n  UNKOWN: 'Unknown',\n};\n\nconst GENRES = {\n  CPOP: 'C-Pop',\n  JPOP: 'J-Pop',\n  KPOP: 'K-Pop',\n  OTHER: 'Other',\n  POP: 'Pop',\n};\n\nconst GENRES_DB = {\n  'C-Pop': 'CPOP',\n  'J-Pop': 'JPOP',\n  'K-Pop': 'KPOP',\n  Other: 'OTHER',\n  Pop: 'POP',\n};\n\nconst POSITIONS_LIST = [\n  'MAIN_VOCALIST',\n  'MAIN_RAPPER',\n  'MAIN_DANCER',\n  'LEAD_VOCALIST',\n  'LEAD_RAPPER',\n  'LEAD_DANCER',\n  'VOCALIST',\n  'RAPPER',\n  'DANCER',\n  'LEADER',\n  'CENTER',\n  'VISUAL',\n];\n\nconst POSITIONS_LIST_OBJ = {\n  MAIN_VOCALIST: 'Main Vocalist',\n  LEAD_VOCALIST: 'Lead Vocalist',\n  VOCALIST: 'Vocalist',\n  MAIN_RAPPER: 'Main Rapper',\n  LEAD_RAPPER: 'Lead Rapper',\n  RAPPER: 'Rapper',\n  MAIN_DANCER: 'Main Dancer',\n  LEAD_DANCER: 'Lead Dancer',\n  DANCER: 'Dancer',\n  LEADER: 'Leader',\n  CENTER: 'Center',\n  VISUAL: 'Visual',\n};\n\nconst NATIONALITIES = {\n  AMERICAN: 'American',\n  BRAZILIAN: 'Brazilian',\n  BRITISH: 'British',\n  CANADIAN: 'Canadian',\n  CHINESE: 'Chinese',\n  JAPANESE: 'Japanese',\n  KOREAN: 'Korean',\n  OTHER: 'Other',\n  TAIWANESE: 'Taiwanese',\n  THAI: 'Thai',\n  VIETNAMISE: 'Vietnamise',\n};\n\nconst NATIONALITY_FLAG_URL = '/images/flags/';\n\nconst PROFILE_PICTURE_URL = '/images/profiles/';\n\nconst SYNC_KEY_LIST = {\n  1: true,\n  2: true,\n  3: true,\n  4: true,\n  5: true,\n};\n\nconst SYNC_KEY_COLOR_LIST = {\n  1: '1',\n  2: '8',\n  3: '12',\n  4: '20',\n  5: '26',\n};\n\nconst YOUTUBE_URLS = ['cudssvDuOpc'];\n\nexport default {\n  ARTISTS_GENDERS,\n  COLORS,\n  DEFAULT_COLORS,\n  FLAGS_LIST,\n  GENDERS,\n  GENRES,\n  GENRES_DB,\n  POSITIONS_LIST,\n  POSITIONS_LIST_OBJ,\n  NATIONALITIES,\n  NATIONALITY_FLAG_URL,\n  PROFILE_PICTURE_URL,\n  SYNC_KEY_LIST,\n  SYNC_KEY_COLOR_LIST,\n  YOUTUBE_URLS,\n};\n","import types from './types';\n\nconst setColorsInUse = payload => dispatch =>\n  dispatch({ type: types.SET_COLORS_IN_USE, payload });\nconst setEditingArtist = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_ARTIST, payload });\nconst setEditingMembers = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_MEMBERS, payload });\nconst setEditingUnit = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_UNIT, payload });\nconst setManageResult = payload => dispatch =>\n  dispatch({ type: types.SET_MANAGE_RESULT, payload });\nconst setPanels = payload => dispatch =>\n  dispatch({ type: types.SET_PANELS, payload });\nconst setUIReferenceTab = payload => dispatch =>\n  dispatch({ type: types.SET_UI_REFERENCE_TAB, payload });\nconst setUnitsTypeahead = payload => dispatch =>\n  dispatch({ type: types.SET_UNITS_TYPEAHEAD, payload });\nconst setUnitsTypeaheadDict = payload => dispatch =>\n  dispatch({ type: types.SET_UNITS_TYPEAHEAD_DICT, payload });\n\nexport default {\n  setColorsInUse,\n  setEditingArtist,\n  setEditingMembers,\n  setEditingUnit,\n  setManageResult,\n  setPanels,\n  setUIReferenceTab,\n  setUnitsTypeahead,\n  setUnitsTypeaheadDict,\n};\n","import _ from 'lodash';\nimport { toastr } from 'react-redux-toastr';\n\nimport constants from '../../utils/constants';\n\nimport actions from './actions';\n\nconst switchUIReferenceTab = event => async dispatch => {\n  const { id } = event.target;\n\n  if (!id) return null;\n\n  return dispatch(actions.setUIReferenceTab(id));\n};\n\nconst handleResyncDB = () => dispatch => dispatch({ type: 'RESYNC_DATABASE' });\n\nconst handleEditArtist = artistId => (dispatch, getState) => {\n  const panels = { ...getState().admin.panels };\n\n  panels.artist = 'edit';\n\n  if (artistId) {\n    dispatch({ type: 'REQUEST_ARTIST', artistId, panels, state: 'edit' });\n  } else {\n    dispatch(actions.setEditingArtist({ new: true }));\n    dispatch(actions.setPanels(panels));\n  }\n};\n\nconst handleEditUnit = unitId => (dispatch, getState) => {\n  const panels = { ...getState().admin.panels };\n\n  panels.unit = 'edit';\n\n  if (unitId) {\n    const units = [...getState().admin.editingArtist.units];\n    const unitIndex = _.findIndex(units, u => u.id === unitId);\n    const currentUnit = units[unitIndex];\n\n    dispatch(actions.setEditingUnit(currentUnit));\n  } else {\n    dispatch(actions.setEditingUnit({ new: true }));\n  }\n\n  dispatch(actions.setPanels(panels));\n};\n\nconst handleEditMember = (memberId, formState) => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  if (memberId) {\n    const { members } = getState().db;\n    const memberIndex = _.findIndex(members, m => m.id === memberId);\n    const addedMember = { ...members[memberIndex] };\n    editingMembers.push(addedMember);\n    dispatch(actions.setEditingMembers(editingMembers));\n\n    // Also update colors in use\n    // const colorsInUse = {};\n    // editingMembers.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n    const colorsInUse = editingMembers.reduce((dict, member) => {\n      if (member && member.colorId) {\n        dict[member.colorId] = true;\n      }\n      return dict;\n    }, {});\n    dispatch(actions.setColorsInUse(colorsInUse));\n  } else {\n    let lastMember = editingMembers[editingMembers.length - 1] || false;\n    if (lastMember && formState.values.members) {\n      lastMember =\n        formState.values.members[formState.values.members.length - 1];\n    }\n\n    editingMembers.push({\n      new: true,\n      positions: [],\n      gender: lastMember.gender || undefined,\n      nationality: lastMember.nationality || undefined,\n    });\n    dispatch(actions.setEditingMembers(editingMembers));\n  }\n};\n\nconst updateMemberColor = (value, index) => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  editingMembers[index].colorId = value;\n  dispatch(actions.setEditingMembers(editingMembers));\n\n  // Also update colors in use\n  const colorsInUse = editingMembers.reduce((dict, member) => {\n    if (member && member.colorId) {\n      dict[member.colorId] = true;\n    }\n    return dict;\n  }, {});\n  dispatch(actions.setColorsInUse(colorsInUse));\n};\n\nconst updateMemberPositions = () => {};\n\n// const updateMemberPositions = (value, position, index) => (\n//   dispatch,\n//   getState\n// ) => {\n//   const editingMembers = [...getState().admin.editingMembers];\n//   const positionsObj = {};\n//   editingMembers[index].positions.forEach(pos => (positionsObj[pos] = true));\n//   if (value === false) {\n//     delete positionsObj[position];\n//   } else {\n//     positionsObj[position] = true;\n//     switch (position) {\n//       case 'MAIN_VOCALIST':\n//         delete positionsObj.LEAD_VOCALIST;\n//         delete positionsObj.VOCALIST;\n//         break;\n//       case 'LEAD_VOCALIST':\n//         delete positionsObj.MAIN_VOCALIST;\n//         delete positionsObj.VOCALIST;\n//         break;\n//       case 'VOCALIST':\n//         delete positionsObj.MAIN_VOCALIST;\n//         delete positionsObj.LEAD_VOCALIST;\n//         break;\n//       case 'MAIN_DANCER':\n//         delete positionsObj.LEAD_DANCER;\n//         delete positionsObj.DANCER;\n//         break;\n//       case 'LEAD_DANCER':\n//         delete positionsObj.MAIN_DANCER;\n//         delete positionsObj.DANCER;\n//         break;\n//       case 'DANCER':\n//         delete positionsObj.MAIN_DANCER;\n//         delete positionsObj.LEAD_DANCER;\n//         break;\n//       case 'MAIN_RAPPER':\n//         delete positionsObj.LEAD_RAPPER;\n//         delete positionsObj.RAPPER;\n//         break;\n//       case 'LEAD_RAPPER':\n//         delete positionsObj.MAIN_RAPPER;\n//         delete positionsObj.RAPPER;\n//         break;\n//       case 'RAPPER':\n//         delete positionsObj.MAIN_RAPPER;\n//         delete positionsObj.LEAD_RAPPER;\n//         break;\n//       default:\n//       // do nothing\n//     }\n//   }\n//   editingMembers[index].positions = Object.keys(positionsObj);\n//   dispatch(actions.setEditingMembers(editingMembers));\n// };\n\nconst updateManageForm = () => () => {\n  // // console.log(formObj);\n  // if (formObj.dirty) {\n  //   // console.log('DIRTY');\n  //   // console.log(formObj);\n  // } else {\n  //   // console.log('CLEAN');\n  // }\n};\n\nconst unlockUnit = formState => (dispatch, getState) => {\n  const artistState = formState.values.artist;\n\n  // Only unlock if required fields are filled.\n  if (!artistState || !artistState.name || !artistState.genre) return;\n\n  const panels = { ...getState().admin.panels };\n  panels.unit = 'open';\n\n  const editingArtistState = getState().admin.editingArtist;\n  const editingArtist = {\n    genre: artistState.genre,\n    name: artistState.name,\n    otherNames: artistState.otherNames || '',\n    private: artistState.private || false,\n    new: editingArtistState.new || false,\n    memberIds: editingArtistState.memberIds || false,\n    memberList: editingArtistState.memberList || false,\n    units: editingArtistState.units || false,\n    id: editingArtistState.id,\n    createdBy: editingArtistState.createdBy,\n  };\n\n  dispatch(actions.setEditingArtist(editingArtist));\n  dispatch(actions.setPanels(panels));\n};\n\nconst unlockMembers = formState => (dispatch, getState) => {\n  const unitState = formState.values.unit;\n\n  // Only unlock if required fields are filled.\n  if (!unitState || !unitState.name || !unitState.debutYear) return;\n\n  const panels = { ...getState().admin.panels };\n  panels.members = 'open';\n\n  const editingUnitState = getState().admin.editingUnit;\n  const editingUnit = {\n    debutYear: unitState.debutYear,\n    name: unitState.name,\n    official: unitState.official,\n    private: unitState.private || false,\n    subUnit: unitState.subUnit || null,\n    new: editingUnitState.new || false,\n    averages: editingUnitState.averages || false,\n    distributions: editingUnitState.distributions || false,\n    members: editingUnitState.members || false,\n    id: editingUnitState.id,\n    createdBy: editingUnitState.createdBy,\n  };\n\n  dispatch(actions.setEditingUnit(editingUnit));\n  dispatch({\n    type: 'REQUEST_UNIT_MEMBERS',\n    unitId: editingUnitState.id,\n    panels,\n  });\n};\n\nconst removeMember = index => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  // editingMembers.splice(index, 1);\n  editingMembers[index] = null;\n  dispatch(actions.setEditingMembers(editingMembers));\n};\n\nconst resetManage = () => dispatch => {\n  dispatch(actions.setEditingArtist({}));\n  dispatch(actions.setEditingMembers([]));\n  dispatch(actions.setEditingUnit({}));\n  dispatch(actions.setUnitsTypeahead([]));\n  dispatch(actions.setUnitsTypeaheadDict({}));\n  dispatch(actions.setManageResult(null));\n  dispatch(actions.setColorsInUse({}));\n  dispatch(\n    actions.setPanels({\n      artist: 'open',\n      unit: 'locked',\n      members: 'locked',\n    })\n  );\n};\n\nconst saveManage = formState => async (dispatch, getState) => {\n  const artistState = formState.values.artist;\n  const unitState = formState.values.unit;\n  const membersState = formState.values.members;\n\n  // Check formState\n  if (Object.keys(formState.errors).length) {\n    toastr.warning('The form has errors', formState.errors.toString());\n    return;\n  }\n\n  // Check artist required fields\n  if (!artistState || !artistState.name || !artistState.genre) {\n    toastr.warning('Artist is incomplete', 'Missing name and/or genre');\n    return;\n  }\n\n  // Check unit required fields\n  if (!unitState || !unitState.name || !unitState.debutYear) {\n    toastr.warning('Unit is incomplete', 'Missing name and/or debut year');\n    return;\n  }\n\n  if (!membersState || membersState.length < 2) {\n    toastr.warning(\n      'Minimum of 2 members are required',\n      `You have ${membersState.length} members so far`\n    );\n    return;\n  }\n\n  // Check members required fields\n  let missingField = false;\n  membersState.forEach(member => {\n    if (\n      !member.name ||\n      !member.birthdate ||\n      !member.colorId ||\n      !member.gender ||\n      !member.nationality\n    ) {\n      missingField = true;\n    }\n    const hasPositions = Object.keys(member).some(\n      m => constants.POSITIONS_LIST_OBJ[m]\n    );\n    if (!hasPositions) missingField = true;\n  });\n  if (missingField) {\n    toastr.warning(\n      'A members has missing fields',\n      'Check the console for details'\n    );\n    console.log(membersState); // eslint-disable-line\n    return;\n  }\n\n  // Prepare Artist\n  const editingArtistState = getState().admin.editingArtist;\n  const editingArtist = {\n    genre: artistState.genre,\n    name: artistState.name,\n    otherNames: artistState.otherNames || '',\n    private: artistState.private || false,\n    new: editingArtistState.new || false,\n    memberIds: editingArtistState.memberIds || [],\n    memberList: editingArtistState.memberList || [],\n    units: editingArtistState.units\n      ? editingArtistState.units.map(unit => unit.id)\n      : [],\n    id: editingArtistState.id || null,\n    createdBy: editingArtistState.createdBy || null,\n  };\n\n  // Prepare Unit\n  const editingUnitState = getState().admin.editingUnit;\n  const editingUnit = {\n    debutYear: unitState.debutYear,\n    name: unitState.name,\n    official: unitState.official,\n    private: unitState.private || false,\n    subUnit: unitState.subUnit || null,\n    new: editingUnitState.new || false,\n    averages: editingUnitState.averages || false,\n    distributions: editingUnitState.distributions || false,\n    artistId: editingUnitState.id || null,\n    id: editingUnitState.id || null,\n    createdBy: editingUnitState.createdBy || null,\n  };\n\n  // Prepare Members\n  const editingMembersState = getState().admin.editingMembers;\n  const editingMembers = [];\n  membersState.forEach((memberState, index) => {\n    if (memberState) {\n      const newMember = {\n        birthdate: +memberState.birthdate.replace(/(-)/g, ''),\n        colorId: memberState.colorId,\n        gender: memberState.gender,\n        initials: memberState.initials || '',\n        name: memberState.name,\n        nationality: memberState.nationality,\n        private: memberState.private || false,\n      };\n      // Handle existing database member\n      if (editingMembersState[index].id) {\n        newMember.createdBy = editingMembersState[index].createdBy || null;\n        newMember.id = editingMembersState[index].id || null;\n        newMember.referenceArtist =\n          editingMembersState[index].referenceArtist || null;\n      }\n      // Handle positions\n      const positions = [];\n      Object.keys(memberState).forEach(key => {\n        if (constants.POSITIONS_LIST.includes(key)) positions.push(key);\n      });\n      newMember.positions = positions;\n\n      editingMembers.push(newMember);\n    }\n  });\n\n  dispatch({\n    type: 'UPDATE_COMPLETE_ARTIST',\n    artist: editingArtist,\n    unit: editingUnit,\n    members: editingMembers,\n  });\n};\n\nexport default {\n  handleEditArtist,\n  handleEditMember,\n  handleEditUnit,\n  handleResyncDB,\n  removeMember,\n  resetManage,\n  saveManage,\n  switchUIReferenceTab,\n  unlockUnit,\n  unlockMembers,\n  updateManageForm,\n  updateMemberColor,\n  updateMemberPositions,\n};\n","import adminReducer from './reducers';\n\nexport { default as adminOperations } from './operations';\nexport { default as adminTypes } from './types';\nexport default adminReducer;\n","const SET_ARTIST_LIST = 'SET_ARTIST_LIST';\nconst SET_ARTIST_PAGE_TAB = 'SET_ARTIST_PAGE_TAB';\nconst SET_BIAS = 'SET_BIAS';\nconst SET_SEARCH_QUERY = 'SET_SEARCH_QUERY';\nconst SET_SELECTED_ARTIST = 'SET_SELECTED_ARTIST';\nconst SET_SELECTED_UNIT = 'SET_SELECTED_UNIT';\nconst SET_SHOW_FAVORITE_ARTISTS_ONLY = 'SET_SHOW_FAVORITE_ARTISTS_ONLY';\n\nexport default {\n  SET_ARTIST_LIST,\n  SET_ARTIST_PAGE_TAB,\n  SET_BIAS,\n  SET_SEARCH_QUERY,\n  SET_SELECTED_ARTIST,\n  SET_SELECTED_UNIT,\n  SET_SHOW_FAVORITE_ARTISTS_ONLY,\n};\n","import types from './types';\n\nconst initialState = {\n  artistList: [],\n  artistPageTab: '',\n  bias: {},\n  searchQuery: '',\n  selectedArtist: {},\n  selectedUnit: {},\n  showFavoriteArtistsOnly: false,\n  userFavoriteArtists: {},\n  userLatestArtists: [],\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ARTIST_LIST:\n      newState.artistList = action.payload;\n      break;\n\n    case types.SET_ARTIST_PAGE_TAB:\n      newState.artistPageTab = action.payload;\n      break;\n\n    case types.SET_BIAS:\n      newState.bias = action.payload;\n      break;\n\n    case types.SET_SEARCH_QUERY:\n      newState.searchQuery = action.payload;\n      break;\n\n    case types.SET_SELECTED_ARTIST:\n      newState.selectedArtist = action.payload;\n      break;\n\n    case types.SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      break;\n\n    case types.SET_SHOW_FAVORITE_ARTISTS_ONLY:\n      newState.showFavoriteArtistsOnly = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setArtistList = payload => dispatch =>\n  dispatch({ type: types.SET_ARTIST_LIST, payload });\nconst setArtistPageTab = payload => dispatch =>\n  dispatch({ type: types.SET_ARTIST_PAGE_TAB, payload });\nconst setBias = payload => dispatch =>\n  dispatch({ type: types.SET_BIAS, payload });\nconst setSearchQuery = payload => dispatch =>\n  dispatch({ type: types.SET_SEARCH_QUERY, payload });\nconst setSelectedArtist = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_ARTIST, payload });\nconst setSelectedUnit = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_UNIT, payload });\nconst setShowFavoriteArtistsOnly = payload => dispatch =>\n  dispatch({ type: types.SET_SHOW_FAVORITE_ARTISTS_ONLY, payload });\n\nexport default {\n  setArtistList,\n  setArtistPageTab,\n  setBias,\n  setSearchQuery,\n  setSelectedArtist,\n  setSelectedUnit,\n  setShowFavoriteArtistsOnly,\n};\n","import actions from './actions';\n\nconst loadArtist = (artistId, queryParams) => dispatch =>\n  dispatch({ type: 'REQUEST_ARTIST', artistId, queryParams });\n\nconst loadUserArtists = () => async (dispatch, getState) => {};\n\nconst findUnitIndex = (units, unitId) => units.findIndex(u => u.id === unitId);\n\nconst updateSearchQuery = value => dispatch => {\n  if (value === '' || value.length > 2) {\n    dispatch(actions.setSearchQuery(value.toLowerCase()));\n  }\n};\n\nconst showFavoriteArtistsOnlyToggle = () => (dispatch, getState) => {\n  const { showFavoriteArtistsOnly } = getState().artists;\n  dispatch(actions.setShowFavoriteArtistsOnly(!showFavoriteArtistsOnly));\n};\n\nconst updateLatestUnits = id => async (dispatch, getState) => {};\n\nconst switchArtistPageTab = event => async (dispatch, getState) => {\n  let { id } = event.target;\n\n  // When clicking on the tab icon, the id is lost\n  if (!id) {\n    id = event.target.parentNode.parentNode.id; // eslint-disable-line\n  }\n  if (!id) return null;\n\n  dispatch(actions.setArtistPageTab(id));\n\n  const selectedArtist = { ...getState().artists.selectedArtist };\n  const unitIndex = findUnitIndex(selectedArtist.units, id);\n  const currentUnit = selectedArtist.units[unitIndex];\n\n  // If unit has the complete flag, use it, else request a new complete one\n  if (currentUnit.complete) {\n    dispatch(actions.setSelectedUnit(currentUnit));\n  } else {\n    await dispatch({\n      type: 'REQUEST_UNIT',\n      unitId: id,\n      selectedArtist,\n      unitIndex,\n    });\n  }\n};\n\nconst getBias = () => (dispatch, getState) => {\n  const { biases } = getState().auth.user;\n  const { selectedUnit } = getState().artists;\n  const { id, members } = selectedUnit;\n  let bias = null;\n  if (id && Object.keys(members).length) {\n    Object.keys(members).forEach(key => {\n      if (biases[`${id}:${key}`]) {\n        bias = { ...selectedUnit.members[key] };\n      }\n    });\n  }\n\n  if (bias) {\n    dispatch(actions.setBias(bias));\n  } else {\n    dispatch(actions.setBias({}));\n  }\n};\n\nexport default {\n  getBias,\n  loadUserArtists,\n  loadArtist,\n  updateSearchQuery,\n  updateLatestUnits,\n  showFavoriteArtistsOnlyToggle,\n  switchArtistPageTab,\n};\n","import artistsReducer from './reducers';\n\nexport { default as artistsOperations } from './operations';\nexport { default as artistsTypes } from './types';\nexport default artistsReducer;\n","const SET_ADMIN = 'SET_ADMIN';\nconst SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nconst SET_BIASES = 'SET_BIASES';\nconst SET_USER = 'SET_USER';\n\nexport default {\n  SET_ADMIN,\n  SET_AUTHENTICATED,\n  SET_BIASES,\n  SET_USER,\n};\n","import types from './types';\n\nconst initialState = {\n  isAuthenticated: false,\n  isAdmin: false,\n  user: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ADMIN:\n      newState.isAdmin = action.payload;\n      break;\n\n    case types.SET_AUTHENTICATED:\n      newState.isAuthenticated = action.payload;\n      break;\n\n    case types.SET_BIASES:\n      newState.user.biases = action.payload;\n      break;\n\n    case types.SET_USER:\n      newState.user = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setAdmin = payload => dispatch =>\n  dispatch({ type: types.SET_ADMIN, payload });\nconst setAuthenticated = payload => dispatch =>\n  dispatch({ type: types.SET_AUTHENTICATED, payload });\nconst setUser = payload => dispatch =>\n  dispatch({ type: types.SET_USER, payload });\n\nexport default {\n  setAdmin,\n  setAuthenticated,\n  setUser,\n};\n","import actions from './actions';\n\nconst login = () => dispatch => dispatch({ type: 'RUN_LOGIN' });\n\nconst logout = () => dispatch => dispatch({ type: 'RUN_LOGOUT' });\n\nconst updateFavoriteArtists = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteArtists = { ...user.favoriteArtists } || {};\n  if (user.id) {\n    if (userFavoriteArtists[id]) {\n      userFavoriteArtists[id] = false;\n    } else {\n      userFavoriteArtists[id] = true;\n    }\n\n    await dispatch({\n      type: 'UPDATE_USER_FAVORITE_ARTISTS',\n      userFavoriteArtists,\n      userId: user.id,\n    });\n\n    user.favoriteArtists = userFavoriteArtists;\n    dispatch(actions.setUser(user));\n  }\n};\n\nconst updateFavoriteMembers = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteMembers = { ...user.favoriteMembers } || {};\n  if (user.id) {\n    if (userFavoriteMembers[id]) {\n      userFavoriteMembers[id] = false;\n    } else {\n      userFavoriteMembers[id] = true;\n    }\n\n    await dispatch({\n      type: 'UPDATE_USER_FAVORITE_MEMBERS',\n      userFavoriteMembers,\n      userId: user.id,\n    });\n\n    user.favoriteMembers = userFavoriteMembers;\n    dispatch(actions.setUser(user));\n  }\n};\n\nconst updateBias = event => async (dispatch, getState) => {\n  const { value } = event.target;\n  const { id, members } = getState().artists.selectedUnit;\n\n  if (value && id && members && members[value]) {\n    const user = { ...getState().auth.user };\n    const biases = { ...user.biases } || {};\n\n    const biasId = `${id}:${value}`;\n\n    // Stop if member is already the bias\n    if (biases[biasId]) return;\n\n    // Remove any biases within this unit\n    Object.keys(members).forEach(key => {\n      const currentBias = `${id}:${key}`;\n      if (biases[currentBias]) {\n        delete biases[`${id}:${key}`];\n      }\n    });\n\n    biases[biasId] = true;\n\n    const bias = { ...members[value] };\n\n    await dispatch({\n      type: 'UPDATE_USER_BIASES',\n      bias,\n      biases,\n      userId: user.id,\n    });\n  }\n};\n\nexport default {\n  login,\n  logout,\n  updateBias,\n  updateFavoriteArtists,\n  updateFavoriteMembers,\n};\n","import authReducer from './reducers';\n\nexport { default as authOperations } from './operations';\nexport { default as authTypes } from './types';\nexport default authReducer;\n","const SET_ARTISTS = 'SET_ARTISTS';\nconst SET_ARTISTS_TYPEAHEAD = 'SET_ARTISTS_TYPEAHEAD';\nconst SET_ARTISTS_TYPEAHEAD_DICT = 'SET_ARTISTS_TYPEAHEAD_DICT';\nconst SET_COLORS = 'SET_COLORS';\nconst SET_MEMBERS = 'SET_MEMBERS';\nconst SET_MEMBERS_TYPEAHEAD = 'SET_MEMBERS_TYPEAHEAD';\nconst SET_MEMBERS_TYPEAHEAD_DICT = 'SET_MEMBERS_TYPEAHEAD_DICT';\nconst SET_SONGS = 'SET_SONGS';\n\nexport default {\n  SET_ARTISTS,\n  SET_ARTISTS_TYPEAHEAD,\n  SET_ARTISTS_TYPEAHEAD_DICT,\n  SET_COLORS,\n  SET_MEMBERS,\n  SET_MEMBERS_TYPEAHEAD,\n  SET_MEMBERS_TYPEAHEAD_DICT,\n  SET_SONGS,\n};\n","import types from './types';\n\nconst initialState = {\n  artists: [],\n  artistsTypeahead: [],\n  artistsTypeaheadDict: {},\n  colors: {},\n  members: [],\n  membersTypeahead: [],\n  membersTypeaheadDict: {},\n  songs: [],\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ARTISTS:\n      newState.artists = action.payload;\n      break;\n\n    case types.SET_ARTISTS_TYPEAHEAD:\n      newState.artistsTypeahead = action.payload;\n      break;\n\n    case types.SET_ARTISTS_TYPEAHEAD_DICT:\n      newState.artistsTypeaheadDict = action.payload;\n      break;\n\n    case types.SET_COLORS:\n      newState.colors = action.payload;\n      break;\n\n    case types.SET_MEMBERS:\n      newState.members = action.payload;\n      break;\n\n    case types.SET_MEMBERS_TYPEAHEAD:\n      newState.membersTypeahead = action.payload;\n      break;\n\n    case types.SET_MEMBERS_TYPEAHEAD_DICT:\n      newState.membersTypeaheadDict = action.payload;\n      break;\n\n    case types.SET_SONGS:\n      newState.songs = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","const loadArtists = () => dispatch => dispatch({ type: 'REQUEST_ARTISTS' });\n\nconst loadColors = () => dispatch => dispatch({ type: 'REQUEST_COLORS' });\n\nconst loadMembers = () => dispatch => dispatch({ type: 'REQUEST_MEMBERS' });\n\nconst loadSongs = () => dispatch => dispatch({ type: 'REQUEST_SONGS' });\n\nexport default {\n  loadArtists,\n  loadColors,\n  loadMembers,\n  loadSongs,\n};\n","import dbReducer from './reducers';\n\nexport { default as dbOperations } from './operations';\nexport { default as dbTypes } from './types';\nexport default dbReducer;\n","const RESET_DISTRIBUTE = 'RESET_DISTRIBUTE';\nconst RESET_DISTRIBUTE_SONG = 'RESET_DISTRIBUTE_SONG';\nconst SET_ACTIVE_DISTRIBUTION = 'SET_ACTIVE_DISTRIBUTION';\nconst SET_ACTIVE_MEMBER_PILL = 'SET_ACTIVE_MEMBER_PILL';\nconst SET_ACTIVE_SONG = 'SET_ACTIVE_SONG';\nconst SET_ACTIVE_UNIT = 'SET_ACTIVE_UNIT';\nconst SET_DISTRIBUTE_VIEW = 'SET_DISTRIBUTE_VIEW';\nconst SET_DISTRIBUTION_CATEGORY = 'SET_DISTRIBUTION_CATEGORY';\nconst SET_DISTRIBUTION_LINES = 'SET_DISTRIBUTION_LINES';\nconst SET_DISTRIBUTION_REMAINDER = 'SET_DISTRIBUTION_REMAINDER';\nconst SET_RATES = 'SET_RATES';\nconst SET_TIMESTAMPS_DICT = 'SET_TIMESTAMPS_DICT';\n\nexport default {\n  RESET_DISTRIBUTE,\n  RESET_DISTRIBUTE_SONG,\n  SET_ACTIVE_DISTRIBUTION,\n  SET_ACTIVE_MEMBER_PILL,\n  SET_ACTIVE_SONG,\n  SET_ACTIVE_UNIT,\n  SET_DISTRIBUTE_VIEW,\n  SET_DISTRIBUTION_CATEGORY,\n  SET_DISTRIBUTION_LINES,\n  SET_DISTRIBUTION_REMAINDER,\n  SET_RATES,\n  SET_TIMESTAMPS_DICT,\n};\n","import types from './types';\n\nconst initialState = {\n  activeMemberPill: '',\n  activeDistribution: {},\n  activeSong: {},\n  activeUnit: {},\n  category: '',\n  distributeView: 'view',\n  distributionLines: [],\n  rates: {},\n  remainder: 100,\n  timestampsDict: {},\n\n  // // activeDistribution: {\n  // //   id: '-La4TN-3MBxB2pc9DnHC',\n  // //   createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  // //   category: 'WOULD',\n  // //   features: [],\n  // //   modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  // //   rates: {\n  // //     '-LZJFEse1Y9qr-Zvqs-1': 15.66,\n  // //     '-LZJFEskZ-xpLLt44WpV': 22.389999999999997,\n  // //     '-LZJFEsrDDhUdTym0GZo': 16.16,\n  // //     '-LZJFEstFUh5FQU40RKe': 24.84,\n  // //     '-LZJFEsxjzWTx-rET1xE': 27.999999999999996,\n  // //     '-LZJFEt1kQzvszYTLrJY': 16.57,\n  // //     ALL: 16.25,\n  // //     NONE: 4.83,\n  // //     max: 27.999999999999996,\n  // //     remaining: 0,\n  // //     total: 144.7,\n  // //   },\n  // //   relationships: {\n  // //     '1': ['NONE'],\n  // //     '2': ['NONE'],\n  // //     '3': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '4': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '5': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '6': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '7': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '8': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '9': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '10': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '11': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '12': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '13': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '14': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '15': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '16': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '17': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '18': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '19': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '20': ['ALL'],\n  // //     '21': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '22': ['ALL'],\n  // //     '23': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '24': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '25': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '26': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '27': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '28': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '29': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '30': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '31': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '32': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '33': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '34': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '35': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '36': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '37': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '38': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '39': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '40': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '41': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '42': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '43': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '44': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '45': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '46': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '47': ['ALL'],\n  // //     '48': ['ALL'],\n  // //     '49': ['ALL'],\n  // //     '50': ['ALL'],\n  // //     '51': ['ALL'],\n  // //     '52': ['ALL'],\n  // //     '53': ['ALL'],\n  // //     '54': ['ALL'],\n  // //     '55': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '56': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '57': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '58': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '59': ['ALL'],\n  // //     '60': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '61': ['ALL'],\n  // //     '62': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '63': ['-LZJFEsxjzWTx-rET1xE'],\n  // //   },\n  // //   songId: '-La4R2Z9hcKnQCM-KQK_',\n  // //   unitId: '-LZJFFC-kZi_o3nehGku',\n  // },\n  // activeSong: {\n  //   id: '-La4R2Z9hcKnQCM-KQK_',\n  //   album: \"IT'z Different\",\n  //   createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   distribution:\n  //     '[1:25.69:2.42] DDA-DDA-LA-DDA-LA-DDA-LA\\n[2:33.41:2.41]  DDA-DDA-LA-DDA-LA-DDA-LA\\n\\n[3:38.21:1.08]  People look at me, [4:40.15:0.99]  and they tell me\\n[5:42.12:3.66]  wemoman bogo naega nallari gattaeyo\\n[6:46.34:0.67]  So what? [7:47.8:1.13]  shingyeong an sseo \\n[8:49.78:3.31]  I’m sorry I don’t care, don’t care, really don’t care, [9:53.25:1.2]  because\\n\\n[10:54.57:3.33]  sarang ttawie mongmaeji ana\\n[11:58.34:3.29]  sesangen jaeminneun ge deo mana\\n[12:61.98:1.32]  eonnideuri malhae [13:63.52:1.97]  cheoldeullyeomyeon meoreottae\\n[14:65.58:0.98]  (I’m sorry sorry) [15:66.52:2.37]  cheoldeul saenggak eopseoyo Nope\\n\\n[16:69.03:3.32]  yeppeugiman hago maeryeogeun eomneun\\n[17:72.51:3.5]  aedeulgwa nan dalla dalla dalla\\n[18:76.59:3.27]  ni gijune nal matchuryeo haji ma\\n[19:79.98:3.8]  nan jigeum naega joa naneun naya\\n\\n[20:86.23:1.21]  I love myself\\n[21:88.15:2.58]  nan mweonga dalla dalla Yeah\\n[22:93.88:1.19]  I love myself\\n[23:95.81:2.5]  nan mweonga dalla dalla Yeah\\n[24:99.69:2.51]  nan neorang dalla dalla Yeah\\n\\n[25:102.36:1.63]  Bad, bad, I’m sorry I’m bad,\\n[26:104.21:1.74]  I’m just the way I am\\n[27:106.13:1.78]  nam shingyeong sseugo salgin akkaweo\\n[28:108.07:1.62]  hago shipeun il hagido bappa\\n[29:109.79:0.82]  My life \\n[30:111.65:2.63]  nae mamdaero sal geoya malliji ma\\n[31:115.28:2.27]  nan teukbyeolhanikka Yeah\\n\\n[32:117.96:3.24]  namdeure shiseon jungyochi ana\\n[33:121.69:3.34]  nae Style-i joa geuge nanikka\\n[34:125.33:1.35]  eonnideuri malhae [35:126.84:2.1]  naega neomu dangdolhadae\\n[36:129.05:0.8]  (I’m sorry sorry) [37:129.94:2.15]  bakkeul saenggak eopseoyo Nope\\n\\n[38:132.33:3.31]  yeppeugiman hago maeryeogeun eomneun\\n[39:135.9:3.64]  aedeulgwa nan dalla dalla dalla\\n[40:139.9:3.46]  ni gijune nal matchuryeo haji ma\\n[41:143.49:3.7]  nan jigeum naega joa naneun naya\\n\\n[42:150.07:3.7]  Don’t care what people say naneun naega ara\\n[43:153.95:4.73]  I’m talking to myself gijukji ma jeolttaero\\n[44:158.79:1.42]  gogaereul deulgo [45:160.34:2.15]  ni kkomeul jjocha\\n[46:162.58:3.19]  Just keep on dreaming\\n\\n[47:166.13:1.34]  Keep your chin up, [48:167.8:1.34]  we got your back\\n[49:169.88:1.46]  Keep your head up, [50:171.62:1.55]  just keep on dreaming\\n[51:173.75:1.41]  Keep your chin up, [52:175.52:1.27]  we got your back\\n[53:177.63:1.48]  Keep your head up, [54:179.38:1.5]  just keep on dreaming\\n\\n[55:182.29:3.29]  yeppeugiman hago maeryeogeun eomneun\\n[56:185.73:3.68]  aedeulgwa nan dalla dalla dalla\\n[57:189.82:3.34]  ni gijune nal matchuryeo haji ma\\n[58:193.28:3.82]  nan jigeum naega joa naneun naya\\n\\n[59:199.49:1.23]  I love myself\\n[60:201.41:2.62]  nan mweonga dalla dalla Yeah\\n[61:207.18:1.27]  I love myself\\n[62:209.09:2.66]  nan mweonga dalla dalla Yeah\\n[63:212.93:2.66]  nan neorang dalla dalla Yeah\\n',\n  //   groupSize: 5,\n  //   modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   originalArtist: 'ITZY',\n  //   originalArtistId: '-L_ul8qKXoH09zK0qo6W',\n  //   private: false,\n  //   query: \"dalla dalla itzy it'z different\",\n  //   single: true,\n  //   title: 'Dalla Dalla',\n  //   videoId: 'pNfTK39k55U',\n  // },\n  // activeUnit: {\n  //   id: '-LZJFFC-kZi_o3nehGku',\n  //   artistId: '-LZJFF1-RtaGtxdWblMo',\n  //   averages: [],\n  //   createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   debutYear: 2001,\n  //   distributions: [\n  //     {\n  //       id: '-La4TN-3MBxB2pc9DnHC',\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       category: 'WOULD',\n  //       features: [],\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       rates: {\n  //         '-LZJFEse1Y9qr-Zvqs-1': 15.66,\n  //         '-LZJFEskZ-xpLLt44WpV': 22.389999999999997,\n  //         '-LZJFEsrDDhUdTym0GZo': 16.16,\n  //         '-LZJFEstFUh5FQU40RKe': 24.84,\n  //         '-LZJFEsxjzWTx-rET1xE': 27.999999999999996,\n  //         '-LZJFEt1kQzvszYTLrJY': 16.57,\n  //         ALL: 16.25,\n  //         NONE: 4.83,\n  //         max: 27.999999999999996,\n  //         remaining: 0,\n  //         total: 144.7,\n  //       },\n  //       relationships: {\n  //         '1': ['NONE'],\n  //         '2': ['NONE'],\n  //         '3': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '4': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '5': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '6': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '7': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '8': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '9': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '10': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '11': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '12': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '13': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '14': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '15': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '16': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '17': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '18': ['-LZJFEstFUh5FQU40RKe'],\n  //         '19': ['-LZJFEstFUh5FQU40RKe'],\n  //         '20': ['ALL'],\n  //         '21': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '22': ['ALL'],\n  //         '23': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '24': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '25': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '26': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '27': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '28': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '29': ['-LZJFEstFUh5FQU40RKe'],\n  //         '30': ['-LZJFEstFUh5FQU40RKe'],\n  //         '31': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '32': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '33': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '34': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '35': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '36': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '37': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '38': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '39': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '40': ['-LZJFEstFUh5FQU40RKe'],\n  //         '41': ['-LZJFEstFUh5FQU40RKe'],\n  //         '42': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '43': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '44': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '45': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '46': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '47': ['ALL'],\n  //         '48': ['ALL'],\n  //         '49': ['ALL'],\n  //         '50': ['ALL'],\n  //         '51': ['ALL'],\n  //         '52': ['ALL'],\n  //         '53': ['ALL'],\n  //         '54': ['ALL'],\n  //         '55': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '56': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '57': ['-LZJFEstFUh5FQU40RKe'],\n  //         '58': ['-LZJFEstFUh5FQU40RKe'],\n  //         '59': ['ALL'],\n  //         '60': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '61': ['ALL'],\n  //         '62': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '63': ['-LZJFEsxjzWTx-rET1xE'],\n  //       },\n  //       songId: '-La4R2Z9hcKnQCM-KQK_',\n  //       unitId: '-LZJFFC-kZi_o3nehGku',\n  //       distribution:\n  //         '[1:25.69:2.42] DDA-DDA-LA-DDA-LA-DDA-LA\\n[2:33.41:2.41]  DDA-DDA-LA-DDA-LA-DDA-LA\\n\\n[3:38.21:1.08]  People look at me, [4:40.15:0.99]  and they tell me\\n[5:42.12:3.66]  wemoman bogo naega nallari gattaeyo\\n[6:46.34:0.67]  So what? [7:47.8:1.13]  shingyeong an sseo \\n[8:49.78:3.31]  I’m sorry I don’t care, don’t care, really don’t care, [9:53.25:1.2]  because\\n\\n[10:54.57:3.33]  sarang ttawie mongmaeji ana\\n[11:58.34:3.29]  sesangen jaeminneun ge deo mana\\n[12:61.98:1.32]  eonnideuri malhae [13:63.52:1.97]  cheoldeullyeomyeon meoreottae\\n[14:65.58:0.98]  (I’m sorry sorry) [15:66.52:2.37]  cheoldeul saenggak eopseoyo Nope\\n\\n[16:69.03:3.32]  yeppeugiman hago maeryeogeun eomneun\\n[17:72.51:3.5]  aedeulgwa nan dalla dalla dalla\\n[18:76.59:3.27]  ni gijune nal matchuryeo haji ma\\n[19:79.98:3.8]  nan jigeum naega joa naneun naya\\n\\n[20:86.23:1.21]  I love myself\\n[21:88.15:2.58]  nan mweonga dalla dalla Yeah\\n[22:93.88:1.19]  I love myself\\n[23:95.81:2.5]  nan mweonga dalla dalla Yeah\\n[24:99.69:2.51]  nan neorang dalla dalla Yeah\\n\\n[25:102.36:1.63]  Bad, bad, I’m sorry I’m bad,\\n[26:104.21:1.74]  I’m just the way I am\\n[27:106.13:1.78]  nam shingyeong sseugo salgin akkaweo\\n[28:108.07:1.62]  hago shipeun il hagido bappa\\n[29:109.79:0.82]  My life \\n[30:111.65:2.63]  nae mamdaero sal geoya malliji ma\\n[31:115.28:2.27]  nan teukbyeolhanikka Yeah\\n\\n[32:117.96:3.24]  namdeure shiseon jungyochi ana\\n[33:121.69:3.34]  nae Style-i joa geuge nanikka\\n[34:125.33:1.35]  eonnideuri malhae [35:126.84:2.1]  naega neomu dangdolhadae\\n[36:129.05:0.8]  (I’m sorry sorry) [37:129.94:2.15]  bakkeul saenggak eopseoyo Nope\\n\\n[38:132.33:3.31]  yeppeugiman hago maeryeogeun eomneun\\n[39:135.9:3.64]  aedeulgwa nan dalla dalla dalla\\n[40:139.9:3.46]  ni gijune nal matchuryeo haji ma\\n[41:143.49:3.7]  nan jigeum naega joa naneun naya\\n\\n[42:150.07:3.7]  Don’t care what people say naneun naega ara\\n[43:153.95:4.73]  I’m talking to myself gijukji ma jeolttaero\\n[44:158.79:1.42]  gogaereul deulgo [45:160.34:2.15]  ni kkomeul jjocha\\n[46:162.58:3.19]  Just keep on dreaming\\n\\n[47:166.13:1.34]  Keep your chin up, [48:167.8:1.34]  we got your back\\n[49:169.88:1.46]  Keep your head up, [50:171.62:1.55]  just keep on dreaming\\n[51:173.75:1.41]  Keep your chin up, [52:175.52:1.27]  we got your back\\n[53:177.63:1.48]  Keep your head up, [54:179.38:1.5]  just keep on dreaming\\n\\n[55:182.29:3.29]  yeppeugiman hago maeryeogeun eomneun\\n[56:185.73:3.68]  aedeulgwa nan dalla dalla dalla\\n[57:189.82:3.34]  ni gijune nal matchuryeo haji ma\\n[58:193.28:3.82]  nan jigeum naega joa naneun naya\\n\\n[59:199.49:1.23]  I love myself\\n[60:201.41:2.62]  nan mweonga dalla dalla Yeah\\n[61:207.18:1.27]  I love myself\\n[62:209.09:2.66]  nan mweonga dalla dalla Yeah\\n[63:212.93:2.66]  nan neorang dalla dalla Yeah\\n',\n  //       originalArtist: 'ITZY',\n  //       title: 'Dalla Dalla',\n  //       videoId: 'pNfTK39k55U',\n  //     },\n  //   ],\n  //   members: {\n  //     '-LZJFEse1Y9qr-Zvqs-1': {\n  //       age: 37,\n  //       birthdate: 19810412,\n  //       colorId: 'col000022',\n  //       color: {\n  //         b: 238,\n  //         count: 12,\n  //         g: 104,\n  //         hex: '#7B68EE',\n  //         name: 'purple',\n  //         number: 22,\n  //         r: 132,\n  //         id: 'col000022',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'MR',\n  //       name: 'Mari',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: ['LEADER', 'RAPPER', 'VISUAL', 'VOCALIST'],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEse1Y9qr-Zvqs-1',\n  //     },\n  //     '-LZJFEskZ-xpLLt44WpV': {\n  //       age: 36,\n  //       birthdate: 19820422,\n  //       colorId: 'col000026',\n  //       color: {\n  //         b: 233,\n  //         count: 17,\n  //         g: 107,\n  //         hex: '#FC6BE9',\n  //         name: 'magenta',\n  //         number: 26,\n  //         r: 252,\n  //         id: 'col000026',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'MB',\n  //       name: 'Mab',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: ['LEAD_VOCALIST', 'VISUAL', 'VOCALIST'],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEskZ-xpLLt44WpV',\n  //     },\n  //     '-LZJFEsrDDhUdTym0GZo': {\n  //       age: 36,\n  //       birthdate: 19820911,\n  //       colorId: 'col000020',\n  //       color: {\n  //         b: 255,\n  //         count: 18,\n  //         g: 111,\n  //         hex: '#406FFF',\n  //         name: 'blue',\n  //         number: 20,\n  //         r: 64,\n  //         id: 'col000020',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'CD',\n  //       name: 'CD',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: ['LEAD_VOCALIST'],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEsrDDhUdTym0GZo',\n  //     },\n  //     '-LZJFEstFUh5FQU40RKe': {\n  //       age: 35,\n  //       birthdate: 19830712,\n  //       colorId: 'col000008',\n  //       color: {\n  //         b: 0,\n  //         count: 14,\n  //         g: 228,\n  //         hex: '#FFE400',\n  //         name: 'yellow',\n  //         number: 8,\n  //         r: 255,\n  //         id: 'col000008',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'PR',\n  //       name: 'Pri',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: ['MAIN_DANCER', 'MAIN_VOCALIST'],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEstFUh5FQU40RKe',\n  //     },\n  //     '-LZJFEsxjzWTx-rET1xE': {\n  //       age: 34,\n  //       birthdate: 19840402,\n  //       colorId: 'col000001',\n  //       color: {\n  //         b: 60,\n  //         count: 13,\n  //         g: 31,\n  //         hex: '#D01f3C',\n  //         name: 'red',\n  //         number: 1,\n  //         r: 208,\n  //         id: 'col000001',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'DE',\n  //       name: 'Deby',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: [\n  //         'CENTER',\n  //         'LEADER',\n  //         'LEAD_DANCER',\n  //         'LEAD_VOCALIST',\n  //         'MAIN_DANCER',\n  //         'MAIN_RAPPER',\n  //       ],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEsxjzWTx-rET1xE',\n  //     },\n  //     '-LZJFEt1kQzvszYTLrJY': {\n  //       age: 34,\n  //       birthdate: 19840404,\n  //       colorId: 'col000012',\n  //       color: {\n  //         b: 23,\n  //         count: 16,\n  //         g: 184,\n  //         hex: '#7FB817',\n  //         name: 'green',\n  //         number: 12,\n  //         r: 127,\n  //         id: 'col000012',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'MK',\n  //       name: 'Mika',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: ['LEAD_RAPPER', 'VOCALIST'],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEt1kQzvszYTLrJY',\n  //     },\n  //   },\n  //   modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   name: 'OT6',\n  //   official: true,\n  //   private: false,\n  //   subUnit: false,\n  //   songsDict: {\n  //     '-L_6Dqn4qpx3aru3dSve': '-L_kf2xp4WghvAmkITWa',\n  //     '-La4Lg41emt8zrteENSk': '-La4OusOW1rBOCfksei4',\n  //     '-La4R2Z9hcKnQCM-KQK_': '-La4TN-3MBxB2pc9DnHC',\n  //     '-LaN6osi2gjH03HexnkI': '-LaNA1mVtkUuv5WWBTce',\n  //     '-LawlFAODfAnYrR_TFJd': '-LawtZuumBwhKnO5IZrw',\n  //     '-LbAyzTscIav2rIA1U9n': '-LbB0YsN-yp_CnYjbSEM',\n  //     '-Lbv8GTt4f2SIZVCnPv_': '-LbvCfghH5BvHJx_KkhA',\n  //     '-L_4OOhzdx5L1qgyuyoU': '-Lc9pdm-AHCrt-goKLWq',\n  //     '-L_6KEydsvwa3ckYe4MS': '-LcFaFuxAwuy4CYQSE8X',\n  //     '-LcKAsyX-LPOQT-ikzLS': '-LcKCpoX-Pj3dQWvGl21',\n  //     '-LcKFJWdfalTIo72Ek00': '-LcKHZgV-RZ3Ppan8Ium',\n  //   },\n  //   complete: true,\n  //   artistName: 'Banda Vyrus',\n  //   genre: 'Pop',\n  // },\n};\n\nexport default function reducer(prevState = initialState, action) {\n  let newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_DISTRIBUTE:\n      newState = Object.assign({}, initialState);\n      break;\n\n    case types.RESET_DISTRIBUTE_SONG:\n      newState = Object.assign({}, initialState);\n      newState.activeUnit = Object.assign({}, prevState.activeUnit);\n      break;\n\n    case types.SET_ACTIVE_DISTRIBUTION:\n      newState.activeDistribution = action.payload;\n      break;\n\n    case types.SET_ACTIVE_MEMBER_PILL:\n      newState.activeMemberPill = action.payload;\n      break;\n\n    case types.SET_ACTIVE_SONG:\n      newState.activeSong = action.payload;\n      break;\n\n    case types.SET_ACTIVE_UNIT:\n      newState.activeUnit = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTE_VIEW:\n      newState.distributeView = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_CATEGORY:\n      newState.category = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_LINES:\n      newState.distributionLines = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_REMAINDER:\n      newState.remainder = action.payload;\n      break;\n\n    case types.SET_RATES:\n      newState.rates = action.payload;\n      break;\n\n    case types.SET_TIMESTAMPS_DICT:\n      newState.timestampsDict = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetDistribute = payload => dispatch =>\n  dispatch({ type: types.RESET_DISTRIBUTE, payload });\nconst resetDistributeSong = payload => dispatch =>\n  dispatch({ type: types.RESET_DISTRIBUTE_SONG, payload });\nconst setActiveDistribution = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_DISTRIBUTION, payload });\nconst setActiveMemberPill = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_MEMBER_PILL, payload });\nconst setActiveSong = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_SONG, payload });\nconst setActiveUnit = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_UNIT, payload });\nconst setDistributeView = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTE_VIEW, payload });\nconst setDistributionCategory = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_CATEGORY, payload });\nconst setDistributionLines = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_LINES, payload });\nconst setDistributionRemainder = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_REMAINDER, payload });\nconst setRates = payload => dispatch =>\n  dispatch({ type: types.SET_RATES, payload });\nconst setTimestampsDict = payload => dispatch =>\n  dispatch({ type: types.SET_TIMESTAMPS_DICT, payload });\n\nexport default {\n  resetDistribute,\n  resetDistributeSong,\n  setActiveDistribution,\n  setActiveMemberPill,\n  setActiveSong,\n  setActiveUnit,\n  setDistributeView,\n  setDistributionCategory,\n  setDistributionLines,\n  setDistributionRemainder,\n  setRates,\n  setTimestampsDict,\n};\n","import _ from 'lodash';\n\nimport actions from './actions';\n\nconst activateSong = id => (dispatch, getState) => {\n  // Reset everything but Unit\n  dispatch(actions.resetDistributeSong({}));\n\n  const activeSong = _.find(getState().db.songs, { id });\n  dispatch(actions.setActiveSong(activeSong));\n\n  // Determine if it's a view or edit\n  const { songsDict } = getState().distribute.activeUnit || {};\n  const distributeView = songsDict[activeSong.id] ? 'view' : 'edit';\n  dispatch(actions.setDistributeView(distributeView));\n\n  // If distribution has been previously done, make connections\n  if (distributeView === 'view') {\n    dispatch({\n      type: 'REQUEST_DISTRIBUTION',\n      distributionId: songsDict[activeSong.id],\n    });\n  }\n};\n\nconst activateUnit = () => (dispatch, getState) => {\n  // Reset everything\n  dispatch(actions.resetDistribute({}));\n\n  const selectedArtist = { ...getState().artists.selectedArtist };\n  const activeUnit = { ...getState().artists.selectedUnit };\n\n  activeUnit.artistName = selectedArtist.name;\n  activeUnit.genre = selectedArtist.genre;\n\n  dispatch(actions.setActiveUnit(activeUnit));\n};\n\nconst prepareSong = () => (dispatch, getState) => {\n  const { activeSong } = getState().distribute;\n  if (activeSong.id) {\n    const distributionString = activeSong.distribution;\n\n    const buildPartData = data => {\n      const [id, startTime, duration] = data.split(':');\n      return {\n        id,\n        startTime: +startTime,\n        duration: +duration,\n        endTime: +startTime + +duration,\n      };\n    };\n\n    // Iterate through lines\n    const distributionLines = distributionString.split('\\n').map(line => {\n      if (line.length < 2) {\n        return [];\n      }\n      const parsedLine = [];\n      let insideBracket = false;\n      let id = '';\n      let content = '';\n\n      for (let i = 0; i < line.length; i++) {\n        const char = line[i];\n        if (char === '[' && i > 0) {\n          content = content[0] === ' ' ? content.substring(1) : content;\n          parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n        }\n\n        if (char === '[') {\n          insideBracket = true;\n          id = '';\n          content = content.trim();\n        } else if (char === ']') {\n          insideBracket = false;\n          content = '';\n        } else if (insideBracket) {\n          id += char;\n        } else {\n          content += char;\n        }\n      }\n      content = content[0] === ' ' ? content.substring(1) : content;\n      parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n\n      return parsedLine;\n    });\n\n    dispatch(actions.setDistributionLines(distributionLines));\n  }\n};\n\nconst activateMemberPill = id => (dispatch, getState) => {\n  const { activeMemberPill } = getState().distribute;\n\n  if (id === activeMemberPill) {\n    dispatch(actions.setActiveMemberPill(''));\n  } else {\n    dispatch(actions.setActiveMemberPill(id));\n  }\n};\n\nconst linkMemberToPart = id => (dispatch, getState) => {\n  const { activeMemberPill } = getState().distribute;\n\n  if (!activeMemberPill) return;\n\n  const distributionLines = [...getState().distribute.distributionLines];\n\n  for (let l = 0; l < distributionLines.length; l++) {\n    const line = distributionLines[l];\n    let found = false;\n    for (let p = 0; p < line.length; p++) {\n      const part = line[p];\n\n      if (part.id === id) {\n        // If it already has the member, remove it\n        if (part.memberId.includes(activeMemberPill)) {\n          part.memberId = part.memberId.filter(m => m !== activeMemberPill);\n        }\n        // If the active pill is NONE, replace it by NONE\n        else if (activeMemberPill === 'NONE') {\n          part.memberId = ['NONE'];\n        }\n        // If there was already a none, only add the new member\n        else if (part.memberId[0] === 'NONE') {\n          part.memberId = [activeMemberPill];\n        }\n        // Any other case, just push the member\n        else {\n          part.memberId.push(activeMemberPill);\n        }\n\n        found = true;\n        break;\n      }\n    }\n    if (found) break;\n  }\n  dispatch(actions.setDistributionLines(distributionLines));\n  dispatch(calculateRates(distributionLines));\n};\n\nconst calculateRates = distributionLines => dispatch => {\n  const rates = {\n    total: 0,\n    remaining: 0,\n    max: 0,\n  };\n\n  for (let l = 0; l < distributionLines.length; l++) {\n    const line = distributionLines[l];\n    for (let p = 0; p < line.length; p++) {\n      const part = line[p];\n      if (part.memberId.length) {\n        for (let m = 0; m < part.memberId.length; m++) {\n          rates.total += part.duration;\n          const mId = part.memberId[m];\n          if (rates[mId] === undefined) {\n            // [duration, absolute percentage, relative percentage]\n            rates[mId] = [0, 0, 0];\n          }\n          rates[mId][0] += part.duration;\n          // Replace max if greater than previous max\n          if (rates[mId][0] > rates.max) [rates.max] = rates[mId];\n        }\n      } else {\n        rates.remaining += part.duration;\n      }\n    }\n  }\n\n  // Calculate percentages\n  Object.keys(rates).forEach(key => {\n    if (key === 'max' || key === 'remaining' || key === 'total') return;\n    const rate = rates[key];\n    // Add absolute percentage\n    rate[1] = Number(((100 * rate[0]) / rates.total).toFixed(1));\n    // Add relative percentage (bar width)\n    rate[2] = Math.round((100 * rate[0]) / rates.max);\n  });\n\n  dispatch(actions.setRates(rates));\n  dispatch(calculateRemainder(rates));\n};\n\nconst calculateRemainder = rates => dispatch => {\n  let remainder = 0;\n\n  if (rates.remaining === 0 && rates.total === 0) {\n    remainder = 100;\n  } else if (rates.remaining > 0 && rates.total > 0) {\n    remainder = Math.round(\n      (100 * rates.remaining) / (rates.total + rates.remaining)\n    );\n  } else if (rates.remaining === 0 && rates.total > 0) {\n    remainder = 0;\n  }\n  dispatch(actions.setDistributionRemainder(remainder));\n};\n\nconst handleDistributionCategory = event => async dispatch => {\n  const { value } = event.target;\n  dispatch(actions.setDistributionCategory(value));\n};\n\nconst handleSaveDistribution = () => async (dispatch, getState) => {\n  const { rates } = getState().distribute;\n  const ratesToSave = {};\n  Object.entries(rates).forEach(entry => {\n    if (Array.isArray(entry[1])) {\n      ratesToSave[entry[0]] = entry[1][0]; // eslint-disable-line\n    } else {\n      ratesToSave[entry[0]] = entry[1]; // eslint-disable-line\n    }\n  });\n\n  const body = {\n    category: getState().distribute.category,\n    songId: getState().distribute.activeSong.id,\n    rates: ratesToSave,\n    relationships: '',\n    features: [],\n    unitId: getState().distribute.activeUnit.id,\n    distributionId: getState().distribute.activeDistribution.id || null,\n  };\n\n  // Build relationships\n  const relationships = {};\n  getState().distribute.distributionLines.forEach(line =>\n    line.forEach(part => {\n      relationships[part.id] = part.memberId;\n    })\n  );\n\n  body.relationships = JSON.stringify(relationships);\n\n  // TO-DO: add featuring artists\n\n  await dispatch({ type: 'SEND_DISTRIBUTION', body });\n};\n\nconst handleDistributeView = label => (dispatch, getState) => {\n  if (label !== getState().distribute.distributeView) {\n    dispatch(actions.setDistributeView(label));\n\n    if (label === 'view') {\n      // parse timestamps\n      dispatch(parseTimestamps());\n    }\n  }\n};\n\nconst mergeActiveDistribution = () => (dispatch, getState) => {\n  const distributionRelationships = getState().distribute.activeDistribution\n    .relationships;\n  const distributionLines = _.cloneDeep(\n    getState().distribute.distributionLines\n  );\n\n  distributionLines.forEach(distributionLine => {\n    distributionLine.forEach(distributionPart => {\n      distributionPart.memberId = [\n        ...distributionRelationships[distributionPart.id],\n      ];\n    });\n  });\n\n  dispatch(actions.setDistributionLines(distributionLines));\n\n  dispatch(calculateRates(distributionLines));\n\n  dispatch(parseTimestamps(distributionLines));\n};\n\nconst parseTimestamps = dLines => (dispatch, getState) => {\n  const distributionLines = dLines || getState().distribute.distributionLines;\n\n  const membersDict = {};\n  const timestampDict = {};\n\n  distributionLines.forEach(distributionLine => {\n    distributionLine.forEach(distributionPart => {\n      const startTime = Math.floor(distributionPart.startTime);\n      const endTime = Math.ceil(distributionPart.endTime);\n\n      // Define start objects if they don't exist\n      if (timestampDict[startTime] === undefined) {\n        timestampDict[startTime] = { start: {} };\n      } else if (timestampDict[startTime].start === undefined) {\n        timestampDict[startTime].start = {};\n      }\n\n      // Add members to start\n      distributionPart.memberId.forEach(memberId => {\n        timestampDict[startTime].start[memberId] = true;\n      });\n\n      // Define stop objects if they don't exist\n      if (timestampDict[endTime] === undefined) {\n        timestampDict[endTime] = { stop: {} };\n      } else if (timestampDict[endTime].stop === undefined) {\n        timestampDict[endTime].stop = {};\n      }\n\n      // Add members to stop\n      distributionPart.memberId.forEach(memberId => {\n        if (membersDict[memberId] === undefined) {\n          membersDict[memberId] = 0;\n        }\n        membersDict[memberId] += distributionPart.duration;\n        timestampDict[endTime].stop[memberId] = membersDict[memberId];\n      });\n    });\n  });\n\n  dispatch(actions.setTimestampsDict(timestampDict));\n};\n\nexport default {\n  activateMemberPill,\n  activateSong,\n  activateUnit,\n  handleDistributeView,\n  handleDistributionCategory,\n  handleSaveDistribution,\n  linkMemberToPart,\n  mergeActiveDistribution,\n  prepareSong,\n};\n","import distributeReducer from './reducers';\n\nexport { default as distributeOperations } from './operations';\nexport { default as distributeTypes } from './types';\nexport default distributeReducer;\n","const RESET_SYNC = 'RESET_SYNC';\nconst SET_ACTIVE_LINE = 'SET_ACTIVE_LINE';\nconst SET_ACTIVE_PILL = 'SET_ACTIVE_PILL';\nconst SET_ARE_LYRICS_LOCKED = 'SET_ARE_LYRICS_LOCKED';\nconst SET_FINAL_LYRICS = 'SET_FINAL_LYRICS';\nconst SET_INFO = 'SET_INFO';\nconst SET_IS_DISTRIBUTION_COMPLETE = 'SET_IS_DISTRIBUTION_COMPLETE';\nconst SET_LINK_SEQUENCE_MODE = 'SET_LINK_SEQUENCE_MODE';\nconst SET_LAST_ID_NUM = 'SET_LAST_ID_NUM';\nconst SET_LYRICS = 'SET_LYRICS';\nconst SET_PILLS = 'SET_PILLS';\nconst SET_QUEUE = 'SET_QUEUE';\nconst SET_STEP = 'SET_STEP';\nconst SET_STEPS = 'SET_STEPS';\nconst SET_SYNC_DISTRIBUTION_LINES = 'SET_SYNC_DISTRIBUTION_LINES';\nconst SET_SYNC_STATS = 'SET_SYNC_STATS';\nconst SET_TIMESTAMPS = 'SET_TIMESTAMPS';\nconst SET_VIDEO_ID = 'SET_VIDEO_ID';\n\nexport default {\n  RESET_SYNC,\n  SET_ACTIVE_LINE,\n  SET_ACTIVE_PILL,\n  SET_ARE_LYRICS_LOCKED,\n  SET_FINAL_LYRICS,\n  SET_INFO,\n  SET_IS_DISTRIBUTION_COMPLETE,\n  SET_LINK_SEQUENCE_MODE,\n  SET_LAST_ID_NUM,\n  SET_LYRICS,\n  SET_PILLS,\n  SET_QUEUE,\n  SET_STEP,\n  SET_STEPS,\n  SET_SYNC_DISTRIBUTION_LINES,\n  SET_SYNC_STATS,\n  SET_TIMESTAMPS,\n  SET_VIDEO_ID,\n};\n","import types from './types';\n\nconst initialState = {\n  activeLine: null,\n  activePill: null,\n  areLyricsLocked: false,\n  distributionLines: [],\n  finalLyrics: '',\n  info: {},\n  isDistributionComplete: false,\n  linkSequenceMode: false,\n  lastIdNum: 0,\n  lyrics: '',\n  pills: {},\n  queue: {},\n  step: 1,\n  steps: {\n    1: {\n      locked: false,\n      expanded: true,\n    },\n    2: {\n      locked: true,\n      expanded: false,\n    },\n    3: {\n      locked: true,\n      expanded: false,\n    },\n    4: {\n      locked: true,\n      expanded: false,\n    },\n    5: {\n      locked: true,\n      expanded: false,\n    },\n  },\n  stats: {\n    lines: 0,\n    pills: 0,\n    linked: 0,\n  },\n  timestamps: {},\n  videoId: '',\n};\n\nexport default function reducer(prevState = initialState, action) {\n  let newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_SYNC:\n      newState = Object.assign({}, initialState);\n      break;\n\n    case types.SET_ACTIVE_LINE:\n      newState.activeLine = action.payload;\n      break;\n\n    case types.SET_ACTIVE_PILL:\n      newState.activePill = action.payload;\n      break;\n\n    case types.SET_ARE_LYRICS_LOCKED:\n      newState.areLyricsLocked = action.payload;\n      break;\n\n    case types.SET_FINAL_LYRICS:\n      newState.finalLyrics = action.payload;\n      break;\n\n    case types.SET_INFO:\n      newState.info = action.payload;\n      break;\n\n    case types.SET_IS_DISTRIBUTION_COMPLETE:\n      newState.isDistributionComplete = action.payload;\n      break;\n\n    case types.SET_LINK_SEQUENCE_MODE:\n      newState.linkSequenceMode = action.payload;\n      break;\n\n    case types.SET_LAST_ID_NUM:\n      newState.lastIdNum = action.payload;\n      break;\n\n    case types.SET_LYRICS:\n      newState.lyrics = action.payload;\n      break;\n\n    case types.SET_PILLS:\n      newState.pills = action.payload;\n      break;\n\n    case types.SET_QUEUE:\n      newState.queue = action.payload;\n      break;\n\n    case types.SET_STEP:\n      newState.step = action.payload;\n      break;\n\n    case types.SET_STEPS:\n      newState.steps = action.payload;\n      break;\n\n    case types.SET_SYNC_DISTRIBUTION_LINES:\n      newState.distributionLines = action.payload;\n      break;\n\n    case types.SET_SYNC_STATS:\n      newState.stats = action.payload;\n      break;\n\n    case types.SET_TIMESTAMPS:\n      newState.timestamps = action.payload;\n      break;\n\n    case types.SET_VIDEO_ID:\n      newState.videoId = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetSync = payload => dispatch =>\n  dispatch({ type: types.RESET_SYNC, payload });\nconst setActiveLine = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_LINE, payload });\nconst setActivePill = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_PILL, payload });\nconst setAreLyricsLocked = payload => dispatch =>\n  dispatch({ type: types.SET_ARE_LYRICS_LOCKED, payload });\nconst setFinalLyrics = payload => dispatch =>\n  dispatch({ type: types.SET_FINAL_LYRICS, payload });\nconst setInfo = payload => dispatch =>\n  dispatch({ type: types.SET_INFO, payload });\nconst setIsDistributionComplete = payload => dispatch =>\n  dispatch({ type: types.SET_IS_DISTRIBUTION_COMPLETE, payload });\nconst setLinkSequenceMode = payload => dispatch =>\n  dispatch({ type: types.SET_LINK_SEQUENCE_MODE, payload });\nconst setLastIdNum = payload => dispatch =>\n  dispatch({ type: types.SET_LAST_ID_NUM, payload });\nconst setLyrics = payload => dispatch =>\n  dispatch({ type: types.SET_LYRICS, payload });\nconst setPills = payload => dispatch =>\n  dispatch({ type: types.SET_PILLS, payload });\nconst setQueue = payload => dispatch =>\n  dispatch({ type: types.SET_QUEUE, payload });\nconst setStep = payload => dispatch =>\n  dispatch({ type: types.SET_STEP, payload });\nconst setSteps = payload => dispatch =>\n  dispatch({ type: types.SET_STEPS, payload });\nconst setSyncDistributionLines = payload => dispatch =>\n  dispatch({ type: types.SET_SYNC_DISTRIBUTION_LINES, payload });\nconst setSyncStats = payload => dispatch =>\n  dispatch({ type: types.SET_SYNC_STATS, payload });\nconst setTimestamps = payload => dispatch =>\n  dispatch({ type: types.SET_TIMESTAMPS, payload });\nconst setVideoId = payload => dispatch =>\n  dispatch({ type: types.SET_VIDEO_ID, payload });\n\nexport default {\n  resetSync,\n  setActiveLine,\n  setActivePill,\n  setAreLyricsLocked,\n  setFinalLyrics,\n  setInfo,\n  setIsDistributionComplete,\n  setLinkSequenceMode,\n  setLastIdNum,\n  setLyrics,\n  setPills,\n  setQueue,\n  setStep,\n  setSteps,\n  setSyncDistributionLines,\n  setSyncStats,\n  setTimestamps,\n  setVideoId,\n};\n","import _ from 'lodash';\n\nimport actions from './actions';\n\nimport constants from '../../utils/constants';\n\nconst handleVideoId = e => dispatch => {\n  const { value } = e.target;\n\n  let videoId = '';\n  // TO-DO: Check if value is one of the placeholders and assign correct video id\n\n  // Parse youtube link\n  if (value.startsWith('https://youtu.be/')) {\n    videoId = value.substring(17);\n  } else if (value && !videoId) {\n    const youtubeLink = value.split('v=');\n    if (youtubeLink.length === 1) {\n      [videoId] = youtubeLink;\n    } else if (youtubeLink.length === 2) {\n      const youtubeLinkQuery = youtubeLink[1].split('&');\n      [videoId] = youtubeLinkQuery;\n    }\n  }\n\n  dispatch(actions.setVideoId(videoId));\n};\n\nconst handleFormInfo = (formState, originalArtist) => (dispatch, getState) => {\n  // Original Artist is required\n  if (!originalArtist) return;\n\n  const info = {};\n\n  const { artistsTypeaheadDict } = getState().db;\n  if (artistsTypeaheadDict[originalArtist]) {\n    info.artistId = artistsTypeaheadDict[originalArtist];\n    info.originalArtist = originalArtist;\n  } else {\n    info.originalArtist = originalArtist;\n  }\n\n  if (Object.values(formState.values)) {\n    info.album = formState.values.album;\n    info.gender = formState.values.gender || 'MIXED';\n    info.groupSize = formState.values.groupSize;\n    info.single = formState.values.single || false;\n    info.title = formState.values.title;\n    info.private = formState.values.private;\n  }\n\n  info.videoId = getState().sync.videoId;\n  dispatch(actions.setInfo(info));\n  dispatch(unlockNextStep());\n};\n\nconst unlockNextStep = () => (dispatch, getState) => {\n  let { step } = getState().sync;\n  const steps = _.cloneDeep(getState().sync.steps);\n\n  steps[step].locked = true;\n  steps[step].expanded = false;\n  steps[step + 1].locked = false;\n  steps[step + 1].expanded = true;\n\n  step++;\n\n  if (step === 5) {\n    dispatch(finalizeLyrics());\n  }\n  dispatch(actions.setStep(step));\n  dispatch(actions.setSteps(steps));\n};\n\nconst unlockSpecificStep = num => (dispatch, getState) => {\n  if (!num) return;\n\n  let { step } = getState().sync;\n  const steps = _.cloneDeep(getState().sync.steps);\n\n  Object.values(steps).forEach(st => {\n    st.locked = true;\n    st.expanded = false;\n  });\n\n  steps[+num].locked = false;\n  steps[+num].expanded = true;\n\n  step = +num;\n\n  dispatch(actions.setStep(step));\n  dispatch(actions.setSteps(steps));\n\n  if (+num === 3) {\n    dispatch(actions.setAreLyricsLocked(false));\n  }\n};\n\n// Adds []s in the beginning of every line and remove diplicated spaces\nconst prepareLines = (clearBrackets = false) => (dispatch, getState) => {\n  const { lyrics } = getState().sync;\n\n  let preparedLyrics = lyrics;\n\n  if (clearBrackets) {\n    preparedLyrics = preparedLyrics.replace(/\\[(.*?)\\]/g, '[]');\n  }\n\n  preparedLyrics = preparedLyrics\n    .split('\\n')\n    .map(line => {\n      if (line.length > 0 && !line.startsWith('[')) {\n        return `[] ${line}`;\n      }\n      return line;\n    })\n    .join('\\n')\n    .replace(/ +(?= )/g, '');\n\n  dispatch(actions.setLyrics(preparedLyrics));\n};\n\n// Verify lyrics and add ids to all []s\nconst prepareLyrics = () => (dispatch, getState) => {\n  // Add spaces between ending and opening braces\n  // Remove spaces between opening and ending braces\n  let lyrics = getState().sync.lyrics.replace(/\\]\\(|\\)\\[|\\[ \\]|\\( \\)/g, s => {\n    if (s === '](') return '] (';\n    if (s === ')[') return ') [';\n    if (s === '( )') return '()';\n    if (s === '[ ]') return '[]';\n    return s;\n  });\n  // Add spaces between characters and opening braces\n  // Add spaces between ending braces and characters\n  lyrics = lyrics.replace(\n    /[A-Za-z0-9][(]|[A-Za-z0-9][[]|[)][A-Za-z0-9]|[\\]][A-Za-z0-9]/g,\n    s => `${s[0]} ${s[1]}`\n  );\n  // Add brackets before any parentheses\n  lyrics = lyrics.replace(\n    /[A-Za-z0-9?!][ ][(]|[)][ ][(]|[)][ ][A-Za-z0-9]/g,\n    s => `${s[0]}${s[1]}[] ${s[2]}`\n  );\n  // Add a unique idNum inside each []\n  let idNum = getState().sync.lastIdNum;\n  lyrics = lyrics.replace(/\\[\\]/g, () => {\n    idNum++;\n    return `[${idNum}]`;\n  });\n  dispatch(actions.setLastIdNum(idNum));\n  dispatch(actions.setLyrics(lyrics));\n  dispatch(actions.setAreLyricsLocked(true));\n};\n\nconst lockLyrics = (locked = true) => (dispatch, getState) => {\n  dispatch(prepareLines());\n  dispatch(prepareLyrics());\n  dispatch(actions.setAreLyricsLocked(locked));\n  const { lyrics } = getState().sync;\n  dispatch(parseLyricsToObject(lyrics));\n};\n\nconst handleLyricsEdit = e => dispatch => {\n  let text = '';\n  if (typeof e === 'string') {\n    text = e;\n  } else {\n    text = e.target.value || '';\n  }\n  dispatch(actions.setLyrics(text.replace(/ +(?= )/g, '')));\n  dispatch(actions.setAreLyricsLocked(false));\n};\n\nconst parseLyricsToObject = lyrics => (dispatch, getState) => {\n  let lineCount = 0;\n  const lines = lyrics.split('\\n').map(line => {\n    if (line.length < 2) {\n      return [];\n    }\n    const parsedLine = [];\n    let insideBracket = false;\n    let id = '';\n    let content = '';\n\n    for (let i = 0; i < line.length; i++) {\n      const char = line[i];\n      if (char === '[' && i > 0) {\n        content = content[0] === ' ' ? content.substring(1) : content;\n        parsedLine.push({ id, content, link: null });\n      }\n\n      if (char === '[') {\n        insideBracket = true;\n        id = '';\n        content = content.trim();\n        lineCount++;\n      } else if (char === ']') {\n        insideBracket = false;\n        content = '';\n      } else if (insideBracket) {\n        id += char;\n      } else {\n        content += char;\n      }\n    }\n    content = content[0] === ' ' ? content.substring(1) : content;\n    parsedLine.push({ id, content, link: null, color: null });\n\n    return parsedLine;\n  });\n  dispatch(actions.setSyncDistributionLines(lines));\n\n  const stats = { ...getState().sync.stats };\n  stats.lines = lineCount;\n\n  dispatch(actions.setSyncStats(stats));\n\n  setTimeout(() => {\n    dispatch(unlockNextStep());\n  }, 1000);\n};\n\nconst handleSyncKeydown = (event, player) => dispatch => {\n  // Only trigger if it is an allowed key and the video is playing\n  const { key } = event;\n  if (constants.SYNC_KEY_LIST[key] && player && player.getPlayerState() === 1) {\n    const timestamp = player.getCurrentTime();\n    dispatch(enqueueCapture(key, timestamp));\n  }\n};\n\nconst handleSyncKeyup = (event, player) => dispatch => {\n  const { key } = event;\n  if (constants.SYNC_KEY_LIST[key]) {\n    const timestamp = player.getCurrentTime();\n    dispatch(\n      dequeueCapture(key, timestamp, constants.SYNC_KEY_COLOR_LIST[key])\n    );\n  }\n};\n\nconst handleSyncBoxMouseDown = (key, player) => dispatch => {\n  // Only trigger if it is an allowed key and the video is playing\n  if (constants.SYNC_KEY_LIST[key] && player && player.getPlayerState() === 1) {\n    const timestamp = player.getCurrentTime();\n    dispatch(enqueueCapture(key, timestamp));\n  }\n};\n\nconst handleSyncBoxMouseUp = (key, player, color) => dispatch => {\n  if (constants.SYNC_KEY_LIST[key]) {\n    const timestamp = player.getCurrentTime();\n    dispatch(dequeueCapture(key, timestamp, color));\n  }\n};\n\nconst enqueueCapture = (id, timestamp) => (dispatch, getState) => {\n  const queue = Object.assign({}, getState().sync.queue);\n  if (queue[id] === undefined) {\n    queue[id] = timestamp;\n    dispatch(actions.setQueue(queue));\n  }\n};\n\nlet newPillId = 0;\n\nconst dequeueCapture = (id, timestamp, color) => (dispatch, getState) => {\n  const queue = Object.assign({}, getState().sync.queue);\n\n  if (queue[id]) {\n    const pills = Object.assign({}, getState().sync.pills);\n    const startTime = queue[id];\n    const duration = timestamp - startTime;\n    delete queue[id];\n\n    newPillId++;\n    pills[newPillId] = {\n      pillId: newPillId,\n      timestamp: startTime,\n      duration,\n      link: null,\n      key: id,\n      color,\n    };\n\n    dispatch(actions.setQueue(queue));\n    dispatch(actions.setPills(pills));\n\n    const stats = { ...getState().sync.stats };\n    stats.pills = Object.keys(pills).length;\n    dispatch(actions.setSyncStats(stats));\n  }\n};\n\nconst connectSyncLine = id => (dispatch, getState) => {\n  const { activeLine, activePill } = getState().sync;\n  if (activeLine === id) {\n    dispatch(actions.setActiveLine(null));\n  } else if (activePill) {\n    dispatch(\n      connect(\n        id,\n        activePill\n      )\n    );\n  } else {\n    dispatch(actions.setActiveLine(id));\n  }\n};\n\nconst connectSyncPill = id => (dispatch, getState) => {\n  const { activeLine, activePill } = getState().sync;\n  if (activePill === id) {\n    dispatch(actions.setActivePill(null));\n  } else if (activeLine) {\n    dispatch(\n      connect(\n        activeLine,\n        id\n      )\n    );\n  } else {\n    dispatch(actions.setActivePill(id));\n  }\n};\n\nlet linksBackUp = {};\nconst connect = (lineId, pillId) => (dispatch, getState) => {\n  let lines = [...getState().sync.distributionLines];\n  let pills = Object.assign({}, getState().sync.pills);\n\n  // Nullify any line with pillId as a link\n  lines = nullifyLine(lines, pillId, lineId);\n  // Nullify any pill with lineId as a link\n  pills = nullifyPill(pills, lineId);\n  // Link each other\n  function modifyPart(collection, searchId, id, key, newValue, color) {\n    return collection.map(l =>\n      l.map(part => {\n        if (+part[searchId] === +id) {\n          part[key] = newValue;\n          part.color = color;\n        }\n        return part;\n      })\n    );\n  }\n\n  pills[pillId].link = lineId;\n  modifyPart(lines, 'id', lineId, 'link', pillId, pills[pillId].color);\n\n  // Add to the linksBackUp for when user needs to edit lyrics\n  linksBackUp[lineId] = pillId;\n\n  dispatch(actions.setActiveLine(null));\n  dispatch(actions.setActivePill(null));\n\n  dispatch(actions.setPills(pills));\n  dispatch(actions.setSyncDistributionLines(lines));\n\n  // Check if distribution is complete\n  function isDistributionComplete(collection) {\n    let isComplete = true;\n\n    collection.forEach(l =>\n      l.forEach(part => {\n        if (part.link === null) isComplete = false;\n      })\n    );\n    return isComplete;\n  }\n\n  const stats = { ...getState().sync.stats };\n  stats.linked = Object.keys(linksBackUp).length;\n  dispatch(actions.setSyncStats(stats));\n\n  dispatch(actions.setIsDistributionComplete(isDistributionComplete(lines)));\n};\n\nconst deleteSyncPill = () => (dispatch, getState) => {\n  const { activePill } = getState().sync;\n\n  if (activePill) {\n    const pills = Object.assign({}, getState().sync.pills);\n    let lines = [...getState().sync.distributionLines];\n\n    // Stop linkSequencer\n    clearInterval(intervalId);\n\n    // Nullify any line with activePill as a link\n    lines = nullifyLine(lines, activePill);\n\n    delete pills[activePill];\n\n    dispatch(actions.setActivePill(null));\n    dispatch(actions.setPills(pills));\n    dispatch(actions.setSyncDistributionLines(lines));\n    dispatch(actions.setLinkSequenceMode(false));\n\n    const stats = { ...getState().sync.stats };\n    stats.linked = Object.keys(linksBackUp).length;\n    dispatch(actions.setSyncStats(stats));\n  }\n};\n\nconst nullifyLine = (collection, item, partId = null) => {\n  collection.forEach(l =>\n    l.forEach(part => {\n      if (+part.link === +item) {\n        part.link = null;\n        part.color = null;\n      }\n      if (+linksBackUp[part.id] === +item) {\n        delete linksBackUp[part.id];\n      }\n    })\n  );\n\n  // Also remove from backup if part was provided\n  if (partId) {\n    delete linksBackUp[partId];\n  }\n\n  return collection;\n};\n\nconst nullifyPill = (collection, item) => {\n  Object.keys(collection).forEach(k => {\n    const pill = collection[k];\n    if (+pill.link === +item) pill.link = null;\n  });\n  return collection;\n};\n\nconst finalizeLyrics = () => (dispatch, getState) => {\n  const lines = [...getState().sync.distributionLines];\n  const pills = Object.assign({}, getState().sync.pills);\n\n  const newLines = lines.map(line =>\n    line.map(part => {\n      part.startTime = +pills[part.link].timestamp.toFixed(2);\n      part.duration = +pills[part.link].duration.toFixed(2);\n      part.endTime = part.startTime + part.duration;\n      return part;\n    })\n  );\n\n  // Build string\n  let finalId = 1;\n  let finalLyrics = '';\n  const timepstamps = {};\n\n  newLines.forEach(line => {\n    if (line.length > 0) {\n      line.forEach(part => {\n        // Join parts\n        const bracket = `[${finalId}:${part.startTime}:${part.duration}] `;\n        finalLyrics += `${bracket} ${part.content}`;\n        finalId++;\n        // Create karaoke-line object\n        const second = Math.round(part.startTime);\n        if (timepstamps[second] === undefined) timepstamps[second] = [];\n        timepstamps[second].push({\n          partId: `part-${part.id}`,\n          duration: part.duration,\n          endTime: part.endTime,\n          size: 0,\n          totalSize: part.content.length,\n          content: part.content,\n        });\n      });\n    }\n    finalLyrics += '\\n';\n  });\n  finalLyrics = finalLyrics.replace('  ', ' ');\n  dispatch(actions.setFinalLyrics(finalLyrics));\n  dispatch(actions.setTimestamps(timepstamps));\n};\n\nconst resetPillLinks = () => (dispatch, getState) => {\n  const pills = { ...getState().sync.pills };\n  const distributionLines = [...getState().sync.distributionLines];\n\n  // Stop linkSequencer\n  clearInterval(intervalId);\n\n  Object.keys(pills).forEach(k => {\n    const pill = pills[k];\n    pill.link = null;\n  });\n\n  distributionLines.forEach(line => line.forEach(part => (part.link = null)));\n\n  dispatch(actions.setPills(pills));\n};\n\nlet intervalId = null;\n\nconst linkPillsSequence = () => async (dispatch, getState) => {\n  let isOn = getState().sync.linkSequenceMode;\n\n  if (isOn) {\n    dispatch(actions.setLinkSequenceMode(false));\n    clearInterval(intervalId);\n    dispatch(actions.setActivePill(null));\n  } else {\n    dispatch(actions.setLinkSequenceMode(true));\n    let { pills } = getState().sync;\n    const pillList = Object.keys(pills);\n\n    const findNextPill = () => pillList.find(el => pills[el].link === null);\n\n    let nextActive = findNextPill();\n\n    // While is on mode is turned on, perform every one second\n    intervalId = setInterval(() => {\n      pills = getState().sync.pills; // eslint-disable-line\n      isOn = getState().sync.linkSequenceMode;\n\n      const { activePill } = getState().sync;\n      if (activePill === null) {\n        nextActive = findNextPill();\n        dispatch(actions.setActivePill(nextActive));\n      }\n      if (nextActive === undefined) {\n        clearInterval(intervalId);\n        dispatch(actions.setLinkSequenceMode(false));\n        dispatch(actions.setActivePill(null));\n      }\n    }, 250);\n  }\n};\n\nconst saveSync = () => async (dispatch, getState) => {\n  const { info, finalLyrics } = getState().sync;\n  const body = {\n    album: info.album || null,\n    distribution: finalLyrics,\n    gender: info.gender,\n    groupSize: info.groupSize,\n    originalArtist: info.originalArtist,\n    originalArtistId: info.artistId || null,\n    private: info.private || false,\n    single: info.single || false,\n    title: info.title,\n    videoId: info.videoId,\n  };\n\n  await dispatch({ type: 'SEND_SONG', body });\n\n  dispatch(actions.setStep(6));\n};\n\nconst handleResetSync = () => dispatch => {\n  newPillId = 0;\n  linksBackUp = {};\n  dispatch(actions.resetSync({}));\n};\n\nexport default {\n  connectSyncLine,\n  connectSyncPill,\n  deleteSyncPill,\n  handleFormInfo,\n  handleLyricsEdit,\n  handleResetSync,\n  handleSyncBoxMouseDown,\n  handleSyncBoxMouseUp,\n  handleSyncKeydown,\n  handleSyncKeyup,\n  handleVideoId,\n  linkPillsSequence,\n  lockLyrics,\n  prepareLines,\n  resetPillLinks,\n  saveSync,\n  unlockNextStep,\n  unlockSpecificStep,\n};\n","import syncReducer from './reducers';\n\nexport { default as syncOperations } from './operations';\nexport { default as syncTypes } from './types';\nexport default syncReducer;\n","const SET_TEST_1 = 'SET_TEST_1';\nconst SET_TEST_2 = 'SET_TEST_2';\nconst SET_TEST_3 = 'SET_TEST_3';\nconst SET_TEST_4 = 'SET_TEST_4';\nconst SET_TEST_5 = 'SET_TEST_5';\n\nexport default {\n  SET_TEST_1,\n  SET_TEST_2,\n  SET_TEST_3,\n  SET_TEST_4,\n  SET_TEST_5,\n};\n","import types from './types';\n\nconst initialState = {\n  test1: '',\n  test2: 0,\n  test3: true,\n  test4: [],\n  test5: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_TEST_1:\n      newState.test1 = action.payload;\n      break;\n\n    case types.SET_TEST_2:\n      newState.test2 = action.payload;\n      break;\n\n    case types.SET_TEST_3:\n      newState.test3 = action.payload;\n      break;\n\n    case types.SET_TEST_4:\n      newState.test4 = action.payload;\n      break;\n\n    case types.SET_TEST_5:\n      newState.test5 = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setTest1 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_1, payload });\nconst setTest2 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_2, payload });\nconst setTest3 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_3, payload });\nconst setTest4 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_4, payload });\nconst setTest5 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_5, payload });\n\nexport default {\n  setTest1,\n  setTest2,\n  setTest3,\n  setTest4,\n  setTest5,\n};\n","import tempReducer from './reducers';\n\nexport { default as tempOperations } from './operations';\nexport { default as tempTypes } from './types';\nexport default tempReducer;\n","import { combineReducers } from 'redux';\n\nimport { reducer as toastr } from 'react-redux-toastr';\n\nimport app, { appTypes } from './app';\nimport admin, { adminTypes } from './admin';\nimport artists, { artistsTypes } from './artists';\nimport auth, { authTypes } from './auth';\nimport db, { dbTypes } from './db';\nimport distribute, { distributeTypes } from './distribute';\nimport sync, { syncTypes } from './sync';\nimport temp, { tempTypes } from './temp';\n\nconst rootReducer = combineReducers({\n  app,\n  admin,\n  artists,\n  auth,\n  db,\n  distribute,\n  sync,\n  temp,\n  toastr,\n});\n\nexport const types = {\n  ...appTypes,\n  ...adminTypes,\n  ...artistsTypes,\n  ...authTypes,\n  ...dbTypes,\n  ...distributeTypes,\n  ...syncTypes,\n  ...tempTypes,\n};\n\nexport default rootReducer;\n","import HttpStatus from 'http-status-codes';\n\n/**\n * Parses the api path into an object\n * @param {string} path\n * @returns {object} with length of the path, root, referenceId, subPath, and queryParams\n */\nconst breadcrumble = path => {\n  if (!path) {\n    throw new Error(\n      `${HttpStatus.UNAUTHORIZED}: A path is required to make api requests`\n    );\n  }\n\n  if (typeof path !== 'string') {\n    throw new Error(\n      `${HttpStatus.BAD_REQUEST}: Breadcrumble path argument must be a string`\n    );\n  }\n\n  const urlSplit = path.split('?');\n  const fullPath = urlSplit[0].split('/');\n  const queryParams = urlSplit[1] || null;\n  const queryResult = {};\n\n  if (queryParams) {\n    const querySplit = queryParams.split('&');\n    for (let i = 0; i < querySplit.length; i++) {\n      const subQuery = querySplit[i].split('=');\n      if (subQuery.length === 2) {\n        const queryName = subQuery[0];\n        let queryValue = subQuery[1];\n        if (queryValue.includes(',')) {\n          queryValue = queryValue.split(',');\n        }\n        queryResult[queryName] = queryValue;\n      }\n    }\n  }\n\n  return {\n    length: fullPath.length - 1,\n    root: fullPath[1],\n    referenceId: fullPath[2] || null,\n    subPath: fullPath[3] || null,\n    queryParams: Object.keys(queryResult).length > 0 ? queryResult : null,\n  };\n};\n\n/**\n * Builds a string query to be used on search functions for artists\n * @param {object} data\n * @returns {string} a lower cased string with name, otherNames, and members\n */\nconst buildArtistQuery = data => {\n  const { name } = data;\n  const otherNames = data.otherNames || '';\n  const memberList = data.memberList || [];\n  const memberNames = memberList.join(' ');\n  return `${name} ${otherNames} ${memberNames}`.toLowerCase();\n};\n\n/**\n * Build member initials based on their name\n * @param {string} name\n * @returns {string} a two-digit upper cased string\n */\nconst buildMemberInitials = name =>\n  `${name[0]}${name[Math.floor(name.length / 2)]}`.toUpperCase();\n\n/**\n * Builds a string query to be used on search functions for songs\n * @param {Object} data\n * @returns {string} a lowercase string with title, original artists, and album name\n */\nconst buildSongQuery = data => {\n  const { title } = data;\n  const originalArtist = data.originalArtist || '';\n  const album = data.album || '';\n  return `${title} ${originalArtist} ${album}`.toLowerCase();\n};\n\n/**\n * Calculates the age of a member based on their birthday (YYYYMMDD) keeping a cache\n * @param {number} birthday\n * @returns {number} the age of the member\n */\nconst TODAY = process.env.NODE_ENV === 'test' ? 1550000000000 : Date.now();\nconst ageDict = {};\nconst calculateAge = birthday => {\n  if (ageDict[birthday]) return ageDict[birthday];\n\n  const birthdateString = birthday.toString();\n  const birthDate = new Date(\n    +birthdateString.substring(0, 4),\n    +birthdateString.substring(4, 6),\n    +birthdateString.substring(6)\n  );\n\n  const ageDate = new Date(TODAY - birthDate.getTime());\n  ageDict[birthday] = Math.abs(ageDate.getUTCFullYear() - 1970);\n  return ageDict[birthday];\n};\n\n/**\n * Parses genre into ENUM-ready string\n * @param {string} genre\n * @returns {string} genre ENUM-ready\n */\nconst ensureGenreEnum = genre => {\n  const GENRES_TRANSFORM = {\n    CPOP: 'CPOP',\n    JPOP: 'JPOP',\n    KPOP: 'KPOP',\n    OTHER: 'OTHER',\n    POP: 'POP',\n    'C-POP': 'CPOP',\n    'J-POP': 'JPOP',\n    'K-POP': 'KPOP',\n  };\n\n  return GENRES_TRANSFORM[genre.toUpperCase()];\n};\n\n/**\n * Gets a random padded 6-digit color number\n * @param {string} colorId\n * @returns {string} padded 6-digit color number\n */\nconst getAlternativeColor = colorId => {\n  const num = getNumberFromColorId(colorId) + 15;\n  let list = [num, num - 2, num - 1, num + 1, num + 2];\n  list = list.map(item => (item > 30 ? item - 30 : item));\n  return makeSixDigit(list[Math.floor(Math.random() * list.length)]);\n};\n\n/**\n * Extracts the number value of a colorId\n * @param {string} colorId\n * @returns {number} number value of the colorID\n */\nconst getNumberFromColorId = colorId => Number(colorId.split('0000')[1]);\n\n/**\n * Makes a number into a 6 digit stringed-number padded with 0s\n * @param {number} num\n * @returns {string} 6 digit stringed-number padded with 0s\n */\nconst makeSixDigit = num => {\n  const pad = '000000';\n\n  // if it's not a number nor a stringified number\n  if (Number.isNaN(Number(num)) || typeof num === 'boolean') {\n    return pad;\n  }\n  const str = num.toString();\n\n  return pad.substring(0, pad.length - str.length) + str;\n};\n\n/**\n * Merges the array of members from the unit with the list of members generated from each indivitual member\n * @param {array} unitMembersArr\n * @param {array} membersArr\n * @returns {array} a merged member array\n */\nconst mergeMembers = (unitMembersArr, membersArr) => {\n  const positionsDict = {};\n\n  unitMembersArr.forEach(member => {\n    positionsDict[member.memberId] = member.positions;\n  });\n\n  return membersArr.map(member => ({\n    ...member.attributes,\n    positions: positionsDict[member.id],\n  }));\n};\n\n/**\n * Parses the members object from the database with concatenated id:name:position into a array with proper objects\n * @param {object} membersObj\n * @returns {array} array of members objects with memberId, name, and array of positions\n */\nconst parseUnitMembers = membersObj => {\n  const dict = {};\n  Object.keys(membersObj).forEach(key => {\n    const [memberId, memberName, memberPosition] = key.split(':');\n\n    if (dict[memberId] === undefined) {\n      dict[memberId] = {\n        positions: {},\n      };\n    }\n\n    dict[memberId].memberId = memberId;\n    dict[memberId].name = memberName;\n\n    dict[memberId].positions[memberPosition] = true;\n  });\n\n  return Object.keys(dict).map(entry => {\n    const result = {\n      memberId: dict[entry].memberId,\n      name: dict[entry].name,\n      positions: Object.keys(dict[entry].positions),\n    };\n    return result;\n  });\n};\n\n/**\n * Verifies if any of the required fields are present in the data, erroring out if any is missing\n * @param {object} data\n * @param {string} id\n * @param {string} uid\n * @param {array} fields\n * @returns {boolean} true if function runs without errors\n */\nconst verifyRequirements = (data, id, uid, fields) => {\n  const missing = [];\n  fields.forEach(field => {\n    if (field === 'id' && (id === undefined || id === null)) {\n      missing.push('id');\n    } else if (field === 'uid' && (id === undefined || uid === null)) {\n      missing.push('user uid');\n    } else if (field !== 'id' && field !== 'uid' && data[field] === undefined) {\n      missing.push(field);\n    }\n  });\n\n  if (missing.length > 0) {\n    throw new Error(\n      `${HttpStatus.BAD_REQUEST}: Can NOT perform post request for ${id ||\n        null}, missing the following data: ${missing.join(', ')}`\n    );\n  }\n\n  return true;\n};\n\n/**\n * Adds ALL and NONE key to rates when any of them is undefined\n * @param {object} rates\n * @returns {object} rates with ALL and NONE keys\n */\nconst parseRates = rates => {\n  const parsedRates = { ...rates };\n  if (rates.ALL === undefined) {\n    parsedRates.ALL = 0;\n  }\n  if (rates.NONE === undefined) {\n    parsedRates.NONE = 0;\n  }\n  return parsedRates;\n};\n\n/**\n * Asyncronous function that delays code when using with async/await\n * @param {number} ms\n * @returns {Promise}\n */\nexport const wait = (ms = 1000) => new Promise((r, j) => setTimeout(r, ms)); // eslint-disable-line\n\nexport default {\n  breadcrumble,\n  buildArtistQuery,\n  buildMemberInitials,\n  buildSongQuery,\n  calculateAge,\n  ensureGenreEnum,\n  getAlternativeColor,\n  getNumberFromColorId,\n  mergeMembers,\n  makeSixDigit,\n  parseRates,\n  parseUnitMembers,\n  verifyRequirements,\n};\n","import HttpStatus from 'http-status-codes';\n\nexport default class NewResponse {\n  constructor() {\n    this.statusCode = null;\n    this.dataResponse = null;\n    this.errorResponse = null;\n  }\n\n  status(code) {\n    this.statusCode = code;\n  }\n\n  ok() {\n    this.statusCode = HttpStatus.OK;\n  }\n\n  data(dt, code = HttpStatus.OK) {\n    this.statusCode = code;\n    if (dt && dt.id && dt.type && dt.attributes) {\n      this.dataResponse = {\n        id: dt.id,\n        type: dt.type,\n        attributes: dt.attributes,\n      };\n    } else {\n      this.dataResponse = dt;\n    }\n  }\n\n  error(code = HttpStatus.INTERNAL_SERVER_ERROR, message = 'Unknown Error') {\n    this.statusCode = code;\n    this.errorResponse = {\n      code: this.statusCode,\n      message,\n    };\n  }\n\n  resolve() {\n    if (this.errorResponse) {\n      return this.throwError();\n    }\n\n    if (!this.statusCode) {\n      this.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'No status provided by the api'\n      );\n      return this.throwError();\n    }\n\n    if (!this.dataResponse) {\n      this.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'No data provided by the api'\n      );\n      return this.throwError();\n    }\n\n    return {\n      data: this.dataResponse,\n    };\n  }\n\n  throwError() {\n    throw new Error(\n      `${this.errorResponse.code}: ${this.errorResponse.message}`\n    );\n  }\n}\n","export const GENDERS = {\n  FEMALE: 'Female',\n  MALE: 'Male',\n  UNKOWN: 'Unknown',\n};\n\nexport const GENRES = {\n  CPOP: 'C-Pop',\n  JPOP: 'J-Pop',\n  KPOP: 'K-Pop',\n  OTHER: 'Other',\n  POP: 'Pop',\n};\n\nexport const NATIONALITIES = {\n  AMERICAN: 'American',\n  BRAZILIAN: 'Brazilian',\n  BRITISH: 'British',\n  CANADIAN: 'Canadian',\n  CHINESE: 'Chinese',\n  JAPANESE: 'Japanese',\n  KOREAN: 'Korean',\n  OTHER: 'Other',\n  TAIWANESE: 'Taiwanese',\n  THAI: 'Thai',\n  VIETNAMISE: 'Vietnamise',\n};\n\nexport const POSITIONS = {\n  LEADER: 'Leader',\n  MAIN_VOCALIST: 'Main Vocalist',\n  MAIN_RAPPER: 'Main Rapper',\n  MAIN_DANCER: 'Main Dancer',\n  LEAD_VOCALIST: 'Lead Vocalist',\n  LEAD_RAPPER: 'Lead Rapper',\n  LEAD_DANCER: 'Lead Dancer',\n  VOCALIST: 'Vocalist',\n  RAPPER: 'Rapper',\n  DANCER: 'Dancer',\n  CENTER: 'Center',\n  FACE: 'Face of the Group',\n  VISUAL: 'Visual',\n  MAKNAE: 'Maknae',\n};\n\nexport default {\n  GENDERS,\n  GENRES,\n  NATIONALITIES,\n  POSITIONS,\n};\n","/* eslint arrow-body-style: 0 */\nimport _ from 'lodash';\n\nimport utils from './utils';\n\nimport { GENRES } from './enums';\n\nconst UNKNOWN = 'UNKNOWN';\n\nexport const serialize = {\n  artist: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'artist',\n      attributes: {\n        createdBy: data.createdBy || null,\n        genre: GENRES[data.genre] || UNKNOWN,\n        memberIds: data.memberIds || [],\n        memberList: data.memberList || [],\n        modifiedBy: data.modifiedBy || null,\n        name: data.name,\n        otherNames: data.otherNames || '',\n        private: data.private || false,\n        query: data.query || utils.buildArtistQuery(data),\n        units: data.units || [],\n      },\n    };\n  },\n  color: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'color',\n      attributes: {\n        b: data.b,\n        count: data.count || 0,\n        g: data.g,\n        hex: data.hex,\n        name: data.name,\n        number: data.id\n          ? utils.getNumberFromColorId(data.id)\n          : utils.getNumberFromColorId(id),\n        r: data.r,\n      },\n    };\n  },\n  distribution: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'distribution',\n      attributes: {\n        createdBy: data.createdBy || null,\n        category: data.category,\n        features: data.features || [],\n        modifiedBy: data.modifiedBy || null,\n        rates: utils.parseRates(data.rates),\n        relationships: JSON.parse(data.relationships),\n        songId: data.songId,\n        unitId: data.unitId,\n      },\n    };\n  },\n  member: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'member',\n      attributes: {\n        age: data.birthdate ? utils.calculateAge(data.birthdate) : 0,\n        birthdate: data.birthdate || 0,\n        colorId: data.colorId,\n        color: data.color || null,\n        createdBy: data.createdBy || null,\n        gender: data.gender || UNKNOWN,\n        initials: data.initials || utils.buildMemberInitials(data.name),\n        name: data.name,\n        modifiedBy: data.modifiedBy || null,\n        nationality: data.nationality || UNKNOWN,\n        positions: data.positions || [],\n        private: data.private || false,\n        primaryGenre: data.primaryGenre || UNKNOWN,\n        referenceArtist: data.referenceArtist || UNKNOWN,\n      },\n    };\n  },\n  song: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'song',\n      attributes: {\n        album: data.album || UNKNOWN,\n        createdBy: data.createdBy || null,\n        distribution: data.distribution,\n        gender: data.gender || UNKNOWN,\n        groupSize: data.groupSize || 0,\n        modifiedBy: data.modifiedBy || null,\n        originalArtist: data.originalArtist || '',\n        originalArtistId: data.originalArtistId || null,\n        private: data.private || false,\n        query: data.query || utils.buildSongQuery(data),\n        single: data.single || false,\n        title: data.title,\n        videoId: data.videoId || null,\n      },\n    };\n  },\n  unit: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'unit',\n      attributes: {\n        artistId: data.artistId,\n        averages: data.averages || [],\n        createdBy: data.createdBy || null,\n        debutYear: data.debutYear,\n        distributions: data.distributions || [],\n        members: data.members ? utils.parseUnitMembers(data.members) : [],\n        modifiedBy: data.modifiedBy || null,\n        name: data.name,\n        official: data.official || false,\n        private: data.private || false,\n        subUnit: data.subUnit || false,\n      },\n    };\n  },\n  user: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'user',\n      attributes: {\n        email: data.email,\n        favoriteArtists: data.favoriteArtists || {}, // Oject(Reference(Artist):Boolean)\n        favoriteMembers: data.favoriteMembers || {}, // Oject(Reference(Member):Boolean)\n        biases: data.biases || {}, // Object(Reference(Artist):Reference(Member))\n        isAdmin: data.isAdmin || false,\n        latestUnits: data.latesUnits || [],\n        session: data.session || {},\n        displayName: null, // merged from auth\n        photoURL: null, // merged from auth\n      },\n    };\n  },\n};\n\nexport const serializeCollection = (object, type) =>\n  Object.keys(object).map(key => serialize[type](object[key], key));\n","/* eslint arrow-body-style: 0 */\n\nimport utils from './utils';\n\nexport const deserialize = {\n  post: {\n    artist: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid', 'name']);\n      return {\n        id,\n        createdBy: uid,\n        genre: data.genre ? utils.ensureGenreEnum(data.genre) : 'OTHER',\n        modifiedBy: uid,\n        name: data.name,\n        otherNames: data.otherNames || null,\n        private: data.private || false,\n        units: data.units || [],\n      };\n    },\n    color: (data, id) => {\n      utils.verifyRequirements(data, id, null, [\n        'id',\n        'name',\n        'hex',\n        'r',\n        'g',\n        'b',\n      ]);\n      return {\n        id,\n        b: data.b,\n        g: data.g,\n        hex: data.hex,\n        name: data.name,\n        r: data.r,\n      };\n    },\n    distribution: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'category',\n        'rates',\n        'relationships',\n        'songId',\n        'unitId',\n      ]);\n      return {\n        id,\n        category: data.category,\n        createdBy: uid,\n        features: data.features || null,\n        modifiedBy: uid,\n        rates: data.rates,\n        relationships:\n          typeof data.relationships === 'string'\n            ? data.relationships\n            : JSON.stringify(data.relationships),\n        songId: data.songId,\n        unitId: data.unitId,\n      };\n    },\n    log: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'timestamp', 'content']);\n      return {\n        reportedBy: uid || 'ANONYMOUS',\n        timestamp: data.timestamp,\n        content: data.content,\n      };\n    },\n    member: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'name',\n        'birthdate',\n        'colorId',\n        'gender',\n        'nationality',\n        'referenceArtist',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        birthdate: data.birthdate,\n        colorId: data.colorId,\n        gender: data.gender,\n        initials: data.initials || utils.buildMemberInitials(data.name),\n        modifiedBy: uid,\n        name: data.name,\n        nationality: data.nationality,\n        private: data.private || false,\n        primaryGenre: data.primaryGenre || 'UNKOWN',\n        referenceArtist: data.referenceArtist,\n      };\n    },\n    song: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'distribution',\n        'gender',\n        'groupSize',\n        'originalArtist',\n        'title',\n        'videoId',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        album: data.album || null,\n        distribution: data.distribution,\n        gender: data.gender,\n        groupSize: data.groupSize,\n        modifiedBy: uid,\n        originalArtist: data.originalArtist || '',\n        originalArtistId: data.originalArtistId || null,\n        private: data.private || false,\n        single: data.single || false,\n        title: data.title,\n        videoId: data.videoId,\n      };\n    },\n    unit: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'artistId',\n        'debutYear',\n        'name',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        artistId: data.artistId,\n        debutYear: data.debutYear,\n        distributions: data.distributions || [],\n        modifiedBy: uid,\n        name: data.name,\n        members: data.members || {},\n        official: data.official || false,\n        private: data.private || false,\n        subUnit: data.subUnit || false,\n      };\n    },\n    user: (data, id) => {\n      utils.verifyRequirements(data, id, null, ['id', 'email']);\n      return {\n        uid: id,\n        email: data.email,\n        favoriteArtists: data.favoriteArtists || {}, // Oject(Reference(Artist):Boolean)\n        favoriteMembers: data.favoriteMembers || {}, // Oject(Reference(Member):Boolean)\n        biases: data.biases || {}, // Object(Reference(Artist):Reference(Member))\n        isAdmin: data.isAdmin || false,\n        latestUnits: data.latesUnits || [],\n        session: data.session || {},\n        displayName: null, // merged from auth\n        photoUrl: null, // merged from auth\n      };\n    },\n  },\n  put: {\n    artist: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n      if (uid) res.modifiedBy = uid;\n      if (data.genre) res.genre = utils.ensureGenreEnum(data.genre);\n      if (data.memberList) res.memberList = data.memberList;\n      if (data.name) res.name = data.name;\n      if (data.otherNames) res.otherNames = data.otherNames;\n      if (data.private) res.private = data.private;\n      if (data.units) res.units = data.units;\n\n      return res;\n    },\n    distribution: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'category',\n        'rates',\n        'relationships',\n        'songId',\n        'unitId',\n      ]);\n      const res = {};\n      if (uid) res.modifiedBy = uid;\n      if (data.category) res.category = data.category;\n      if (data.features) res.features = data.features;\n      if (data.rates) res.rates = data.rates;\n      if (data.relationships) res.relationships = data.relationships;\n      if (data.songId) res.songId = data.songId;\n      if (data.unitId) res.unitId = data.unitId;\n\n      return res;\n    },\n    member: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.colorId) {\n        res.colorId = data.colorId;\n      }\n\n      if (data.birthdate) res.birthdate = data.birthdate;\n      if (data.gender) res.gender = data.gender;\n\n      if (data.name) {\n        res.name = data.name;\n        res.initials = utils.buildMemberInitials(data.name);\n      }\n      if (data.initials) res.initials = data.initials;\n\n      if (data.nationality) res.nationality = data.nationality;\n      if (data.positions) res.positions = data.positions;\n\n      if (data.private) res.private = data.private;\n      if (data.primaryGenre) res.primaryGenre = data.primaryGenre;\n      if (data.referenceArtist) res.referenceArtist = data.referenceArtist;\n\n      return res;\n    },\n    song: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.album) res.album = data.album;\n      if (data.distribution) res.distribution = data.distribution;\n      if (data.gender) res.gender = data.gender;\n      if (data.groupSize) res.groupSize = data.groupSize;\n      if (data.originalArtist) res.originalArtist = data.originalArtist;\n      if (data.originalArtistId) res.originalArtistId = data.originalArtistId;\n      if (data.single) res.single = data.single;\n      if (data.private) res.private = data.private;\n      if (data.title) res.title = data.title;\n      if (data.videoId) res.videoId = data.videoId;\n\n      return res;\n    },\n    unit: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.artistId) res.artistId = data.artistId;\n      if (data.distributions) res.distributions = data.distributions;\n      if (data.members) res.members = data.members;\n      if (data.name) res.name = data.name;\n      if (data.official) res.official = data.official;\n      if (data.private) res.private = data.private;\n      if (data.subUnit) res.subUnit = data.subUnit;\n\n      return res;\n    },\n    user: (data, id) => {\n      utils.verifyRequirements(data, id, null, ['id']);\n      const res = {};\n\n      if (data.email) res.email = data.email;\n      if (data.favoriteArtists) res.favoriteArtists = data.favoriteArtists;\n      if (data.favoriteMembers) res.favoriteMembers = data.favoriteMembers;\n      if (data.biases) res.biases = data.biases;\n      if (data.isAdmin) res.isAdmin = data.isAdmin;\n      if (data.latesUnits) res.latesUnits = data.latesUnits;\n      if (data.session) res.session = data.session;\n\n      return res;\n    },\n  },\n};\n\nexport default deserialize;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\n\nexport const fb = firebase.initializeApp(config);\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const userSession = { user: {} };\n\n// Verify user auth session presence\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    userSession.user = user;\n  }\n});\n\nexport default fb;\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_authenticated\", \"_admin\", _loaded, _loggedInThisSession, _uid, _tries] }] */\n/* eslint class-methods-use-this: 0 */\n\nimport firebase from 'firebase';\nimport HttpStatus from 'http-status-codes';\nimport utils, { wait } from './utils';\n\nimport NewResponse from './response';\n\nimport { serialize, serializeCollection } from './serializers';\nimport { deserialize } from './deserializers';\n\nimport { fb, googleProvider, userSession } from './firebase';\n\nconst WAIT_AUTH_TIME = 2000;\nconst WAIT_DB_TIME = 3500;\n\nexport const db = {\n  artists: {},\n  colors: {},\n  distributions: {},\n  members: {},\n  positions: {},\n  songs: {},\n  units: {},\n  users: {},\n};\n\nexport const fullyLoaded = {\n  artists: false,\n  colors: false,\n  distributions: false,\n  members: false,\n  positions: false,\n  songs: false,\n  units: false,\n};\n\nexport let dbRef = null; // eslint-disable-line\n\nclass API {\n  constructor() {\n    this._authenticated = false;\n    this._admin = false;\n    this._loaded = false;\n    this._loggedInThisSession = false;\n    this._tries = 0;\n    this._uid = null;\n  }\n\n  dbRef() {\n    return this._loaded ? dbRef : null;\n  }\n\n  /**\n   * Gets basic information about database\n   * @category Getter\n   * @returns {Object}\n   */\n  dbState() {\n    this.print('Fetching DB state...');\n    const response = new NewResponse();\n\n    response.status(HttpStatus.OK);\n    response.data({\n      admin: this._authenticated ? this._admin : false,\n      authenticated: this._authenticated,\n      loaded: this._loaded,\n    });\n\n    return response.resolve();\n  }\n\n  /**\n   * Creates a reference to the firebase database and updates api loaded status\n   * @category Method\n   * @returns {Boolean}\n   */\n  async init() {\n    this.print('Running init...');\n    const response = new NewResponse();\n\n    dbRef = await fb.database();\n\n    if (dbRef) {\n      this._loaded = true;\n      response.status(HttpStatus.OK);\n      response.data(this.dbState().data);\n      this._loaded = true;\n    } else {\n      response.error(\n        HttpStatus.BAD_REQUEST,\n        'Failed to load firebase database'\n      );\n    }\n\n    response.resolve();\n    return this;\n  }\n\n  /**\n   * Verifies if the users is still logged from a previous session\n   * @category Method\n   * @returns {Object} user\n   */\n  async auth() {\n    this.print('Running auth...');\n    const response = new NewResponse();\n\n    if (!this._loaded) {\n      await wait(WAIT_AUTH_TIME);\n    }\n\n    const { user } = userSession;\n\n    if (user.emailVerified) {\n      this._authenticated = true;\n      this._uid = user.uid;\n\n      let userRes;\n      try {\n        userRes = await this.get(`/users/${user.uid}`);\n      } catch (_) {\n        userRes = await this.post(`/users/${user.uid}`);\n      }\n\n      userRes.data.attributes.displayName = user.displayName;\n      userRes.data.attributes.photoURL = user.photoURL;\n\n      this._admin = userRes.data.attributes.isAdmin;\n      response.data(userRes.data);\n    } else {\n      this._authenticated = false;\n      this._uid = null;\n      response.data({}, HttpStatus.NO_CONTENT);\n    }\n    return response.resolve();\n  }\n\n  async login() {\n    this.print('Running login...');\n    const response = new NewResponse();\n\n    let result;\n\n    try {\n      await fb.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n      result = await fb.auth().signInWithPopup(googleProvider);\n    } catch (error) {\n      response.error(error.code, error.message);\n      return response.resolve();\n    }\n\n    try {\n      const { user } = result;\n      if (user.emailVerified) {\n        this._authenticated = true;\n        this._uid = user.uid;\n\n        let userRes;\n        try {\n          userRes = await this.get(`/users/${user.uid}`);\n        } catch (_) {\n          userRes = await this.post(`/users/${user.uid}`);\n        }\n\n        userRes.data.attributes.displayName = user.displayName;\n        userRes.data.attributes.photoURL = user.photoURL;\n\n        this._admin = userRes.data.attributes.isAdmin;\n        response.data(userRes.data);\n      }\n    } catch (error) {\n      response.error(error.code, error.message);\n    }\n\n    return response.resolve();\n  }\n\n  async logoff() {\n    this.print('Running logout...');\n    const response = new NewResponse();\n\n    try {\n      await fb.auth().signOut();\n      this._authenticated = false;\n      this._uid = null;\n      response.ok();\n      response.data(true);\n    } catch (error) {\n      response.error(error.code, error.message);\n    }\n\n    return response.resolve();\n  }\n\n  print(message, path = '') {\n    if (process.env.NODE_ENV !== 'test') console.warn(message, path); // eslint-disable-line\n  }\n\n  async resyncDatabase() {\n    this.print('Resyncing database...');\n\n    // Reset fullyLoaded\n    fullyLoaded.artists = false;\n    fullyLoaded.colors = false;\n    fullyLoaded.distributions = false;\n    fullyLoaded.members = false;\n    fullyLoaded.songs = false;\n    fullyLoaded.units = false;\n\n    const syncDB = {\n      artists: {},\n      positions: {},\n      colors: {},\n      members: {},\n      units: {},\n    };\n\n    // Request DB tables\n    await dbRef.ref(`/artists`).once('value', snapshot => {\n      syncDB.artists = snapshot.val();\n    });\n    await dbRef.ref(`/colors`).once('value', snapshot => {\n      syncDB.colors = snapshot.val();\n    });\n    await dbRef.ref(`/members`).once('value', snapshot => {\n      syncDB.members = snapshot.val();\n    });\n    await dbRef.ref(`/units`).once('value', snapshot => {\n      syncDB.units = snapshot.val();\n    });\n    // TO-DO: Add distributions resync\n\n    // Resync\n    resyncFunctions.parse(syncDB);\n\n    // Post new DB tables\n    await dbRef.ref(`/artists`).set(syncDB.artists, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/colors`).set(syncDB.colors, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/members`).set(syncDB.members, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/positions`).set(syncDB.positions, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/units`).set(syncDB.units, error => {\n      if (error) throw new Error(error);\n    });\n\n    return true;\n  }\n\n  async get(path) {\n    this.print('Fetching data...', path);\n    /*\n     * List of possible get calls:\n     * /artists\n     * /artists/<id>\n     * /artists/<id>/units\n     * /colors\n     * /colors/<id>\n     * /members\n     * /members/<id>\n     * /positions\n     * /songs\n     * /songs/<id>\n     * /units/<id>\n     * /units/<id>/distribution\n     * /units/<id>/members\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      await wait(WAIT_DB_TIME);\n\n      if (!this._loaded || !this._authenticated) {\n        return this.throwDBError('GET');\n      }\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    switch (route.root) {\n      // API/artists\n      case 'artists':\n        // API/artists/<id>/units\n        if (route.referenceId && route.subPath === 'units') {\n          result = await getFunctions.fetchArtistUnits(route.referenceId);\n        }\n        // API/artists/<id>\n        else if (route.referenceId) {\n          result = await getFunctions.fetchArtist(route.referenceId);\n        }\n        // API/aritsts\n        else {\n          result = await getFunctions.fetchArtists();\n        }\n        break;\n      // API/colors\n      case 'colors':\n        // API/colors/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchColor(route.referenceId);\n        }\n        // API/colors\n        else {\n          result = await getFunctions.fetchColors();\n        }\n        break;\n      // API/colors\n      case 'distributions':\n        // API/distributions/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchDistribution(route.referenceId);\n        }\n        break;\n      case 'members':\n        // API/members/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchMember(route.referenceId);\n        }\n        // API/members\n        else {\n          result = await getFunctions.fetchMembers();\n        }\n        break;\n      // API/positions\n      case 'positions':\n        // TO-DO: fetch all positions\n        break;\n      // API/songs\n      case 'songs':\n        // API/songs/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchSong(route.referenceId);\n        }\n        // API/songs\n        else {\n          result = await getFunctions.fetchSongs();\n        }\n        break;\n      // API/units\n      case 'units':\n        // API/units/<id>/distributions\n        if (route.referenceId && route.subPath === 'distributions') {\n          result = await getFunctions.fetchUnitDistributions(route.referenceId);\n        }\n        // API/units/<id>/members\n        else if (route.referenceId && route.subPath === 'members') {\n          result = await getFunctions.fetchUnitMembers(route.referenceId);\n        }\n        // API/units/<id>\n        else if (route.referenceId) {\n          result = await getFunctions.fetchUnit(route.referenceId);\n        }\n        break;\n      // API/users\n      case 'users':\n        // API/users/<id>\n        result = await getFunctions.fetchUser(route.referenceId);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async post(path, body) {\n    this.print('Writting data...', path);\n    /*\n     * List of possible post calls:\n     * /artists\n     * /distributions\n     * /members\n     * /songs\n     * /units\n     * /users\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('POST');\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    switch (route.root) {\n      // API/artists/<id>\n      case 'artists':\n        result = await postFunctions.createArtist(body, this._uid);\n        break;\n      // API/distributions/<id>\n      case 'distributions':\n        result = await postFunctions.createDistribution(body, this._uid);\n        break;\n      // API/log/<id>\n      case 'log':\n        result = await postFunctions.createLogEntry(\n          body,\n          this._uid,\n          route.referenceId\n        );\n        break;\n      // API/members/<id>\n      case 'members':\n        result = await postFunctions.createMember(body, this._uid);\n        break;\n      // API/songs/<id>\n      case 'songs':\n        result = await postFunctions.createSong(body, this._uid);\n        break;\n      // API/units/<id>\n      case 'units':\n        result = await postFunctions.createUnit(body, this._uid);\n        break;\n      // API/users/<id>\n      case 'users':\n        result = await postFunctions.createUser(body, this._uid);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async put(path, body) {\n    this.print('Updating data...', path);\n    /*\n     * List of possible put calls:\n     * /artists/<id>\n     * /distributions/<id>\n     * /members/<id>\n     * /songs/<id>\n     * /units/<id>\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('PUT');\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    if (!route.referenceId) {\n      // TO-DO: throw error\n    }\n\n    switch (route.root) {\n      // API/artists/<id>\n      case 'artists':\n        result = await putFunctions.updateArtist(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/distributions/<id>\n      case 'distributions':\n        result = await putFunctions.updateDistribution(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/members/<id>\n      case 'members':\n        result = await putFunctions.updateMember(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/songs/<id>\n      case 'songs':\n        result = await putFunctions.updateSong(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/units/<id>\n      case 'units':\n        result = await putFunctions.updateUnit(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/users/<id>\n      case 'users':\n        if (route.subPath === 'biases') {\n          result = await putFunctions.updateUserBiases(route.referenceId, body);\n        } else if (route.subPath === 'favorite-artists') {\n          result = await putFunctions.updateUserFavoriteArtists(\n            route.referenceId,\n            body\n          );\n        } else if (route.subPath === 'favorite-members') {\n          result = await putFunctions.updateUserFavoriteMembers(\n            route.referenceId,\n            body\n          );\n        } else if (route.subPath === 'latest-units') {\n          result = await putFunctions.updateUserLatestUnits(\n            route.referenceId,\n            body\n          );\n        } else {\n          result = await putFunctions.updateUser(route.referenceId, body);\n        }\n\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async delete(path) {\n    this.print('Deleting data...', path);\n    /*\n     * List of possible delete calls:\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('DELETE');\n    }\n\n    if (!path) {\n      return this.throwPathError('DELETE', 'path');\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    if (!route.referenceId) {\n      // TO-DO: throw error\n    }\n\n    switch (route.root) {\n      // API/users/<id>\n      case 'users':\n        result = await deleteFunctions.destroyUser(route.referenceId);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  /**\n   * Throws database related errors\n   * @category Method\n   * @param {String} action\n   * @throws Error\n   */\n  throwDBError(action = '') {\n    const response = new NewResponse();\n    if (!this._loaded) {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, database is not ready`\n      );\n    } else if (!this._authenticated) {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, you are not logged in`\n      );\n    }\n\n    return response.resolve();\n  }\n\n  /**\n   * Throws api methods related errors\n   * @category Method\n   * @param {String} action\n   * @param {String} type\n   * @throws Error\n   */\n  throwPathError(action = '', type = 'path') {\n    const response = new NewResponse();\n    if (this._loaded && type === 'body') {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, data was not provided`\n      );\n    } else if (this._loaded && type === 'path') {\n      response.error(\n        HttpStatus.BAD_REQUEST,\n        `Unable to perform ${action} action, path doesn't exist`\n      );\n    } else {\n      response.error();\n    }\n\n    return response.resolve();\n  }\n\n  async test() {\n    let r = 'bola';\n    await this.dbRef().once('value', snap => {\n      r = snap.val();\n      return r;\n    });\n\n    return r;\n  }\n\n  async getDB() {\n    return db;\n  }\n\n  async setter(key, value) {\n    this[key] = value;\n    return value;\n  }\n}\n\nconst getFunctions = {\n  // Fetches all artists\n  fetchArtists: async () => {\n    if (fullyLoaded.artists === false) {\n      // TO-DO: Add 00 id to database, remove it in the serializer collection for a better cache check\n      let response = {};\n      await dbRef.ref(`/artists`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists = response;\n      fullyLoaded.artists = true;\n    }\n    return serializeCollection(db.artists, 'artist');\n  },\n  // Fetches single artist\n  fetchArtist: async id => {\n    if (!db.artists[id]) {\n      let response = {};\n      await dbRef.ref(`/artists/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists[id] = response;\n    }\n    return serialize.artist(db.artists[id], id);\n  },\n  // Fetches units from a single artist\n  fetchArtistUnits: async id => {\n    const artist = await getFunctions.fetchArtist(id);\n    const response = await artist.attributes.units.map(unitId =>\n      getFunctions.fetchUnit(unitId)\n    );\n    return Promise.all(response);\n  },\n  // Fetches all colors\n  fetchColors: async () => {\n    if (fullyLoaded.colors === false) {\n      let response = {};\n      await dbRef.ref(`/colors`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.colors = response;\n      fullyLoaded.artists = true;\n    }\n    return serializeCollection(db.colors, 'color');\n  },\n  // Fetches single color\n  fetchColor: async id => {\n    if (!db.colors[id]) {\n      let response = {};\n      await dbRef.ref(`/colors/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.colors[id] = response;\n    }\n    return serialize.color(db.colors[id], id);\n  },\n  // Fetches single distribution\n  fetchDistribution: async id => {\n    if (!db.distributions[id]) {\n      let response = {};\n      await dbRef.ref(`/distributions/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.distributions[id] = response;\n    }\n    return serialize.distribution(db.distributions[id], id);\n  },\n  // Fetches all members\n  fetchMembers: async () => {\n    if (fullyLoaded.members === false) {\n      let response = {};\n      await dbRef.ref(`/members`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.members = response;\n      fullyLoaded.members = true;\n    }\n    return serializeCollection(db.members, 'member');\n  },\n  // Fetches single member\n  fetchMember: async id => {\n    if (!db.members[id]) {\n      let response = {};\n      await dbRef.ref(`/members/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n\n      const { colorId = 'default' } = response;\n      if (colorId) {\n        const color = await getFunctions.fetchColor(colorId);\n        response.color = {\n          ...color.attributes,\n          id: color.id,\n        };\n      }\n\n      db.members[id] = response;\n    }\n    return serialize.member(db.members[id], id);\n  },\n  // Fetches all songs\n  fetchSongs: async () => {\n    if (fullyLoaded.songs === false) {\n      // TO-DO: Add 00 id to database, remove it in the serializer collection for a better cache check\n      let response = {};\n      await dbRef.ref(`/songs`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs = response;\n      fullyLoaded.songs = true;\n    }\n    return serializeCollection(db.songs, 'song');\n  },\n  // Fetches single song\n  fetchSong: async id => {\n    if (!db.songs[id]) {\n      let response = {};\n      await dbRef.ref(`/songs/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs[id] = response;\n    }\n    return serialize.song(db.songs[id], id);\n  },\n  // Fetches single unit\n  fetchUnit: async id => {\n    if (!db.units[id]) {\n      let response = {};\n      await dbRef.ref(`/units/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.units[id] = response;\n    }\n    return serialize.unit(db.units[id], id);\n  },\n  // Fetches units from a single artist\n  fetchUnitDistributions: async id => {\n    const unit = await getFunctions.fetchUnit(id);\n    const unitDistributionsPromises = await unit.attributes.distributions.map(\n      distributionId => getFunctions.fetchDistribution(distributionId)\n    );\n    const unitDistributions = await Promise.all(unitDistributionsPromises);\n\n    const unitSongsPromises = await unitDistributions.map(distributionObject =>\n      getFunctions.fetchSong(distributionObject.attributes.songId)\n    );\n\n    const unitSongs = await Promise.all(unitSongsPromises);\n\n    unitDistributions.forEach((distributionObject, index) => {\n      unitDistributions[index].attributes.distribution =\n        unitSongs[index].attributes.distribution;\n      unitDistributions[index].attributes.originalArtist =\n        unitSongs[index].attributes.originalArtist;\n      unitDistributions[index].attributes.title =\n        unitSongs[index].attributes.title;\n      unitDistributions[index].attributes.videoId =\n        unitSongs[index].attributes.videoId;\n    });\n\n    return unitDistributions;\n  },\n  // Fetches units from a single artist\n  fetchUnitMembers: async id => {\n    const unit = await getFunctions.fetchUnit(id);\n    const membersResponse = await unit.attributes.members.map(member =>\n      getFunctions.fetchMember(member.memberId)\n    );\n\n    const promiseResponse = await Promise.all(membersResponse);\n\n    const response = promiseResponse.map((member, index) => {\n      member.attributes.id = member.id;\n      member.attributes.positions = unit.attributes.members[index].positions;\n      return member;\n    });\n    return utils.mergeMembers(unit.attributes.members, response);\n  },\n  // Fetches single user\n  fetchUser: async id => {\n    if (!db.users[id]) {\n      let response = {};\n      await dbRef.ref(`/users/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.users[id] = response;\n    }\n    return serialize.user(db.users[id], id);\n  },\n};\n\nconst postFunctions = {\n  // Creates single artist\n  createArtist: async (body, uid) => {\n    const key = await dbRef.ref(`/artists`).push().key;\n    const data = deserialize.post.artist(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/artists/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Artist ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.artists[key] = response;\n    fullyLoaded.artists = false;\n    return serialize.artist(db.artists[key]);\n  },\n  // Creates single color\n  // TO-DO: Delete this after feeding firebase\n  createColor: async body => {\n    const key = await dbRef.ref(`/colors`).push().key;\n    const data = deserialize.post.color(body, key);\n    let response = {};\n    await dbRef.ref(`/colors/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Color ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.colors[key] = response;\n    fullyLoaded.colors = false;\n    return serialize.color(db.colors[key]);\n  },\n  // Creates single distribution\n  createDistribution: async (body, uid) => {\n    const key = await dbRef.ref(`/distributions`).push().key;\n    const data = deserialize.post.distribution(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/distributions/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create distribution ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n\n    // Add distribution id to unit\n    const unit = await getFunctions.fetchUnit(data.unitId);\n    const unitDistributions = [...unit.attributes.distributions];\n    unitDistributions.push(key);\n    await putFunctions.updateUnit(\n      data.unitId,\n      { distributions: unitDistributions },\n      uid\n    );\n\n    db.distributions[key] = response;\n    return serialize.distribution(db.distributions[key]);\n  },\n  // Creates single log entry\n  createLogEntry: async (body, uid, subRoute) => {\n    const key = await dbRef.ref(`/log/${subRoute}`).push().key;\n    const data = deserialize.post.log(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/log/${subRoute}/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to log entry ${key}: ${data.content}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    return response;\n  },\n  // Creates single member\n  createMember: async (body, uid) => {\n    const key = await dbRef.ref(`/members`).push().key;\n    const data = deserialize.post.member(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/members/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Member ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.members[key] = response;\n    fullyLoaded.members = false;\n    return serialize.member(db.members[key]);\n  },\n  // Creates single song\n  createSong: async (body, uid) => {\n    const key = await dbRef.ref(`/songs`).push().key;\n    const data = deserialize.post.song(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/songs/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Song ${key}: ${data.title}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.songs[key] = response;\n    fullyLoaded.songs = false;\n    return serialize.song(db.songs[key]);\n  },\n  // Creates single unit\n  createUnit: async (body, uid) => {\n    const key = await dbRef.ref(`/units`).push().key;\n    const data = deserialize.post.unit(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/units/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Unit ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.units[key] = response;\n    fullyLoaded.units = false;\n    return serialize.unit(db.units[key]);\n  },\n  // Creates single user\n  createUser: async (body, uid) => {\n    const key = uid;\n    const data = deserialize.post.user(body, key);\n    let response = {};\n    await dbRef.ref(`/users/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create User ${key}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.users[key] = response;\n    return serialize.user(db.users[key]);\n  },\n};\n\nconst putFunctions = {\n  // Updates single artist\n  updateArtist: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.artist(body, key, uid);\n    await dbRef.ref(`/artists/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Artist ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/artists/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.artists[key] = response;\n    fullyLoaded.artists = false;\n    return serialize.artist(db.artists[key]);\n  },\n  // Updates single distribution\n  updateDistribution: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.distribution(body, key, uid);\n    await dbRef.ref(`/distributions/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update distribution ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/distributions/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.distributions[key] = response;\n    return serialize.distribution(db.distributions[key]);\n  },\n  // Updates single member\n  updateMember: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.member(body, key, uid);\n    await dbRef.ref(`/members/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Member ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/members/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.members[key] = response;\n    fullyLoaded.members = false;\n    return serialize.member(db.members[key]);\n  },\n  // Updates single song\n  updateSong: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.song(body, key, uid);\n    await dbRef.ref(`/songs/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Song ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/songs/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.songs[key] = response;\n    fullyLoaded.songs = false;\n    return serialize.song(db.songs[key]);\n  },\n  // Updates single unit\n  updateUnit: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.unit(body, key, uid);\n    await dbRef.ref(`/units/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Unit ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/units/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.units[key] = response;\n    fullyLoaded.units = false;\n    return serialize.unit(db.units[key]);\n  },\n  // Updates single user\n  updateUser: async (id, body) => {\n    const key = id;\n    const data = deserialize.put.user(body, key);\n    await dbRef.ref(`/users/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update User ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/users/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.users[key] = response;\n    return serialize.user(db.users[key]);\n  },\n  updateUserBiases: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/biases`).set(body, error => {\n      if (error) {\n        const message = `Failed to update User's Biases ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserFavoriteArtists: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/favoriteArtists`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Artists ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserFavoriteMembers: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/favoriteMembers`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Members ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserLatestUnits: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/latestUnits`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Members ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n};\n\nconst deleteFunctions = {\n  // Destroys single user\n  destroyUser: async (id, uid) => {\n    if (id === uid) {\n      await dbRef.ref(`/users/${uid}`).remove();\n      return { [id]: true };\n    }\n  },\n};\n\nconst resyncFunctions = {\n  parse: database => {\n    // Run reseters\n    resyncFunctions.resetAristsArrays(database);\n    resyncFunctions.resetMemberPositions(database);\n    // Run parsers\n    resyncFunctions.parseUnits(database);\n    resyncFunctions.parseMembers(database);\n    resyncFunctions.parseArtists(database);\n    resyncFunctions.parseDistributions(database);\n  },\n  resetAristsArrays: database => {\n    Object.values(database.artists).forEach(artist => {\n      artist.units = [];\n      artist.memberIds = [];\n      artist.memberList = [];\n    });\n  },\n  resetMemberPositions: database => {\n    Object.values(database.members).forEach(member => (member.positions = []));\n  },\n  parseUnits: database => {\n    Object.keys(database.units).forEach(unitId => {\n      const unit = database.units[unitId];\n      // Add artistId to artist\n      const artist = database.artists[unit.artistId];\n      if (artist.units) {\n        artist.units.push(unitId);\n      } else {\n        artist.units = [unitId];\n      }\n\n      // Parse positions\n      const membersPositions = resyncFunctions.parsePositions(\n        database,\n        unit.members\n      );\n\n      // Add members to artist memberIds and memberList\n      const memberIds = [];\n      const memberList = [];\n      Object.values(membersPositions).forEach(value => {\n        memberIds.push(value.memberId);\n        memberList.push(value.name);\n        // Add positions to each member\n        database.members[value.memberId].positions = database.members[\n          value.memberId\n        ].positions.concat(value.positions);\n      });\n      if (artist.memberIds) {\n        artist.memberIds = artist.memberIds.concat(memberIds);\n        artist.memberList = artist.memberList.concat(memberList);\n      } else {\n        artist.memberIds = memberIds;\n        artist.memberList = memberList;\n      }\n    });\n  },\n  parseMembers: database => {\n    // Reset all color counts\n    Object.values(database.colors).forEach(color => {\n      color.count = 0;\n    });\n\n    Object.values(database.members).forEach(member => {\n      // Add member color to color count\n      const { colorId } = member;\n      database.colors[colorId].count++;\n\n      // Sort and make positions unique\n      member.positions = [...new Set(member.positions)].sort();\n    });\n  },\n  parseArtists: database => {\n    Object.values(database.artists).forEach(artist => {\n      // Order units by descending debutYear\n      const unitDict = {};\n      const subUnitDict = {};\n      let unitSameYear = 1;\n      artist.units.forEach(unitId => {\n        const currentUnit = database.units[unitId];\n        let key = currentUnit.debutYear;\n        if (currentUnit.subUnit) {\n          if (subUnitDict[key]) {\n            key = Number(`${key}${unitSameYear}`);\n            unitSameYear++;\n          }\n          subUnitDict[key] = unitId;\n        } else {\n          if (unitDict[key]) {\n            key = Number(`${key}${unitSameYear}`);\n            unitSameYear++;\n          }\n          unitDict[key] = unitId;\n        }\n      });\n      // Sort by year\n      const units = Object.keys(unitDict)\n        .sort()\n        .reverse()\n        .map(year => unitDict[year]);\n\n      const subUnits = Object.keys(subUnitDict)\n        .sort()\n        .map(year => subUnitDict[year]);\n\n      artist.units = [...units, ...subUnits];\n\n      // Sort memberList by name and make it unique, same with memberIds\n      const memberDict = {};\n      artist.memberList.forEach((name, index) => {\n        if (memberDict[name] === undefined) {\n          memberDict[name] = artist.memberIds[index];\n        }\n      });\n      // Make names unique\n      artist.memberList = [...new Set(artist.memberList)];\n      // Sort names\n      artist.memberList.sort();\n      // Parse ids\n      artist.memberIds = artist.memberList.map(name => memberDict[name]);\n    });\n  },\n  parseDistributions: () => {\n    //\n  },\n  parsePositions: (database, unitMembers) => {\n    const memberDict = {};\n\n    Object.keys(unitMembers).forEach(key => {\n      const [memberId, name, position] = key.split(':');\n      // Parse member dict to be returned\n      if (memberDict[memberId]) {\n        memberDict[memberId].positions.push(position);\n      } else {\n        memberDict[memberId] = {\n          memberId,\n          name,\n          positions: [position],\n        };\n      }\n      // Refactor positions (action parsePositions)\n      if (database.positions[position] === undefined) {\n        database.positions[position] = {};\n      }\n      database.positions[position][memberId] = true;\n    });\n\n    return memberDict;\n  },\n};\n\nexport default new API();\n","/* eslint wrap-iife: 0 */\n/* eslint func-names: 0 */\n\nimport _ from 'lodash';\n\n/**\n * Parsers bem classes accepting two or more arguments\n * @param {String} block\n * @param {String} modifiers\n * @param {String} element\n * @param {extra} extras\n * @returns {string} bem-class\n */\nconst bem = (...args) => {\n  const block = args[0];\n  let modifiers = args[1] || '';\n  let element = args[2];\n  let extras = args[3] || [];\n\n  const hasBlock = block !== undefined && block !== null && block !== '';\n  const hasModifiers =\n    modifiers !== undefined &&\n    modifiers !== null &&\n    modifiers !== '' &&\n    modifiers.length > 0;\n  const hasElement =\n    element !== undefined && element !== null && element !== '';\n  const hasExtras =\n    extras !== undefined &&\n    extras !== null &&\n    extras !== '' &&\n    extras.length > 0;\n\n  // Prepare modifiers\n  if (hasModifiers) {\n    if (typeof modifiers === 'string') {\n      modifiers = [modifiers];\n    }\n    modifiers = modifiers.map(m => `--${m}`);\n  }\n  // Prepare element\n  if (hasElement) {\n    element = `__${element}`;\n  }\n  // Prepare Extras\n  if (hasExtras) {\n    if (typeof extras === 'string') {\n      extras = [extras];\n    }\n  }\n\n  // No Block\n  if (!hasBlock) {\n    throw new Error('Block string missing');\n  }\n\n  let classes = block;\n\n  // Only Modifiers\n  if (hasModifiers && !hasElement) {\n    modifiers.forEach(m => {\n      classes += ` ${block}${m}`;\n    });\n  }\n\n  // Only Element\n  if (hasElement && !hasModifiers) {\n    classes = ` ${block}${element}`;\n  }\n\n  // Modifiers and Element\n  if (hasElement && hasModifiers) {\n    classes += `${element}`;\n    modifiers.forEach(m => {\n      classes += ` ${block}${element}${m}`;\n    });\n  }\n\n  return `${classes} ${extras.join(' ')}`.trim();\n};\n\n/**\n * Loops through members and reassign colors if they are duplicated\n * @param {Array} members\n * @returns {Array} members with unique colors\n */\nconst ensureColorUniqueness = members => {\n  const membersList = _.cloneDeep(members);\n  const dict = {};\n  const refactoredMembers = [];\n  // Loop through members and make color dict\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    if (dict[colorId] === undefined) {\n      dict[colorId] = 1;\n    } else {\n      dict[colorId] += 1;\n    }\n  });\n\n  // Loop again and check for uniqueness, unique stays\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    const altColorId = member.altColor.id;\n    if (dict[colorId] > 1) {\n      if (dict[altColorId] === undefined) {\n        const oldColor = member.color;\n        member.color = member.altColor;\n        member.altColor = oldColor;\n      } else {\n        console.warn(`Duplicated color for member ${member.id}`);\n      }\n    }\n    refactoredMembers.push(member);\n  });\n  return refactoredMembers;\n};\n\nconst capitalizeWord = (str, separator = ' ') =>\n  str\n    .toString()\n    .split(separator)\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(separator);\n\nconst spinalCaseWord = str =>\n  str\n    .toLowerCase()\n    .split(' ')\n    .join('-');\n\nconst parseBirthDate = d => {\n  const date = `${d}`;\n  if (date.length < 5) {\n    return date;\n  }\n  if (date.length === 8) {\n    const year = date.substring(0, 4);\n    const month = date.substring(4, 6);\n    const day = date.substring(6);\n    return `${month}/${day}/${year}`;\n  }\n  return '?';\n};\n\nconst parseResponse = response => {\n  function responseParser(obj) {\n    return {\n      id: obj.id,\n      ...obj.attributes,\n    };\n  }\n\n  // Response has a single object instance without the \"data\" object\n  if (response && response.id && response.attributes) {\n    return responseParser(response);\n  }\n\n  // Response has a \"data\" object\n  if (response && response.data) {\n    response = response.data;\n\n    // If response.data is not an array\n    if (response && response.id && response.attributes) {\n      return responseParser(response);\n    }\n\n    if (Array.isArray(response)) {\n      const result = [];\n      for (let i = 0; i < response.length; i++) {\n        result.push(responseParser(response[i]));\n      }\n      return result;\n    }\n  }\n\n  throw new Error('parserResponse failed. Object is not a response');\n};\n\nconst parseResponseToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = {\n          id: instance.id,\n          ...instance.attributes,\n        };\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseArrayToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = instance;\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseQueryParams = query => {\n  if (!query) return null;\n\n  if (query[0] === '?') {\n    query = query.substring(1);\n  }\n\n  const params = {};\n  query.split('&').forEach(item => {\n    const pair = item.split('=');\n    const key = pair[0];\n    if (key) {\n      params[key] = pair[1] || null;\n    }\n  });\n\n  return params;\n};\n\nconst humanize = (string, option = 'Sentence') => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or -\n  string = string.replace(/([\\-|\\_])/g, ' '); // eslint-disable-line\n\n  function captalizeFirstLetter(word) {\n    return word[0].toUpperCase() + word.substring(1);\n  }\n\n  switch (option) {\n    case 'Sentence':\n      return captalizeFirstLetter(string);\n    case 'Capital':\n      return string\n        .split(' ')\n        .map(word => captalizeFirstLetter(word))\n        .join(' ');\n    default:\n      return string;\n  }\n};\n\nconst camelCase = string => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or -\n  string = string.replace(/([\\-|\\_])/g, ' '); // eslint-disable-line\n\n  return string\n    .split(' ')\n    .map((word, index) => {\n      if (index === 0) return word;\n      return word[0].toUpperCase() + word.substring(1);\n    })\n    .join('');\n};\n\nconst spiralCase = string => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or ' ' or :\n  return string.replace(/([\\-\\_\\ \\:])/g, '-'); // eslint-disable-line\n};\n\nconst generateAdminCode = (numDigits = 4) => {\n  const CHARACTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let code = '';\n  for (let i = 0; i < numDigits; i++) {\n    code += CHARACTERS.charAt(Math.floor(Math.random() * CHARACTERS.length));\n  }\n  return code;\n};\n\nconst getColorNumber = (colorId = 'col000000') => Number(colorId.substring(7));\n\nconst spiralBirthdate = date => {\n  const dateStr = date.toString();\n  return `${dateStr.substring(0, 4)}-${dateStr.substring(\n    4,\n    6\n  )}-${dateStr.substring(6)}`;\n};\n\nconst makePositionsEditable = positions => {\n  const result = {};\n  positions.forEach(position => {\n    const pos = spiralCase(position);\n    result[pos] = pos;\n  });\n  return result;\n};\n\nconst insertAtCursor = (field, valueToInsert) => {\n  if (\n    (field.selectionStart || field.selectionStart === 0) &&\n    field.selectionStart === field.selectionEnd\n  ) {\n    const startPos = field.selectionStart;\n    const endPos = field.selectionEnd;\n    field.value =\n      field.value.substring(0, startPos) +\n      valueToInsert +\n      field.value.substring(endPos, field.value.length);\n  }\n  return field.value;\n};\n\nconst getMostImportantPosition = positions => {\n  const POSITIONS_IMPORTANT_ORDER = [\n    'ALL',\n    'NONE',\n    'MAIN_VOCALIST',\n    'MAIN_RAPPER',\n    'MAIN_DANCER',\n    'LEAD_VOCALIST',\n    'LEAD_RAPPER',\n    'LEAD_DANCER',\n    'VOCALIST',\n    'RAPPER',\n    'DANCER',\n  ];\n\n  for (let i = 0; i < POSITIONS_IMPORTANT_ORDER.length; i++) {\n    if (positions.includes(POSITIONS_IMPORTANT_ORDER[i])) {\n      return POSITIONS_IMPORTANT_ORDER[i];\n    }\n  }\n\n  return 'VOCALIST';\n};\n\nexport default {\n  bem,\n  camelCase,\n  capitalizeWord,\n  ensureColorUniqueness,\n  generateAdminCode,\n  getColorNumber,\n  getMostImportantPosition,\n  humanize,\n  insertAtCursor,\n  makePositionsEditable,\n  parseBirthDate,\n  parseQueryParams,\n  parseArrayToObject,\n  parseResponse,\n  parseResponseToObject,\n  spiralBirthdate,\n  spiralCase,\n  spinalCaseWord,\n};\n","import { all, call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport _ from 'lodash';\nimport { toastr } from 'react-redux-toastr';\n\nimport API from '../api';\n\nimport { types } from '../reducers';\nimport utils from '../utils';\nimport constants from '../utils/constants';\n\n// Delay helper to make API look more realistic\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nconst DELAY_DURATION = process.env.NODE_ENV === 'development' ? 500 : 0;\n\n// API Workers\n\n/**\n * Initializes database, check for existing auth session, and load colors\n * @param {object} action\n */\nfunction* initializer(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const dbStart = yield API.init();\n    const status = dbStart.dbState();\n    yield put({ type: types.SET_DATABASE_READY, payload: status.data.loaded });\n\n    yield delay(DELAY_DURATION + 1000);\n\n    let loggedUser = yield API.auth();\n    loggedUser = loggedUser.data.attributes ? loggedUser.data : null;\n    if (loggedUser) {\n      const user = utils.parseResponse(loggedUser);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Welcome back!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: error,\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestArtists(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/artists');\n    const artistList = utils.parseResponse(response);\n    const sortedArtistList = _.sortBy(artistList, [a => a.name.toLowerCase()]);\n    yield put({ type: types.SET_ARTISTS, payload: sortedArtistList });\n\n    const artistsTypeahead = [];\n    const artistsTypeaheadDict = {};\n\n    sortedArtistList.forEach(artist => {\n      artistsTypeahead.push(artist.name);\n      artistsTypeaheadDict[artist.name] = artist.id;\n    });\n    yield put({ type: types.SET_ARTISTS_TYPEAHEAD, payload: artistsTypeahead });\n    yield put({\n      type: types.SET_ARTISTS_TYPEAHEAD_DICT,\n      payload: artistsTypeaheadDict,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load artists database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestArtist(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { artistId, panels, state } = action;\n  let { queryParams } = action;\n\n  let selectedArtist = {};\n\n  // Fetch Artist\n  try {\n    const response = yield API.get(`/artists/${artistId}`);\n    selectedArtist = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load artist ${artistId} from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  // Select default unit id\n  queryParams = utils.parseQueryParams(queryParams);\n  let selectedUnitId = selectedArtist.units[0];\n  let unitIndex = 0;\n  if (\n    queryParams &&\n    queryParams.unit &&\n    selectedArtist.units.includes(queryParams.unit)\n  ) {\n    selectedUnitId = queryParams.unit;\n    unitIndex = selectedArtist.units.indexOf(selectedUnitId);\n  }\n\n  // Fetch Artist's Units\n  try {\n    const response = yield API.get(`/artists/${artistId}/units`);\n    selectedArtist.units = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load artist ${artistId}'s units from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  // Just send artist if dealing with Manage Artist\n  if (state === 'edit') {\n    selectedArtist.state = 'edit';\n    panels.artist = state;\n\n    const unitsTypeahead = [];\n    const unitsTypeaheadDict = {};\n\n    selectedArtist.units.forEach(unit => {\n      unitsTypeahead.push(unit.name);\n      unitsTypeaheadDict[unit.name] = unit.id;\n    });\n\n    yield put({ type: types.SET_UNITS_TYPEAHEAD, payload: unitsTypeahead });\n    yield put({\n      type: types.SET_UNITS_TYPEAHEAD_DICT,\n      payload: unitsTypeaheadDict,\n    });\n\n    selectedArtist.genre = constants.GENRES_DB[selectedArtist.genre];\n\n    yield put({ type: types.SET_EDITING_ARTIST, payload: selectedArtist });\n    yield put({ type: types.SET_PANELS, payload: panels });\n  } else {\n    // Fetch complete unit for default unit\n    const selectedUnit = yield call(requestUnit, {\n      unitId: selectedUnitId,\n    });\n\n    selectedArtist.units[unitIndex] = selectedUnit;\n\n    yield put({ type: types.SET_ARTIST_PAGE_TAB, payload: selectedUnitId });\n    yield put({ type: types.SET_SELECTED_ARTIST, payload: selectedArtist });\n    yield put({ type: types.SET_SELECTED_UNIT, payload: selectedUnit });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestColors(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/colors');\n    const colorsList = utils.parseResponseToObject(response);\n    yield put({ type: types.SET_COLORS, payload: colorsList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load colors database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestDistribution(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { distributionId } = action;\n\n  let selectedDistribution = {};\n\n  // Fetch Distribution\n  try {\n    const response = yield API.get(`/distributions/${distributionId}`);\n    selectedDistribution = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load distribution ${distributionId} from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  yield put({\n    type: types.SET_ACTIVE_DISTRIBUTION,\n    payload: selectedDistribution,\n  });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n\n  return selectedDistribution;\n}\n\nfunction* requestMembers(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/members');\n    const membersList = utils.parseResponse(response);\n    const sortedMembersList = _.sortBy(membersList, [\n      m => m.name.toLowerCase(),\n    ]);\n    yield put({ type: types.SET_MEMBERS, payload: sortedMembersList });\n\n    const membersTypeahead = [];\n    const membersTypeaheadDict = {};\n\n    sortedMembersList.forEach(member => {\n      const key = `${member.name} (${member.referenceArtist})`;\n      membersTypeahead.push(key);\n      membersTypeaheadDict[key] = member.id;\n    });\n    yield put({ type: types.SET_MEMBERS_TYPEAHEAD, payload: membersTypeahead });\n    yield put({\n      type: types.SET_MEMBERS_TYPEAHEAD_DICT,\n      payload: membersTypeaheadDict,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load members database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestSongs(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/songs');\n    const songsList = utils.parseResponse(response);\n    const sortedSongsList = _.sortBy(songsList, [s => s.title.toLowerCase()]);\n    yield put({ type: types.SET_SONGS, payload: sortedSongsList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load songs database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestUnit({ type, unitId, selectedArtist, unitIndex }) {\n  const actionType = 'REQUEST_UNIT';\n  yield put({ type: 'PENDING', actionType });\n  yield delay(DELAY_DURATION);\n\n  let unit = {};\n  try {\n    const response = yield API.get(`/units/${unitId}`);\n    unit = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n\n  // Fetch members\n  let members = {};\n  try {\n    const response = yield API.get(`/units/${unitId}/members`);\n    members = utils.parseArrayToObject(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load members from unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n  unit.members = members;\n\n  const membersArray = Object.values(members);\n\n  unit.gender = membersArray.reduce((res, member) => {\n    if (member.gender !== res) return 'MIXED';\n    return res;\n  }, membersArray[0].gender);\n\n  // Fetch distributions and merge\n  let distributions = {};\n  try {\n    const response = yield API.get(`/units/${unitId}/distributions`);\n    distributions = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load distributions from unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n\n  unit.distributions = distributions || [];\n\n  unit.songsDict = distributions.reduce((dict, distribution) => {\n    dict[distribution.songId] = distribution.id;\n    return dict;\n  }, {});\n\n  // Calculate averages\n\n  // Flag unit as complete\n  unit.complete = true;\n\n  // The following if statements are used when the unit tab is updated in the UI\n  if (type) {\n    yield put({ type: types.SET_SELECTED_UNIT, payload: unit });\n  }\n  if (selectedArtist) {\n    selectedArtist.units[unitIndex] = unit;\n    yield put({ type: types.SET_SELECTED_ARTIST, payload: selectedArtist });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType });\n  return unit;\n}\n\nfunction* requestUnitMembers({ type, unitId, panels }) {\n  yield put({ type: 'PENDING', actionType: type });\n  yield delay(DELAY_DURATION);\n\n  let members = [];\n  if (unitId) {\n    try {\n      const response = yield API.get(`/units/${unitId}/members`);\n      members = response.data;\n    } catch (error) {\n      yield put({\n        type: 'ERROR',\n        message: [\n          `Unable to load members from unit ${unitId} from database`,\n          error.toString(),\n        ],\n        actionType: type,\n      });\n    }\n  }\n\n  // Make colors in use dict\n  const colorsInUse = {};\n  members.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n\n  yield put({ type: types.SET_COLORS_IN_USE, payload: colorsInUse });\n  yield put({ type: types.SET_EDITING_MEMBERS, payload: members });\n  yield put({ type: types.SET_PANELS, payload: panels });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: type });\n  return members;\n}\n\nfunction* resyncDatabase(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.resyncDatabase();\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [`Unable to resync database`, error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  // When done, re-request artists, colors, and members\n  yield put({ type: 'REQUEST_ARTISTS' });\n  yield put({ type: 'REQUEST_COLORS' });\n  yield put({ type: 'REQUEST_MEMBERS' });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* runLogin(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    let loggedUser = yield API.login();\n    loggedUser = loggedUser.data.attributes ? loggedUser.data : null;\n\n    if (loggedUser) {\n      const user = utils.parseResponse(loggedUser);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Hello!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\nfunction* runLogout(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    yield API.logoff();\n\n    yield put({ type: types.SET_USER, payload: {} });\n    yield put({ type: types.SET_AUTHENTICATED, payload: false });\n    yield put({ type: types.SET_ADMIN, payload: false });\n\n    yield put({\n      type: 'WARNING_TOAST',\n      message: 'You are logged out',\n      actionType: action.type,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\nfunction* sendDistribution(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  let receivedSong;\n  if (action.body.distributionId) {\n    // Update song\n    try {\n      receivedSong = yield API.pyt(\n        `/distributions/${action.body.distributionId}`,\n        action.body\n      );\n    } catch (error) {\n      yield put({\n        type: 'ERROR_TOAST',\n        message: `Failed updating distribution ${\n          action.body.distributionId\n        }: ${error.toString()}`,\n        actionType: action.type,\n      });\n    }\n  } else {\n    // Save song\n    try {\n      receivedSong = yield API.post('/distributions', action.body);\n    } catch (error) {\n      yield put({\n        type: 'ERROR_TOAST',\n        message: `Failed writing distribution: ${error.toString()}`,\n        actionType: action.type,\n      });\n    }\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedSong;\n}\n\nfunction* sendLog(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const logType = action.body.type === 'error' ? 'errors' : 'general';\n\n  // Save song\n  try {\n    yield API.post(`/log/${logType}`, action.body);\n  } catch (e) {\n    // do nothing\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* sendSong(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  // Save song\n  let receivedSong;\n  try {\n    receivedSong = yield API.post('/songs', action.body);\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing song: ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedSong;\n}\n\nfunction* updateCompleteArtist(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { artist, members, unit } = action;\n\n  // Save Members\n  const receivedMembers = yield all(\n    members.map((member, index) =>\n      call(updateMember, {\n        type: `UPDATE_MEMBER_${index}`,\n        member,\n        referenceArtist: artist.name,\n        artistGenre: artist.genre,\n      })\n    )\n  );\n\n  // Prepare Unit Members Data\n  let unitMembers = {};\n  receivedMembers.forEach(member => {\n    unitMembers = {\n      ...unitMembers,\n      ...member.positions,\n    };\n  });\n\n  yield delay(DELAY_DURATION);\n\n  // Save Artist\n  let receivedArtist;\n  try {\n    if (artist.id) {\n      // Update member if it has an id\n      receivedArtist = yield API.put(`/artists/${artist.id}`, artist);\n    } else {\n      // Create member if it does not have an id\n      receivedArtist = yield API.post('/artists', artist);\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing artist ${\n        artist.id ? artist.id : artist.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  // Save unit\n  unit.members = unitMembers;\n  unit.artistId = receivedArtist.data.id;\n  let receivedUnit;\n\n  try {\n    if (unit.id) {\n      // Update member if it has an id\n      receivedUnit = yield API.put(`/units/${unit.id}`, unit);\n    } else {\n      // Create member if it does not have an id\n      receivedUnit = yield API.post('/units', unit);\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing unit ${\n        unit.id ? unit.id : artist.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'SET_MANAGE_RESULT', payload: 'SUCCESS' });\n\n  toastr.success('Complete Artist saved successfully');\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedUnit;\n}\n\nfunction* updateMember(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { member, referenceArtist, artistGenre } = action;\n\n  let response;\n  try {\n    if (member.id) {\n      // Update member if it has an id\n      response = yield API.put(`/members/${member.id}`, member);\n    } else {\n      // Create member if it does not have an id\n      response = yield API.post('/members', {\n        ...member,\n        referenceArtist,\n        primaryGenre: artistGenre,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing member ${\n        member.id ? member.id : member.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  response.data.positions = {};\n  member.positions.forEach(pos => {\n    response.data.positions[`${response.data.id}:${member.name}:${pos}`] = true;\n  });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return response.data;\n}\n\nfunction* updateUserBiases(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(`/users/${action.userId}/biases`, action.biases);\n    yield put({ type: types.SET_BIASES, payload: action.biases });\n    yield put({ type: types.SET_BIAS, payload: action.bias });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* updateUserFavoriteArtists(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(\n      `/users/${action.userId}/favorite-artists`,\n      action.userFavoriteArtists\n    );\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* updateUserFavoriteMembers(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(\n      `/users/${action.userId}/favorite-members`,\n      action.userFavoriteMembers\n    );\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* apiSaga() {\n  yield takeLatest('INITIALIZER', initializer);\n  yield takeLatest('REQUEST_ARTISTS', requestArtists);\n  yield takeLatest('REQUEST_ARTIST', requestArtist);\n  yield takeLatest('REQUEST_COLORS', requestColors);\n  yield takeLatest('REQUEST_DISTRIBUTION', requestDistribution);\n  yield takeLatest('REQUEST_MEMBERS', requestMembers);\n  yield takeLatest('REQUEST_SONGS', requestSongs);\n  yield takeLatest('REQUEST_UNIT', requestUnit);\n  yield takeLatest('REQUEST_UNIT_MEMBERS', requestUnitMembers);\n  yield takeLatest('RESYNC_DATABASE', resyncDatabase);\n  yield takeLatest('RUN_LOGIN', runLogin);\n  yield takeLatest('RUN_LOGOUT', runLogout);\n  yield takeLatest('SEND_DISTRIBUTION', sendDistribution);\n  yield takeLatest('SEND_LOG', sendLog);\n  yield takeLatest('SEND_SONG', sendSong);\n  yield takeLatest('UPDATE_COMPLETE_ARTIST', updateCompleteArtist);\n  yield takeLatest('UPDATE_USER_BIASES', updateUserBiases);\n  yield takeLatest('UPDATE_USER_FAVORITE_ARTISTS', updateUserFavoriteArtists);\n  yield takeLatest('UPDATE_USER_FAVORITE_MEMBERS', updateUserFavoriteMembers);\n\n  yield takeEvery('TEST', test);\n}\n\nexport default apiSaga;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { toastr } from 'react-redux-toastr';\n\nimport { types } from '../reducers';\n\n// PENDING WORKERS\nconst localPendingCache = {};\n\n/**\n * Removes action type from pendingCache and updates pending if pendingCache is empty\n * @param {string} actionType\n */\nfunction* clearPending(actionType) {\n  if (typeof actionType === 'object') {\n    actionType = actionType.actionType; // eslint-disable-line\n  }\n  if (localPendingCache[actionType]) {\n    delete localPendingCache[actionType];\n  }\n\n  if (Object.keys(localPendingCache).length === 0) {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: false });\n  }\n}\n\n/**\n * Adds action type to pendingInlineCache and updates pending based on pendingInlineCache values\n * @param {string} actionType\n */\nfunction* pending({ actionType }) {\n  if (localPendingCache[actionType] === undefined) {\n    localPendingCache[actionType] = true;\n  }\n\n  if (Object.keys(localPendingCache).length > 0) {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: true });\n  } else {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: false });\n  }\n}\n\n// ERROR WORKERS\n\n/**\n * Dispatches an error message and an error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* error({ message, actionType }) {\n  const errorMessage = typeof err === 'string' ? message : message.join(': ');\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield toastr.error(errorMessage);\n  yield call(clearPending, actionType);\n}\n\n/**\n * Dispatches an error message and and an inline error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* errorInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR_INLINE, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops an error toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* errorToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.error(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.error(message);\n  }\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n// SUCCESS WORKERS\n\n/**\n * Dispatches a success message and and an inline sucess flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* successInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_SUCCESS_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_SUCCESS_INLINE, payload: true });\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops a sucess toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* successToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.success(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.success(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// WARNING WORKERS\n\n/**\n * Pops a warning toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* warningToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.warning(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.warning(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* statusHandlingSaga() {\n  yield takeEvery('CLEAR_PENDING', clearPending);\n  yield takeEvery('ERROR', error);\n  yield takeEvery('ERROR_INLINE', errorInline);\n  yield takeEvery('ERROR_TOAST', errorToast);\n  yield takeEvery('PENDING', pending);\n  yield takeEvery('SUCCESS_INLINE', successInline);\n  yield takeEvery('SUCCESS_TOAST', successToast);\n  yield takeEvery('WARNING_TOAST', warningToast);\n  yield takeEvery('TEST', test);\n}\n\nexport default statusHandlingSaga;\n","import { all, fork } from 'redux-saga/effects';\nimport apiSaga from './api-saga';\nimport statusHandlingSaga from './status-handling';\n\nexport default function* rootSaga() {\n  yield all([fork(apiSaga), fork(statusHandlingSaga)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, thunkMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger({ collapsed: true }));\n}\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    Created for fun by{' '}\n    <a\n      href=\"https://www.kavispires.com/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Kavis Pires\n    </a>\n  </footer>\n);\n\nexport default Footer;\n","import FooterContainer from './containers/FooterContainer';\n\nexport default FooterContainer;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Footer from '../components/Footer';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Footer)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '..';\n\nconst ActiveSongWidget = ({ activeSong, inline, ...props }) => {\n  // Return nothing if currentUnit is not available\n  if (!activeSong.id) {\n    return null;\n  }\n\n  const inlineClass = inline ? 'inline' : '';\n\n  const goToDistribution = () => {\n    props.history.push(`/distribute`);\n  };\n\n  return (\n    <section className={`active-widget active-widget--quarter ${inlineClass}`}>\n      <h3>Active Song:</h3>\n      <button\n        className=\"active-widget__go-to-button\"\n        onClick={() => goToDistribution()}\n      >\n        <Icon type=\"go-to\" />\n      </button>\n      <div className=\"active-widget__content\">\n        <h1>\n          {activeSong.title.toUpperCase()}{' '}\n          <span className=\"active-widget__unit\">\n            (by {activeSong.originalArtist})\n          </span>\n        </h1>\n      </div>\n    </section>\n  );\n};\n\nActiveSongWidget.propTypes = {\n  activeSong: PropTypes.object,\n  history: PropTypes.object.isRequired,\n  inline: PropTypes.bool,\n};\n\nActiveSongWidget.defaultProps = {\n  activeSong: {},\n  inline: false,\n};\n\nexport default ActiveSongWidget;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ActiveSongWidget from '../components/ActiveSongWidget';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribution: state.distribution,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ActiveSongWidget)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '..';\n// Import utility functions\nimport utils from '../../../utils';\n\nconst ActiveUnitWidget = ({ activeUnit, showMembers, inline, ...props }) => {\n  // Return nothing if currentUnit is not available\n  if (!activeUnit.id) {\n    return null;\n  }\n\n  const inlineClass = inline ? 'inline' : '';\n\n  const goToUnit = () => {\n    props.history.push(`/artists/${activeUnit.artistId}`);\n  };\n\n  return (\n    <section className={`active-widget ${inlineClass}`}>\n      <h3>Active Unit:</h3>\n      <button\n        className=\"active-widget__go-to-button\"\n        onClick={() => goToUnit()}\n      >\n        <Icon type=\"go-to\" />\n      </button>\n      <div className=\"active-widget__content\">\n        <h1>\n          {activeUnit.artistName.toUpperCase()}{' '}\n          <span className=\"active-widget__unit\">({activeUnit.name})</span>\n          <span className=\"active-widget__genre\">\n            {activeUnit.genre} - {Object.values(activeUnit.members).length}{' '}\n            members\n          </span>\n        </h1>\n        {showMembers ? (\n          <ul className=\"active-widget__members\">\n            {Object.values(activeUnit.members).map(member => (\n              <li\n                key={member.id}\n                className={`pill background-color-${utils.getColorNumber(\n                  member.colorId\n                )}`}\n              >\n                {member.name}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className=\"active-widget__members-count\">3</p>\n        )}\n      </div>\n    </section>\n  );\n};\n\nActiveUnitWidget.propTypes = {\n  activeUnit: PropTypes.object,\n  history: PropTypes.object.isRequired,\n  inline: PropTypes.bool,\n  showMembers: PropTypes.bool,\n};\n\nActiveUnitWidget.defaultProps = {\n  activeUnit: {},\n  inline: false,\n  showMembers: false,\n};\n\nexport default ActiveUnitWidget;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ActiveUnitWidget from '../components/ActiveUnitWidget';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribution: state.distribution,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ActiveUnitWidget)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport YouTube from 'react-youtube';\n\n// Import common components\nimport { Icon } from '../../common';\n\nclass ActiveVideoWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 0,\n    };\n\n    this.setDimentions = this.setDimentions.bind(this);\n  }\n\n  componentDidUpdate() {\n    // Determine player height\n    if (!this.state.height && document.getElementById('video-container')) {\n      this.setDimentions();\n    }\n  }\n\n  setDimentions() {\n    let width = document.getElementById('video-container').clientWidth;\n    let height = document.getElementById('video-container').clientHeight;\n    if (width > height) {\n      width = (16 * height) / 9;\n    } else {\n      height = (9 * width) / 16;\n    }\n\n    this.setState(() => ({ width, height }));\n  }\n\n  render() {\n    const opts = {\n      height: this.state.height,\n      width: this.state.width,\n    };\n\n    const hasVideoClass = this.props.videoId\n      ? ''\n      : 'active-widget__video--placeholder';\n\n    return (\n      <section\n        className={`active-widget active-widget--quarter active-widget__video ${hasVideoClass}`}\n        id=\"video-container\"\n      >\n        {this.props.videoId ? (\n          <YouTube videoId={this.props.videoId} opts={opts} />\n        ) : (\n          <Icon type=\"youtube\" color=\"white\" size=\"72\" />\n        )}\n      </section>\n    );\n  }\n}\n\nActiveVideoWidget.propTypes = {\n  videoId: PropTypes.string.isRequired,\n};\n\nActiveVideoWidget.defaultProps = {};\n\nexport default ActiveVideoWidget;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon } from '../../common';\n\nclass Collapsible extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n\n    this.collapse = this.collapse.bind(this);\n    this.enforceProperties = this.enforceProperties.bind(this);\n    this.expand = this.expand.bind(this);\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  componentDidMount() {\n    this.enforceProperties();\n  }\n\n  componentDidUpdate(nextProps) {\n    if (\n      this.props.synced &&\n      (nextProps.expanded !== this.props.expanded ||\n        nextProps.collapsed !== this.props.collapsed)\n    ) {\n      this.enforceProperties();\n    }\n  }\n\n  enforceProperties() {\n    if (this.props.expanded) {\n      this.expand();\n    }\n    if (this.props.collapsed) {\n      this.collapse();\n    }\n  }\n\n  togglePanel() {\n    if (!this.props.locked) {\n      this.setState({\n        expanded: !this.state.expanded,\n      });\n    }\n  }\n\n  expand() {\n    this.setState({\n      expanded: true,\n    });\n  }\n\n  collapse() {\n    this.setState({\n      expanded: false,\n    });\n  }\n\n  render() {\n    const { title, locked } = this.props;\n\n    let iconComponent = null;\n    if (locked) {\n      iconComponent = <Icon type=\"lock\" color=\"gray\" />;\n    } else if (this.state.expanded) {\n      iconComponent = <Icon type=\"chevron-up\" color=\"gray\" />;\n    } else {\n      iconComponent = <Icon type=\"chevron-down\" color=\"gray\" />;\n    }\n\n    return (\n      <section className=\"collapsible\">\n        <button\n          className={`collapsible__header ${locked ? 'locked' : ''}`}\n          disabled={locked}\n          onClick={this.togglePanel}\n        >\n          <h3 className=\"collapsible__title\">{title}</h3>\n          <span className=\"collapsible__icon\">{iconComponent}</span>\n        </button>\n        <div\n          className={`collapsible__content ${\n            this.state.expanded ? 'expanded' : 'collapsed'\n          }`}\n        >\n          {this.state.expanded && this.props.children}\n        </div>\n      </section>\n    );\n  }\n}\n\nCollapsible.propTypes = {\n  children: PropTypes.any.isRequired,\n  collapsed: PropTypes.bool,\n  expanded: PropTypes.bool,\n  locked: PropTypes.bool,\n  synced: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n};\n\nCollapsible.defaultProps = {\n  collapsed: false,\n  expanded: false,\n  locked: false,\n  synced: false,\n};\n\nexport default Collapsible;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon } from '../../common';\n\nconst FavoriteIcon = ({ action, className, id, size, state }) => (\n  <button\n    className={`btn btn-transparent ${className}`}\n    onClick={() => action(id)}\n  >\n    {state ? (\n      <Icon type=\"heart\" color=\"red\" size={size} />\n    ) : (\n      <Icon type=\"heart-hollow\" color=\"gray\" size={size} />\n    )}\n  </button>\n);\n\nFavoriteIcon.propTypes = {\n  action: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  state: PropTypes.bool,\n};\n\nFavoriteIcon.defaultProps = {\n  className: '',\n  size: 12,\n  state: false,\n};\n\nexport default FavoriteIcon;\n","// When pasting SVG from illustrator, use helper to convert svg string into a inline string: https://repl.it/@kavispires/ConvertSVGtoInlineString\n\nexport default {\n  alert:\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M57,78c0,1.2-1,2.2-2.2,2.2h-9.6 c-1.2,0-2.2-1-2.2-2.2v-9.6c0-1.2,1-2.2,2.2-2.2h9.6c1.2,0,2.2,1,2.2,2.2V78z M56.6,57.8c-0.2,1.1-1.5,2-3.2,2h-6.9 c-1.6,0-3-0.9-3.2-2L38,22.2c-0.1-0.6,0.2-1.2,0.8-1.7c0.6-0.5,1.5-0.7,2.4-0.7h17.6c0.9,0,1.8,0.3,2.4,0.7c0.6,0.5,0.9,1.1,0.8,1.7 L56.6,57.8z',\n  'back-arrow':\n    'M87.4,37.1C76.6,28,63.8,23.3,50.2,20.5c-3.9-0.8-7.9-1.3-12-2c0-3.7,0-7.2,0-10.8c0-1.9-0.5-3.4-2.3-4.3 c-1.8-0.9-3.4-0.3-4.9,1c-9.7,8.5-19.4,17-29.1,25.6c-2.5,2.2-2.5,4.5,0,6.8c9.7,8.5,19.4,17,29.1,25.6c1.5,1.3,3.1,1.8,4.9,1 c1.8-0.8,2.2-2.4,2.2-4.3c-0.1-3.7,0-7.4,0-11.9c6.4,1.3,12.4,2.2,18.3,3.8c7,1.8,13.4,4.9,18.6,10.1c3.6,3.7,5.8,8,5.1,13.3 c-0.6,4.4-2.8,8.1-6.1,10.9c-3.1,2.6-6.6,4.6-10,6.8c-1.2,0.8-2.4,1.6-1.7,3.2c0.7,1.8,2.2,1.6,3.6,1.1c1.7-0.7,3.3-1.3,5-2 c9.1-4.1,17.4-9.2,23.4-17.4c5-6.8,7-14.4,4.8-22.7C97.3,47.3,93,41.7,87.4,37.1z',\n  'back-arrow-circle':\n    'M50,0c27.7,0,50,22.4,50,50c0,27.6-22.5,50-50.1,50C22.3,100-0.1,77.5,0,49.9C0.1,22.3,22.5,0,50,0z M41.9,49.6 c4.3,0.9,8.4,1.5,12.4,2.5c4.7,1.2,9.1,3.3,12.6,6.9c2.5,2.5,3.9,5.4,3.5,9c-0.4,3-1.9,5.5-4.1,7.4c-2.1,1.7-4.5,3.1-6.8,4.6 c-0.8,0.5-1.6,1.1-1.2,2.2c0.5,1.2,1.5,1.1,2.5,0.7c1.1-0.4,2.3-0.9,3.4-1.4c6.1-2.8,11.8-6.2,15.8-11.8c3.4-4.6,4.7-9.7,3.2-15.4 c-1.3-4.8-4.2-8.6-7.9-11.7c-7.3-6.2-16-9.3-25.2-11.2c-2.7-0.5-5.4-0.9-8.1-1.3c0-2.5,0-4.9,0-7.3c0-1.3-0.3-2.3-1.5-2.9 c-1.2-0.6-2.3-0.2-3.3,0.7C30.5,26.5,23.9,32.2,17.3,38c-1.7,1.5-1.7,3.1,0,4.6c6.6,5.8,13.1,11.5,19.7,17.3c1,0.9,2.1,1.2,3.3,0.7 c1.2-0.6,1.5-1.6,1.5-2.9C41.8,55.2,41.9,52.7,41.9,49.6z',\n  check:\n    'M50,0C22.5,0,0,22.5,0,50s22.5,50,50,50s50-22.5,50-50S77.5,0,50,0z M75.6,41.2L47.5,73.1 c-1.2,1.2-3.1,1.2-4.4,0.6L23.1,60c-1.9-1.3-1.9-3.1-0.6-4.4l6.2-8.8c0.6-1.9,2.5-1.9,4.4-1.2l6.9,5c1.2,1.2,3.1,0.6,4.4-0.6 l18.1-20c1.2-1.2,3.1-1.2,4.4,0l8.1,6.9C76.2,38.1,76.2,40,75.6,41.2z',\n  'chevron-down':\n    'M49.8,75c-1.6,0-3.1-0.6-4.4-1.8L6.8,35.7c-2.5-2.4-2.5-6.4-0.1-8.8c2.4-2.5,6.4-2.5,8.8-0.1l34.3,33.3l34.7-33.3 c2.5-2.4,6.4-2.3,8.8,0.2c2.4,2.5,2.3,6.4-0.2,8.8L54.1,73.3C52.9,74.4,51.4,75,49.8,75z',\n  'chevron-left':\n    'M25,49.8c0-1.6,0.6-3.1,1.8-4.4L64.3,6.8c2.4-2.5,6.4-2.5,8.8-0.1c2.5,2.4,2.5,6.4,0.1,8.8L39.9,49.8l33.3,34.7 c2.4,2.5,2.3,6.4-0.2,8.8c-2.5,2.4-6.4,2.3-8.8-0.2L26.7,54.1C25.6,52.9,25,51.4,25,49.8z',\n  'chevron-right':\n    'M75,50.2c0,1.6-0.6,3.1-1.8,4.4L35.7,93.2c-2.4,2.5-6.4,2.5-8.8,0.1c-2.5-2.4-2.5-6.4-0.1-8.8l33.3-34.3L26.7,15.5 C24.4,13,24.4,9,26.9,6.6c2.5-2.4,6.4-2.3,8.8,0.2l37.5,39.1C74.4,47.1,75,48.6,75,50.2z',\n  'chevron-up':\n    'M50.2,25c1.6,0,3.1,0.6,4.4,1.8l38.7,37.5c2.5,2.4,2.5,6.4,0.1,8.8c-2.4,2.5-6.4,2.5-8.8,0.1L50.2,39.9L15.5,73.3 C13,75.6,9,75.6,6.6,73.1c-2.4-2.5-2.3-6.4,0.2-8.8l39.1-37.5C47.1,25.6,48.6,25,50.2,25z',\n  clock:\n    'M100,50c0,9.4-2.2,17.8-6.6,25.1c-4.6,7.6-10.7,13.7-18.3,18.3C67.8,97.8,59.4,100,50,100s-17.8-2.2-25.1-6.6 c-7.6-4.6-13.7-10.7-18.3-18.3C2.2,67.8,0,59.4,0,50s2.2-17.8,6.6-25.1c4.6-7.6,10.7-13.7,18.3-18.3C32.2,2.2,40.6,0,50,0 s17.8,2.2,25.1,6.6c7.6,4.6,13.7,10.7,18.3,18.3C97.8,32.2,100,40.6,100,50z M85.4,50c0-6.2-1.5-12.2-4.6-17.8 c-3.2-5.5-7.5-9.8-13-13c-5.6-3-11.6-4.6-17.8-4.6s-12.2,1.5-17.8,4.6c-5.5,3.2-9.8,7.5-13,13c-3,5.6-4.6,11.6-4.6,17.8 s1.5,12.2,4.6,17.8c3.2,5.5,7.5,9.8,13,13c5.6,3,11.6,4.6,17.8,4.6s12.2-1.5,17.8-4.6c5.5-3.2,9.8-7.5,13-13 C83.9,62.2,85.4,56.2,85.4,50z M58.4,26.9v29.2c0,0.6-0.2,1.1-0.7,1.6c-0.5,0.5-1,0.7-1.6,0.7H35.4c-0.6,0-1.1-0.2-1.6-0.7 c-0.3-0.6-0.5-1.1-0.5-1.6v-4.1c0-0.6,0.2-1.1,0.5-1.4c0.5-0.5,1-0.7,1.6-0.7H50V26.9c0-0.5,0.2-0.9,0.7-1.4 c0.2-0.5,0.6-0.7,1.4-0.7h4.1c0.6,0,1.1,0.2,1.6,0.7C58.2,26,58.4,26.5,58.4,26.9z',\n  default:\n    'M81.2,12.5c3.8,0,6.2,2.5,6.2,6.2v62.5c0,3.8-2.5,6.2-6.2,6.2H18.8c-3.7,0-6.2-2.5-6.2-6.2V18.8 c0-3.7,2.5-6.2,6.2-6.2H81.2 M81.2,0H18.8C8.1,0,0,8.1,0,18.8v62.5C0,91.9,8.1,100,18.8,100h62.5c10.6,0,18.8-8.1,18.8-18.8V18.8 C100,8.1,91.9,0,81.2,0L81.2,0z M35.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,35.7,35.3,33.6,35.3,31.1z M58.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,35.7,58.3,33.6,58.3,31.1z M81.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,35.7,81.3,33.6,81.3,31.1z M35.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,58.3,35.3,56.3,35.3,53.8z M58.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,58.3,58.3,56.3,58.3,53.8z M81.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,58.3,81.3,56.3,81.3,53.8z M35.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,81,35.3,79,35.3,76.5z M58.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,81,58.3,79,58.3,76.5z M81.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,81,81.3,79,81.3,76.5z',\n  error:\n    'M70.7,0H29.3L0,29.3v41.4L29.3,100h41.4L100,70.7V29.3L70.7,0z M45.1,69.6v-6.7c0-0.8,0.7-1.5,1.5-1.5h6.7 c0.8,0,1.5,0.7,1.5,1.5v6.7c0,0.8-0.7,1.5-1.5,1.5h-6.7C45.8,71.2,45.1,70.5,45.1,69.6z M54.6,55.5c-0.1,0.8-1.1,1.4-2.2,1.4h-4.8 c-1.2,0-2.1-0.6-2.2-1.4l-3.7-24.9c-0.1-0.4,0.1-0.9,0.6-1.2c0.4-0.3,1-0.5,1.7-0.5h12.3c0.6,0,1.2,0.2,1.7,0.5 c0.4,0.3,0.6,0.8,0.6,1.2L54.6,55.5z',\n  'gender-female':\n    'M50,0C22.39,0,0,22.39,0,50c0,27.61,22.39,50,50,50s50-22.39,50-50C100,22.39,77.61,0,50,0z M50.02,15 c6.07,0,10.99,4.92,10.99,10.99s-4.92,10.99-10.99,10.99c-6.07,0-10.99-4.92-10.99-10.99S43.95,15,50.02,15z M67.69,72.35h-7.14 c-1.83,0-3.46,1.49-3.61,3.32l-0.5,6.01C56.29,83.51,54.66,85,52.83,85h-5.61c-1.83,0-3.46-1.49-3.61-3.32l-0.5-6.01 c-0.15-1.83-1.78-3.32-3.61-3.32h-7.14c-1.83,0-2.88-1.43-2.32-3.17l7.8-24.33c0.56-1.75,2.52-3.17,4.35-3.17H57.2 c1.83,0,3.82,1.42,4.41,3.15l8.33,24.37C70.53,70.93,69.52,72.35,67.69,72.35z',\n  'gender-male':\n    'M50,0C22.39,0,0,22.39,0,50c0,27.61,22.39,50,50,50s50-22.39,50-50C100,22.39,77.61,0,50,0z M50,15 c6.07,0,10.99,4.92,10.99,10.99S56.07,36.97,50,36.97c-6.07,0-10.99-4.92-10.99-10.99S43.93,15,50,15z M67.45,63.33 c0,1.83-1.5,3.33-3.33,3.33H61c-1.83,0-3.46,1.49-3.61,3.32l-0.97,11.69C56.26,83.51,54.64,85,52.81,85h-5.61 c-1.83,0-3.46-1.49-3.61-3.32l-0.97-11.69c-0.15-1.83-1.78-3.32-3.61-3.32h-3.12c-1.83,0-3.33-1.5-3.33-3.33V45 c0-1.83,1.5-3.33,3.33-3.33h28.23c1.83,0,3.33,1.5,3.33,3.33V63.33z',\n  'gender-mixed':\n    'M50,0C22.39,0,0,22.39,0,50c0,27.61,22.39,50,50,50s50-22.39,50-50C100,22.39,77.61,0,50,0z M31.84,23.29 c4.63,0,8.38,3.75,8.38,8.38c0,4.63-3.75,8.39-8.38,8.39c-4.63,0-8.39-3.75-8.39-8.39C23.45,27.04,27.21,23.29,31.84,23.29z  M45.32,67.06h-5.45c-1.4,0-2.64,1.14-2.76,2.54l-0.38,4.59c-0.12,1.39-1.36,2.54-2.76,2.54h-4.28c-1.4,0-2.64-1.14-2.76-2.54 l-0.38-4.59c-0.12-1.39-1.36-2.54-2.76-2.54h-5.45c-1.4,0-2.19-1.09-1.77-2.42l5.95-18.57c0.43-1.33,1.92-2.42,3.32-2.42h11.46 c1.4,0,2.91,1.08,3.37,2.41l6.36,18.6C47.49,65.97,46.72,67.06,45.32,67.06z M70.21,23.29c4.63,0,8.39,3.75,8.39,8.38 c0,4.63-3.75,8.39-8.39,8.39c-4.63,0-8.38-3.75-8.38-8.39C61.83,27.04,65.58,23.29,70.21,23.29z M83.53,60.18 c0,1.4-1.14,2.54-2.54,2.54h-2.38c-1.4,0-2.64,1.14-2.76,2.54l-0.74,8.92c-0.12,1.39-1.36,2.54-2.76,2.54h-4.28 c-1.4,0-2.64-1.14-2.76-2.54l-0.74-8.92c-0.12-1.39-1.36-2.54-2.76-2.54h-2.38c-1.4,0-2.54-1.14-2.54-2.54V46.18 c0-1.4,1.14-2.54,2.54-2.54h21.55c1.4,0,2.54,1.14,2.54,2.54V60.18z',\n  'go-to':\n    'M59.45,49.53c0.01,0.02-0.02,0.06-0.07,0.09s-0.61,0.79-1.25,1.69L45.17,69.38C44.52,70.27,43.1,71,42,71H29 c-1.1,0-1.48-0.73-0.84-1.63l7.62-10.74c0.64-0.9,0.26-1.63-0.84-1.63H13c-1.1,0-2-0.9-2-2V45c0-1.1,0.9-2,2-2h22.65 c1.1,0,1.48-0.73,0.84-1.63l-8.33-11.74C27.52,28.73,27.9,28,29,28h13c1.1,0,2.52,0.73,3.17,1.62l12.97,18.07 c0.64,0.89,1.21,1.65,1.25,1.69s0.08,0.08,0.07,0.09S59.44,49.51,59.45,49.53z M42,0c-1.65,0-3,1.35-3,3v16c0,1.65,1.35,3,3,3h22 c1.65,0,3,1.35,3,3v50c0,1.65-1.35,3-3,3H42c-1.65,0-3,1.35-3,3v16c0,1.65,1.35,3,3,3h44c1.65,0,3-1.35,3-3V85c0-1.65,0-3.9,0-5 s0-3.35,0-5V25c0-1.65,0-4.35,0-6v-1c0-1.65,0-4.35,0-6V3c0-1.65-1.35-3-3-3H42z',\n  'hand-negative':\n    'M61.01,72.06c1.49,3.99,3.22,7.93,4.26,12.03c2.28,8.94-4.49,16.89-13.28,15.8c-4.59-0.57-7.71-3.45-10.01-7.24 c-2.28-3.76-4.65-7.49-6.54-11.44c-3.42-7.17-8.8-12.32-15.49-16.34c-2.88-1.73-5.66-3.62-8.43-5.54c-1.76-1.22-2.96-2.81-2.95-5.15 c0.04-11.38-0.03-22.77,0.07-34.15c0.03-3.54,1.91-5.75,5.29-6.81c1.1-0.34,2.26-0.51,3.4-0.67c5.24-0.76,10.34-1.71,14.98-4.7 c6.03-3.88,12.82-6.16,19.88-7.33c5.4-0.9,10.84-0.75,16.06,1.23c5.36,2.03,9.32,5.37,10.85,11.21c0.4,1.52,1.41,3,2.49,4.19 c2.96,3.27,4.18,6.97,3.83,11.36c-0.1,1.29,0.28,2.8,0.94,3.92c1.67,2.87,2.89,5.87,2.52,9.18c-0.24,2.16,0.13,3.95,1.05,5.9 c2.78,5.9,1.6,12.48-2.61,16.48c-2.75,2.6-6.16,3.15-9.68,3.21c-6.06,0.09-12.13,0.03-18.81,0.03 C59.75,69.26,60.48,70.63,61.01,72.06z M14.52,54.03c0.67,0.54,1.43,1.22,2.27,1.79c2.24,1.54,4.43,3.18,6.79,4.51 c7.95,4.5,13.46,11.14,17.52,19.2c1.63,3.23,3.52,6.33,5.39,9.43c0.73,1.21,1.61,2.36,2.62,3.34c1.92,1.85,4.24,2.56,6.76,1.4 c2.56-1.18,4.03-3.25,3.99-6.13c-0.02-1.27-0.26-2.59-0.7-3.78c-1.47-4-3.06-7.95-4.63-11.91c-0.28-0.72-0.67-1.4-0.96-2.12 c-1.77-4.49,0.54-8.2,5.33-8.3c5.56-0.12,11.13-0.03,16.7-0.05c1.16,0,2.34,0.03,3.49-0.14c4.83-0.68,7.08-3.47,6.37-8.31 c-0.25-1.72-1.35-3.29-1.94-4.98c-0.45-1.29-1.25-2.82-0.91-3.96c1.32-4.45-0.14-7.83-3.32-10.78c-0.18-0.17-0.25-0.45-0.5-0.91 c0.93-5.11,2.08-10.58-4.55-13.12c-0.18-0.9-0.35-1.52-0.43-2.15c-0.76-6.1-3.64-9.05-9.69-10.43C56.85,4.97,50,6.5,43.25,8.97 c-2.42,0.89-4.93,1.82-7.01,3.28c-5.48,3.84-11.59,5.48-18.12,6.09c-1.12,0.1-2.21,0.45-3.6,0.75 C14.52,31.05,14.52,42.42,14.52,54.03z',\n  'hand-positive':\n    'M46.01,6c-2.12,3.51-4.26,7.02-6.1,10.68c-4.59,9.12-10.84,16.63-19.83,21.73c-2.67,1.51-5.15,3.37-7.68,5.11 c-0.95,0.65-1.81,1.42-2.57,2.03c0,13.14,0,26.02,0,39.56c1.58,0.34,2.82,0.73,4.08,0.85c7.38,0.69,14.3,2.55,20.51,6.9 c2.36,1.65,5.2,2.71,7.94,3.71c7.64,2.8,15.4,4.53,23.63,2.65c6.84-1.57,10.11-4.9,10.97-11.81c0.09-0.71,0.28-1.41,0.49-2.44 c7.51-2.88,6.2-9.07,5.15-14.85c0.28-0.53,0.36-0.85,0.56-1.04c3.6-3.35,5.26-7.17,3.76-12.21c-0.38-1.28,0.53-3.02,1.03-4.48 c0.66-1.91,1.91-3.69,2.19-5.64c0.8-5.48-1.74-8.64-7.21-9.41c-1.3-0.18-2.63-0.15-3.95-0.15c-6.3-0.02-12.6,0.08-18.9-0.05 c-5.42-0.12-8.04-4.31-6.04-9.4c0.32-0.82,0.76-1.59,1.08-2.4c1.77-4.49,3.57-8.96,5.24-13.49c0.49-1.35,0.77-2.84,0.79-4.27 c0.04-3.25-1.62-5.6-4.52-6.93c-2.86-1.31-5.49-0.51-7.66,1.58C47.84,3.33,46.84,4.64,46.01,6z',\n  heart:\n    'M50,85.5c-1,0-1.9-0.3-2.5-1L12.7,51c-0.1,0-0.4-0.2-0.7-0.6s-0.6-0.7-0.9-0.8c-0.7-0.8-1.7-2-3.1-3.7 c-1.3-1.6-2.5-3.4-3.7-5.5c-1-1.7-2-3.9-2.9-6.6C0.5,31.2,0,28.6,0,26c0-8.1,2.3-14.5,7-19.1C11.6,2.3,18.2,0,26.8,0 c2.2,0,4.6,0.4,7,1.2s4.7,1.8,6.6,3.1c1.8,1.2,3.6,2.5,5.3,3.9c1.6,1.2,3,2.4,4.3,3.7c1.3-1.3,2.7-2.5,4.3-3.7 c1.7-1.4,3.5-2.7,5.3-3.9c2-1.3,4.2-2.3,6.6-3.1C68.7,0.4,71,0,73.2,0C81.8,0,88.4,2.3,93,6.8c4.7,4.7,7,11.1,7,19.1 s-4.2,16.5-12.7,25.2L52.5,84.6C51.9,85.2,51,85.5,50,85.5z',\n  'heart-hollow':\n    'M73.2,8c6.4,0,11,1.5,14.1,4.5C90.5,15.6,92,20.1,92,26c0,5.9-3.5,12.4-10.3,19.5L50,75.9L18.3,45.2 c-0.2-0.2-0.4-0.4-0.6-0.5c-0.3-0.3-0.7-0.7-1-1c-0.6-0.8-1.5-1.7-2.5-3c-1-1.2-1.9-2.6-2.9-4.2c-0.1-0.1-0.1-0.2-0.2-0.3 c-0.5-0.8-1.3-2.3-2.2-5c0,0,0-0.1,0-0.1C8.3,29.4,8,27.7,8,26c0-5.9,1.5-10.3,4.7-13.5c3-3,7.6-4.5,14.1-4.5 c1.4,0,2.9,0.3,4.6,0.8c1.7,0.6,3.3,1.3,4.6,2.2c0,0,0.1,0,0.1,0.1c1.5,1,3,2.1,4.4,3.3c0.1,0.1,0.2,0.2,0.4,0.3 c1.3,0.9,2.4,1.9,3.4,3c1.5,1.5,3.5,2.3,5.7,2.3s4.2-0.8,5.7-2.3c1-1,2.2-2,3.4-3c0.1-0.1,0.2-0.2,0.4-0.3c1.4-1.2,2.9-2.3,4.4-3.3 c0,0,0.1,0,0.1-0.1c1.3-0.9,2.9-1.6,4.6-2.2C70.3,8.3,71.9,8,73.2,8 M73.2,0c-2.2,0-4.6,0.4-7,1.2C63.7,2,61.5,3,59.6,4.3 c-1.8,1.2-3.6,2.5-5.3,3.9c-1.6,1.2-3,2.4-4.3,3.7c-1.3-1.3-2.7-2.5-4.3-3.7c-1.7-1.4-3.5-2.7-5.3-3.9c-2-1.3-4.2-2.3-6.6-3.1 C31.3,0.4,29,0,26.8,0C18.2,0,11.6,2.3,7,6.8C2.3,11.5,0,17.9,0,26c0,2.6,0.5,5.2,1.4,7.8c0.9,2.7,1.9,4.9,2.9,6.6 c1.2,2.1,2.4,3.9,3.7,5.5c1.4,1.7,2.5,2.9,3.1,3.7c0.3,0.1,0.6,0.4,0.9,0.8c0.3,0.4,0.6,0.6,0.7,0.6l34.8,33.6c0.7,0.7,1.5,1,2.5,1 s1.9-0.3,2.5-1l34.8-33.4C95.8,42.4,100,34,100,26c0-8.1-2.3-14.5-7-19.1C88.4,2.3,81.8,0,73.2,0L73.2,0z',\n  info:\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M57.9,78.3c0,1.7-1.3,3-3,3h-9.9 c-1.7,0-3-1.3-3-3V43.6c0-1.7,1.3-3,3-3h9.9c1.7,0,3,1.3,3,3V78.3z M57.9,30.6c0,1.7-1.3,3-3,3h-9.9c-1.7,0-3-1.3-3-3v-9.9 c0-1.7,1.3-3,3-3h9.9c1.7,0,3,1.3,3,3V30.6z',\n  lock:\n    'M20.2,100h59.6c3.5,0,6.4-2.9,6.4-6.4V44.7c0-3.5-2.9-6.4-6.4-6.4h-3.2V26.6C76.6,11.9,64.7,0,50,0S23.4,11.9,23.4,26.6 v11.7h-3.2c-3.5,0-6.4,2.9-6.4,6.4v48.9C13.8,97.1,16.7,100,20.2,100z M50,77.7c-4.7,0-8.5-3.8-8.5-8.5c0-4.7,3.8-8.5,8.5-8.5 s8.5,3.8,8.5,8.5C58.5,73.8,54.7,77.7,50,77.7z M40.4,26.6c0-5.3,4.3-9.6,9.6-9.6s9.6,4.3,9.6,9.6v11.7H40.4V26.6z',\n  login:\n    'M77.2,50c0,1.1-0.5,2.1-1.4,3L40.4,88.4c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H4.1 c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3 c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L75.8,47C76.7,47.9,77.2,48.9,77.2,50z M82,8H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20 c1.7,0,10,0.7,10,11v21v4v21c0,10.3-8.4,11-10,11H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20c0.5,0,4.6-0.1,8.9-2.3C95,87.4,100,82.7,100,73 V52v-4V27C100,11.4,87,8,82,8z',\n  logout:\n    'M0,27l0,21l0,4l0,21c0,9.7,5,14.4,9.1,16.7c4.3,2.3,8.4,2.3,8.9,2.3h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18c-1.6,0-10-0.7-10-11 V52v-4V27c0-10.3,8.4-11,10-11h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18C13,8,0,11.4,0,27z M100.2,50c0,1.1-0.5,2.1-1.4,3L63.4,88.4 c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H27.1c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4 c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L98.8,47 C99.7,47.9,100.2,48.9,100.2,50z',\n  no:\n    '    M50,0C22.5,0,0,22.5,0,50s22.5,50,50,50s50-22.5,50-50S77.5,0,50,0z M72.5,65.6L65,73.1c-1.2,1.2-3.1,1.2-4.4,0L52.5,65 c-1.2-1.2-3.1-1.2-4.4,0L40,73.1c-1.2,1.2-3.1,1.2-4.4,0l-7.5-7.5c-1.2-1.2-1.2-3.1,0-4.4l8.1-8.1c1.2-1.2,1.2-3.1,0-4.4L26.9,40 c-1.2-1.2-1.2-3.1,0-4.4l7.5-7.5c1.2-1.2,3.1-1.2,4.4,0l8.1,8.1c1.9,1.2,3.8,1.2,5,0l8.1-8.1c1.2-1.2,3.1-1.2,4.4,0l7.5,7.5 c1.2,1.2,1.2,3.1,0,4.4l-8.1,8.1c-1.2,1.2-1.2,3.1,0,4.4l8.1,8.1C73.8,62.5,73.8,64.4,72.5,65.6z',\n  plug:\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,90.5 C27.6,90.5,9.5,72.4,9.5,50C9.5,27.6,27.6,9.5,50,9.5S90.5,27.6,90.5,50C90.5,72.4,72.4,90.5,50,90.5z M34,66H33 c-2.5,0-4.5-2-4.5-4.5V38.5c0-2.5,2-4.5,4.5-4.5H34c2.5,0,4.5,2,4.5,4.5v23.1C38.5,64,36.5,66,34,66z M70,66H69 c-2.5,0-4.5-2-4.5-4.5V38.5c0-2.5,2-4.5,4.5-4.5H70c2.5,0,4.5,2,4.5,4.5v23.1C74.5,64,72.5,66,70,66z',\n  'plug-available':\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,90.5 c-10.3,0-19.7-3.8-26.8-10.1c1.4,0,3.3,0.4,5.6,1.2c0.9,0.3,1.8,0.7,2.7,1.1c2.5,1,5.2,2.1,8.1,2.6c0.6,0.1,1.3,0.2,2.2,0.2 c0.9,0,1.8-0.1,2.8-0.4c3.3-1,5.1-3.7,4.8-7c-0.2-1.8-1-3.6-2.4-5.4c-2.5-3-6.2-5.1-10.2-5.7c-1.6-0.2-3.1-0.1-4.4,0 c-1.7,0.1-2.8,0.2-3.7-0.2c-1.2-0.6-2.1-2.4-2.2-4.6c-0.1-1.5,0.1-2.7,0.6-3.4c0.2-0.2,0.3-0.4,0.4-0.5c1,0.4,2.9,2.8,3.8,3.8 c0.7,0.8,1.3,1.6,1.9,2.2c1.6,1.7,3.3,2,4.4,2c1,0,2.7-0.3,4.2-1.9l1.3-1.3l0.3,0.3c6.3,6.3,16.7,6.3,23.1,0l9.8-9.8 c1.8-1.8,1.8-4.7,0-6.5l-2.9-2.9l6.8-6.8c1.1-1.1,1.1-3,0-4.1h0c-1.1-1.1-3-1.1-4.1,0l-6.8,6.8l-6.8-6.8l6.8-6.8 c1.1-1.1,1.1-3,0-4.1c-1.1-1.1-3-1.1-4.1,0l-6.8,6.8l-2.9-2.9c-1.8-1.8-4.7-1.8-6.5,0L39.1,36c-6,6-6.3,15.7-0.9,22.1 c-0.2,0.2-0.4,0.4-0.6,0.6c-0.3-0.3-0.6-0.7-0.9-1.1c-2.2-2.7-5.2-6.5-9.3-6.5c0,0,0,0-0.1,0c-1.5,0-3.8,0.6-5.8,3.2 c-1.6,2.1-2.3,4.8-2,8.2c0.4,4.8,2.7,8.7,6.2,10.4c2.6,1.2,5.2,1.1,7.2,0.9c1-0.1,2-0.1,2.8,0c2.3,0.3,4.4,1.5,5.8,3.2 c0.5,0.6,0.7,1,0.8,1.3c-0.4,0.1-1,0.1-1.7,0c-2.1-0.3-4.3-1.2-6.6-2.2c-1-0.4-2-0.8-3-1.2c-5.6-2.1-10.1-2.2-13.3-0.4 C12.6,67.8,9.5,59.3,9.5,50C9.5,27.6,27.6,9.5,50,9.5S90.5,27.6,90.5,50C90.5,72.4,72.4,90.5,50,90.5z',\n  'plug-connected':\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,9.5c10.1,0,19.4,3.7,26.4,9.8 l-7,7c-5.2-4.1-12.9-3.8-17.7,1l-8,8c-1.5,1.5-1.5,3.9,0,5.3l2,2l-3,3l-2.4-2.4c-1.5-1.5-3.9-1.5-5.3,0l-8,8 c-4.8,4.8-5.2,12.4-1,17.7l-7,7c-5.9-7-9.5-16.1-9.5-26C9.5,27.6,27.6,9.5,50,9.5z M46.3,49.3l3-3l5,5l-3,3L46.3,49.3z M50,90.5 c-10.1,0-19.3-3.7-26.4-9.8l7-7c5.2,5.2,13.7,5.2,18.8,0l8-8c1.5-1.5,1.5-3.9,0-5.3l-2.6-2.6l3-3l3,3c1.5,1.5,3.9,1.5,5.3,0l8-8 c5.2-5.2,5.2-13.6,0-18.8L81,24c5.9,7,9.5,16.1,9.5,26C90.5,72.4,72.4,90.5,50,90.5z',\n  private:\n    'M41,0C18.4,0,0,18.4,0,41s18.4,41,41,41s41-18.4,41-41S63.6,0,41,0z M58,59.5c0,1.6-1.3,3-3,3H27c-1.7,0-3-1.4-3-3v-23 c0-1.7,1.3-3,3-3h1.5V28c0-6.9,5.6-12.5,12.5-12.5S53.5,21.1,53.5,28v5.5H55c1.7,0,3,1.3,3,3V59.5z M45.5,28v5.5h-9V28 c0-2.5,2-4.5,4.5-4.5S45.5,25.5,45.5,28z M45,48c0,2.2-1.8,4-4,4s-4-1.8-4-4c0-2.2,1.8-4,4-4S45,45.8,45,48z',\n  'question-mark':\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M56.5,76.4c0,1-0.8,1.8-1.8,1.8h-9.5 c-1,0-1.8-0.8-1.8-1.8v-9.5c0-1,0.8-1.8,1.8-1.8h9.5c1,0,1.8,0.8,1.8,1.8V76.4z M66,38.3c0,0.9-0.1,1.6-0.3,2.3 c-0.2,0.7-0.3,1.3-0.6,1.8c-0.3,0.6-0.6,1.1-1,1.6l-6.4,7.7c-0.4,0.4-0.7,0.9-0.9,1.3c-0.2,0.3-0.2,0.5-0.2,0.8v5.2 c0,1-0.8,1.8-1.8,1.8h-9.5c-1,0-1.8-0.8-1.8-1.8v-6.1c0-1.2,0.3-2.4,0.8-3.6c0.5-1,1.1-2,1.9-2.9l6-6.9c0.3-0.3,0.5-0.7,0.6-1.1 c0.1-0.5,0.2-1,0.2-1.6v-3.5c0-0.1,0-0.5-0.6-0.9c-0.6-0.4-1.3-0.6-2.2-0.6c-0.8,0-1.6,0.2-2.4,0.6c-0.6,0.3-0.6,0.6-0.6,0.9v3.8 c0,1-0.8,1.8-1.8,1.8h-9.5c-1,0-1.8-0.8-1.8-1.8v-3.9c0-1.7,0.5-3.3,1.4-4.8c0.9-1.4,2.1-2.7,3.6-3.8c1.5-1,3.2-1.8,5.1-2.4 c1.9-0.6,3.9-0.9,6.1-0.9c2.5,0,4.8,0.4,6.9,1.1c2.1,0.7,3.9,1.8,5.3,3.2c0.7,0.7,1.2,1.3,1.7,1.9c0.5,0.6,0.9,1.4,1.2,2.1 c0.5,1.3,0.8,3.1,0.8,5.3C66,36.5,66,37.5,66,38.3z',\n  save:\n    'M100,90c0,1.5-0.5,2.8-1.5,3.8s-2.2,1.5-3.8,1.5H5.2H5c-1.3,0-2.5-0.5-3.5-1.5S0,91.5,0,90V28.2V28c0-1.5,0.3-2.7,1-3.5 l10.5-18c0.8-1.2,1.8-1.8,3-1.8h70.8h0.2c1.8,0,2.9,0.8,3.2,2.5l10,17.2v0.2c0.8,0.8,1.2,1.9,1.2,3.2v0.2V90z M90.5,22.8L83.8,11 H16.2L9.5,22.8H90.5z M67.2,58c-0.2-0.5-0.6-0.8-1.2-0.8h-7.5V37c0-1-0.5-1.5-1.5-1.5H43c-1,0-1.5,0.5-1.5,1.5v20.2H34 c-0.7,0-1.1,0.2-1.2,0.8s-0.2,1,0,1.5l16,22.5c0.3,0.3,0.8,0.5,1.2,0.5s0.9-0.2,1.2-0.5l16-22.5C67.4,59,67.4,58.5,67.2,58z',\n  'sorting-arrows':\n    'M16.48,42.15c-1.85-1.92-1.79-4.98,0.14-6.83L46.81,6.35C47.74,5.45,48.95,5,50.15,5c1.21,0,2.43,0.45,3.36,1.36 L83.4,35.34c1.91,1.86,1.96,4.91,0.11,6.83c-1.86,1.92-4.91,1.96-6.83,0.11L50.13,16.54L23.31,42.29 C21.39,44.14,18.33,44.08,16.48,42.15z M76.69,56.71L49.87,82.46L23.33,56.73c-1.91-1.86-4.97-1.81-6.83,0.11 c-1.86,1.91-1.81,4.97,0.11,6.83l29.88,28.98c0.94,0.91,2.15,1.36,3.36,1.36c1.21,0,2.41-0.45,3.34-1.35l30.18-28.98 c1.92-1.85,1.99-4.9,0.14-6.83C81.67,54.92,78.61,54.86,76.69,56.71z',\n  stop:\n    'M68.3,90.5H31.7c-4.4,0-9.5-3-11.7-6.8L1.6,52c-2.2-3.8-2.2-9.7,0-13.5L20,6.8C22.2,3,27.3,0,31.7,0h36.6 c4.4,0,9.5,3,11.7,6.8l18.3,31.7c2.2,3.8,2.2,9.7,0,13.5L80,83.8C77.9,87.6,72.7,90.5,68.3,90.5z M31.7,5.9c-2.3,0-5.5,1.8-6.6,3.8\tL6.7,41.4c-1.2,2-1.2,5.6,0,7.6l18.3,31.7c1.2,2,4.3,3.8,6.6,3.8h36.6c2.3,0,5.5-1.8,6.6-3.8l18.3-31.7c1.1-2,1.1-5.6,0-7.6 L74.9,9.7c-1.1-2-4.3-3.8-6.6-3.8H31.7z M70.9,30.5c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.8-3.6,4.6c0,4.8,0,9.6,0,14.3 c0,0.7-0.4,1.3-0.7,2c-0.3-0.7-0.9-1.3-0.9-2c-0.1-6,0-11.9-0.1-17.9c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.7-3.6,4.6 c0,6,0,11.9,0,17.9c0,0.6-0.5,1.3-0.8,1.9c-0.3-0.6-0.7-1.2-0.9-1.9c-0.1-0.5,0-1.1,0-1.6c0-7.8,0-15.5,0-23.3 c0-2.1-0.5-3.8-2.8-4.3c-2.5-0.6-4.4,1.1-4.4,4c0,8,0,16,0,24c0,1-0.5,2-0.8,3c-0.3-1-0.8-2-0.8-3.1c-0.1-5.8,0.1-11.6-0.1-17.4 c0-1.2-1.1-2.8-2.1-3.4c-0.8-0.5-2.8-0.2-3.6,0.5c-0.9,0.8-1.3,2.4-1.3,3.7c-0.1,10.6,0,21.2-0.1,31.8c0,0.7-0.5,1.3-0.7,2 c-0.5-0.4-1.1-0.8-1.5-1.3c-2.3-3.6-4.4-7.2-6.7-10.8c-1.5-2.5-3.5-3.2-5.4-2c-2,1.2-2.3,3.2-0.8,5.7c3.2,5.3,6.5,10.5,9.7,15.8 c2.6,4.3,6.4,6.3,11.4,6.3c4.9,0,9.9,0,14.8,0c8.1,0,13.2-5.1,13.3-13.2c0-5,0-10,0-15.1C70.9,41.2,70.9,35.8,70.9,30.5z',\n  'sub-unit':\n    'M81.23,55.11c0,0.98-0.29,1.69-0.87,2.12c-0.58,0.43-1.54,0.65-2.89,0.65h-5.49v-5.53h5.49c1.35,0,2.32,0.22,2.89,0.65 C80.94,53.42,81.23,54.12,81.23,55.11z M79.61,46.63c0.59-0.39,0.88-1.02,0.88-1.88c0-0.91-0.29-1.57-0.88-1.99 c-0.59-0.42-1.52-0.63-2.8-0.63h-4.83v5.09h4.83C78.08,47.22,79.02,47.02,79.61,46.63z M100,34.03v31.94 C100,71.49,95.49,76,89.97,76H10.03C4.51,76,0,71.49,0,65.97V34.03C0,28.51,4.51,24,10.03,24h79.94C95.49,24,100,28.51,100,34.03z  M34.07,55.18c0-1.33-0.28-2.47-0.85-3.43c-0.57-0.96-1.52-1.8-2.88-2.53c-1.35-0.72-3.21-1.35-5.57-1.86 c-1.45-0.29-2.54-0.58-3.28-0.87c-0.74-0.28-1.24-0.57-1.51-0.87s-0.41-0.68-0.41-1.14c0-0.79,0.38-1.42,1.14-1.9 c0.76-0.48,1.77-0.72,3.02-0.72c2.6,0,5.09,0.81,7.45,2.43l2.06-4.79c-0.98-0.84-2.35-1.52-4.11-2.05 c-1.76-0.53-3.57-0.79-5.44-0.79c-2.11,0-3.99,0.36-5.62,1.09c-1.63,0.73-2.9,1.72-3.8,2.99c-0.9,1.27-1.35,2.7-1.35,4.3 c0,1.4,0.28,2.58,0.83,3.54s1.52,1.79,2.89,2.51s3.28,1.33,5.71,1.84c1.97,0.42,3.3,0.84,4,1.25c0.7,0.42,1.05,0.96,1.05,1.62 c0,0.74-0.39,1.31-1.16,1.71c-0.77,0.41-1.9,0.61-3.37,0.61c-1.45,0-2.89-0.21-4.31-0.63c-1.43-0.42-2.77-1.02-4.02-1.81l-2.1,4.79 c1.18,0.86,2.72,1.55,4.61,2.06c1.89,0.52,3.81,0.77,5.75,0.77c3.56,0,6.33-0.72,8.3-2.16C33.09,59.73,34.07,57.74,34.07,55.18z  M60.8,37h-6.67v15.3c0,1.87-0.42,3.31-1.25,4.31c-0.84,1.01-2.04,1.51-3.61,1.51c-1.57,0-2.78-0.5-3.61-1.51 c-0.84-1.01-1.25-2.44-1.25-4.31V37h-6.64v15.04c0,3.69,0.98,6.49,2.93,8.41c1.95,1.92,4.81,2.88,8.57,2.88 c3.74,0,6.59-0.96,8.57-2.89c1.98-1.93,2.97-4.73,2.97-8.39V37z M87.53,55.88c0-1.6-0.41-2.94-1.22-4.04 c-0.81-1.09-1.98-1.87-3.5-2.34c1.28-0.47,2.27-1.21,2.99-2.23c0.71-1.02,1.07-2.19,1.07-3.52c0-2.06-0.81-3.71-2.42-4.92 C82.84,37.61,80.67,37,77.95,37H65.37V63h12.94c1.87,0,3.5-0.29,4.89-0.88c1.39-0.59,2.46-1.42,3.21-2.49 C87.16,58.55,87.53,57.31,87.53,55.88z',\n  trash:\n    'M91.8,18.7v4.1c0,0.5-0.2,1-0.5,1.6c-0.6,0.3-1.1,0.5-1.6,0.5h-6.2v61.9c0,3.7-1.1,6.8-3.2,9.4c-2,2.6-4.4,3.9-7.3,3.9 H18.7c-2.9,0-5.3-1.2-7.3-3.7c-2.1-2.6-3.2-5.7-3.2-9.4V24.9H2.1c-0.5,0-1-0.2-1.6-0.5C0.2,23.8,0,23.3,0,22.8v-4.1 c0-0.5,0.2-1,0.5-1.6c0.6-0.3,1.1-0.5,1.6-0.5h20.1l4.6-11c0.8-1.7,2-3,3.7-4.1c1.5-1.1,3.2-1.6,5-1.6h21c1.8,0,3.5,0.5,5,1.6 c1.7,1.1,2.9,2.4,3.7,4.1l4.6,11h20.1c0.5,0,1,0.2,1.6,0.5C91.6,17.7,91.8,18.3,91.8,18.7z M33.3,81.3V35.4c0-0.5-0.2-1-0.5-1.6 c-0.6-0.3-1.1-0.5-1.6-0.5h-4.1c-0.5,0-1,0.2-1.6,0.5c-0.3,0.3-0.5,0.8-0.5,1.6v45.9c0,0.8,0.2,1.3,0.5,1.6 c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5C33.2,82.3,33.3,81.7,33.3,81.3z M31.3,16.7h29.2l-3.2-7.8 c-0.2-0.2-0.5-0.4-1.1-0.7H35.6c-0.6,0.3-1,0.5-1.1,0.7L31.3,16.7z M50,81.3V35.4c0-0.5-0.2-1-0.5-1.6c-0.6-0.3-1.1-0.5-1.6-0.5 h-4.1c-0.5,0-1,0.2-1.6,0.5c-0.3,0.6-0.5,1.1-0.5,1.6v45.9c0,0.5,0.2,1,0.5,1.6c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5 C49.8,82.3,50,81.7,50,81.3z M66.7,81.3V35.4c0-0.8-0.2-1.3-0.5-1.6c-0.6-0.3-1.1-0.5-1.6-0.5h-4.1c-0.5,0-1,0.2-1.6,0.5 c-0.3,0.6-0.5,1.1-0.5,1.6v45.9c0,0.5,0.2,1,0.5,1.6c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5C66.5,82.6,66.7,82,66.7,81.3 z',\n  youtube:\n    'M16.1,83.3c-2.8-0.2-5.8-1.1-8.3-2.4c-5-2.5-6.4-7.3-6.9-12.5c-1.2-11.2-1.1-22.4-0.3-33.5c0.2-2.7,0.6-5.3,1.2-7.9 c1.2-5.4,6-9.6,12.1-10c10.7-0.7,21.4-1.4,32-1.5C56.9,15.4,68,15.9,79,16.2c2.8,0.1,5.7,0.4,8.5,0.9c6.2,1.1,9.7,4.8,10.8,11 c1.4,7.9,1.8,16,1.5,24c-0.2,6.5-0.7,13-1.6,19.5c-0.8,6.4-5.5,10.9-12,11.3c-11,0.8-22.1,1.1-33.2,1.6c-2,0.1-4,0-6,0 C47.2,84.6,26.4,84,16.1,83.3z M40.6,34.6c0,10.3,0,20.4,0,30.6c8.4-5.2,16.5-10.2,24.9-15.3C57.1,44.8,48.9,39.8,40.6,34.6z',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport constants from '../../../utils/constants';\nimport ICONS from '../../../utils/icons';\n\nconst Icon = ({ type, size, color, inline, title }) => {\n  const margin = inline ? '0 3px' : 0;\n\n  if (!title) title = type;\n\n  const styles = {\n    svg: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      margin,\n      transform: 'translateY(-1px)',\n    },\n    path: {\n      fill: constants.DEFAULT_COLORS[color],\n    },\n  };\n\n  return (\n    <svg\n      title={title}\n      style={styles.svg}\n      width={`${size}px`}\n      height={`${size}px`}\n      viewBox=\"0 0 100 100\"\n    >\n      <path style={styles.path} d={ICONS[type]} className={`icon-${type}`}>\n        <title>{title}</title>\n      </path>\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  color: PropTypes.string,\n  inline: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  type: 'default',\n  size: 12,\n  color: 'default',\n  inline: false,\n  title: null,\n};\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst Loading = ({ message = '' }) => (\n  <main className=\"container container--flex container--center container--requirement-wrapper\">\n    <div className=\"requirement-wrapper__container\">\n      <img\n        className=\"requirement-wrapper__loading-icon\"\n        src={loading}\n        alt=\"Loading Icon\"\n      />\n      <p>{message}</p>\n    </div>\n  </main>\n);\n\nLoading.propTypes = {\n  message: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  message: '',\n};\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst LoadingIcon = ({ size, inline }) => (\n  <span\n    className={`loading-icon loading-icon--${size} ${inline ? 'inline' : ''}`}\n  >\n    <img className=\"loading-icon__image\" src={loading} alt=\"Loading Icon\" />\n  </span>\n);\n\nLoadingIcon.propTypes = {\n  size: PropTypes.string,\n  inline: PropTypes.bool,\n};\n\nLoadingIcon.defaultProps = {\n  size: 'medium',\n  inline: false,\n};\n\nexport default LoadingIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst LoadingWrapper = ({ pending, children, size }) =>\n  pending ? (\n    <span className={`loading-icon loading-icon--${size}`}>\n      <img className=\"loading-icon__image\" src={loading} alt=\"Loading Icon\" />\n    </span>\n  ) : (\n    children\n  );\n\nLoadingWrapper.propTypes = {\n  children: PropTypes.object.isRequired,\n  pending: PropTypes.bool,\n  size: PropTypes.string,\n};\n\nLoadingWrapper.defaultProps = {\n  pending: false,\n  size: 'medium',\n};\n\nexport default LoadingWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport constants from '../../../../utils/constants';\n\nconst MemberNationaltyFlag = ({ nationality }) => {\n  const flag = constants.FLAGS_LIST[nationality];\n\n  let flagUrl = `${process.env.PUBLIC_URL}${\n    constants.NATIONALITY_FLAG_URL\n  }unknown.jpg`;\n\n  if (flag) {\n    flagUrl = `${process.env.PUBLIC_URL}${\n      constants.NATIONALITY_FLAG_URL\n    }${flag}.jpg`;\n  }\n\n  return (\n    <img\n      className=\"card__flag\"\n      src={flagUrl}\n      alt={nationality}\n      title={nationality}\n    />\n  );\n};\n\nMemberNationaltyFlag.propTypes = {\n  nationality: PropTypes.string,\n};\n\nMemberNationaltyFlag.defaultProps = {\n  nationality: 'unknown',\n};\n\nexport default MemberNationaltyFlag;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport constants from '../../../../utils/constants';\nimport utils from '../../../../utils';\n\nclass MemberPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.fallback = () => {\n      this.setState({ failed: true });\n    };\n  }\n\n  render() {\n    const { className, colorId, gender, memberId, name } = this.props;\n\n    const pictureUrl = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }${name.toLowerCase()}${memberId}.jpg`;\n\n    const GENDER_ENUM = gender === 'FEMALE' ? 'f' : 'm';\n\n    const colorNumber = utils.getColorNumber(colorId);\n    const profilePlaceholderCode = (colorNumber % 5) + 1;\n\n    const pictureFallback = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }profile-${GENDER_ENUM}-${profilePlaceholderCode}.png`;\n\n    if (this.state.failed) {\n      console.log(`Missing Member Picture: ${name.toLowerCase()}${memberId}`); // eslint-disable-line\n      return (\n        <img\n          className={`${className} background-color-${colorNumber}`}\n          src={pictureFallback}\n          alt=\"Member\"\n        />\n      );\n    }\n    return (\n      <img\n        className={className}\n        src={pictureUrl}\n        onError={this.fallback}\n        alt=\"Member\"\n      />\n    );\n  }\n}\n\nMemberPicture.propTypes = {\n  className: PropTypes.string,\n  colorId: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  memberId: PropTypes.string.isRequired,\n  name: PropTypes.string,\n};\n\nMemberPicture.defaultProps = {\n  className: 'card__profile-image',\n  name: 'Unkown',\n};\n\nexport default MemberPicture;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import position icons\nimport iconLeader from '../../../../images/icon-leader.svg';\nimport iconMainVocalist from '../../../../images/icon-main-vocalist.svg';\nimport iconMainRapper from '../../../../images/icon-main-rapper.svg';\nimport iconMainDancer from '../../../../images/icon-main-dancer.svg';\nimport iconLeadVocalist from '../../../../images/icon-lead-vocalist.svg';\nimport iconLeadRapper from '../../../../images/icon-lead-rapper.svg';\nimport iconLeadDancer from '../../../../images/icon-lead-dancer.svg';\nimport iconVocalist from '../../../../images/icon-vocalist.svg';\nimport iconDancer from '../../../../images/icon-dancer.svg';\nimport iconRapper from '../../../../images/icon-rapper.svg';\nimport iconCenter from '../../../../images/icon-center.svg';\nimport iconVisual from '../../../../images/icon-visual.svg';\nimport iconMaknae from '../../../../images/icon-maknae.svg';\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst MemberPositions = ({ memberId, positions }) => {\n  // Sort positions by importance\n  const sortedPositions = [];\n\n  const positionPriority = {\n    LEADER: 0,\n    MAIN_VOCALIST: 1,\n    MAIN_RAPPER: 2,\n    MAIN_DANCER: 3,\n    LEAD_VOCALIST: 4,\n    LEAD_RAPPER: 5,\n    LEAD_DANCER: 6,\n    VOCALIST: 7,\n    RAPPER: 8,\n    DANCER: 9,\n    CENTER: 10,\n    VISUAL: 11,\n    MAKNAE: 12,\n  };\n\n  positions.forEach(position => {\n    sortedPositions[positionPriority[position]] = position;\n  });\n\n  const iconBank = {\n    LEADER: iconLeader,\n    MAIN_VOCALIST: iconMainVocalist,\n    MAIN_RAPPER: iconMainRapper,\n    MAIN_DANCER: iconMainDancer,\n    LEAD_VOCALIST: iconLeadVocalist,\n    LEAD_RAPPER: iconLeadRapper,\n    LEAD_DANCER: iconLeadDancer,\n    VOCALIST: iconVocalist,\n    RAPPER: iconDancer,\n    DANCER: iconRapper,\n    CENTER: iconCenter,\n    VISUAL: iconVisual,\n    MAKNAE: iconMaknae,\n  };\n\n  return (\n    <ul className=\"card__positions\">\n      {sortedPositions.map(position => {\n        const positionName = utils.humanize(position, 'Capital');\n        return (\n          <li key={`${memberId}-${position}`} className=\"card__position\">\n            <img\n              className=\"card__position-icon\"\n              src={iconBank[position]}\n              alt={`Position: ${positionName}`}\n              title={position}\n            />\n            {positionName}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMemberPositions.propTypes = {\n  memberId: PropTypes.string.isRequired,\n  positions: PropTypes.array.isRequired,\n};\n\nexport default MemberPositions;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import Member components\nimport MemberNationaltyFlag from './member/MemberNationalityFlag';\nimport MemberPicture from './member/MemberPicture';\nimport MemberPositions from './member/MemberPositions';\n// Import utility functions\nimport utils from '../../../utils';\nimport { FavoriteIcon, Icon } from '..';\n\nconst MemberCard = ({\n  favoriteState,\n  member,\n  updateFavoriteMembers,\n  averages,\n  showId,\n  showReferenceArtist,\n}) => (\n  <div className=\"card\">\n    {showId && (\n      <p className=\"member-id\">\n        {member.name.toLowerCase()}\n        {member.id}\n      </p>\n    )}\n    <MemberPicture\n      className={\n        showReferenceArtist ? 'card__profile-full-image' : 'card__profile-image'\n      }\n      colorId={member.colorId}\n      gender={member.gender}\n      memberId={member.id}\n      name={member.name}\n    />\n    <span\n      className={`card__color-bar background-color-${utils.getColorNumber(\n        member.colorId\n      )}`}\n    />\n    <h3 className=\"card__name\">\n      {member.name}\n      <FavoriteIcon\n        action={updateFavoriteMembers}\n        id={member.id}\n        size=\"20\"\n        state={favoriteState}\n      />\n    </h3>\n    {showReferenceArtist && (\n      <p>\n        {member.private && (\n          <Icon type=\"private\" color=\"red\" inline title=\"private\" size=\"18\" />\n        )}\n        <b>From </b> {member.referenceArtist}\n      </p>\n    )}\n\n    <p>\n      <b>Date of Birth:</b> {utils.parseBirthDate(member.birthdate)} ({\n        member.age\n      }yo)\n    </p>\n    <p>\n      <b>Nationality: </b>\n      <MemberNationaltyFlag nationality={member.nationality} />\n    </p>\n    {averages && (\n      <Fragment>\n        <p>\n          <b>Avg Official Songs: </b>0%\n        </p>\n        <p>\n          <b>Avg Custom Songs: </b>0%\n        </p>\n        <p>\n          <b>Avg All Songs: </b>0%\n        </p>\n      </Fragment>\n    )}\n    <p>\n      <b>Positions:</b>\n    </p>\n    <MemberPositions memberId={member.id} positions={member.positions} />\n  </div>\n);\n\nMemberCard.propTypes = {\n  averages: PropTypes.oneOfType([PropTypes.object]),\n  showId: PropTypes.bool,\n  showReferenceArtist: PropTypes.bool,\n  favoriteState: PropTypes.bool,\n  member: PropTypes.object.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n};\n\nMemberCard.defaultProps = {\n  averages: null,\n  showId: false,\n  showReferenceArtist: false,\n  favoriteState: false,\n};\n\nexport default MemberCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ModeWidget = ({ labels, action, disabled, active }) => (\n  <div className=\"mode-widget\">\n    {labels.map(label => {\n      const activeClass = label === active ? 'mode-widget__label--active' : '';\n      const isDisabled = disabled.includes(label)\n        ? 'mode-widget__label--disabled'\n        : '';\n      return (\n        <button\n          key={label}\n          className={`mode-widget__label ${activeClass} ${isDisabled}`}\n          onClick={() => action(label)}\n          disabled={isDisabled}\n        >\n          {label}\n        </button>\n      );\n    })}\n  </div>\n);\n\nModeWidget.propTypes = {\n  action: PropTypes.func.isRequired,\n  active: PropTypes.string.isRequired,\n  disabled: PropTypes.array,\n  labels: PropTypes.array.isRequired,\n};\n\nModeWidget.defaultProps = {\n  disabled: [],\n};\n\nexport default ModeWidget;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import position icons\nimport iconLeader from '../../../images/icon-leader.svg';\nimport iconMainVocalist from '../../../images/icon-main-vocalist.svg';\nimport iconMainRapper from '../../../images/icon-main-rapper.svg';\nimport iconMainDancer from '../../../images/icon-main-dancer.svg';\nimport iconLeadVocalist from '../../../images/icon-lead-vocalist.svg';\nimport iconLeadRapper from '../../../images/icon-lead-rapper.svg';\nimport iconLeadDancer from '../../../images/icon-lead-dancer.svg';\nimport iconVocalist from '../../../images/icon-vocalist.svg';\nimport iconDancer from '../../../images/icon-dancer.svg';\nimport iconRapper from '../../../images/icon-rapper.svg';\nimport iconCenter from '../../../images/icon-center.svg';\nimport iconVisual from '../../../images/icon-visual.svg';\nimport iconMaknae from '../../../images/icon-maknae.svg';\nimport iconAll from '../../../images/icon-all.svg';\nimport iconNone from '../../../images/icon-none.svg';\n\nconst PositionIcon = ({ className, position }) => {\n  const iconBank = {\n    LEADER: iconLeader,\n    MAIN_VOCALIST: iconMainVocalist,\n    MAIN_RAPPER: iconMainRapper,\n    MAIN_DANCER: iconMainDancer,\n    LEAD_VOCALIST: iconLeadVocalist,\n    LEAD_RAPPER: iconLeadRapper,\n    LEAD_DANCER: iconLeadDancer,\n    VOCALIST: iconVocalist,\n    RAPPER: iconDancer,\n    DANCER: iconRapper,\n    CENTER: iconCenter,\n    VISUAL: iconVisual,\n    MAKNAE: iconMaknae,\n    ALL: iconAll,\n    NONE: iconNone,\n  };\n\n  return (\n    <span className={className}>\n      <img\n        className=\"position-icon\"\n        src={iconBank[position]}\n        alt={`Position: ${position}`}\n        title={position}\n      />\n    </span>\n  );\n};\n\nPositionIcon.propTypes = {\n  className: PropTypes.string,\n  position: PropTypes.string.isRequired,\n};\n\nPositionIcon.defaultProps = {\n  className: 'position-icon-container--inline',\n};\n\nexport default PositionIcon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon, Loading } from '..';\n// Import images\nimport logo from '../../../images/logo-neg.svg';\n\nclass RequirementWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: true,\n      authentication: true,\n      admin: false,\n      activeArtist: false,\n      ready: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.ready) {\n      this.parseRequirements();\n    }\n  }\n\n  parseRequirements() {\n    this.props.requirements.forEach(requirement => {\n      this.setState({ [requirement]: true });\n    });\n    this.setState({ ready: true });\n  }\n\n  render() {\n    if (!this.state.ready) {\n      return <Loading message=\"Loading...\" />;\n    }\n\n    // Verify Database\n    if (this.state.database && !this.props.app.databaseReady) {\n      return <Loading message=\"Fecthing database...\" />;\n    }\n\n    // Verify Authentication\n    if (\n      !this.props.app.loading &&\n      this.state.authentication &&\n      !this.props.auth.isAuthenticated\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <img className=\"login-logo\" src={logo} alt=\"Line Distribution\" />\n            <p>You must be logged in to access this page.</p>\n            <button className=\"btn btn-simple\" onClick={this.props.login}>\n              Sign-in now <Icon type=\"login\" color=\"black\" inline />\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Admin\n    if (\n      !this.props.app.loading &&\n      this.state.admin &&\n      !this.props.auth.isAdmin\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <div className=\"requirement-wrapper__big-icon\">\n              <Icon type=\"stop\" color=\"red\" size={120} />\n            </div>\n            <p>You must be an administrator to access this page.</p>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Selected Artist\n    if (\n      !this.props.app.loading &&\n      this.state.selectedArtist &&\n      (!this.props.artists.selectedArtist ||\n        !this.props.artists.selectedArtist.id)\n    ) {\n      if (this.props.app.loading) {\n        return <Loading message=\"Fecthing artist...\" />;\n      }\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group.\n          </p>\n        </main>\n      );\n    }\n\n    // Verify Active Artist\n    if (\n      !this.props.app.loading &&\n      this.state.activeArtist &&\n      this.props.artists.activeArtist &&\n      !this.props.artists.activeArtist.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Required</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group and then\n            a unit.\n          </p>\n        </main>\n      );\n    }\n\n    // Verify Active Active\n    if (\n      !this.props.app.loading &&\n      this.state.activeUnit &&\n      this.props.distribute.activeUnit &&\n      !this.props.distribute.activeUnit.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Active Unit Required</h1>\n          <p>\n            No unit has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group and then\n            a unit.\n          </p>\n        </main>\n      );\n    }\n\n    if (\n      !this.props.app.loading &&\n      this.state.activeSong &&\n      this.props.distribute.activeSong &&\n      !this.props.distribute.activeSong.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Active Song Required</h1>\n          <p>\n            No song has been selected. Go to the{' '}\n            <Link to=\"/songs\">Songs Page</Link> and select a song.\n          </p>\n        </main>\n      );\n    }\n\n    return <div className=\"wrapper\">{this.props.children}</div>;\n  }\n}\n\nRequirementWrapper.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  children: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  requirements: PropTypes.array,\n};\n\nRequirementWrapper.defaultProps = {\n  requirements: [],\n};\n\nexport default RequirementWrapper;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport RequirementWrapper from '../components/RequirementWrapper';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RequirementWrapper)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nlet selectKey = 0;\n\n/**\n * Select\n * @param {action} action onChange action\n * @param {string} label label for the select\n * @param {array|object} options arrays or objects of objects\n * @param {string} optionValue key on values to be used as an option value\n * @param {string} optionName key on values to be used as an option name\n * @param {string} optionPrefix string to come before optionName\n * @param {string} placeholder string for the first placeholder option name\n * @param {bool} disablePlaceholder makes label unselectable\n * @param {string} type 'normal' or 'slim'\n */\nconst Select = ({\n  action,\n  options,\n  optionValue,\n  optionName,\n  optionPrefix,\n  label,\n  placeholder,\n  disablePlaceholder,\n  type,\n}) => {\n  // Transform options object into array\n  if (!Array.isArray(options)) {\n    options = Object.values(options);\n  }\n\n  const classNameModifier = type === 'slim' ? '--slim' : '';\n\n  return (\n    <div className=\"ld-select-group\">\n      {label ? <label className=\"ld-select__label\">{label}</label> : null}\n      <div className={`ld-select${classNameModifier}`}>\n        <select onChange={action}>\n          {placeholder && (\n            <option value=\"\" disabled={disablePlaceholder}>\n              {placeholder}\n            </option>\n          )}\n          {options.map(option => {\n            const key = `select-${selectKey++}`;\n            return (\n              <option key={key} value={option[optionValue]}>\n                {optionPrefix}\n                {option[optionName]}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nSelect.propTypes = {\n  action: PropTypes.func.isRequired,\n  options: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  optionValue: PropTypes.string,\n  optionName: PropTypes.string,\n  optionPrefix: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disablePlaceholder: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nSelect.defaultProps = {\n  options: [],\n  optionValue: '',\n  optionName: '',\n  optionPrefix: '',\n  label: '',\n  placeholder: '',\n  disablePlaceholder: false,\n  type: '',\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '..';\n\nconst SortingButton = ({ action, active }) => {\n  return (\n    <button className=\"sorting-button\" onClick={action}>\n      <Icon type=\"sorting-arrows\" color={active ? 'black' : 'gray'} />\n    </button>\n  );\n};\n\nSortingButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  active: PropTypes.bool.isRequired,\n};\n\nexport default SortingButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SwitchToggle = ({ action, labels, checked }) => {\n  if (!labels) {\n    labels = { left: '', right: '' };\n  } else if (Array.isArray(labels)) {\n    labels = { left: labels[0], right: labels[1] };\n  } else if (typeof labels !== 'object') {\n    labels = { left: 'A', right: 'B' };\n  }\n\n  return (\n    <span>\n      <span className=\"slide-text-left\">{labels.left}</span>\n      <label className=\"switch\">\n        <input type=\"checkbox\" onChange={action} checked={checked} />\n        <span className=\"slider\" />\n      </label>\n      <span className=\"slide-text-right\">{labels.right}</span>\n    </span>\n  );\n};\n\nSwitchToggle.propTypes = {\n  action: PropTypes.func.isRequired,\n  labels: PropTypes.object, // eslint-disable-line\n  checked: PropTypes.bool,\n};\n\nSwitchToggle.defaultProps = {\n  checked: false,\n};\n\nexport default SwitchToggle;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../utils';\n\nconst Tabs = ({ tabs, active, action, icons, iconConditions, ...props }) => {\n  // Check for names and ids\n  tabs = tabs.map((tab, index) => {\n    const tabObj = {\n      name: tab.name || tab,\n      id: tab.id || tab,\n    };\n    if (tab.id !== undefined && tab.name === undefined) {\n      tabObj.name = utils.capitalizeWord(tab.id);\n    }\n    if (tab.id === undefined && tab.name !== undefined) {\n      tabObj.id = utils.spinalCaseWord(tab.name);\n    }\n\n    tabObj.key = `${tab.id}-${index}`;\n    tabObj.isActive = active === tab.id || active === tab ? 'selected' : '';\n    tabObj.showIcons = iconConditions.map(condition => tab[condition] || false);\n    return tabObj;\n  });\n\n  // Activate first tab if action paramenter is not available\n  if (!active) {\n    tabs[0].isActive = 'selected';\n  }\n\n  return (\n    <section className=\"tabs-container\">\n      <ul className=\"tabs\" onClick={action}>\n        {tabs.map(tab => (\n          <li\n            key={tab.key}\n            className={utils.bem('tabs', tab.isActive, 'tab')}\n            id={tab.id}\n          >\n            {tab.name}{' '}\n            <Fragment>\n              {tab.showIcons.map((show, index) => {\n                if (show) {\n                  return icons[index];\n                }\n                return null;\n              })}\n            </Fragment>\n          </li>\n        ))}\n      </ul>\n      <div className=\"tabs-content\">{props.children}</div>\n    </section>\n  );\n};\n\nTabs.propTypes = {\n  action: PropTypes.func.isRequired,\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any.isRequired,\n  iconConditions: PropTypes.array,\n  icons: PropTypes.array,\n  tabs: PropTypes.array.isRequired,\n};\n\nTabs.defaultProps = {\n  active: 0,\n  iconConditions: [],\n  icons: [],\n};\n\nexport default Tabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Typeahead = ({ action, className, name, placeholder, suggestions }) => (\n  <div className={`typeahead ${className}`}>\n    <input\n      className=\"typeahead-input\"\n      list={`list-${name}`}\n      onChange={action}\n      placeholder={placeholder}\n    />\n    <datalist className=\"typeahead-datalist\" id={`list-${name}`}>\n      {suggestions.map(suggestion => (\n        <option\n          key={suggestion}\n          className=\"typeahead-option\"\n          value={suggestion}\n        />\n      ))}\n    </datalist>\n  </div>\n);\n\nTypeahead.propTypes = {\n  action: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  suggestions: PropTypes.array,\n};\n\nTypeahead.defaultProps = {\n  className: '',\n  placeholder: 'Search...',\n  suggestions: [],\n};\n\nexport default Typeahead;\n","/* eslint react/require-default-props: 0 */\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon, LoadingIcon } from '../../../common';\n// Import images\nimport logo from '../../../../images/logo.svg';\nimport userPlaceholder from '../../../../images/user-placeholder.svg';\n\nconst Menu = ({\n  activeUnit,\n  auth,\n  history,\n  location,\n  login,\n  logout,\n  pending,\n}) => {\n  const handleLogoClick = () => {\n    history.push('/');\n  };\n\n  const { pathname } = location;\n\n  // Hide parts of the menu if user is not authenticaded\n  const authHideClass = auth.isAuthenticated ? '' : 'hidden';\n\n  // Hide parts of the menu if user is not an administrator\n  const adminHideClass = auth.isAdmin ? '' : 'hidden';\n\n  // Hide parts of the menu if user hasn't selected an active unit\n  const activeUnitHideClass = activeUnit.id ? '' : 'hidden';\n\n  // Sign-in pending\n  const isPending = pending.RUN_LOGIN;\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-nav\">\n        <img\n          className=\"header-nav__logo\"\n          src={logo}\n          alt=\"Logo\"\n          onClick={() => handleLogoClick()}\n        />\n        <nav className={`header-nav__links ${authHideClass}`}>\n          <Link\n            to=\"/artists\"\n            className={pathname === '/artists' ? 'active' : ''}\n          >\n            Artists\n          </Link>\n          <Link\n            to=\"/distribute\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/distribute' ? 'active' : ''\n            }`}\n          >\n            Distribute\n          </Link>\n          <Link\n            to=\"/lyrics\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/lyrics' ? 'active' : ''\n            }`}\n          >\n            Lyrics\n          </Link>\n          <Link\n            to=\"/songs\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/songs' ? 'active' : ''\n            }`}\n          >\n            Songs\n          </Link>\n          <Link to=\"/idols\" className={pathname === '/idols' ? 'active' : ''}>\n            Idols\n          </Link>\n          <Link to=\"/lab\" className={pathname === '/lab' ? 'active' : ''}>\n            Lab\n          </Link>\n          <div className={`header-admin ${adminHideClass}`}>\n            <button\n              className={\n                pathname.includes('/admin')\n                  ? 'header-admin__nav active'\n                  : 'header-admin__nav'\n              }\n            >\n              Admin Tools\n            </button>\n            <div className=\"header-admin__dropdown\">\n              <Link to=\"/admin/actions\">Actions</Link>\n              <Link to=\"/admin/manage\">Manage</Link>\n              <Link to=\"/admin/sync\">Sync</Link>\n              <Link to=\"/admin/temp\">Test/Temp</Link>\n              <Link to=\"/admin/ui-reference\">UI Reference</Link>\n            </div>\n          </div>\n        </nav>\n      </div>\n      {auth.isAuthenticated ? (\n        <div className=\"header-user\">\n          <button className=\"header-user__nav\">\n            <img\n              className=\"header-user__photo\"\n              src={auth.user.photoURL || userPlaceholder}\n              alt=\"user\"\n            />\n            {auth.user.displayName}\n          </button>\n          <div className=\"header-user__dropdown\">\n            <Link to=\"/user?tab=1\">My Artists</Link>\n            <Link to=\"/user?tab=2\">My Distributions</Link>\n            <hr />\n            <a href=\"/\" onClick={logout}>\n              Sign out <Icon type=\"logout\" inline />\n            </a>\n          </div>\n        </div>\n      ) : (\n        <div className=\"header-user\">\n          <button\n            className=\"btn btn-hollow header-user__btn\"\n            onClick={login}\n            disabled={isPending}\n          >\n            {isPending ? (\n              <LoadingIcon size=\"tiny\" inline />\n            ) : (\n              <Fragment>\n                Sign-in <Icon type=\"logout\" color=\"white\" inline />\n              </Fragment>\n            )}\n          </button>\n        </div>\n      )}\n    </header>\n  );\n};\n\nMenu.propTypes = {\n  activeUnit: PropTypes.object,\n  auth: PropTypes.object,\n  history: PropTypes.object,\n  location: PropTypes.object,\n  login: PropTypes.func,\n  logout: PropTypes.func,\n  pending: PropTypes.object.isRequired,\n};\n\nMenu.defaultProps = {\n  activeUnit: {},\n  auth: {},\n  history: {},\n  location: {},\n  login: () => {},\n  logout: () => {},\n};\n\nexport default Menu;\n","import React from 'react';\n\nconst LoadingBar = () => (\n  <div className=\"loading-bar\">\n    <div className=\"bar-container\">\n      <span className=\"bar bar-0\" />\n      <span className=\"bar bar-1\" />\n      <span className=\"bar bar-2\" />\n      <span className=\"bar bar-3\" />\n      <span className=\"bar bar-4\" />\n      <span className=\"bar bar-5\" />\n      <span className=\"bar bar-6\" />\n      <span className=\"bar bar-7\" />\n      <span className=\"bar bar-8\" />\n    </div>\n  </div>\n);\n\nexport default LoadingBar;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport Menu from './Menu';\nimport LoadingBar from './LoadingBar';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.init();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Menu\n          activeUnit={this.props.distribute.activeUnit}\n          auth={this.props.auth}\n          history={this.props.history}\n          location={this.props.location}\n          login={this.props.login}\n          logout={this.props.logout}\n          pending={this.props.app.pending}\n        />\n        {this.props.app.loading && <LoadingBar />}\n      </Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  distribute: PropTypes.object,\n  history: PropTypes.object.isRequired,\n  init: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nApp.defaultProps = {\n  distribute: { activeUnit: {} },\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Header from '../components/Header';\n\nimport { appOperations } from '../../../../reducers/app';\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...appOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Header)\n);\n","import HeaderContainer from './containers/HeaderContainer';\n\nexport default HeaderContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common/index';\n\nconst ErrorModal = ({ app, handleCloseErrorModal, handleSendBugReport }) => {\n  if (app.error) {\n    return (\n      <div className=\"modal-error\">\n        <main className=\"modal-error__content\">\n          <button className=\"close\" onClick={handleCloseErrorModal}>\n            ×\n          </button>\n          <Icon type=\"error\" color=\"red\" size=\"96\" />\n          <h1>AN ERROR HAS OCURRED</h1>\n          <h3 className=\"modal-error__error-message\">{app.errorMessage}</h3>\n          <h4>\n            You may close this modal, but the website might not work as\n            expected.\n          </h4>\n          <button className=\"btn\" onClick={handleSendBugReport}>\n            Send Bug Report\n          </button>\n        </main>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nErrorModal.propTypes = {\n  app: PropTypes.object.isRequired,\n  handleCloseErrorModal: PropTypes.func.isRequired,\n  handleSendBugReport: PropTypes.func.isRequired,\n};\n\nexport default ErrorModal;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ErrorModal from '../components/ErrorModal';\n\nimport { appOperations } from '../../../../reducers/app';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n});\n\nconst mapDispatchToProps = {\n  ...appOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ErrorModal)\n);\n","import ErrorModalContainer from './containers/ErrorModalContainer';\n\nexport default ErrorModalContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { LoadingIcon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass AdminAction extends Component {\n  constructor() {\n    super();\n    this.state = {\n      code: '',\n      isDisabled: true,\n    };\n\n    this.generateCode = this.generateCode.bind(this);\n    this.performAction = this.performAction.bind(this);\n    this.verifyCode = this.verifyCode.bind(this);\n  }\n\n  componentDidMount() {\n    this.generateCode();\n  }\n\n  generateCode() {\n    const code = utils.generateAdminCode();\n    const isDisabled = true;\n    this.setState({ code, isDisabled });\n  }\n\n  verifyCode(e) {\n    const { value } = e.target;\n    if (this.state.code === value) {\n      this.setState({\n        isDisabled: false,\n      });\n    }\n  }\n\n  performAction() {\n    if (!this.state.isDisabled) {\n      this.props.action();\n      this.generateCode();\n    }\n  }\n\n  render() {\n    const { pending, title, children, actionName } = this.props;\n\n    return (\n      <div className=\"actions-item\">\n        <h3>{title}</h3>\n        {children}\n        <div className=\"actions-code\">\n          {pending ? <LoadingIcon size=\"tiny\" /> : this.state.code}\n        </div>\n        <input\n          type=\"text\"\n          className=\"actions-code-input\"\n          maxLength=\"4\"\n          onChange={this.verifyCode}\n        />\n\n        <button\n          className=\"btn\"\n          disabled={this.state.isDisabled}\n          onClick={this.performAction}\n        >\n          {pending ? <LoadingIcon size=\"small\" /> : actionName}\n        </button>\n      </div>\n    );\n  }\n}\n\nAdminAction.propTypes = {\n  pending: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any.isRequired,\n  action: PropTypes.func.isRequired,\n  actionName: PropTypes.string.isRequired,\n};\n\nAdminAction.defaultProps = {\n  pending: false,\n};\n\nexport default AdminAction;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport AdminAction from './AdminAction';\n// Import common components\nimport { RequirementWrapper } from '../../../common';\n\nconst NOOP = () => {};\n\nclass AdminActions extends Component {\n  componentDidMount() {\n    //\n  }\n\n  render() {\n    const {\n      app: { pending },\n      handleResyncDB,\n    } = this.props;\n\n    return (\n      <RequirementWrapper requirements={['admin']}>\n        <main className=\"container container--admin-actions\">\n          <h1>Administrator Actions</h1>\n          <p>\n            Here you can manipulate the database by performing preset actions.<br />\n            You must type the for letter code to enable the button.\n          </p>\n\n          <div className=\"actions-group\">\n            <AdminAction\n              pending={pending.RESYNC_DATABASE}\n              title=\"Resync Database\"\n              action={handleResyncDB}\n              actionName=\"Resync Database\"\n            >\n              <Fragment>\n                <p className=\"description\">\n                  Performs resync of non-critical data in the database.\n                </p>\n                <ul className=\"description-list\">\n                  <li className=\"description-item\">\n                    Adds artistsId to artists from Units\n                  </li>\n                  <li className=\"description-item\">\n                    Adds member ids and names to artists\n                  </li>\n                  <li className=\"description-item\">Recounts colors usage</li>\n                  <li className=\"description-item\">\n                    Adds positions to members\n                  </li>\n                  <li className=\"description-item\">\n                    Keeps only unique positions for each members\n                  </li>\n                  <li className=\"description-item\">\n                    Resyncs unitIds for artists sorted by debut year\n                  </li>\n                </ul>\n              </Fragment>\n            </AdminAction>\n\n            <AdminAction\n              pending={false}\n              title=\"Random Users\"\n              action={NOOP}\n              actionName=\"Generate Random Users\"\n            >\n              <Fragment>\n                <p className=\"description\">Not implelemented yet.</p>\n              </Fragment>\n            </AdminAction>\n\n            <AdminAction\n              pending={false}\n              title=\"Another Action\"\n              action={NOOP}\n              actionName=\"Perform Action\"\n            >\n              <Fragment>\n                <p className=\"description\">Not implelemented yet.</p>\n              </Fragment>\n            </AdminAction>\n          </div>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nAdminActions.propTypes = {\n  app: PropTypes.object.isRequired,\n  handleResyncDB: PropTypes.func.isRequired,\n};\n\nAdminActions.defaultProps = {};\n\nexport default AdminActions;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport AdminActions from '../components/AdminActions';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AdminActions)\n);\n","import AdminActionsContainer from './containers/AdminActionsContainer';\n\nexport default AdminActionsContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import shared components\nimport { FavoriteIcon, LoadingIcon } from '../../../common';\n\nconst ArtistsTable = ({\n  artists,\n  favoriteAction,\n  pending,\n  rowAction,\n  searchQuery,\n  showFavoriteArtistsOnly,\n  user,\n}) => {\n  // Filter artists\n  let filteredArtists = artists;\n  if ((searchQuery && filteredArtists[0]) || showFavoriteArtistsOnly) {\n    filteredArtists = _.filter(artists, o => {\n      let include = false;\n      // If displaying only favorite artists\n      if (showFavoriteArtistsOnly) {\n        include = user.favoriteArtists[o.id] !== undefined;\n      }\n      // If displaying only matching queries\n      if (searchQuery && filteredArtists[0]) {\n        include = o.query.includes(searchQuery);\n      }\n\n      return include;\n    });\n  }\n\n  // Message to be display when table has no rows\n  const emptyTableMessage =\n    searchQuery.length > 0\n      ? 'No artists available within your search'\n      : 'No artists available';\n\n  // Row Fallback when loading or no results\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"5\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"5\">{emptyTableMessage}</td>\n      </tr>\n    );\n  };\n\n  const hasActiveFilters = searchQuery.length > 0 || showFavoriteArtistsOnly;\n\n  return (\n    <Fragment>\n      {pending ? (\n        <p className=\"italic\">Loading...</p>\n      ) : (\n        <p className=\"italic\">\n          Displaying {filteredArtists.length} artists{hasActiveFilters\n            ? ' within search'\n            : ''}\n          ...\n        </p>\n      )}\n\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th className=\"artists-table__favorite-col\" />\n            <th>Name</th>\n            <th>Genre</th>\n            <th>Units</th>\n            <th>Members</th>\n          </tr>\n        </thead>\n        <tbody onClick={rowAction}>\n          {filteredArtists.length > 0\n            ? filteredArtists.map(entry => (\n                <tr key={`all-artists-${entry.id}`} id={`a-${entry.id}`}>\n                  <td\n                    className=\"artists-cell-favorite\"\n                    onClick={() => favoriteAction(entry.id)}\n                  >\n                    <FavoriteIcon\n                      action={() => {}}\n                      id={entry.id}\n                      size=\"12\"\n                      state={\n                        user.favoriteArtists && user.favoriteArtists[entry.id]\n                      }\n                    />\n                  </td>\n                  <td>{entry.name}</td>\n                  <td>{entry.genre}</td>\n                  <td>{entry.units ? entry.units.length : 0}</td>\n                  <td>\n                    {entry.memberList.join(', ')} ({entry.memberList.length})\n                  </td>\n                </tr>\n              ))\n            : rowFallback()}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nArtistsTable.propTypes = {\n  artists: PropTypes.array.isRequired,\n  favoriteAction: PropTypes.func.isRequired,\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string,\n  showFavoriteArtistsOnly: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n};\n\nArtistsTable.defaultProps = {\n  pending: false,\n  searchQuery: '',\n  showFavoriteArtistsOnly: false,\n};\n\nexport default ArtistsTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport {\n  ActiveUnit,\n  Switch,\n  RequirementWrapper,\n  ActiveSong,\n} from '../../../common';\nimport ArtistsTable from './ArtistsTable';\n\nclass Artists extends Component {\n  componentDidMount() {\n    this.props.loadArtists();\n    this.props.updateSearchQuery('');\n  }\n  render() {\n    const {\n      app: { pending },\n      artists: { searchQuery, showFavoriteArtistsOnly },\n      auth: { user },\n      db,\n      distribute: { activeSong, activeUnit },\n    } = this.props;\n\n    // Row click should send user to the selected artist page\n    const handleTableClick = e => {\n      const { id } = e.target.parentNode;\n      const { className } = e.target;\n      if (id && className !== 'artists-cell-favorite') {\n        const artistId = id.substring(2);\n        this.props.history.push(`/artists/${artistId}`);\n      }\n    };\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--artists\">\n          <h1>Artists</h1>\n\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n\n          <section className=\"artists__section\">\n            <h2>All Artists</h2>\n            <input\n              className=\"artists__search-bar\"\n              type=\"text\"\n              placeholder=\"Filter...\"\n              onChange={e => this.props.updateSearchQuery(e.target.value)}\n            />{' '}\n            Show Favorite Artists Only:{' '}\n            <Switch\n              action={this.props.showFavoriteArtistsOnlyToggle}\n              checked={showFavoriteArtistsOnly}\n            />\n            <ArtistsTable\n              artists={db.artists}\n              searchQuery={searchQuery}\n              pending={pending.REQUEST_ARTISTS}\n              rowAction={handleTableClick}\n              favoriteAction={this.props.updateFavoriteArtists}\n              showFavoriteArtistsOnly={showFavoriteArtistsOnly}\n              user={user}\n            />\n          </section>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtists.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  showFavoriteArtistsOnlyToggle: PropTypes.func.isRequired,\n  updateSearchQuery: PropTypes.func.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtists.defaultProps = {};\n\nexport default Artists;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artists from '../components/Artists';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artists)\n);\n","import ArtistsContainer from './containers/ArtistsContainer';\n\nexport default ArtistsContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import constants\nimport constants from '../../../../utils/constants';\n// Import images\nimport biasPlaceholder from '../../../../images/bias-placeholder.svg';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass BiasPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.fallback = () => {\n      this.setState({ failed: true });\n    };\n  }\n\n  render() {\n    const { bias } = this.props;\n    // If no bias, display placeholder\n    if (!Object.keys(bias).length) {\n      return (\n        <img\n          className=\"unit-section__bias-placeholder\"\n          src={biasPlaceholder}\n          alt=\"Bias\"\n        />\n      );\n    }\n\n    const pictureUrl = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }${bias.name.toLowerCase()}${bias.id}.jpg`;\n\n    // If picture is not found\n    if (this.state.failed) {\n      return (\n        <div\n          className={`unit-section__bias-no-picture background-color-${utils.getColorNumber(\n            bias.colorId\n          )}`}\n        >\n          <span>{bias.name}</span>\n        </div>\n      );\n    }\n\n    return (\n      <img\n        className=\"unit-section__bias-picture\"\n        src={pictureUrl}\n        onError={this.fallback}\n        alt=\"Bias\"\n      />\n    );\n  }\n}\n\nBiasPicture.propTypes = {\n  bias: PropTypes.object.isRequired,\n};\n\nBiasPicture.defaultProps = {};\n\nexport default BiasPicture;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DistributedSongPreview = ({ rates, members }) => (\n  <div className=\"distribution-rates-preview__container\">\n    {Object.keys(members).map(memberId => {\n      const percentage = (100 * rates[memberId]) / (rates.total - rates.ALL);\n\n      const spanWidth = {\n        width: `${percentage}%`,\n      };\n\n      return (\n        <span\n          key={`bar-${memberId}-${percentage}`}\n          className={`distribution-rates-preview__bar background-color-${\n            members[memberId].color.number\n          }`}\n          style={spanWidth}\n        >\n          {percentage.toFixed(1)}%\n        </span>\n      );\n    })}\n  </div>\n);\n\nDistributedSongPreview.propTypes = {\n  rates: PropTypes.object.isRequired,\n  members: PropTypes.object.isRequired,\n};\n\nDistributedSongPreview.defaultProps = {};\n\nexport default DistributedSongPreview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { LoadingIcon } from '../../../common';\nimport DistributedSongPreview from './DistributedSongPreview';\n\nconst DistributedSongsTable = ({\n  distributions,\n  pending,\n  members,\n  rowAction,\n}) => {\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"7\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"3\">This artist have no distributions yet</td>\n      </tr>\n    );\n  };\n\n  const humanizeCategory = (category, originalArtist) => {\n    switch (category) {\n      case 'WOULD':\n        return `How they would sing ${originalArtist}`;\n      case 'SHOULD':\n        return 'How they should sing it';\n      default:\n        return 'Official';\n    }\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Type</th>\n          <th>Distribution Preview</th>\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {distributions.length > 0\n          ? distributions.map(entry => (\n              <tr key={`all-artists-${entry.id}`} id={`a-${entry.id}`}>\n                <td>{entry.title}</td>\n                <td>\n                  {humanizeCategory(entry.category, entry.originalArtist)}\n                </td>\n                <td>\n                  <DistributedSongPreview\n                    rates={entry.rates}\n                    members={members}\n                  />\n                </td>\n              </tr>\n            ))\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nDistributedSongsTable.propTypes = {\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func,\n  distributions: PropTypes.array.isRequired,\n  members: PropTypes.object.isRequired,\n};\n\nDistributedSongsTable.defaultProps = {\n  pending: false,\n  rowAction: () => {},\n};\n\nexport default DistributedSongsTable;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport BiasPicture from './BiasPicture';\n// Import common components\nimport {\n  Tabs,\n  Icon,\n  LoadingWrapper,\n  MemberCard,\n  Select,\n} from '../../../common';\nimport DistributedSongsTable from './DistributedSongsTable';\n\nclass Units extends Component {\n  componentDidMount() {\n    this.props.props.getBias();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.props.artists.selectedUnit.id !==\n      this.props.props.artists.selectedUnit.id\n    ) {\n      this.props.props.getBias();\n    }\n  }\n\n  artistRedirect(page) {\n    this.props.props.activateUnit();\n\n    this.props.props.history.push(`/${page}`);\n  }\n\n  render() {\n    const {\n      props: {\n        app,\n        artists: { artistPageTab, bias, selectedArtist, selectedUnit },\n        auth,\n        switchArtistPageTab,\n        updateBias,\n        updateFavoriteMembers,\n      },\n    } = this.props;\n\n    // If Artist has no unit\n    if (!app.loading && !Object.keys(selectedUnit).length) {\n      return (\n        <section className=\"artist__section\">\n          <div className=\"tabs-container\">\n            <p className=\"tabs-content--empty\">\n              This artist has no units available.\n            </p>\n          </div>\n        </section>\n      );\n    }\n\n    const isUnitPending = app.pending.REQUEST_UNIT;\n\n    return (\n      <section className=\"artist__section\">\n        <Tabs\n          tabs={selectedArtist.units || []}\n          action={switchArtistPageTab}\n          active={artistPageTab}\n          icons={[\n            <Icon type=\"check\" color=\"blue\" inline key=\"official\" />,\n            <Icon type=\"sub-unit\" color=\"orange\" key=\"subUnit\" />,\n          ]}\n          iconConditions={['official', 'subUnit']}\n        >\n          {selectedUnit.id ? (\n            <div className=\"unit-section\">\n              <div className=\"unit-section__info\">\n                <div className=\"unit-section__summary\">\n                  <LoadingWrapper pending={isUnitPending}>\n                    <Fragment>\n                      <p>\n                        <b>\n                          {selectedUnit.subUnit ? 'Sub-unit' : ''} Debut Year:\n                        </b>{' '}\n                        {selectedUnit.debutYear || '?'}\n                      </p>\n                      <p>\n                        <b>Official Distributions:</b>{' '}\n                        {selectedUnit.distributions.length || 0}\n                      </p>\n                      <p>\n                        <b>Custom Distributions:</b>{' '}\n                        {selectedUnit.distributions.length || 0}\n                      </p>\n                      <div className=\"unit-section__actions\">\n                        <button\n                          className=\"btn\"\n                          onClick={() => this.artistRedirect('songs')}\n                        >\n                          Distribute\n                        </button>\n                        <button\n                          className=\"btn\"\n                          onClick={() => this.artistRedirect('lyrics')}\n                        >\n                          Play with Lyrics{' '}\n                          <span className=\"restriction\">*</span>\n                        </button>\n                        <button className=\"btn\" disabled>\n                          Random Song\n                        </button>\n                        <p>\n                          <small>* You won&apos;t be able to save this.</small>\n                        </p>\n                      </div>\n                    </Fragment>\n                  </LoadingWrapper>\n                </div>\n                <div className=\"unit-section__bias\">\n                  <LoadingWrapper pending={isUnitPending}>\n                    <div className=\"unit-section__bias-wrapper\">\n                      <BiasPicture bias={bias} />\n                      <Select\n                        action={updateBias}\n                        options={selectedUnit.members}\n                        optionValue=\"id\"\n                        optionName=\"name\"\n                        optionPrefix=\"Bias: \"\n                        placeholder=\"Select your bias...\"\n                      />\n                    </div>\n                  </LoadingWrapper>\n                </div>\n              </div>\n              <hr className=\"unit-section__ruler\" />\n              <h2>Members:</h2>\n              <LoadingWrapper pending={isUnitPending}>\n                <div className=\"unit-section__members\">\n                  {Object.values(selectedUnit.members).map(member => (\n                    <MemberCard\n                      averages={{}}\n                      key={member.id}\n                      member={member}\n                      favoriteState={\n                        auth.user.favoriteMembers &&\n                        auth.user.favoriteMembers[member.id]\n                      }\n                      updateFavoriteMembers={updateFavoriteMembers}\n                    />\n                  ))}\n                </div>\n              </LoadingWrapper>\n              <hr className=\"unit-section__ruler\" />\n              <h2>Distributions</h2>\n              <LoadingWrapper pending={isUnitPending}>\n                <DistributedSongsTable\n                  distributions={selectedUnit.distributions}\n                  members={selectedUnit.members}\n                />\n              </LoadingWrapper>\n            </div>\n          ) : (\n            <p>The selected Artist has no units.</p>\n          )}\n        </Tabs>\n      </section>\n    );\n  }\n}\n\nUnits.propTypes = {\n  props: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n};\n\nexport default Units;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport Units from './Units';\n// Import common components\nimport {\n  FavoriteIcon,\n  LoadingWrapper,\n  RequirementWrapper,\n} from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Artist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      memberColors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { artistId } = this.props.match.params;\n    if (\n      this.props.artists.selectedArtist &&\n      this.props.artists.selectedArtist.id !== artistId\n    ) {\n      this.props.loadArtist(artistId, this.props.location.search);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.artists.selectedUnit.id !== this.props.artists.selectedUnit.id\n    ) {\n      this.getMemberColors();\n    }\n  }\n\n  getMemberColors() {\n    const memberColors = { ...this.state.memberColors };\n    Object.values(this.props.artists.selectedUnit.members).forEach(member => {\n      memberColors[member.id] = utils.getColorNumber(member.colorId);\n    });\n    this.setState({ memberColors });\n  }\n\n  render() {\n    const {\n      app,\n      artists: { selectedArtist },\n      auth,\n    } = this.props;\n\n    const isArtistPending = app.pending.REQUEST_ARTIST;\n\n    return (\n      <RequirementWrapper requirements={['selectedArtist']}>\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          <LoadingWrapper pending={isArtistPending}>\n            <section className=\"artist__section\">\n              <h2 className=\"artist-page__name\">\n                {selectedArtist.name}\n                <FavoriteIcon\n                  action={this.props.updateFavoriteArtists}\n                  id={selectedArtist.id || ''}\n                  className=\"artist-page__name--fav-icon\"\n                  size=\"20\"\n                  state={\n                    selectedArtist &&\n                    selectedArtist.id &&\n                    auth.user &&\n                    auth.user.favoriteArtists[selectedArtist.id]\n                  }\n                />\n              </h2>\n              <p className=\"artist-page__genre\">{selectedArtist.genre}</p>\n              <ul className=\"artist-page__members-list\">\n                {selectedArtist.memberList &&\n                  selectedArtist.memberList.map((memberName, index) => (\n                    <li\n                      className={`artist-page__member-pill background-color-${\n                        this.state.memberColors[selectedArtist.memberIds[index]]\n                      }`}\n                      key={`mp-${memberName}`}\n                    >\n                      {memberName}\n                    </li>\n                  ))}\n              </ul>\n              <Units props={this.props} />\n            </section>\n          </LoadingWrapper>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtist.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  loadArtist: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtist.defaultProps = {};\n\nexport default Artist;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artist from '../components/Artist';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artist)\n);\n","import ArtistContainer from './containers/ArtistContainer';\n\nexport default ArtistContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon, PositionIcon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst DistributeConnect = ({\n  activeMemberPill,\n  activateMemberPill,\n  distributionLines,\n  linkMemberToPart,\n  members,\n  rates,\n  remainder,\n}) => (\n  <section className=\"distribute__section distribute__section--connect\">\n    <div className=\"distribute__section-left\">\n      <div className=\"distribute__content\">\n        <h3>Instructions</h3>\n        <p>\n          Assign members to every single part in the lyrics. You can instantly\n          see the overall percentage. You can overwrite a member by assigning a\n          new one to that part.\n        </p>\n      </div>\n      <div className=\"distribute__content\">\n        <h3>Members &amp; Live Distribution Rates</h3>\n        <p>\n          Click on the member pill then in a lyric connection icon on the right.\n        </p>\n        <ul\n          className={`distribute__rates ${\n            Object.values(members).length > 10 ? 'distribute__rates--half' : ''\n          }`}\n        >\n          {Object.values(members).map(member => {\n            const colorNumber = utils.getColorNumber(member.colorId);\n            const activeClass = activeMemberPill === member.id ? 'active' : '';\n            const percentage = rates[member.id] ? rates[member.id][1] : 0;\n            const percentageWidth = rates[member.id] ? rates[member.id][2] : 0;\n\n            const spanWidth = {\n              width: `${percentageWidth}%`,\n            };\n\n            return (\n              <li className=\"distribute__pill-group\" key={member.id}>\n                <div\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`pill distribute__member-pill background-color-${colorNumber} border-color-${colorNumber} ${activeClass}`}\n                  onClick={() => activateMemberPill(member.id)}\n                >\n                  <PositionIcon\n                    position={utils.getMostImportantPosition(member.positions)}\n                  />{' '}\n                  {member.name}\n                </div>\n                <div className=\"pill distribute__rates__percentage-bar-group\">\n                  <span className=\"distribute__rates__percentage-value\">\n                    {percentage}%\n                  </span>\n                  <span\n                    style={spanWidth}\n                    className={`distribute__rates__percentage-bar background-color-${utils.getColorNumber(\n                      member.colorId\n                    )}`}\n                  />\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n\n        <p>Remaining: {remainder}%</p>\n      </div>\n    </div>\n    <div className=\"distribute__section-right\">\n      <div className=\"distribute__content--lyrics\">\n        {distributionLines.map((line, index) => {\n          const key = `line-${index}`;\n          return line.length > 0 ? (\n            <div className=\"distribution__lyrics__line\" key={key}>\n              {line.map((part, partIndex) => {\n                const partKey = `${key}-${partIndex}`;\n\n                const colors = part.memberId.map(mId => members[mId].color.hex);\n\n                const lineColors = {};\n                if (colors.length === 1) {\n                  [lineColors.background] = colors;\n                  if (colors[0] === '#ebebf2') {\n                    lineColors.fontStyle = 'italic';\n                    lineColors.color = '#7e7e82';\n                  }\n                } else if (colors.length > 1) {\n                  lineColors.background = `linear-gradient(${colors.join(\n                    ', '\n                  )})`;\n                }\n\n                return (\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"distribution__lyrics__line--part\"\n                    style={lineColors}\n                    key={`${partKey}-new`}\n                    onClick={() => linkMemberToPart(part.id)}\n                  >\n                    {part.memberId.map(m => {\n                      const mKey = `${partKey}-${m}`;\n                      return (\n                        <span\n                          key={mKey}\n                          className=\"distribution__lyrics__line--icon\"\n                        >\n                          <Icon type=\"plug-connected\" size=\"12\" color=\"black\" />\n                        </span>\n                      );\n                    })}\n                    <span className=\"distribution__lyrics__line--icon\">\n                      <Icon type=\"plug-available\" size=\"12\" color=\"gray\" />\n                    </span>\n                    <span className=\"distribution__lyrics__line--content\">\n                      {part.content}\n                    </span>\n                  </span>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"distribution__lyrics\" key={key}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  </section>\n);\n\nDistributeConnect.propTypes = {\n  activeMemberPill: PropTypes.string,\n  activateMemberPill: PropTypes.func.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  members: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n  remainder: PropTypes.number,\n};\n\nDistributeConnect.defaultProps = {\n  activeMemberPill: '',\n  remainder: 0,\n};\n\nexport default DistributeConnect;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import page components\nimport DistributeConnect from './DistributeConnect';\n// Import shared components\nimport { ActiveSong, ActiveUnit, ActiveVideoWidget } from '../../../common';\n\nconst DistributeEdit = ({\n  activeDistribution,\n  activateMemberPill,\n  activeMemberPill,\n  activeSong,\n  activeUnit,\n  distributionLines,\n  handleDistributionCategory,\n  handleSaveDistribution,\n  linkMemberToPart,\n  members,\n  rates,\n  remainder,\n}) => (\n  <Fragment>\n    <section className=\"active-widget__group\">\n      <ActiveUnit activeUnit={activeUnit} showMembers />\n      <ActiveSong activeSong={activeSong} />\n      <ActiveVideoWidget videoId={activeSong.videoId} />\n    </section>\n\n    <div className=\"distribute__content-container\">\n      <DistributeConnect\n        activateMemberPill={activateMemberPill}\n        activeMemberPill={activeMemberPill}\n        distributionLines={distributionLines}\n        linkMemberToPart={linkMemberToPart}\n        members={members}\n        rates={rates}\n        remainder={remainder}\n      />\n      <div className=\"distribute__save-section\">\n        <p>\n          <label className=\"distribute__distribution-category\">\n            Category*\n            <select\n              onChange={handleDistributionCategory}\n              defaultValue={activeDistribution.category}\n            >\n              <option value=\"\" disabled>\n                Select a type...\n              </option>\n              <option value=\"OFFICIAL\">Official</option>\n              <option value=\"WOULD\">How they would sing</option>\n              <option value=\"SHOULD\">How they should sing</option>\n            </select>\n          </label>\n        </p>\n        <p>\n          <button\n            className=\"btn\"\n            onClick={handleSaveDistribution}\n            disabled={remainder}\n          >\n            {activeDistribution.id ? 'Update' : 'Save'}\n          </button>\n        </p>\n      </div>\n    </div>\n  </Fragment>\n);\n\nDistributeEdit.propTypes = {\n  activeDistribution: PropTypes.object,\n  activateMemberPill: PropTypes.func.isRequired,\n  activeMemberPill: PropTypes.string,\n  activeSong: PropTypes.object,\n  activeUnit: PropTypes.object,\n  distributionLines: PropTypes.array.isRequired,\n  handleDistributionCategory: PropTypes.func.isRequired,\n  handleSaveDistribution: PropTypes.func.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  members: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n  remainder: PropTypes.number,\n};\n\nDistributeEdit.defaultProps = {\n  activeDistribution: {},\n  activeMemberPill: '',\n  activeSong: {},\n  activeUnit: {},\n  remainder: 0,\n};\n\nexport default DistributeEdit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DistributeProgressBar = ({\n  active,\n  colorNumber,\n  duration,\n  name,\n  percentage,\n}) => {\n  const widthStyle = {\n    width: `${percentage}%`,\n  };\n\n  // if (active) {\n  //   console.log({\n  //     colorNumber,\n  //     duration,\n  //     name,\n  //     percentage,\n  //   });\n  // }\n  return (\n    <div className=\"distribute-progress-bar\">\n      <div\n        className={`distribute-progress-bar__name foreground-color-${colorNumber}`}\n      >\n        {name}\n      </div>\n      <div className=\"distribute-progress-bar__progress\">\n        <span\n          className={`distribute-progress-bar__bar background-color-${colorNumber}`}\n          style={widthStyle}\n        />\n      </div>\n      <div\n        className={`distribute-progress-bar__active-icon--${\n          active ? 'on' : 'off'\n        }`}\n      />\n      <div className=\"distribute-progress-bar__duration\">\n        {duration.toFixed(1)}s\n      </div>\n    </div>\n  );\n};\n\nDistributeProgressBar.propTypes = {\n  active: PropTypes.bool,\n  name: PropTypes.string,\n  colorNumber: PropTypes.number,\n  duration: PropTypes.number,\n  percentage: PropTypes.number,\n};\n\nDistributeProgressBar.defaultProps = {\n  active: false,\n  name: 'Bob',\n  colorNumber: 1,\n  duration: 15.4,\n  percentage: 40,\n};\n\nexport default DistributeProgressBar;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport YouTube from 'react-youtube';\n\n// Import shared components\nimport { ActiveSong, ActiveUnit } from '../../../common';\n\n// Import utility functions\nimport utils from '../../../../utils';\nimport DistributeProgressBar from './DistributeProgressBar';\n\nlet player = null;\nlet animationInterval;\n// let membersProgress = {};\n\nconst INTERVAL = 1000;\n\nclass DistributeView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: 0,\n      height: 0,\n      isPlaying: false,\n      isReady: false,\n      members: {},\n      activeCache: {},\n      membersProgress: {},\n    };\n\n    this.setDimentions = this.setDimentions.bind(this);\n    this.onStateChange = this.onStateChange.bind(this);\n    this.onReady = this.onReady.bind(this);\n    this.onPlay = this.onPlay.bind(this);\n    this.onPause = this.onPause.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n  }\n\n  componentDidMount() {\n    // Determine player height\n    if (!this.state.height && document.getElementById('video-container-view')) {\n      this.setDimentions();\n    }\n\n    this.setMembers();\n  }\n\n  onReady(e) {\n    player = e.target;\n    this.setState({ isReady: true });\n  }\n\n  onPlay(e) {\n    console.log('PLAY', e);\n    this.setState({ isPlaying: true });\n  }\n\n  onPause(e) {\n    console.log('PAUSE', e);\n    this.setState({ isPlaying: false });\n  }\n\n  onEnd(e) {\n    console.log('END', e);\n    this.setState({ isPlaying: false });\n  }\n\n  onStateChange(e) {\n    console.log('STATE', e);\n\n    // If video is playing\n    if (e.data === 1) {\n      // Lyric Review Animation Interval\n      animationInterval = setInterval(() => {\n        const currentTime = Math.round(e.target.getCurrentTime());\n        this.setState({ currentTime });\n        // this.calculateBars(currentTime);\n      }, INTERVAL);\n    } else {\n      // Kill interval\n      clearInterval(animationInterval);\n    }\n  }\n\n  setDimentions() {\n    let width = document.getElementById('video-container-view').clientWidth;\n    let height = document.getElementById('video-container-view').clientHeight;\n    if (width > height) {\n      width = (16 * height) / 9;\n    } else {\n      height = (9 * width) / 16;\n    }\n\n    this.setState(() => ({ width, height }));\n  }\n\n  setMembers() {\n    const { members } = this.props;\n\n    const membersState = {};\n    Object.values(members).forEach(member => {\n      membersState[member.id] = {\n        id: member.id,\n        name: member.name,\n        colorNumber: member.color.number || 0,\n        percentage: 0,\n        duration: 0,\n        active: false,\n      };\n    });\n\n    this.setState({ membersProgress: membersState });\n  }\n\n  calculateBars(timestamp) {\n    const { timestampsDict, rates } = this.props;\n    let activeCache = { ...this.state.activeCache };\n    const membersProgress = { ...this.state.membersProgress };\n\n    const distributionTotals = {};\n\n    const currentDPS = timestampsDict[timestamp];\n\n    if (currentDPS) {\n      // Encache\n      if (currentDPS.start) {\n        activeCache = { ...activeCache, ...currentDPS.start };\n      }\n\n      // Decache\n      if (currentDPS.stop) {\n        Object.entries(currentDPS.stop).forEach(([id, total]) => {\n          distributionTotals[id] = total;\n          delete activeCache[id];\n        });\n      }\n\n      Object.keys(membersProgress).forEach(memberId => {\n        const currentMember = membersProgress[memberId];\n        if (activeCache[memberId]) {\n          currentMember.active = true;\n          currentMember.duration += INTERVAL / 1000;\n          currentMember.percentage =\n            (100 * membersProgress[memberId].duration) / rates.max;\n        } else {\n          currentMember.active = false;\n          currentMember.duration +=\n            distributionTotals[memberId] || currentMember.duration;\n          currentMember.percentage = (100 * currentMember.duration) / rates.max;\n        }\n      });\n\n      this.setState(() => ({\n        activeCache,\n        distributionTotals,\n        membersProgress,\n      }));\n    }\n  }\n\n  togglePlayPause() {\n    if (this.state.isPlaying) {\n      player.pauseVideo();\n    } else {\n      player.playVideo();\n    }\n  }\n\n  restartVideo() {\n    player.seekTo(0);\n    player.playVideo();\n  }\n\n  rewindFastforward(direction) {\n    if (direction === '+') {\n      player.seekTo(player.getCurrentTime() + 10);\n    } else {\n      player.seekTo(player.getCurrentTime() - 10);\n    }\n  }\n\n  render() {\n    const { activeSong, activeUnit } = this.props;\n\n    // Youtube Player options\n    const opts = {\n      height: this.state.height,\n      width: this.state.width,\n    };\n\n    // const getVideoFloatSize = members => {\n    //   const size = Object.keys(members).length;\n    //   if (size <= 6) return 'small';\n    //   if (size > 12) return 'large';\n    //   return 'medium';\n    // };\n\n    // const videoFloatSize = getVideoFloatSize(members);\n\n    const barsHeight = {\n      height: `${this.state.height / 2}px`,\n    };\n    const barsWidth = {\n      width: `${this.state.width}px`,\n    };\n\n    return (\n      <Fragment>\n        <section className=\"active-widget__group\">\n          <ActiveUnit activeUnit={activeUnit} showMembers />\n          <ActiveSong activeSong={activeSong} />\n        </section>\n        <section className=\"distribute-view__video\" id=\"video-container-view\">\n          <YouTube\n            videoId={activeSong.videoId}\n            opts={opts}\n            onReady={this.onReady}\n            onPlay={this.onPlay}\n            onPause={this.onPause}\n            onEnd={this.onEnd}\n            onStateChange={this.onStateChange}\n          />\n          <div className=\"distribute-view__video-float\" style={barsHeight}>\n            <div\n              className=\"distribute-view__video-float__inner\"\n              style={barsWidth}\n            >\n              {Object.values(this.state.membersProgress).map(member => {\n                if (member.name === 'ALL' || member.name === 'NONE') {\n                  return null;\n                }\n                return (\n                  <DistributeProgressBar\n                    active={member.active}\n                    colorNumber={member.colorNumber}\n                    duration={member.duration}\n                    name={member.name}\n                    percentage={member.percentage}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        </section>\n        <section className=\"distribute-view-controls\">\n          <button className=\"btn\" onClick={() => this.togglePlayPause()}>\n            Play/Pause\n          </button>\n          <button className=\"btn\" onClick={() => this.restartVideo()}>\n            Restart\n          </button>\n          <button className=\"btn\" onClick={() => this.rewindFastforward('-')}>\n            - 10s\n          </button>\n          <button className=\"btn\" onClick={() => this.rewindFastforward('+')}>\n            + 10s\n          </button>\n          <button className=\"btn\">Results</button>\n        </section>\n        <h1>View!</h1>\n      </Fragment>\n    );\n  }\n}\n\nDistributeView.propTypes = {};\n\nDistributeView.defaultProps = {};\n\nexport default DistributeView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import page components\nimport DistributeEdit from './DistributeEdit';\n\n// Import common components\nimport { ModeWidget, RequirementWrapper } from '../../../common';\nimport DistributeView from './DistributeView';\n\nclass Distribute extends Component {\n  componentDidMount() {\n    this.props.prepareSong();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.distribute.activeDistribution !==\n      this.props.distribute.activeDistribution\n    ) {\n      this.props.mergeActiveDistribution();\n    }\n  }\n\n  render() {\n    const {\n      distribute: {\n        activeMemberPill,\n        activeDistribution,\n        activeSong,\n        activeUnit,\n        distributeView,\n        distributionLines,\n        rates,\n        remainder,\n        timestampsDict,\n      },\n      activateMemberPill,\n      handleDistributeView,\n      handleDistributionCategory,\n      handleSaveDistribution,\n      linkMemberToPart,\n    } = this.props;\n\n    const getMembers = () => {\n      const members = { ...activeUnit.members };\n      members.ALL = {\n        id: 'ALL',\n        name: 'ALL',\n        colorId: 'col000000',\n        color: { number: 0, hex: '#b5b5ba' },\n        positions: ['ALL'],\n      };\n      members.NONE = {\n        id: 'NONE',\n        name: 'NONE',\n        colorId: 'col000031',\n        color: { number: 0, hex: '#ebebf2' },\n        positions: ['NONE'],\n      };\n      return members;\n    };\n\n    const members = getMembers();\n\n    return (\n      <RequirementWrapper requirements={['activeUnit', 'activeSong']}>\n        <main className=\"container container--distribute\">\n          <div className=\"distribute__header\">\n            <h1>Distribute</h1>\n            <ModeWidget\n              labels={['view', 'edit']}\n              active={distributeView}\n              action={handleDistributeView}\n            />\n          </div>\n\n          {distributeView === 'view' ? (\n            <DistributeView\n              activeSong={activeSong}\n              activeUnit={activeUnit}\n              members={members}\n              distributionLines={distributionLines}\n              timestampsDict={timestampsDict}\n              rates={activeDistribution.rates}\n            />\n          ) : (\n            <DistributeEdit\n              activeDistribution={activeDistribution}\n              activateMemberPill={activateMemberPill}\n              activeMemberPill={activeMemberPill}\n              activeSong={activeSong}\n              activeUnit={activeUnit}\n              distributionLines={distributionLines}\n              handleDistributionCategory={handleDistributionCategory}\n              handleSaveDistribution={handleSaveDistribution}\n              linkMemberToPart={linkMemberToPart}\n              members={members}\n              rates={rates}\n              remainder={remainder}\n            />\n          )}\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nDistribute.propTypes = {\n  activeDistribution: PropTypes.object,\n  activateMemberPill: PropTypes.func.isRequired,\n  distribute: PropTypes.object.isRequired,\n  handleDistributeView: PropTypes.func.isRequired,\n  handleDistributionCategory: PropTypes.func.isRequired,\n  handleSaveDistribution: PropTypes.func.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  mergeActiveDistribution: PropTypes.func.isRequired,\n  prepareSong: PropTypes.func.isRequired,\n};\n\nDistribute.defaultProps = {\n  activeDistribution: {},\n};\n\nexport default Distribute;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Distribute from '../components/Distribute';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Distribute)\n);\n","import DistributeContainer from './containers/DistributeContainer';\n\nexport default DistributeContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport logo from '../../../../images/logo-alt.svg';\n\nimport constants from '../../../../utils/constants';\n\n// Import common components\nimport { Icon, LoadingIcon } from '../../../common';\n\nconst Home = props => {\n  // Randomly choose one video in the playlist\n  const youtubeUrl =\n    constants.YOUTUBE_URLS[\n      Math.floor(Math.random() * constants.YOUTUBE_URLS.length)\n    ];\n\n  const handleLearnMoreClick = () => {\n    props.history.push('/learn-more');\n  };\n\n  const isPending = props.app.pending.RUN_LOGIN;\n\n  return (\n    <main className=\"container container--no-padding\">\n      <div className=\"home__video\">\n        <iframe\n          className=\"home__iframe\"\n          title=\"home__video\"\n          src={`https://www.youtube.com/embed/${youtubeUrl}?controls=0&showinfo=0&rel=0&autoplay=1&loop=1&mute=1&playlist=${youtubeUrl}`}\n          frameBorder=\"0\"\n          allowFullScreen\n        />\n      </div>\n      <div className=\"home__content\">\n        <img className=\"home__logo\" src={logo} alt=\"Line Distribution\" />\n        <div className=\"home__buttons\">\n          {!props.auth.isAuthenticated && (\n            <button\n              className=\"btn-home\"\n              onClick={props.login}\n              disabled={isPending}\n            >\n              {isPending ? (\n                <LoadingIcon size=\"tiny\" inline />\n              ) : (\n                <Fragment>\n                  Sign-in <Icon type=\"logout\" color=\"white\" inline />\n                </Fragment>\n              )}\n            </button>\n          )}\n          <button className=\"btn-home\" onClick={() => handleLearnMoreClick()}>\n            Learm more\n          </button>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nHome.propTypes = {\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default Home;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Home from '../components/Home';\n\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = {\n  login: authOperations.login,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Home)\n);\n","import HomeContainer from './containers/HomeContainer';\n\nexport default HomeContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { Checkbox, Form, Option, Select, Text } from 'informed';\n\n// Import common components\nimport { Loading, MemberCard, RequirementWrapper } from '../../../common';\n// Import constants\nimport constants from '../../../../utils/constants';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Idols extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      age: '',\n      color: '',\n      favorite: '',\n      gender: '',\n      name: '',\n      nationality: '',\n      position: '',\n      privacy: '',\n      sort: 'name',\n      order: 'asc',\n      showIds: false,\n    };\n\n    this.filterIdols = this.filterIdols.bind(this);\n    this.sortIdols = this.sortIdols.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.loadMembers();\n  }\n\n  updateFilters(formState) {\n    this.setState({\n      age: formState.values.age,\n      color: formState.values.color,\n      favorite: formState.values.favorite,\n      gender: formState.values.gender,\n      name: formState.values.name,\n      nationality: formState.values.nationality,\n      position: formState.values.position,\n      privacy: formState.values.privacy,\n      sort: formState.values.sort || 'name',\n      order: formState.values.order || 'asc',\n      showIds: formState.values.showIds || false,\n    });\n  }\n\n  filterIdols(members, user) {\n    return _.filter(members, member => {\n      const evaluation = [];\n\n      if (this.state.favorite) {\n        if (this.state.favorite === 'favorite') {\n          evaluation.push(user.favoriteMembers[member.id]);\n        } else {\n          evaluation.push(!user.favoriteMembers[member.id]);\n        }\n      }\n\n      if (this.state.privacy) {\n        if (this.state.privacy === 'private') {\n          evaluation.push(member.private);\n        } else {\n          evaluation.push(!member.private);\n        }\n      }\n\n      if (this.state.color)\n        evaluation.push(member.colorId === this.state.color);\n      if (this.state.gender)\n        evaluation.push(member.gender === this.state.gender);\n      if (this.state.nationality)\n        evaluation.push(member.nationality === this.state.nationality);\n      if (this.state.position)\n        evaluation.push(member.positions.includes(this.state.position));\n      if (this.state.name)\n        evaluation.push(\n          member.name.toLowerCase().startsWith(this.state.name.toLowerCase())\n        );\n      if (this.state.age) {\n        if (this.state.age === '<18') {\n          evaluation.push(member.age < 18);\n        } else if (this.state.age === '18-28') {\n          evaluation.push(member.age > 17 && member.age < 28);\n        } else {\n          evaluation.push(member.age > 28);\n        }\n      }\n      return evaluation.every(e => e);\n    });\n  }\n\n  sortIdols(filteredMembers) {\n    return _.orderBy(filteredMembers, [this.state.sort], [this.state.order]);\n  }\n\n  render() {\n    const {\n      app: { pending },\n      auth: { isAdmin, user },\n      db: { members },\n      updateFavoriteMembers,\n    } = this.props;\n\n    if (pending.REQUEST_MEMBERS) {\n      return <Loading message=\"Fecthing Idols...\" />;\n    }\n\n    const filteredMembers = this.filterIdols(members, user);\n\n    const sortedMembers = this.sortIdols(filteredMembers);\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--idols\">\n          <h1>Idols</h1>\n          <Form\n            onChange={formState => this.updateFilters(formState)}\n            autoComplete=\"off\"\n            className=\"idols__filters-form\"\n          >\n            <div className=\"idols__filters-group\">\n              <div className=\"idols__filters-items\">\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">\n                    Name starts with\n                  </label>\n                  <Text\n                    className=\"idols__filter-input-text\"\n                    field=\"name\"\n                    initialValue={this.state.name}\n                    maxLength=\"3\"\n                  />\n                </div>\n\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Gender</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"gender\"\n                    initialValue={this.state.gender}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {Object.entries(constants.GENDERS).map(gender => (\n                      <Option key={gender[0]} value={gender[0]}>\n                        {gender[1]}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Nationality</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"nationality\"\n                    initialValue={this.state.nationality}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {Object.entries(constants.NATIONALITIES).map(\n                      nationalitie => (\n                        <Option key={nationalitie[0]} value={nationalitie[0]}>\n                          {nationalitie[1]}\n                        </Option>\n                      )\n                    )}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Age Range</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"age\"\n                    initialValue={this.state.age}\n                  >\n                    <Option value=\"\">Any</Option>\n                    <Option value=\"<18\">&lt;18</Option>\n                    <Option value=\"18-28\">18-28</Option>\n                    <Option value=\"28+\">28+</Option>\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Position</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"position\"\n                    initialValue={this.state.position}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {constants.POSITIONS_LIST.map(position => (\n                      <Option key={position} value={position}>\n                        {constants.POSITIONS_LIST_OBJ[position]}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Color</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"color\"\n                    initialValue={this.state.color}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {Object.entries(constants.COLORS).map(color => (\n                      <Option key={color[0]} value={color[0]}>\n                        {utils.humanize(color[1], 'Capital')}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Favorite</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"favorite\"\n                    initialValue={this.state.favorite}\n                  >\n                    <Option value=\"\">Any</Option>\n                    <Option value=\"favorite\">Favorite</Option>\n                    <Option value=\"nonfavorite\">Non-favorite</Option>\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Privacy</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"privacy\"\n                    initialValue={this.state.privacy}\n                  >\n                    <Option value=\"\">Any</Option>\n                    <Option value=\"private\">Private</Option>\n                    <Option value=\"public\">Public</Option>\n                  </Select>\n                </div>\n                {isAdmin && (\n                  <div className=\"idols__filter-select-group\">\n                    <label className=\"idols__filter-label\">Show Ids</label>\n                    <Checkbox field=\"showIds\" initialValue={isAdmin} />\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"idols__filters-group\">\n              <div className=\"idols__filters-items\">\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Sort by</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"sort\"\n                    initialValue={this.state.sort}\n                  >\n                    <Option value=\"age\">Age</Option>\n                    <Option value=\"colorId\">Color</Option>\n                    <Option value=\"gender\">Gender</Option>\n                    <Option value=\"referenceArtist\">Group</Option>\n                    <Option value=\"name\">Name</Option>\n                    <Option value=\"nationality\">Nationality</Option>\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Order by</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"order\"\n                    initialValue={this.state.order}\n                  >\n                    <Option value=\"asc\">Ascending</Option>\n                    <Option value=\"desc\">Descending</Option>\n                  </Select>\n                </div>\n              </div>\n            </div>\n          </Form>\n          <h3 className=\"member-count\">\n            Displaying {sortedMembers.length} members\n          </h3>\n          <div className=\"idols__list\">\n            {sortedMembers.map(member => (\n              <MemberCard\n                key={member.id}\n                member={member}\n                showId={this.state.showIds}\n                showReferenceArtist\n                favoriteState={\n                  user.favoriteMembers && user.favoriteMembers[member.id]\n                }\n                updateFavoriteMembers={updateFavoriteMembers}\n              />\n            ))}\n          </div>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nIdols.propTypes = {\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadMembers: PropTypes.func.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n};\n\nexport default Idols;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Idols from '../components/Idols';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...dbOperations,\n  ...artistsOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Idols)\n);\n","import IdolsContainer from './containers/IdolsContainer';\n\nexport default IdolsContainer;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst Lab = () => (\n  <main className=\"container container--lab\">\n    <h1>Lab</h1>\n  </main>\n);\n\nLab.propTypes = {};\n\nLab.defaultProps = {};\n\nexport default Lab;\n","import LabContainer from './containers/LabContainer';\n\nexport default LabContainer;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Lab from '../components/Lab';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Lab)\n);\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst LearnMore = () => (\n  <main className=\"container container--learn-more\">\n    <h1>Learn More</h1>\n  </main>\n);\n\nLearnMore.propTypes = {};\n\nLearnMore.defaultProps = {};\n\nexport default LearnMore;\n","import LearnMoreContainer from './containers/LearnMoreContainer';\n\nexport default LearnMoreContainer;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport LearnMore from '../components/LearnMore';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LearnMore)\n);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nlet colorDict = null;\nlet keyNumber = 0;\n\nconst LyricsOutput = ({ lyrics, colorsDB }) => {\n  if (!colorDict || !Object.keys(colorDict).length) {\n    colorDict = colorsDB;\n    colorDict.col000000 = {\n      number: 0,\n      hex: '#b1b1b1',\n    };\n  }\n\n  return (\n    <div className=\"lyrics__output\">\n      {lyrics.map(verse => {\n        keyNumber++;\n        return <Verse key={`verse-${keyNumber}`} verse={verse} />;\n      })}\n    </div>\n  );\n};\n\nLyricsOutput.propTypes = {\n  lyrics: PropTypes.array.isRequired,\n  colorsDB: PropTypes.object.isRequired,\n};\n\nconst Verse = ({ verse }) => (\n  <p className=\"lyrics__verse\">\n    {verse.map(line => {\n      keyNumber++;\n      return (\n        <Fragment key={`line-${keyNumber}`}>\n          <Line line={line} />\n          <br />\n        </Fragment>\n      );\n    })}\n  </p>\n);\n\nVerse.propTypes = {\n  verse: PropTypes.array.isRequired,\n};\n\nconst Line = ({ line }) => (\n  <span className=\"lyrics__line\">\n    {line.map(part => {\n      keyNumber++;\n      if (!part.line || !part.line[0] || !part.adlib) return null;\n\n      return (\n        <Fragment key={`part-${keyNumber}`}>\n          <Bracket part={part} />\n          <Part part={part} />\n        </Fragment>\n      );\n    })}\n  </span>\n);\n\nLine.propTypes = {\n  line: PropTypes.array.isRequired,\n};\n\nconst Part = ({ part }) => (\n  <Fragment>\n    {part.adlib.map((type, index) => {\n      keyNumber++;\n\n      const bitStyle = getBitStyle(part, type, index);\n\n      switch (type) {\n        case 0:\n          // colored line (colors)\n          return (\n            <span\n              key={`bit-${keyNumber}`}\n              className=\"lyrics__bit-normal\"\n              style={bitStyle}\n            >\n              {part.line[index]}\n            </span>\n          );\n        case 1:\n          // colored line with parentheses (subColors)\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              (\n              <span className=\"lyrics__bit-sub\" style={bitStyle}>\n                {part.line[index]}\n              </span>\n              )\n            </Fragment>\n          );\n        case 2:\n          // greyed italic line with parentheses\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              <i>(</i>\n              <span className=\"lyrics__bit-grey\">{part.line[index]}</span>\n              <i>)</i>\n            </Fragment>\n          );\n        case 3:\n          // greyed italitc line\n          return (\n            <span key={`bit-${keyNumber}`} className=\"lyrics__bit-all\">\n              {part.line[index]}\n            </span>\n          );\n        case 4:\n          // colored line with parentheses (choirColors)\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              <i>(</i>\n              <span className=\"lyrics__bit-choir\" style={bitStyle}>\n                {part.line[index]}\n              </span>\n              <i>)</i>\n            </Fragment>\n          );\n        default:\n          return (\n            <span\n              key={`bit-${keyNumber}`}\n              className=\"lyrics__bit-normal\"\n              style={bitStyle}\n            >\n              {part.line[index]}\n            </span>\n          );\n      }\n    })}\n  </Fragment>\n);\n\nPart.propTypes = {\n  part: PropTypes.object.isRequired,\n};\n\nconst Bracket = ({ part }) => {\n  if (part.omit) return null;\n\n  const hasSingers = part.singers && !part.omit;\n  const hasSubSingers = part.subSingers && !part.omitSub;\n  const hasChoirSingers = part.choirSingers && !part.omitChoir;\n\n  if (!hasSingers && !hasSubSingers && !hasChoirSingers) return null;\n\n  return (\n    <span className=\"lyrics__bracket\">\n      {' ['}\n      {hasSingers && part.singers.join('/')}\n      {hasSubSingers && (\n        <span className=\"lyrics__parenthesis\">\n          {' ('}\n          {part.subSingers.join('/')}\n          {')'}\n        </span>\n      )}\n      {hasChoirSingers && (\n        <span className=\"lyrics__braces\">\n          {' {'}\n          {part.choirSingers.join('/')}\n          {'}'}\n        </span>\n      )}\n      {'] '}\n    </span>\n  );\n};\n\nBracket.propTypes = {\n  part: PropTypes.object.isRequired,\n};\n\nconst getBitStyle = (part, type) => {\n  const BASE_COLOR = '#b5b5ba';\n  const styles = {\n    background: '#b1b1b1',\n  };\n\n  if (type === 0 && part.colors && part.colors.length) {\n    if (part.colors.length > 1) {\n      const colorHexes = part.colors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.colors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  if (type === 1 && part.subColors && part.subColors.length) {\n    if (part.subColors.length > 1) {\n      const colorHexes = part.subColors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.subColors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  if (type === 4 && part.choirColors && part.choirColors.length) {\n    if (part.choirColors.length > 1) {\n      const colorHexes = part.choirColors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.choirColors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  return styles;\n};\n\nexport default LyricsOutput;\n","// Global variables\nconst COLOR_BANK = {\n  ALL: 'col000000',\n};\nlet latestUnitId = null;\nlet errors = [];\n\nlet lastSingers = [];\nlet lastColors = [];\nlet lastSubsingers = [];\nlet lastSubColors = [];\nlet lastChoirSingers = [];\nlet lastChoirColors = [];\nlet wasLastLineEmpty = false;\nlet lastLineHadSubSingers = false;\nlet lastLineHadChoirSings = false;\n\nlet uses = {};\n\nconst updateUses = entry => {\n  function addEntry(name) {\n    if (uses[name]) {\n      uses[name]++;\n    } else {\n      uses[name] = 1;\n    }\n  }\n\n  if (typeof entry === 'string') {\n    addEntry(entry.trim().toUpperCase());\n  } else if (Array.isArray(entry)) {\n    entry.forEach(n => addEntry(n.trim().toUpperCase()));\n  }\n};\n\nclass Part {\n  constructor() {\n    this.singers = null; // type: array\n    this.subSingers = null; // type: array\n    this.line = []; // type: array\n    this.adlib = []; // type: array\n    /**\n     * adlib code reference\n     * 0: regular line colored\n     * 1: surrounded by parenthesis colored\n     * 2: italic greyed surrouneded by parenthesis\n     * 3: italic greyed\n     * 4: italic colored\n     */\n    this.colors = null; // type: array\n    this.subColors = null; // type: array\n    this.omit = false; // type: bool\n    this.omitSub = false; // type: bool\n  }\n}\n\nconst cleanUpPart = part => {\n  if (lastSubsingers.length) lastLineHadSubSingers = true;\n  if (lastChoirSingers.length) lastLineHadChoirSings = true;\n\n  // Keep singer state when not preceeded by an empty line\n  if (part.adlib.includes(0)) {\n    if (!part.singers && wasLastLineEmpty) {\n      part.adlib = part.adlib.map(() => 3);\n    } else if (!part.singers) {\n      updateUses(lastSingers);\n      part.singers = [...lastSingers];\n      part.colors = [...lastColors];\n      part.omit = true;\n    }\n  }\n\n  // Keep subSinger state when not preceeded by an empty line\n  if (part.adlib.includes(1)) {\n    if (!part.subSingers && (wasLastLineEmpty || !lastLineHadSubSingers)) {\n      part.adlib = part.adlib.map(a => (a === 1 ? 2 : a));\n    } else if (!part.subSingers) {\n      updateUses(lastSubsingers);\n      part.subSingers = [...lastSubsingers];\n      part.subColors = [...lastSubColors];\n      part.omitSub = true;\n      lastLineHadSubSingers = true;\n    }\n  }\n\n  if (part.adlib.includes(1)) {\n    lastLineHadSubSingers = true;\n  }\n\n  // Keep choirSinger state when not preceeded by an empty line\n  if (part.adlib.includes(4)) {\n    if (!part.choirSingers && (wasLastLineEmpty || !lastLineHadChoirSings)) {\n      part.adlib = part.adlib.map(a => (a === 4 ? 2 : a));\n    } else if (!part.choirSingers && lastChoirSingers.length) {\n      updateUses(lastChoirSingers);\n      part.choirSingers = [...lastChoirSingers];\n      part.choirColors = [...lastChoirColors];\n      part.omitChoir = true;\n      lastLineHadChoirSings = true;\n    }\n  }\n\n  if (part.adlib.includes(4)) {\n    lastLineHadChoirSings = true;\n  }\n\n  // Clean up unused keys\n  if (!part.singers) delete part.singers;\n  if (Array.isArray(part.singers) && !part.singers.length) delete part.singers;\n  if (!part.subSingers) delete part.subSingers;\n  if (Array.isArray(part.subSingers) && !part.subSingers.length)\n    delete part.subSingers;\n  if (!part.line) delete part.line;\n  if (Array.isArray(part.line) && !part.line.length) delete part.line;\n  if (!part.adlib) delete part.adlib;\n  if (Array.isArray(part.adlib) && !part.adlib.length) delete part.adlib;\n  if (!part.colors) delete part.colors;\n  if (Array.isArray(part.colors) && !part.colors.length) delete part.colors;\n  if (!part.subColors) delete part.subColors;\n  if (Array.isArray(part.subColors) && !part.subColors.length)\n    delete part.subColors;\n  if (!part.omit) delete part.omit;\n  if (!part.omitSub) delete part.omitSub;\n\n  if (Object.keys(part).length) {\n    wasLastLineEmpty = false;\n  } else {\n    part.empty = true;\n    wasLastLineEmpty = true;\n    lastLineHadSubSingers = false;\n    lastLineHadChoirSings = false;\n  }\n\n  // Save last\n  if (!part.empty) {\n    if (part.singers) lastSingers = [...part.singers];\n    if (part.colors) lastColors = [...part.colors];\n    if (part.subSingers) lastSubsingers = [...part.subSingers];\n    if (part.subColors) lastSubColors = [...part.subColors];\n    if (part.choirSingers) lastChoirSingers = [...part.choirSingers];\n    if (part.choirColors) lastChoirColors = [...part.choirColors];\n  } else {\n    lastSingers = [];\n    lastColors = [];\n    lastSubsingers = [];\n    lastSubColors = [];\n    lastChoirSingers = [];\n    lastChoirSingers = [];\n    lastLineHadSubSingers = false;\n    lastLineHadChoirSings = false;\n  }\n  return part;\n};\n\nconst parseLine = line => {\n  const result = [];\n  let insideBracket = false;\n  let insideParentheses = false;\n  let insideCurly = false;\n\n  let names = [];\n  let colors = [];\n\n  let currentString = '';\n  let lastCharacter = '';\n  let currentPart = new Part();\n  for (let i = 0; i < line.length; i++) {\n    const char = line[i];\n\n    // Analyse each character\n    switch (char) {\n      case '[':\n        if (insideBracket) {\n          errors.push(\n            'You should not place an opening square bracket inside another square bracket'\n          );\n        }\n        insideBracket = true;\n        // Push Part and reset variabes\n        if (i !== 0) {\n          if (currentString.trim()) {\n            currentPart.line.push(currentString.trim());\n            currentPart.adlib.push(0);\n          }\n          result.push(cleanUpPart(currentPart));\n          insideParentheses = false;\n          names = [];\n          colors = [];\n          currentString = '';\n          lastCharacter = '';\n        }\n        // Start new Part\n        currentPart = new Part();\n        break;\n\n      case ']':\n        if (!insideBracket) {\n          errors.push(\n            'You should not place an closing square bracket inside another square bracket'\n          );\n        }\n        if (insideBracket && lastCharacter !== ')' && lastCharacter !== '}') {\n          const entry = currentString.trim().toUpperCase();\n          names.push(entry);\n          colors.push(COLOR_BANK[entry] || 'col000000');\n          updateUses(names);\n          currentPart.singers = names;\n          currentPart.colors = colors;\n          names = [];\n          colors = [];\n          currentString = '';\n        }\n        insideBracket = false;\n        break;\n\n      case '(':\n        if (insideParentheses) {\n          errors.push(\n            'You should not place a opening parenthesis inside another parenthesis'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.singers = names;\n            currentPart.colors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(0);\n          currentString = '';\n        }\n        insideParentheses = true;\n        break;\n\n      case ')':\n        if (!insideParentheses) {\n          errors.push(\n            'You should not place a closing parenthesis inside another parenthesis'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.subSingers = names;\n            currentPart.subColors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(1);\n          currentString = '';\n        }\n        insideParentheses = false;\n        break;\n\n      case '{':\n        if (insideCurly) {\n          errors.push(\n            'You should not place a opening curly braces inside another curly braces'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.singers = names;\n            currentPart.colors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(0);\n          currentString = '';\n        }\n        insideCurly = true;\n        break;\n\n      case '}':\n        if (!insideCurly) {\n          errors.push(\n            'You should not place a closing curly braces inside another curly braces'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.choirSingers = names;\n            currentPart.choirColors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(4);\n          currentString = '';\n        }\n        insideCurly = false;\n        break;\n\n      case '/':\n        // TO-DO\n        if (insideBracket) {\n          const entry = currentString.trim().toUpperCase();\n          names.push(entry);\n          colors.push(COLOR_BANK[entry] || 'col000000');\n          currentString = '';\n        } else {\n          currentString += char;\n        }\n        break;\n      default:\n        currentString += char;\n      // do nothing\n    }\n    lastCharacter = char;\n  }\n  // Push the last part to the result\n  if (currentString) {\n    currentPart.line.push(currentString.trim());\n    currentPart.adlib.push(0);\n  }\n  result.push(cleanUpPart(currentPart));\n\n  if (result.length === 1 && result[0].empty) {\n    return null;\n  }\n  return result;\n};\n\nconst parseLyrics = (input, members, unitId) => {\n  const result = [];\n\n  // Build member color bank if it's a new unitId\n  if (unitId !== latestUnitId) {\n    Object.values(members).forEach(member => {\n      COLOR_BANK[member.name.toUpperCase()] = member.colorId || 'col000000';\n    });\n    latestUnitId = unitId;\n  }\n\n  // Split in linebreaks\n  const lines = input.split('\\n').map(l => l.trim());\n  // Keep track of previous information\n\n  // Iterate through lines\n  for (let i = 0; i < lines.length; i++) {\n    result.push(parseLine(lines[i]));\n  }\n\n  // Reset all variabes\n  lastSingers = [];\n  lastColors = [];\n  lastSubsingers = [];\n  lastSubColors = [];\n  lastChoirSingers = [];\n  lastChoirSingers = [];\n  wasLastLineEmpty = false;\n  lastLineHadSubSingers = false;\n  lastLineHadChoirSings = false;\n\n  // Group lyrics in paragraphs\n  const paragraphedResult = [[]];\n  let paragraphIndex = 0;\n  result.forEach(currentLine => {\n    if (!currentLine) {\n      paragraphedResult.push([]);\n      paragraphIndex++;\n    } else {\n      paragraphedResult[paragraphIndex].push(currentLine);\n    }\n  });\n\n  const response = {\n    result: paragraphedResult,\n    uses: { ...uses },\n  };\n\n  // Add any errors\n  if (errors.length) {\n    response.errors = [...errors];\n  }\n\n  errors = [];\n  uses = [];\n\n  return response;\n};\n\nexport default parseLyrics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\n\n// Import lyrics components\nimport LyricsOutput from './LyricsOutput';\n// Import common components\nimport { Loading, RequirementWrapper } from '../../../common';\n// Import lyric parser\nimport parseLyrics from '../parser';\n\nclass Lyrics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lyrics: {\n        result: [],\n        uses: {},\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadColors();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { colors },\n      distribute: { activeUnit },\n    } = this.props;\n\n    if (pending.REQUEST_COLORS) {\n      return <Loading message=\"Fecthing Colors...\" />;\n    }\n\n    const handleLyricsInput = event => {\n      const { value } = event.target;\n\n      this.setState({\n        lyrics: parseLyrics(value, activeUnit.members || [], activeUnit.id),\n      });\n    };\n\n    return (\n      <RequirementWrapper requirements={['activeUnit']}>\n        <main className=\"container container--lyrics\">\n          <h1>Lyrics</h1>\n          {activeUnit.members ? (\n            <ul className=\"lyrics__members-list\">\n              {Object.values(activeUnit.members).map(member => (\n                <li\n                  className={`pill background-color-${member.color.number ||\n                    0}`}\n                  key={member.id}\n                >\n                  {member.name.toUpperCase()}{' '}\n                  {this.state.lyrics.uses[member.name.toUpperCase()] &&\n                    `(${this.state.lyrics.uses[member.name.toUpperCase()]})`}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <section className=\"lyrics__members-list--empty\">\n              There is no Active Unit Selected.\n            </section>\n          )}\n          <ScrollSync>\n            <section className=\"lyrics__group\">\n              <ScrollSyncPane>\n                <textarea\n                  name=\"lyrics\"\n                  id=\"\"\n                  cols=\"30\"\n                  rows=\"10\"\n                  className=\"lyrics__input\"\n                  onChange={handleLyricsInput}\n                />\n              </ScrollSyncPane>\n              <ScrollSyncPane>\n                <LyricsOutput\n                  lyrics={this.state.lyrics.result}\n                  colorsDB={colors}\n                />\n              </ScrollSyncPane>\n            </section>\n          </ScrollSync>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nLyrics.propTypes = {\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  loadColors: PropTypes.func.isRequired,\n};\n\nexport default Lyrics;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Lyrics from '../components/Lyrics';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Lyrics)\n);\n","import LyricsContainer from './containers/LyricsContainer';\n\nexport default LyricsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ColorReferenceBar = ({ colors, colorsInUse }) => (\n  <ul className=\"color-reference-bar\">\n    {Object.values(colors).map(color => {\n      const isInUse = colorsInUse[color.id]\n        ? 'color-reference-item--in-use'\n        : '';\n      return (\n        <li\n          className={`color-reference-item background-color-${\n            color.number\n          } ${isInUse}`}\n          key={color.id}\n        >\n          {color.name}\n          <br />\n          {color.count}\n        </li>\n      );\n    })}\n  </ul>\n);\n\nColorReferenceBar.propTypes = {\n  colors: PropTypes.object,\n  colorsInUse: PropTypes.object,\n};\n\nColorReferenceBar.defaultProps = {\n  colors: {},\n  colorsInUse: PropTypes.object,\n};\n\nexport default ColorReferenceBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Select, Option, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n// Import constants\nimport constants from '../../../../utils/constants';\n\nconst ManageArtist = ({\n  formState,\n  props,\n  validateTypeahead,\n  isValid,\n  artistId,\n  defaultValues,\n  next,\n}) => {\n  const {\n    admin: { panels },\n    db: { artistsTypeahead },\n    handleEditArtist,\n  } = props;\n\n  // Locked Panel\n  if (panels.artist === 'locked') {\n    return (\n      <section className=\"manage-form__artist\">\n        <h3 className=\"manage-form__button-title\">Artist</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Lock Artist\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Open Panel\n  if (panels.artist === 'open') {\n    return (\n      <section className=\"manage-form__artist\">\n        <h3 className=\"manage-form__button-title\">Artist</h3>\n        <button\n          className=\"manage-form__button-add\"\n          onClick={() => handleEditArtist(artistId)}\n        >\n          <img\n            className=\"manage-form__button-add-image\"\n            src={managePlus}\n            alt=\"Add Artist\"\n          />\n        </button>\n        <Typeahead\n          action={e => validateTypeahead(e)}\n          name=\"artists\"\n          placeholder=\"Search existing artist...\"\n          suggestions={artistsTypeahead}\n        />\n        {isValid && (\n          <p className=\"manage-form__valid\">\n            <Icon type=\"check\" color=\"green\" inline />\n            Selected Artist is valid. Click on the plus button to add it.\n          </p>\n        )}\n      </section>\n    );\n  }\n\n  // Validation classes\n  const isRequired = value => (!value ? 'This field is required' : undefined);\n\n  const isValidName =\n    formState.errors.artist && formState.errors.artist.name\n      ? 'manage-form__input--invalid'\n      : '';\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__artist manage-form__artist-edit\">\n      <div className=\"manage-form__form-group\">\n        <Scope scope=\"artist\">\n          <h3>Artist</h3>\n          <label className=\"manage-form__label\">\n            Name*<Text\n              className={`manage-form__input ${isValidName}`}\n              field=\"name\"\n              validateOnBlur\n              validate={isRequired}\n              required\n              initialValue={defaultValues.name}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Other Names<Text\n              className=\"manage-form__input\"\n              field=\"otherNames\"\n              initialValue={defaultValues.otherNames}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Genre*\n            <Select\n              className=\"manage-form__input\"\n              field=\"genre\"\n              validate={isRequired}\n              initialValue={defaultValues.genre}\n              required\n            >\n              <Option value=\"\" disabled>\n                Select One...\n              </Option>\n              {Object.entries(constants.GENRES).map(genre => (\n                <Option key={genre[0]} value={genre[0]}>\n                  {genre[1]}\n                </Option>\n              ))}\n            </Select>\n          </label>\n          <label className=\"manage-form__label\">\n            Private{' '}\n            <Checkbox field=\"private\" initialValue={defaultValues.private} />\n          </label>\n        </Scope>\n      </div>\n      <div className=\"manage-form__navigation\">\n        <button className=\"btn\" onClick={() => next(formState)}>\n          Unlock Unit\n        </button>\n      </div>\n    </section>\n  );\n};\n\nManageArtist.propTypes = {\n  admin: PropTypes.object,\n  artistId: PropTypes.string,\n  db: PropTypes.object,\n  defaultValues: PropTypes.object.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditArtist: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n  props: PropTypes.object.isRequired,\n  validateTypeahead: PropTypes.func.isRequired,\n};\n\nManageArtist.defaultProps = {\n  admin: {},\n  db: {},\n  artistId: null,\n  handleEditArtist: () => {},\n};\n\nexport default ManageArtist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n\nconst ManageUnit = ({\n  formState,\n  props,\n  validateTypeahead,\n  isValid,\n  unitId,\n  defaultValues,\n  next,\n}) => {\n  const {\n    admin: { unitsTypeahead, panels },\n    handleEditUnit,\n  } = props;\n\n  // Locked Panel\n  if (panels.unit === 'locked') {\n    return (\n      <section className=\"manage-form__unit\">\n        <h3 className=\"manage-form__button-title\">Unit</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Locked Unit\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Open Panel\n  if (panels.unit === 'open') {\n    return (\n      <section className=\"manage-form__unit\">\n        <h3 className=\"manage-form__button-title\">Unit</h3>\n        <button\n          className=\"manage-form__button-add\"\n          onClick={() => handleEditUnit(unitId)}\n        >\n          <img\n            className=\"manage-form__button-add-image\"\n            src={managePlus}\n            alt=\"Add Unit\"\n          />\n        </button>\n        {unitsTypeahead.length > 0 && (\n          <Typeahead\n            action={e => validateTypeahead(e)}\n            name=\"units\"\n            placeholder=\"Search existing unit...\"\n            suggestions={unitsTypeahead}\n          />\n        )}\n        {isValid && (\n          <p className=\"manage-form__valid\">\n            <Icon type=\"check\" color=\"green\" inline />\n            Selected Unit is valid. Click on the plus button to add it.\n          </p>\n        )}\n      </section>\n    );\n  }\n\n  // Validation classes\n  const isRequired = value => (!value ? 'This field is required' : undefined);\n  const isYear = value =>\n    value < 1900 || value > new Date().getFullYear()\n      ? 'Value must be a four digit year'\n      : undefined;\n\n  const isValidName =\n    formState.errors.unit && formState.errors.unit.name\n      ? 'manage-form__input--invalid'\n      : '';\n\n  const isValidDebutYear =\n    formState.errors.unit && formState.errors.unit.debutYear\n      ? 'manage-form__input--invalid'\n      : '';\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__unit manage-form__unit-edit\">\n      <div className=\"manage-form__form-group\">\n        <Scope scope=\"unit\">\n          <h3>Unit</h3>\n          <label className=\"manage-form__label\">\n            Unit Name* (e.g. OT4)<Text\n              className={`manage-form__input ${isValidName}`}\n              field=\"name\"\n              validateOnBlur\n              validate={isRequired}\n              required\n              initialValue={defaultValues.name}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Debut Year*<Text\n              className={`manage-form__input ${isValidDebutYear}`}\n              field=\"debutYear\"\n              validateOnBlur\n              validate={isYear}\n              required\n              initialValue={defaultValues.debutYear}\n              type=\"number\"\n              max=\"9999\"\n              min=\"1950\"\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Official{' '}\n            <Checkbox field=\"official\" initialValue={defaultValues.official} />\n          </label>\n          <label className=\"manage-form__label\">\n            Sub-unit{' '}\n            <Checkbox field=\"subUnit\" initialValue={defaultValues.subUnit} />\n          </label>\n          <label className=\"manage-form__label\">\n            Private{' '}\n            <Checkbox field=\"private\" initialValue={defaultValues.private} />\n          </label>\n        </Scope>\n      </div>\n      <div className=\"manage-form__navigation\">\n        <button className=\"btn\" onClick={() => next(formState)}>\n          Unlock Members\n        </button>\n      </div>\n    </section>\n  );\n};\n\nManageUnit.propTypes = {\n  admin: PropTypes.object,\n  defaultValues: PropTypes.object.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditUnit: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n  props: PropTypes.object.isRequired,\n  validateTypeahead: PropTypes.func.isRequired,\n  unitId: PropTypes.string,\n};\n\nManageUnit.defaultProps = {\n  admin: {},\n  handleEditUnit: () => {},\n  unitId: null,\n};\n\nexport default ManageUnit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Select, Option, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n// Import utils\nimport utils from '../../../../utils';\n// Import constants\nimport constants from '../../../../utils/constants';\n\nconst ManageMembers = ({\n  formState,\n  props,\n  colorsInUse,\n  defaultValues,\n  handleEditMember,\n  isValid,\n  memberId,\n  validateTypeahead,\n}) => {\n  const {\n    admin: { panels },\n    db: { membersTypeahead },\n    removeMember,\n    updateMemberColor,\n    // updateMemberPositions,\n  } = props;\n\n  // Locked Panel\n  if (panels.members === 'locked') {\n    return (\n      <section className=\"manage-form__members\">\n        <h3 className=\"manage-form__button-title\">Members</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Locked Members\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__members manage-form__members-edit\">\n      <div className=\"manage-form__form-group-member\">\n        {defaultValues.map((member, index) => {\n          const key = index;\n\n          // Validation classes\n          const isRequired = value =>\n            !value ? 'This field is required' : undefined;\n          const isName = value => {\n            // isRequired\n            if (!value) return 'This field is required';\n            // Cannot have spaces\n            if (value.match(/(\\.|:| |,|;|\\?)/g))\n              return 'Name cannot contain spaces, commas, ., :, ;, or ?';\n            // Max 12 characters\n            if (value.length > 12)\n              return 'Name cannot be longer than 12 characters';\n            return undefined;\n          };\n\n          const isValidName =\n            formState.errors.members &&\n            formState.errors.members[index] &&\n            formState.errors.members[index].name\n              ? 'manage-form__input--invalid'\n              : '';\n\n          if (member) {\n            return (\n              <Scope scope={`members[${index}]`} key={`member-${key}`}>\n                <div className=\"manage-form__form-member manage-member\">\n                  <span\n                    className={`manage-member__title background-color-${utils.getColorNumber(\n                      member.colorId\n                    )}`}\n                  >\n                    Member {index + 1}{' '}\n                    <button\n                      className=\"btn-remove-user\"\n                      onClick={() => removeMember(index)}\n                    >\n                      ×\n                    </button>\n                  </span>\n                  <div className=\"manage-form__inline\">\n                    <label\n                      className=\"manage-form__label\"\n                      title=\"Member names must be less than 12 characters without spaces, commas, colors, semicolons, questions marks or periods\"\n                    >\n                      Name*<Text\n                        className={`manage-form__input ${isValidName}`}\n                        field=\"name\"\n                        validateOnBlur\n                        validate={isName}\n                        required\n                        initialValue={member.name}\n                      />\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--30\">\n                      Initials<Text\n                        className=\"manage-form__input\"\n                        field=\"initials\"\n                        initialValue={member.initials}\n                        maxLength=\"2\"\n                      />\n                    </label>\n                  </div>\n                  <div className=\"manage-form__inline\">\n                    <label className=\"manage-form__label manage-form__label--70\">\n                      Birthdate*<Text\n                        className=\"manage-form__input\"\n                        field=\"birthdate\"\n                        validate={isRequired}\n                        required\n                        initialValue={member.birthdate}\n                        type=\"date\"\n                      />\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--30\">\n                      Color*\n                      <Select\n                        className={`manage-form__input background-color-${utils.getColorNumber(\n                          member.colorId\n                        )}`}\n                        field=\"colorId\"\n                        validate={isRequired}\n                        initialValue={member.colorId}\n                        required\n                        onChange={e => updateMemberColor(e.target.value, index)}\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.COLORS).map(color => (\n                          <Option\n                            key={`${key}-${color[0]}`}\n                            value={color[0]}\n                            disabled={colorsInUse[color[0]]}\n                          >\n                            {color[1]}\n                          </Option>\n                        ))}\n                      </Select>\n                    </label>\n                  </div>\n                  <div className=\"manage-form__inline\">\n                    <label className=\"manage-form__label manage-form__label--50\">\n                      Gender*\n                      <Select\n                        className=\"manage-form__input\"\n                        field=\"gender\"\n                        validate={isRequired}\n                        initialValue={member.gender}\n                        required\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.GENDERS).map(gender => (\n                          <Option key={`${key}-${gender[0]}`} value={gender[0]}>\n                            {gender[1]}\n                          </Option>\n                        ))}\n                      </Select>\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--50\">\n                      Nationality*\n                      <Select\n                        className=\"manage-form__input\"\n                        field=\"nationality\"\n                        validate={isRequired}\n                        initialValue={member.nationality}\n                        required\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.NATIONALITIES).map(\n                          nationality => (\n                            <Option\n                              key={`${key}-${nationality[0]}`}\n                              value={nationality[0]}\n                            >\n                              {nationality[1]}\n                            </Option>\n                          )\n                        )}\n                      </Select>\n                    </label>\n                  </div>\n                  <label className=\"manage-form__label\">Positions* </label>\n                  <div className=\"position-buttons\">\n                    {constants.POSITIONS_LIST.map(position => (\n                      <Checkbox\n                        key={`${key}-${position}`}\n                        field={position}\n                        initialValue={member[utils.spiralCase(position)]}\n                        className={`position-checkbox position-checkbox-${utils.spiralCase(\n                          position\n                        )}`}\n                        title={position}\n                        // onChange={e =>\n                        //   updateMemberPositions(\n                        //     e.target.checked,\n                        //     position,\n                        //     index\n                        //   )\n                        // }\n                      />\n                    ))}\n                  </div>\n                  <label className=\"manage-form__label\">\n                    Private{' '}\n                    <Checkbox field=\"private\" initialValue={member.private} />\n                  </label>\n                </div>\n              </Scope>\n            );\n          }\n          return null;\n        })}\n        <div className=\"manage-form__form-member manage-member-new\">\n          <h3 className=\"manage-form__button-title\">Add new member</h3>\n          <button\n            className=\"manage-form__button-add\"\n            onClick={() => handleEditMember(memberId, formState)}\n          >\n            <img\n              className=\"manage-form__button-add-image\"\n              src={managePlus}\n              alt=\"Add Unit\"\n            />\n          </button>\n          <Typeahead\n            action={e => validateTypeahead(e)}\n            name=\"members\"\n            placeholder=\"Search existing members...\"\n            suggestions={membersTypeahead}\n          />\n          {isValid && (\n            <p className=\"manage-form__valid\">\n              <Icon type=\"check\" color=\"green\" inline />\n              Selected Member is valid. Click on the plus button to add it.\n            </p>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nManageMembers.propTypes = {\n  admin: PropTypes.object,\n  colorsInUse: PropTypes.object,\n  db: PropTypes.object,\n  defaultValues: PropTypes.array.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditMember: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  memberId: PropTypes.string,\n  props: PropTypes.object.isRequired,\n  removeMember: PropTypes.func,\n  updateMemberColor: PropTypes.func,\n  // updateMemberPositions: PropTypes.func,\n  validateTypeahead: PropTypes.func.isRequired,\n};\n\nManageMembers.defaultProps = {\n  admin: {},\n  db: {},\n  colorsInUse: {},\n  handleEditMember: () => {},\n  memberId: null,\n  removeMember: () => {},\n  updateMemberColor: () => {},\n  // updateMemberPositions: () => {},\n};\n\nexport default ManageMembers;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'informed';\n\n// Import components\nimport ColorReferenceBar from './ColorReferenceBar';\nimport ManageArtist from './ManageArtist';\nimport ManageUnit from './ManageUnit';\nimport ManageMembers from './ManageMembers';\n// Import common components\nimport { RequirementWrapper, Loading, Icon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Manage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artistId: null,\n      validArtist: false,\n      unitId: null,\n      validUnit: false,\n      memberId: null,\n      validMember: false,\n    };\n\n    this.handleEditMemberAndState = this.handleEditMemberAndState.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n    this.validateArtist = this.validateArtist.bind(this);\n    this.validateUnit = this.validateUnit.bind(this);\n    this.validateMembers = this.validateMembers.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.loadArtists();\n    this.props.loadColors();\n    this.props.loadMembers();\n  }\n\n  validateArtist(event) {\n    const { value } = event.target;\n    const dict = this.props.db.artistsTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ artistId: dict[value], validArtist: true });\n    } else {\n      this.setState({ artistId: null, validArtist: false });\n    }\n  }\n\n  validateUnit(event) {\n    const { value } = event.target;\n    const dict = this.props.admin.unitsTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ unitId: dict[value], validUnit: true });\n    } else {\n      this.setState({ unitId: null, validUnit: false });\n    }\n  }\n\n  validateMembers(event) {\n    const { value } = event.target;\n    const dict = this.props.db.membersTypeaheadDict;\n    console.log(dict[value]);\n    if (dict[value]) {\n      this.setState({ memberId: dict[value], validMember: true });\n    } else {\n      this.setState({ memberId: null, validMember: false });\n    }\n  }\n\n  handleEditMemberAndState(memberId, formState) {\n    if (memberId) {\n      this.setState({ memberId: null, validMember: false });\n    }\n    this.props.handleEditMember(memberId, formState);\n  }\n\n  resetAll() {\n    this.setState({\n      artistId: null,\n      validArtist: false,\n      unitId: null,\n      validUnit: false,\n      memberId: null,\n      validMember: false,\n    });\n    this.props.resetManage();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      admin: {\n        colorsInUse,\n        editingArtist,\n        editingMembers,\n        editingUnit,\n        manageResult,\n      },\n      db: { colors },\n      handleResyncDB,\n      saveManage,\n      updateManageForm,\n      unlockUnit,\n      unlockMembers,\n    } = this.props;\n\n    const isSaveable =\n      Object.keys(editingArtist).length &&\n      Object.keys(editingUnit).length &&\n      editingMembers.length > 1;\n\n    // Build default values for form\n    const defaultValues = {\n      artist: {\n        name: undefined,\n        otherNames: undefined,\n        genre: undefined,\n        private: undefined,\n      },\n      unit: {\n        debutYear: undefined,\n        name: undefined,\n        official: undefined,\n        private: undefined,\n        subUnit: undefined,\n      },\n      members: [],\n    };\n\n    if (editingArtist && editingArtist.id) {\n      defaultValues.artist = {\n        name: editingArtist.name,\n        otherNames: editingArtist.otherNames,\n        genre: editingArtist.genre,\n        private: editingArtist.private,\n      };\n    }\n\n    if (editingUnit && editingUnit.id) {\n      defaultValues.unit = {\n        debutYear: editingUnit.debutYear,\n        name: editingUnit.name,\n        official: editingUnit.official,\n        private: editingUnit.private,\n        subUnit: editingUnit.subUnit,\n      };\n    }\n\n    if (editingMembers.length) {\n      editingMembers.forEach(member => {\n        if (member) {\n          defaultValues.members.push({\n            colorId: member.colorId || undefined,\n            gender: member.gender || undefined,\n            initials: member.initials || undefined,\n            name: member.name || undefined,\n            nationality: member.nationality || undefined,\n            private: member.private || undefined,\n            referenceArtist: member.referenceArtist || undefined,\n            birthdate: member.birthdate\n              ? utils.spiralBirthdate(member.birthdate)\n              : undefined,\n            ...utils.makePositionsEditable(member.positions || []),\n          });\n        } else {\n          defaultValues.members.push(null);\n        }\n      });\n    }\n\n    // If database is still loading\n    if (\n      pending.REQUEST_ARTISTS ||\n      pending.REQUEST_COLORS ||\n      pending.REQUEST_MEMBERS\n    ) {\n      return <Loading message=\"Preparing manage...\" />;\n    }\n\n    // If database is being resynced\n    if (pending.RESYNC_DATABASE) {\n      return <Loading message=\"Resyncing database...\" />;\n    }\n\n    // If save is in progress\n    if (pending.UPDATE_COMPLETE_ARTIST) {\n      return <Loading message=\"Saving...\" />;\n    }\n\n    // If save is in progress\n    if (manageResult === 'SUCCESS') {\n      return (\n        <main className=\"container container--manage\">\n          <h1>Manage</h1>\n          <div className=\"manage-section--manage-success\">\n            <Icon type=\"check\" color=\"green\" size={96} />\n            <p>Complete Artists Successfully Created/Updated</p>\n            <button className=\"btn\" onClick={this.resetAll}>\n              Create New Artist\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    return (\n      <RequirementWrapper requirements={['admin']}>\n        <main className=\"container container--manage\">\n          <div className=\"manage-header\">\n            <h1>Manage</h1>\n            <button className=\"btn btn-resync-db\" onClick={handleResyncDB}>\n              Resync Database\n            </button>\n            <p>\n              A complete group is required to save with ONE Artist, ONE Unit,\n              and at least TWO members (no solo artists)\n            </p>\n          </div>\n\n          <ColorReferenceBar colors={colors} colorsInUse={colorsInUse} />\n\n          <Form\n            onChange={formState => updateManageForm(formState)}\n            autoComplete=\"off\"\n            className=\"manage-section\"\n          >\n            {({ formState }) => (\n              <Fragment>\n                <div className=\"manage-form\">\n                  <ManageArtist\n                    formState={formState}\n                    props={this.props}\n                    validateTypeahead={this.validateArtist}\n                    isValid={this.state.validArtist}\n                    artistId={this.state.artistId}\n                    defaultValues={defaultValues.artist}\n                    next={unlockUnit}\n                  />\n                  <ManageUnit\n                    formState={formState}\n                    props={this.props}\n                    validateTypeahead={this.validateUnit}\n                    isValid={this.state.validUnit}\n                    unitId={this.state.unitId}\n                    defaultValues={defaultValues.unit}\n                    next={unlockMembers}\n                  />\n                  <ManageMembers\n                    formState={formState}\n                    props={this.props}\n                    defaultValues={defaultValues.members}\n                    validateTypeahead={this.validateMembers}\n                    isValid={this.state.validMember}\n                    memberId={this.state.memberId}\n                    colorsInUse={colorsInUse}\n                    handleEditMember={this.handleEditMemberAndState}\n                  />\n                </div>\n                <div className=\"manage-form-nav\">\n                  <button className=\"btn\" onClick={() => this.resetAll()}>\n                    Reset\n                  </button>\n                  <button\n                    className=\"btn\"\n                    onClick={() => saveManage(formState)}\n                    disabled={!isSaveable}\n                  >\n                    Save\n                  </button>\n                </div>\n              </Fragment>\n            )}\n          </Form>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nManage.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  loadColors: PropTypes.func.isRequired,\n  loadMembers: PropTypes.func.isRequired,\n  handleEditMember: PropTypes.func.isRequired,\n  handleResyncDB: PropTypes.func.isRequired,\n  resetManage: PropTypes.func.isRequired,\n  saveManage: PropTypes.func.isRequired,\n  updateManageForm: PropTypes.func.isRequired,\n  unlockMembers: PropTypes.func.isRequired,\n  unlockUnit: PropTypes.func.isRequired,\n};\n\nManage.defaultProps = {};\n\nexport default Manage;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Manage from '../components/Manage';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Manage)\n);\n","import ManageContainer from './containers/ManageContainer';\n\nexport default ManageContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { LoadingIcon, Icon, SortingButton } from '../../../common';\n\nconst MEANT_FOR_TEXT = {\n  FEMALE: 'Girl Groups',\n  MALE: 'Boy Groups',\n  MIXED: 'Any Group',\n  UNKNOWN: 'Unknown',\n};\n\nconst MEANT_FOR_ICON = {\n  FEMALE: 'gender-female',\n  MALE: 'gender-male',\n  MIXED: 'gender-mixed',\n  UNKNOWN: 'question-mark',\n};\n\nconst MEANT_FOR_COLOR = {\n  FEMALE: 'pink',\n  MALE: 'blue',\n  MIXED: 'orange',\n  UNKNOWN: 'grey',\n};\n\nconst SongsTable = ({\n  filteredSongs,\n  hasActiveFilters,\n  pending,\n  rowAction,\n  previouslyDistributedSongsDict,\n  sortBy,\n  sortedBy,\n}) => {\n  // Message to be display when table has no rows\n  const emptyTableMessage = hasActiveFilters\n    ? 'No songs available within your search'\n    : 'No songs available';\n\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"9\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"9\">{emptyTableMessage}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Distributed</th>\n          <th>\n            Title{' '}\n            <SortingButton\n              active={sortedBy === 'title'}\n              action={() => sortBy('title')}\n            />\n          </th>\n          <th>\n            Artist{' '}\n            <SortingButton\n              active={sortedBy === 'originalArtist'}\n              action={() => sortBy('originalArtist')}\n            />\n          </th>\n          <th>\n            Album{' '}\n            <SortingButton\n              active={sortedBy === 'album'}\n              action={() => sortBy('album')}\n            />\n          </th>\n          <th>Meant For</th>\n          <th>Group Size</th>\n          <th>Video</th>\n          <th>Title Song</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {filteredSongs.length > 0\n          ? filteredSongs.map(entry => {\n              const previouslyDistributed = previouslyDistributedSongsDict[\n                entry.id\n              ]\n                ? 'previously-distributed-row'\n                : '';\n\n              return (\n                <tr\n                  key={`all-artists-${entry.id}`}\n                  id={`a-${entry.id}`}\n                  className={previouslyDistributed}\n                >\n                  <td>\n                    {previouslyDistributed ? (\n                      <Icon\n                        type=\"hand-positive\"\n                        color=\"green\"\n                        title=\"Previously Distributed\"\n                        inline\n                      />\n                    ) : (\n                      ''\n                    )}\n                  </td>\n                  <td>{entry.title}</td>\n                  <td>\n                    {entry.originalArtist}{' '}\n                    {entry.originalArtistId && (\n                      <Icon\n                        type=\"check\"\n                        color=\"yellow\"\n                        title=\"Artist in LD\"\n                        inline\n                      />\n                    )}\n                  </td>\n                  <td>\n                    {entry.album !== 'UNKNOWN' ? (\n                      entry.album\n                    ) : (\n                      <Icon\n                        type=\"question-mark\"\n                        color=\"blue\"\n                        title=\"Unkown Album Title\"\n                        inline\n                      />\n                    )}\n                  </td>\n                  <td>\n                    <Icon\n                      type={MEANT_FOR_ICON[entry.gender]}\n                      color={MEANT_FOR_COLOR[entry.gender]}\n                      title={MEANT_FOR_TEXT[entry.gender]}\n                      inline\n                    />{' '}\n                    {MEANT_FOR_TEXT[entry.gender]}\n                  </td>\n                  <td>{entry.groupSize}</td>\n                  <td>\n                    {entry.videoId ? (\n                      <Icon\n                        type=\"youtube\"\n                        color=\"red\"\n                        title={entry.videoId}\n                        size=\"18\"\n                        inline\n                      />\n                    ) : (\n                      'Unavailable'\n                    )}\n                  </td>\n                  <td>\n                    {entry.single ? (\n                      <Icon\n                        type=\"check\"\n                        color=\"green\"\n                        title=\"Title Song\"\n                        inline\n                      />\n                    ) : (\n                      <Icon\n                        type=\"no\"\n                        color=\"red\"\n                        title=\"Not a Title Song\"\n                        inline\n                      />\n                    )}\n                  </td>\n                  <td>\n                    {entry.private ? (\n                      <Icon type=\"private\" color=\"red\" title=\"Private\" inline />\n                    ) : (\n                      ''\n                    )}\n                  </td>\n                </tr>\n              );\n            })\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nSongsTable.propTypes = {\n  filteredSongs: PropTypes.array.isRequired,\n  hasActiveFilters: PropTypes.bool,\n  pending: PropTypes.bool,\n  previouslyDistributedSongsDict: PropTypes.object,\n  rowAction: PropTypes.func.isRequired,\n  sortBy: PropTypes.func.isRequired,\n  sortedBy: PropTypes.string.isRequired,\n};\n\nSongsTable.defaultProps = {\n  hasActiveFilters: false,\n  pending: false,\n  previouslyDistributedSongsDict: {},\n};\n\nexport default SongsTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { Checkbox, Form, Text } from 'informed';\n\n// Import components\nimport SongsTable from './SongsTable';\n// Import common components\nimport { ActiveSong, ActiveUnit, RequirementWrapper } from '../../../common';\n\nclass Songs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      undone: true,\n      matchGender: false,\n      sortedBy: 'title',\n      order: 'asc',\n    };\n\n    this.handleTableClick = this.handleTableClick.bind(this);\n    this.filterSongs = this.filterSongs.bind(this);\n    this.setSort = this.setSort.bind(this);\n    this.sortSongs = this.sortSongs.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.loadSongs();\n  }\n\n  setSort(type) {\n    let order = 'asc';\n    if (this.state.sortedBy === type) {\n      order = this.state.order === 'asc' ? 'desc' : 'asc';\n    }\n\n    this.setState({\n      order,\n      sortedBy: type,\n    });\n  }\n\n  updateFilters(formState) {\n    this.setState({\n      query: formState.values.query,\n      undone: formState.values.undone,\n      matchGender: formState.values.matchGender,\n    });\n  }\n\n  handleTableClick(e) {\n    const { id } = e.target.parentNode;\n    if (id) {\n      const songId = id.substring(2);\n      this.props.activateSong(songId);\n      this.props.history.push(`/distribute`);\n    }\n  }\n\n  filterSongs(songs) {\n    const { activeUnit } = this.props.distribute;\n\n    return _.filter(songs, song => {\n      const evaluation = [];\n\n      if (this.state.undone) {\n        const songDict = activeUnit.songsDict || {};\n        if (songDict[song.id]) {\n          evaluation.push(!song);\n        } else {\n          evaluation.push(song);\n        }\n      }\n\n      if (this.state.matchGender) {\n        if (activeUnit.gender === song.gender) {\n          evaluation.push(song);\n        } else {\n          evaluation.push(!song);\n        }\n      }\n\n      if (this.state.query) {\n        const query = this.state.query.toLowerCase();\n        const stringSearch = `${song.title.toLowerCase()} ${song.originalArtist.toLowerCase()}`;\n        if (stringSearch.includes(query)) {\n          evaluation.push(song);\n        } else {\n          evaluation.push(!song);\n        }\n      }\n\n      return evaluation.every(e => e);\n    });\n  }\n\n  sortSongs(songs) {\n    const { sortedBy, order } = this.state;\n    return _.orderBy(songs, [sortedBy], [order]);\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { songs },\n      distribute: { activeSong, activeUnit },\n    } = this.props;\n\n    const filteredSongs = this.sortSongs(this.filterSongs(songs));\n\n    return (\n      <RequirementWrapper requirements={['activeUnit']}>\n        <main className=\"container container--songs\">\n          <h1>Songs</h1>\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n          <h2>Filters</h2>\n          <Form\n            onChange={formState => this.updateFilters(formState)}\n            autoComplete=\"off\"\n            className=\"songs-filters-group\"\n          >\n            <div className=\"songs-filter-group\">\n              <label className=\"songs-filter-label\">\n                Title or Artist contains...\n              </label>\n              <Text\n                className=\"songs-filter-input-text\"\n                field=\"query\"\n                initialValue={this.state.query}\n              />\n            </div>\n            <div className=\"songs-filter-group\">\n              <label className=\"songs-filter-label\">Match Gender</label>\n              <Checkbox\n                field=\"matchGender\"\n                initialValue={this.state.matchGender}\n              />\n            </div>\n            <div className=\"songs-filter-group\">\n              <label className=\"songs-filter-label\">\n                Display only not previously distributed\n              </label>\n              <Checkbox field=\"undone\" initialValue={this.state.undone} />\n            </div>\n          </Form>\n\n          <p>To start a distribution, select a song by clicking on its row.</p>\n          <SongsTable\n            filteredSongs={filteredSongs}\n            hasActiveFilters={\n              this.state.query || this.state.undone || this.state.matchGender\n            }\n            pending={pending.REQUEST_SONGS}\n            rowAction={this.handleTableClick}\n            previouslyDistributedSongsDict={activeUnit.songsDict}\n            sortBy={this.setSort}\n            sortedBy={this.state.sortedBy}\n          />\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nSongs.propTypes = {\n  activateSong: PropTypes.func.isRequired,\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadSongs: PropTypes.func.isRequired,\n};\n\nexport default Songs;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Songs from '../components/Songs';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Songs)\n);\n","import SongsContainer from './containers/SongsContainer';\n\nexport default SongsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SyncStep1VideoId = ({ handleVideoId, loadYoutubeVideo, videoId }) => (\n  <div className=\"sync__step sync__step--1\">\n    <p>Add a youtube link/video id here</p>\n    <input type=\"text\" onChange={handleVideoId} />\n    <p>OR choose a metronome placeholder</p>\n    <select onChange={handleVideoId} disabled>\n      <option value=\"\">Select a btm placeholder</option>\n      <option value=\"90bpm\">90 bpm</option>\n      <option value=\"100bpm\">100 bpm</option>\n      <option value=\"110bpm\">110 bpm</option>\n      <option value=\"120bpm\">120 bpm</option>\n      <option value=\"130bpm\">130 bpm</option>\n    </select>\n\n    <button\n      className=\"btn btn-block\"\n      disabled={!videoId}\n      onClick={() => loadYoutubeVideo()}\n    >\n      Load Video for {videoId}\n    </button>\n  </div>\n);\n\nSyncStep1VideoId.propTypes = {\n  handleVideoId: PropTypes.func.isRequired,\n  loadYoutubeVideo: PropTypes.func.isRequired,\n  videoId: PropTypes.string,\n};\n\nSyncStep1VideoId.defaultProps = {\n  videoId: '',\n};\n\nexport default SyncStep1VideoId;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Form, Option, Select, Text } from 'informed';\n\n// Import common components\nimport { Typeahead } from '../../../common';\n// Import contants\nimport constants from '../../../../utils/constants';\n\nclass SyncStep2Info extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalArtist: '',\n    };\n  }\n\n  addToOriginalArtistForm(event) {\n    const { value } = event.target;\n    this.setState({\n      originalArtist: value,\n    });\n  }\n\n  render() {\n    return (\n      <Form autoComplete=\"off\" className=\"sync__step sync__step--2\">\n        {({ formState }) => (\n          <Fragment>\n            <div className=\"sync__step--2__container\">\n              <div className=\"sync__step--2__group\">\n                <label className=\"sync__form__label\">\n                  Song Title*<Text\n                    className=\"sync__form__input-text\"\n                    field=\"title\"\n                    required\n                  />\n                </label>\n\n                <label className=\"sync__form__label\">\n                  Original Artist*{' '}\n                  <Typeahead\n                    action={e => this.addToOriginalArtistForm(e)}\n                    name=\"artists\"\n                    placeholder=\"Search existing artist...\"\n                    suggestions={this.props.artistsTypeahead}\n                    className=\"sync__form__typeahead\"\n                  />\n                </label>\n\n                <label className=\"sync__form__label\">\n                  Album<Text className=\"sync__form__input-text\" field=\"album\" />\n                </label>\n              </div>\n\n              <div className=\"sync__step--2__group\">\n                <label className=\"sync__form__label\">\n                  Original Group Gender*\n                  <Select\n                    className=\"sync__form__input-text\"\n                    field=\"gender\"\n                    required\n                  >\n                    <Option value=\"\" disabled>\n                      Select One...\n                    </Option>\n                    {Object.entries(constants.ARTISTS_GENDERS).map(genre => (\n                      <Option key={genre[0]} value={genre[0]}>\n                        {genre[1]}\n                      </Option>\n                    ))}\n                  </Select>\n                </label>\n\n                <label className=\"sync__form__label\">\n                  Original Group Size*<Text\n                    className=\"sync__form__input-number\"\n                    field=\"groupSize\"\n                    required\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"50\"\n                    step=\"1\"\n                  />\n                </label>\n\n                <label className=\"sync__form__label\">\n                  Single (Title song){' '}\n                  <Checkbox className=\"sync__form__checkbox\" field=\"single\" />\n                </label>\n\n                <label className=\"sync__form__label\">\n                  Private{' '}\n                  <Checkbox className=\"sync__form__checkbox\" field=\"private\" />\n                </label>\n              </div>\n\n              <button\n                className=\"btn btn-block\"\n                onClick={() =>\n                  this.props.handleFormInfo(\n                    formState,\n                    this.state.originalArtist\n                  )\n                }\n              >\n                Unlock Next Step\n              </button>\n            </div>\n          </Fragment>\n        )}\n      </Form>\n    );\n  }\n}\n\nSyncStep2Info.propTypes = {\n  artistsTypeahead: PropTypes.array.isRequired,\n  handleFormInfo: PropTypes.func.isRequired,\n};\n\nexport default SyncStep2Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst SyncStep3Lyrics = ({\n  handleLyricsEdit,\n  lockLyrics,\n  lyrics,\n  prepareLines,\n}) => {\n  const insertBrackers = () => {\n    const el = document.getElementById('lyrics-editor');\n    const newEl = utils.insertAtCursor(el, ' [] ');\n    handleLyricsEdit(newEl);\n  };\n\n  return (\n    <div className=\"sync__step sync__step--1\">\n      <div className=\"sync__lyrics__controls\">\n        <button className=\"btn btn-50\" onClick={() => prepareLines(true)}>\n          Prepare Lines *\n        </button>{' '}\n        <button className=\"btn btn-50\" onClick={insertBrackers}>\n          Add []\n        </button>\n      </div>\n      <textarea\n        id=\"lyrics-editor\"\n        className=\"sync__lyrics__textarea\"\n        onChange={e => handleLyricsEdit(e)}\n        placeholder=\"Add Lyrics here and press Prepare Lines\"\n        value={lyrics || ''}\n      />\n      <p>\n        <small>\n          * Prepare Lines adds square brackets before each line erasing any\n          numbered id previously created. If you are editing, this will erase\n          any previously linked pill.\n        </small>\n      </p>\n      <button className=\"btn btn-block\" onClick={() => lockLyrics()}>\n        Lock Lyrics &amp; Next Step\n      </button>\n    </div>\n  );\n};\n\nSyncStep3Lyrics.propTypes = {\n  handleLyricsEdit: PropTypes.func.isRequired,\n  lockLyrics: PropTypes.func.isRequired,\n  lyrics: PropTypes.string.isRequired,\n  prepareLines: PropTypes.func.isRequired,\n};\n\nexport default SyncStep3Lyrics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nclass SyncStep4Buttons extends Component {\n  componentDidMount() {\n    if (this.props.location.pathname === '/admin/sync') {\n      window.addEventListener('keydown', event =>\n        this.props.handleSyncKeydown(event, this.props.player)\n      );\n      window.addEventListener('keyup', event =>\n        this.props.handleSyncKeyup(event, this.props.player)\n      );\n    }\n  }\n\n  render() {\n    const boxes = [\n      { color: '1', name: 'Vocal', boxId: '1' },\n      { color: '8', name: 'Sub', boxId: '2' },\n      { color: '12', name: 'Rap', boxId: '3' },\n      { color: '20', name: 'AdLibs', boxId: '4' },\n      { color: '26', name: 'All', boxId: '5' },\n    ];\n\n    const pillColors = {\n      1: '1',\n      2: '8',\n      3: '12',\n      4: '20',\n      5: '26',\n    };\n\n    return (\n      <div className=\"sync__step sync__step--4b\">\n        <p>\n          You can only record distributions when the video is playing, so hit\n          play!\n        </p>\n        <div className=\"sync__distribution__buttons\">\n          {boxes.map((box, index) => (\n            <button\n              key={box.name}\n              className={`box box-25 background-color-${box.color}`}\n              onMouseDown={() =>\n                this.props.handleSyncBoxMouseDown(box.boxId, this.props.player)\n              }\n              onMouseUp={() =>\n                this.props.handleSyncBoxMouseUp(\n                  box.boxId,\n                  this.props.player,\n                  box.color\n                )\n              }\n            >\n              <span className=\"key\">{index + 1}</span>\n              <span className=\"member-name\">{box.name}</span>\n            </button>\n          ))}\n        </div>\n        <div className=\"sync__distribution__pills\">\n          <h3>\n            Log\n            <span\n              role=\"button\"\n              tabIndex={0}\n              className=\"sync__log-trash\"\n              onClick={() => this.props.deleteSyncPill()}\n            >\n              <Icon type=\"trash\" size=\"24\" inline />\n            </span>\n          </h3>\n          <p>\n            When you have enough pills in the log, you can connect them with the\n            lyrics. You will need a pill for each unconnected plug in the\n            lyrics.\n          </p>\n          <div className=\"sync__log\">\n            {Object.keys(this.props.pills).map(key => {\n              const item = this.props.pills[key];\n              const isActive =\n                +this.props.activePill === +item.pillId ? 'active' : '';\n\n              return (\n                <span\n                  key={item.pillId}\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`background-color-${\n                    pillColors[item.key]\n                  } sync__log__pill sync__log__pill--${isActive}`}\n                  onClick={() => this.props.connectSyncPill(item.pillId)}\n                >\n                  <Icon\n                    type={item.link ? 'plug-connected' : 'plug'}\n                    size=\"12\"\n                    inline\n                  />\n                  <span className=\"sync__log__num\">\n                    :{item.timestamp.toFixed(2)}\n                  </span>\n                  <span className=\"sync__log__num\">\n                    :{item.duration.toFixed(2)}\n                  </span>\n                </span>\n              );\n            })}\n          </div>\n          <div className=\"sync__log__controls\">\n            <button className=\"btn btn-50\" onClick={this.props.resetPillLinks}>\n              Reset Links\n            </button>\n            <button\n              className={`btn btn-50 sync__sequence--${\n                this.props.linkSequenceMode\n              }`}\n              onClick={this.props.linkPillsSequence}\n            >\n              Link in Sequence\n            </button>\n          </div>\n          <p className=\"sync__log__stats\">\n            <span>Pills: {this.props.stats.pills} </span>\n            <span>Lines: {this.props.stats.lines} </span>\n            <span>\n              Linked:{' '}\n              {Math.round(\n                (100 * this.props.stats.linked) / this.props.stats.lines\n              )}%{' '}\n            </span>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nSyncStep4Buttons.propTypes = {\n  activePill: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  connectSyncPill: PropTypes.func.isRequired,\n  deleteSyncPill: PropTypes.func.isRequired,\n  handleSyncBoxMouseDown: PropTypes.func.isRequired,\n  handleSyncBoxMouseUp: PropTypes.func.isRequired,\n  handleSyncKeydown: PropTypes.func.isRequired,\n  handleSyncKeyup: PropTypes.func.isRequired,\n  linkPillsSequence: PropTypes.func.isRequired,\n  linkSequenceMode: PropTypes.bool.isRequired,\n  location: PropTypes.object.isRequired,\n  pills: PropTypes.object.isRequired,\n  player: PropTypes.any,\n  resetPillLinks: PropTypes.func.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nSyncStep4Buttons.defaultProps = {\n  activePill: null,\n  player: null,\n};\n\nexport default SyncStep4Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nconst ICON_COLOR_CODE_HASH = {\n  '1': 'red',\n  '8': 'yellow',\n  '12': 'green',\n  '20': 'blue',\n  '26': 'pink',\n};\n\nconst SyncStep4Distributions = ({\n  activeLine,\n  connectSyncLine,\n  distributionLines,\n  isDistributionComplete,\n  unlockSpecificStep,\n  unlockNextStep,\n}) => (\n  <div className=\"sync__step sync__step--4\">\n    <p>\n      This step begins in the left side of this page. You will create\n      syncronizations, then link the pills with each plug in the lyrics here.\n    </p>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(3)}>\n      <Icon type=\"back-arrow\" inline /> Go Back To Lyrics\n    </button>\n    <section className=\"sync__distribution__lyrics\">\n      {distributionLines.map((line, index) => {\n        const key = `line-${index}`;\n        return line.length > 0 ? (\n          <div className=\"sync__distribution__line\" key={key}>\n            {line.map((part, partIndex) => {\n              const partKey = `${key}-${partIndex}`;\n              const isActive = +activeLine === +part.id ? 'active' : '';\n              return (\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`sync__distribution__line--part sync__distribution__line--part-${isActive}`}\n                  key={partKey}\n                  onClick={() => connectSyncLine(part.id)}\n                >\n                  <span className=\"sync__distribution__line--icon\">\n                    <Icon\n                      type={part.link ? 'plug-connected' : 'plug-available'}\n                      size=\"12\"\n                      color={\n                        part.color ? ICON_COLOR_CODE_HASH[part.color] : 'gray'\n                      }\n                    />\n                  </span>\n                  <span className=\"sync__distribution__line--content\">\n                    {part.content}\n                  </span>\n                </span>\n              );\n            })}\n          </div>\n        ) : (\n          <div className=\"sync__distribution__line\" key={key}>\n            &nbsp;\n          </div>\n        );\n      })}\n    </section>\n    <button\n      className=\"btn btn-block\"\n      disabled={!isDistributionComplete}\n      onClick={() => unlockNextStep()}\n    >\n      Next Step\n    </button>\n  </div>\n);\n\nSyncStep4Distributions.propTypes = {\n  activeLine: PropTypes.object,\n  connectSyncLine: PropTypes.func.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  isDistributionComplete: PropTypes.bool,\n  unlockSpecificStep: PropTypes.func.isRequired,\n  unlockNextStep: PropTypes.func.isRequired,\n};\n\nSyncStep4Distributions.defaultProps = {\n  activeLine: null,\n  isDistributionComplete: false,\n};\n\nexport default SyncStep4Distributions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst linesOn = {};\n\nconst SyncStep5Verify = ({ currentTime, distributionLines, timestamps }) => {\n  const timestampsList = Object.keys(timestamps);\n  for (let i = 0; i < timestampsList.length; i++) {\n    const key = timestampsList[i];\n\n    // If current time is smaller than the key, stop loop;\n    if (currentTime < key) {\n      i = timestampsList.length;\n    } else if (currentTime >= key) {\n      const tsArray = timestamps[key];\n      tsArray.forEach(tsObj => {\n        if (tsObj.endTime < currentTime) {\n          linesOn[tsObj.partId.substring(5)] = false;\n        } else {\n          linesOn[tsObj.partId.substring(5)] = true;\n        }\n      });\n    }\n  }\n\n  return (\n    <div className=\"sync__step sync__step--5\">\n      <div className=\"sync__distribution__lyrics\">\n        {distributionLines.map((line, index) => {\n          const key = `line-${index}`;\n          return line.length > 0 ? (\n            <div className=\"sync-lyrics-done__line\" key={key}>\n              {line.map((part, partIndex) => {\n                const partKey = `${key}-${partIndex}`;\n                const isActive = linesOn[part.id]\n                  ? 'sync__distribution__line--part-active'\n                  : '';\n                return (\n                  <span\n                    className={`sync__distribution__line--part ${isActive}`}\n                    key={partKey}\n                  >\n                    <span className=\"sync__distribution__line--content\">\n                      {part.content}\n                    </span>\n                  </span>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"sync__distribution__line\" key={key}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nSyncStep5Verify.propTypes = {\n  currentTime: PropTypes.number.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  timestamps: PropTypes.object.isRequired,\n};\n\nSyncStep5Verify.defaultProps = {};\n\nexport default SyncStep5Verify;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon, LoadingWrapper } from '../../../common';\n// Import constants\nimport constants from '../../../../utils/constants';\n\nconst SyncStep5Save = ({ info, pending, saveSync, unlockSpecificStep }) => (\n  <div className=\"sync__step sync__step--5\">\n    <h3>Info</h3>\n    <ul className=\"sync__verify__info\">\n      <li className=\"sync__verify__info-item\">Title: {info.title}</li>\n      <li className=\"sync__verify__info-item\">Artist: {info.originalArtist}</li>\n      <li className=\"sync__verify__info-item\">\n        ArtistId: {info.artistId ? info.artistId : 'Unavailable'}\n      </li>\n      <li className=\"sync__verify__info-item\">\n        Album: {info.album ? info.album : 'Unknown'}\n      </li>\n      <li className=\"sync__verify__info-item\">\n        Single: {info.single ? 'Yes' : 'No'}\n      </li>\n      <li className=\"sync__verify__info-item\">Group Size: {info.groupSize}</li>\n      <li className=\"sync__verify__info-item\">\n        Group Gender: {constants.ARTISTS_GENDERS[info.gender]}\n      </li>\n      <li className=\"sync__verify__info-item\">Video Id: {info.videoId}</li>\n      <li className=\"sync__verify__info-item\">\n        Private: {info.private ? 'Yes' : 'No'}\n      </li>\n    </ul>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(2)}>\n      <Icon type=\"back-arrow\" inline /> Info is wrong. Let me fix it!\n    </button>\n    <p>\n      Play the video and see your distribution in action to see if anything is\n      wrong.\n    </p>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(3)}>\n      <Icon type=\"back-arrow\" inline /> Lyrics or distribution are wrong. Let me\n      fix it!\n    </button>\n    <p>\n      After everything is good. You can save by clicking on the button below:\n    </p>\n\n    <button className=\"btn btn-block\" onClick={() => saveSync()}>\n      <LoadingWrapper pending={pending} size=\"tiny\">\n        <Icon type=\"save\" color=\"red\" inline /> Save\n      </LoadingWrapper>\n    </button>\n  </div>\n);\n\nSyncStep5Save.propTypes = {\n  info: PropTypes.object.isRequired,\n  pending: PropTypes.bool,\n  saveSync: PropTypes.func.isRequired,\n  unlockSpecificStep: PropTypes.func.isRequired,\n};\n\nSyncStep5Save.defaultProps = {\n  pending: false,\n};\n\nexport default SyncStep5Save;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport SyncStep1VideoId from './SyncStep1VideoId';\nimport SyncStep2Info from './SyncStep2Info';\nimport SyncStep3Lyrics from './SyncStep3Lyrics';\nimport SyncStep4Buttons from './SyncStep4Buttons';\nimport SyncStep4Distributions from './SyncStep4Distribution';\nimport SyncStep5Verify from './SyncStep5Verify';\nimport SyncStep5Save from './SyncStep5Save';\n// Import common components\nimport {\n  Collapsible,\n  Loading,\n  RequirementWrapper,\n  Icon,\n} from '../../../common';\n\nlet loadYT;\nlet player;\nlet animationInterval;\n\nclass Sync extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 0,\n      currentTime: 0,\n    };\n\n    this.loadYoutubeVideo = this.loadYoutubeVideo.bind(this);\n    this.onPlayerStateChange = this.onPlayerStateChange.bind(this);\n    this.setHeight = this.setHeight.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.db.artists.length < 10) {\n      this.props.loadArtists();\n    }\n  }\n\n  componentDidUpdate() {\n    // Determine player height\n    if (!this.state.height && document.getElementById('video-container')) {\n      this.setHeight();\n    }\n  }\n\n  onPlayerStateChange(e) {\n    // If video is playing\n    if (e.data === 1 && this.props.sync.step === 5) {\n      // Lyric Review Animation Interval\n      animationInterval = setInterval(() => {\n        const currentTime = Math.round(player.getCurrentTime());\n        this.setState(() => ({ currentTime }));\n      }, 500);\n    } else {\n      // Kill interval\n      clearInterval(animationInterval);\n    }\n  }\n\n  setHeight() {\n    const width = document.getElementById('video-container').clientWidth;\n    const height = (9 * width) / 16;\n    this.setState(() => ({ width, height }));\n  }\n\n  loadYoutubeVideo() {\n    if (!loadYT && this.props.sync.videoId) {\n      loadYT = new Promise(resolve => {\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => resolve(window.YT);\n      });\n\n      loadYT.then(YT => {\n        player = new YT.Player(this.youtubePlayerAnchor, {\n          height: this.state.height || 390,\n          width: this.state.width || 640,\n          videoId: this.props.sync.videoId,\n          events: {\n            onStateChange: e => this.onPlayerStateChange(e),\n          },\n        });\n        this.props.unlockNextStep();\n      });\n    }\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { artistsTypeahead },\n      sync: {\n        activeLine,\n        activePill,\n        distributionLines,\n        info,\n        isDistributionComplete,\n        linkSequenceMode,\n        lyrics,\n        pills,\n        step,\n        steps,\n        stats,\n        timestamps,\n        videoId,\n      },\n      connectSyncLine,\n      connectSyncPill,\n      deleteSyncPill,\n      handleFormInfo,\n      handleLyricsEdit,\n      handleSyncBoxMouseDown,\n      handleSyncBoxMouseUp,\n      handleSyncKeydown,\n      handleSyncKeyup,\n      handleResetSync,\n      handleVideoId,\n      linkPillsSequence,\n      location,\n      lockLyrics,\n      prepareLines,\n      resetPillLinks,\n      saveSync,\n      unlockNextStep,\n      unlockSpecificStep,\n    } = this.props;\n\n    if (pending.REQUEST_ARTISTS) {\n      return <Loading message=\"Preparing Sync...\" />;\n    }\n\n    // If save is in progress\n    if (step === 6) {\n      return (\n        <main className=\"container container--sync\">\n          <h1>Manage</h1>\n          <div className=\"manage-section--manage-success\">\n            <Icon type=\"check\" color=\"green\" size={96} />\n            <p>Song Successfully Created</p>\n            <button className=\"btn\" onClick={handleResetSync}>\n              Create New Song Distribution\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    return (\n      <RequirementWrapper requirements={['admin']}>\n        <main className=\"container container--sync\">\n          <h1>Sync</h1>\n          <section className=\"sync__container\">\n            <div className=\"sync__group sync__group--left\">\n              <section\n                className=\"sync__video\"\n                id=\"video-container\"\n                ref={r => {\n                  this.youtubePlayerAnchor = r;\n                }}\n              >\n                <Icon type=\"youtube\" color=\"white\" size=\"72\" />\n              </section>\n              <Collapsible\n                title=\"4. Distribution Buttons\"\n                locked={steps[4].locked}\n                expanded={steps[4].expanded}\n                collapsed={!steps[4].expanded}\n                synced\n              >\n                <SyncStep4Buttons\n                  activePill={activePill}\n                  connectSyncPill={connectSyncPill}\n                  deleteSyncPill={deleteSyncPill}\n                  handleSyncBoxMouseDown={handleSyncBoxMouseDown}\n                  handleSyncBoxMouseUp={handleSyncBoxMouseUp}\n                  handleSyncKeydown={handleSyncKeydown}\n                  handleSyncKeyup={handleSyncKeyup}\n                  linkPillsSequence={linkPillsSequence}\n                  linkSequenceMode={linkSequenceMode}\n                  location={location}\n                  pills={pills}\n                  player={player}\n                  resetPillLinks={resetPillLinks}\n                  stats={stats}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"5. Review &amp; Save\"\n                locked={steps[5].locked}\n                expanded={steps[5].expanded}\n                collapsed={!steps[5].expanded}\n                synced\n              >\n                <SyncStep5Save\n                  info={info}\n                  pending={pending.SEND_SONG}\n                  saveSync={saveSync}\n                  unlockSpecificStep={unlockSpecificStep}\n                />\n              </Collapsible>\n            </div>\n            <div className=\"sync__group sync__group--right\">\n              <Collapsible\n                title=\"1. Video Id\"\n                locked={steps[1].locked}\n                expanded={steps[1].expanded}\n                collapsed={!steps[1].expanded}\n                synced\n              >\n                <SyncStep1VideoId\n                  handleVideoId={handleVideoId}\n                  loadYoutubeVideo={this.loadYoutubeVideo}\n                  videoId={videoId}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"2. Info\"\n                locked={steps[2].locked}\n                expanded={steps[2].expanded}\n                collapsed={!steps[2].expanded}\n                synced\n              >\n                <SyncStep2Info\n                  artistsTypeahead={artistsTypeahead}\n                  handleFormInfo={handleFormInfo}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"3. Lyrics\"\n                locked={steps[3].locked}\n                expanded={steps[3].expanded}\n                collapsed={!steps[3].expanded}\n                synced\n              >\n                <SyncStep3Lyrics\n                  handleLyricsEdit={handleLyricsEdit}\n                  lockLyrics={lockLyrics}\n                  lyrics={lyrics}\n                  prepareLines={prepareLines}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"4. Distribution\"\n                locked={steps[4].locked}\n                expanded={steps[4].expanded}\n                collapsed={!steps[4].expanded}\n                synced\n              >\n                <SyncStep4Distributions\n                  activeLine={activeLine}\n                  connectSyncLine={connectSyncLine}\n                  distributionLines={distributionLines}\n                  isDistributionComplete={isDistributionComplete}\n                  unlockSpecificStep={unlockSpecificStep}\n                  unlockNextStep={unlockNextStep}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"5. Verify\"\n                locked={steps[5].locked}\n                expanded={steps[5].expanded}\n                collapsed={!steps[5].expanded}\n                synced\n              >\n                <SyncStep5Verify\n                  currentTime={this.state.currentTime}\n                  distributionLines={distributionLines}\n                  timestamps={timestamps}\n                />\n              </Collapsible>\n            </div>\n          </section>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nSync.propTypes = {\n  db: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  connectSyncLine: PropTypes.func.isRequired,\n  connectSyncPill: PropTypes.func.isRequired,\n  deleteSyncPill: PropTypes.func.isRequired,\n  handleFormInfo: PropTypes.func.isRequired,\n  handleLyricsEdit: PropTypes.func.isRequired,\n  handleSyncBoxMouseDown: PropTypes.func.isRequired,\n  handleSyncBoxMouseUp: PropTypes.func.isRequired,\n  handleSyncKeydown: PropTypes.func.isRequired,\n  handleSyncKeyup: PropTypes.func.isRequired,\n  handleResetSync: PropTypes.func.isRequired,\n  handleVideoId: PropTypes.func.isRequired,\n  linkPillsSequence: PropTypes.func.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  lockLyrics: PropTypes.func.isRequired,\n  prepareLines: PropTypes.func.isRequired,\n  resetPillLinks: PropTypes.func.isRequired,\n  saveSync: PropTypes.func.isRequired,\n  sync: PropTypes.object.isRequired,\n  unlockNextStep: PropTypes.func.isRequired,\n  unlockSpecificStep: PropTypes.func.isRequired,\n};\n\nexport default Sync;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Sync from '../components/Sync';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { dbOperations } from '../../../../reducers/db';\nimport { syncOperations } from '../../../../reducers/sync';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  db: state.db,\n  sync: state.sync,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...dbOperations,\n  ...syncOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Sync)\n);\n","import SyncContainer from './containers/SyncContainer';\n\nexport default SyncContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst ColorSheet = ({ colors }) => {\n  colors = Object.values(colors);\n  return (\n    <main className=\"container\">\n      <ul className=\"color-palette\">\n        {colors &&\n          colors.map(colorObj => (\n            <li\n              key={colorObj.id}\n              className={`palette background-color-${colorObj.number}`}\n            >\n              {colorObj.id}\n              <br />\n              {utils.humanize(colorObj.name, 'Capital')}\n              <br />\n              {colorObj.count} uses\n            </li>\n          ))}\n      </ul>\n    </main>\n  );\n};\n\nColorSheet.propTypes = {\n  colors: PropTypes.object,\n};\n\nColorSheet.defaultProps = {\n  colors: {},\n};\n\nexport default ColorSheet;\n","import React from 'react';\n\n// Import common components\nimport {\n  FavoriteIcon,\n  Icon,\n  LoadingIcon,\n  Switch,\n  Tabs,\n  Typeahead,\n  Collapsible,\n} from '../../../common';\n\nconst NOOP = () => {};\n\nconst ComponentSheet = () => (\n  <main className=\"container\">\n    <ul className=\"component-list\">\n      <li className=\"component-list__item\">\n        <h3 className=\"component-list__name\">Favorite Icon</h3>\n        <div className=\"component-list__example\">\n          <FavoriteIcon action={NOOP} id=\"1\" />\n          <FavoriteIcon action={NOOP} id=\"2\" state />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Heart shaped favorite icon</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: onClick function\n            </li>\n            <li className=\"component-list__argument\">\n              id: value the action function calls\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              className: additional classes (default: &#39;&#39;)\n            </li>\n            <li className=\"component-list__argument\">\n              size: string or number (default: 12)\n            </li>\n            <li className=\"component-list__argument\">\n              state: boolean that determines if heart is red or gray (default:\n              false)\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Icon</h3>\n        <div className=\"component-list__example\">\n          <Icon size={36} />\n        </div>\n        <div className=\"component-list__description\">\n          <p>See Icon tab for list of icons</p>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              type: the name of the icon (default: default)\n            </li>\n            <li className=\"component-list__argument\">\n              color: one of the default colors (default: default)\n            </li>\n            <li className=\"component-list__argument\">\n              size: string or number (default: 12)\n            </li>\n            <li className=\"component-list__argument\">\n              inline: boolean that determines if icon will be inline with text\n              (default: false)\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Loading Icon</h3>\n        <div className=\"component-list__example\">\n          <LoadingIcon />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Colored loading icon</p>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              size: tiny, small, medium (Default), large\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Switch</h3>\n        <div className=\"component-list__example\">\n          <Switch action={NOOP} /> <Switch action={NOOP} checked />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Switch button to indicate if a feature is on</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: function to be exectued when switch is triggers\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              labels: object with left and right values\n            </li>\n            <li className=\"component-list__argument\">\n              checked: boolean that determines if switch is on\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Tabs</h3>\n        <div className=\"component-list__example\">\n          <Tabs action={NOOP} tabs={['Tab 1', 'Tab 2']}>\n            Content goes here as a component child\n          </Tabs>\n        </div>\n\n        <div className=\"component-list__description\">\n          <p>Wrapper component with selectable tabs</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              active: what tab is active (default: the first tab)\n            </li>\n            <li className=\"component-list__argument\">\n              iconCondition: boolean to display the icon\n            </li>\n            <li className=\"component-list__argument\">\n              icon: icon component to be displayed\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Typeahead</h3>\n        <div className=\"component-list__example\">\n          <Typeahead\n            action={NOOP}\n            name=\"example\"\n            suggestions={['Avocado', 'Banana', 'Cranberry']}\n          />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Input field with autocomplete datalist option</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: function trigged when input is selected\n            </li>\n            <li className=\"component-list__argument\">\n              name: name of the datalist/input\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              className: additional classes (default: &#39;&#39;)\n            </li>\n            <li className=\"component-list__argument\">\n              placeholder: input field placeholder (default: Searching...)\n            </li>\n            <li className=\"component-list__argument\">\n              suggestions: list of suggestions to autocomplete in the datalist\n              (default: [])\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Collapsible</h3>\n        <div className=\"component-list__example\">\n          <Collapsible title=\"Locked Collapsible\" locked>\n            Content\n          </Collapsible>\n          <Collapsible title=\"Locked Expanded Collapsible\" locked expanded>\n            Content\n          </Collapsible>\n          <Collapsible title=\"Collapsed Collapsible\">Content</Collapsible>\n          <Collapsible title=\"Expanded Collapsible\" expanded>\n            Content\n          </Collapsible>\n        </div>\n        <div className=\"component-list__description\">\n          <p>Collapsible panel with children content</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              title: the header of the panel\n            </li>\n            <li className=\"component-list__argument\">\n              children elements to be rendered when expanded\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              collapsed: makes panel collapse (default)\n            </li>\n            <li className=\"component-list__argument\">\n              expanded: makes panel expand\n            </li>\n            <li className=\"component-list__argument\">\n              locked: locks panel action keeping it expanded or collapsed\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>New Component</h3>\n        <div className=\"component-list__example\">\n          {/* Component goes here */}\n        </div>\n        <div className=\"component-list__description\">\n          <p>Description</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n        </div>\n      </li>\n    </ul>\n  </main>\n);\n\nexport default ComponentSheet;\n","import React from 'react';\n\n// Import common components\nimport { Icon } from '../../../common';\n// Import utility functions\nimport ICONS from '../../../../utils/icons';\n\nconst IconSheet = () => (\n  <main className=\"container\">\n    <ul className=\"icon-list\">\n      {Object.keys(ICONS).map(name => (\n        <li key={name} className=\"icon-list__item\">\n          <span className=\"icon-list__name\">{name.toLowerCase()}</span>\n          <Icon type={name} size=\"36\" />\n        </li>\n      ))}\n    </ul>\n  </main>\n);\n\nexport default IconSheet;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport ColorSheet from './ColorSheet';\nimport ComponentSheet from './ComponentsSheet';\nimport IconSheet from './IconSheet';\n// Import common components\nimport { RequirementWrapper, Tabs, LoadingWrapper } from '../../../common';\n\nclass UIReference extends Component {\n  componentDidMount() {\n    this.props.loadColors();\n  }\n\n  render() {\n    const {\n      admin: { uiReferenceTab },\n      app,\n      db: { colors },\n    } = this.props;\n\n    const TABS = ['Colors', 'Components', 'Icons'];\n\n    let tabContent = null;\n    switch (uiReferenceTab) {\n      case 'Components':\n        tabContent = <ComponentSheet />;\n        break;\n      case 'Icons':\n        tabContent = <IconSheet />;\n        break;\n      default:\n        tabContent = <ColorSheet colors={colors} />;\n    }\n\n    return (\n      <RequirementWrapper requirements={['admin']}>\n        <main className=\"container container--artists\">\n          <h1>UI Reference</h1>\n          <Tabs\n            tabs={TABS}\n            action={this.props.switchUIReferenceTab}\n            active={uiReferenceTab}\n          >\n            <LoadingWrapper pending={app.pending.REQUEST_COLORS}>\n              {tabContent}\n            </LoadingWrapper>\n          </Tabs>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nUIReference.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadColors: PropTypes.func.isRequired,\n  switchUIReferenceTab: PropTypes.func.isRequired,\n};\n\nUIReference.defaultProps = {};\n\nexport default UIReference;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport UIReference from '../components/UIReference';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UIReference)\n);\n","import UIReferenceContainer from './containers/UIReferenceContainer';\n\nexport default UIReferenceContainer;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst User = () => (\n  <main className=\"container container--user\">\n    <h1>My Favorite Artists</h1>\n    <h1>My Distributions</h1>\n    <h1>My Custom Units</h1>\n    <h1>My Created Artists</h1>\n    <h1>My Created Songs</h1>\n  </main>\n);\n\nUser.propTypes = {};\n\nUser.defaultProps = {};\n\nexport default User;\n","import UserContainer from './containers/UserContainer';\n\nexport default UserContainer;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport User from '../components/User';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(User)\n);\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\n// Global Imports (siblings of any page)\nimport Footer from './app/global/footer';\nimport Header from './app/global/header';\nimport ErrorModal from './app/global/error-modal';\n\n// Pages Imports\nimport AdminActions from './app/pages/admin-actions';\nimport Artists from './app/pages/artists';\nimport Artist from './app/pages/artist';\nimport Distribute from './app/pages/distribute';\nimport Home from './app/pages/home';\nimport Idols from './app/pages/idols';\nimport Lab from './app/pages/lab';\nimport LearnMore from './app/pages/learn-more';\nimport Lyrics from './app/pages/lyrics';\nimport Manage from './app/pages/manage';\nimport Songs from './app/pages/songs';\nimport Sync from './app/pages/sync';\nimport UIReference from './app/pages/ui-reference';\nimport User from './app/pages/user';\n\n// Styles Import\nimport './stylesheets/index.css';\n\nconst routes = (\n  <Router>\n    <div className=\"app\">\n      <Header />\n      <ErrorModal />\n      <Route path=\"/artists/:artistId\" component={Artist} />\n      <Route exact path=\"/artists\" component={Artists} />\n      <Route path=\"/distribute\" component={Distribute} />\n      <Route path=\"/idols\" component={Idols} />\n      <Route path=\"/lab\" component={Lab} />\n      <Route path=\"/learn-more\" component={LearnMore} />\n      <Route path=\"/lyrics\" component={Lyrics} />\n      <Route path=\"/songs\" component={Songs} />\n\n      <Route path=\"/admin/actions\" component={AdminActions} />\n      <Route path=\"/admin/manage\" component={Manage} />\n      <Route path=\"/admin/sync\" component={Sync} />\n      <Route path=\"/admin/ui-reference\" component={UIReference} />\n\n      <Route path=\"/user\" component={User} />\n\n      <Route exact path=\"/\" component={Home} />\n      <Footer />\n    </div>\n  </Router>\n);\n\nexport default routes;\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ReduxToastr from 'react-redux-toastr';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport store from './store';\nimport routes from './routes';\n\nimport './stylesheets/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Fragment>\n      {routes}\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates\n        position=\"bottom-center\"\n        transitionIn=\"bounceIn\"\n        transitionOut=\"bounceOut\"\n        progressBar\n      />\n    </Fragment>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/loading.d6605f0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-lock.4e4f8dbd.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-plus.5cbc8658.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-leader.6a295198.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-vocalist.a995fa3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-rapper.269fbdb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-dancer.581fc18e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-vocalist.7c410976.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-rapper.0735854b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-dancer.b38316e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-vocalist.131d4b70.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-dancer.a9fd47b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rapper.cb032f09.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-center.83737fe1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-visual.187fc8b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-maknae.afb2e497.svg\";"],"sourceRoot":""}