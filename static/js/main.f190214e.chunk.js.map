{"version":3,"sources":["images/logo-neg.svg","images/logo.svg","images/user-placeholder.svg","images/logo-alt.svg","registerServiceWorker.js","reducers/app/types.js","reducers/app/reducers.js","reducers/app/operations.js","reducers/app/index.js","reducers/artists/types.js","reducers/artists/reducers.js","reducers/artists/actions.js","api/utils.js","api/serializers.js","api/deserializers.js","api/firebase.js","api/index.js","utils/index.js","reducers/artists/operations.js","reducers/artists/index.js","reducers/auth/types.js","reducers/auth/reducers.js","reducers/auth/actions.js","reducers/auth/operations.js","reducers/auth/index.js","reducers/db/types.js","reducers/db/reducers.js","reducers/db/index.js","reducers/temp/types.js","reducers/temp/reducers.js","reducers/temp/actions.js","reducers/temp/operations.js","reducers/temp/index.js","reducers/index.js","sagas/api-saga.js","sagas/status-handling.js","sagas/index.js","store.js","app/common/components/FavoriteIcon.jsx","utils/constants.js","utils/icons.js","app/common/components/Icon.jsx","app/common/components/LoadingIcon.jsx","app/pages/error/components/Error.jsx","app/pages/error/index.js","app/pages/error/containers/ErrorContainer.js","app/common/components/RequirementWrapper.jsx","app/common/containers/RequirementWrapperContainer.js","app/common/components/Switch.jsx","app/common/components/Tabs.jsx","app/pages/header/components/Menu.jsx","app/pages/header/components/LoadingBar.jsx","app/pages/header/components/Header.jsx","app/pages/header/containers/HeaderContainer.js","app/pages/header/index.js","app/pages/home/components/Home.jsx","app/pages/home/containers/HomeContainer.js","app/pages/home/index.js","app/pages/artists/components/ArtistsTable.jsx","app/pages/artists/components/Artists.jsx","app/pages/artists/containers/ArtistsContainer.js","app/pages/artists/index.js","app/pages/artist/components/MemberNationalityFlag.jsx","app/pages/artist/components/MemberPicture.jsx","app/pages/artist/components/MemberCard.jsx","app/pages/artist/components/Units.jsx","app/pages/artist/components/ArtistDetails.jsx","app/pages/artist/components/Artist.jsx","app/pages/artist/containers/ArtistContainer.js","app/pages/artist/index.js","components/ColorSheet.jsx","containers/ColorSheetContainer.js","components/Distribute.jsx","containers/DistributeContainer.js","components/IconSheet.jsx","containers/IconSheetContainer.js","components/Lab.jsx","containers/LabContainer.js","components/LearnMore.jsx","containers/LearnMoreContainer.js","components/Manage.jsx","containers/ManageContainer.js","components/Member.jsx","containers/MemberContainer.js","components/Members.jsx","containers/MembersContainer.js","components/MyArtists.jsx","containers/MyArtistsContainer.js","components/MyDistributions.jsx","containers/MyDistributionsContainer.js","components/Songs.jsx","containers/SongsContainer.js","components/Sync.jsx","containers/SyncContainer.js","components/Temp.jsx","containers/TempContainer.js","routes.js","index.js","images/loading.svg"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","types","SET_DATABASE_READY","SET_ERROR","SET_ERROR_INLINE","SET_ERROR_MESSAGE","SET_PENDING","SET_PENDING_INLINE","SET_SUCCESS","SET_SUCCESS_INLINE","SET_SUCCESS_MESSAGE","initialState","databaseReady","errorInline","errorMessage","pending","pendingInline","isLoading","operations","init","dispatch","type","setLoading","value","instance","appReducer","prevState","arguments","length","undefined","action","newState","Object","assign","payload","success","SET_IS_LOADING","artists_types","SET_ARTIST_LIST","SET_ARTIST_PAGE_TAB","SET_SEARCH_QUERY","SET_SELECTED_ARTIST","SET_SELECTED_UNIT","SET_SHOW_FAVORITE_ARTISTS_ONLY","artistList","artistPageTab","searchQuery","selectedArtist","selectedUnit","showFavoriteArtistsOnly","userFavoriteArtists","userLatestArtists","actions","NewResponse","classCallCheck","this","statusCode","dataResponse","errorResponse","createClass","key","code","HttpStatus","OK","dt","id","attributes","INTERNAL_SERVER_ERROR","message","throwError","data","Error","concat","breadcrumble","path","UNAUTHORIZED","BAD_REQUEST","urlSplit","split","fullPath","queryParams","queryResult","querySplit","i","subQuery","queryName","queryValue","includes","root","referenceId","subPath","keys","buildArtistQuery","name","otherNames","memberNames","memberList","join","toLowerCase","buildSongQuery","title","originalArtist","album","buildMemberInitials","Math","floor","toUpperCase","verifyRequirements","uid","fields","missing","forEach","field","push","getNumberFromColorId","colorId","Number","getAlternativeColor","num","list","map","item","makeSixDigit","random","pad","isNaN","str","toString","substring","wait","ms","Promise","r","j","setTimeout","mergeMembers","unitMembersArr","membersArr","positionsDict","member","memberId","positions","objectSpread","serialize","artist","_","cloneDeep","createdBy","genre","memberIds","modifiedBy","private","query","units","color","b","count","g","hex","number","distribution","songId","altColorId","altColor","birthdate","gender","initials","nationality","referenceArtist","song","groupSize","originalArtistId","single","videoId","unit","artistId","averages","debutYear","distributions","distributions_legacy","members","parseUnitMembers","official","user","email","favoriteArtists","favoriteMembers","biases","isAdmin","latestUnits","latesUnits","session","displayName","photoURL","serializeCollection","object","membersObj","dict","entrySplit","memberName","memberPosition","entry","deserialize","post","photoUrl","put","res","fb","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","googleProvider","auth","GoogleAuthProvider","userSession","onAuthStateChanged","db","artists","colors","songs","users","dbRef","API","_authenticated","_admin","_loaded","_loggedInThisSession","_tries","_uid","warn","response","status","admin","authenticated","loaded","resolve","database","dbInfo","emailVerified","get","userRes","NO_CONTENT","setPersistence","Auth","Persistence","LOCAL","signInWithPopup","result","_context3","t0","t2","signOut","ok","_context4","throwDBError","route","getFunctions","fetchArtistUnits","fetchArtist","fetchArtists","fetchColor","fetchColors","fetchMember","fetchMembers","fetchSong","fetchSongs","fetchUnitDistributions","fetchUnitMembers","fetchUnit","fetchUser","throwPathError","body","postFunctions","createArtist","createDistribution","createMember","createSong","createUnit","createUser","putFunctions","updateArtist","updateDistribution","updateMember","updateSong","updateUnit","updateUserBiases","updateUserFavoriteArtists","updateUserFavoriteMembers","updateUserLatestUnits","updateUser","deleteFunctions","destroyUser","once","snap","val","_fetchArtists","asyncToGenerator","regenerator_default","a","mark","_callee12","wrap","_context12","prev","next","ref","snapshot","abrupt","stop","apply","_fetchArtist","_callee13","_context13","_x9","_fetchArtistUnits","_callee14","_context14","sent","unitId","all","_x10","_fetchColors","_callee15","_context15","_fetchColor","_callee16","_context16","_x11","fetchDistribution","_fetchDistribution","_callee17","_context17","_x12","_fetchMembers","_callee18","_context18","_fetchMember","_callee19","_response","_response$altColorId","_response$colorId","_context19","_x13","_fetchSongs","_callee20","_context20","_fetchSong","_callee21","_context21","_x14","_fetchUnit","_callee22","_context22","_x15","_fetchUnitDistributions","_callee23","_context23","distributionId","_x16","_fetchUnitMembers","_callee24","membersResponse","promiseResponse","_context24","index","_x17","_fetchUser","_callee25","_context25","_x18","_createArtist","_callee26","_context26","update","_x19","_x20","createColor","_createColor","_callee27","_context27","_x21","_createDistribution","_callee28","_context28","_x22","_createMember","_callee29","_context29","_x23","_x24","_createSong","_callee30","_context30","_x25","_x26","_createUnit","_callee31","_context31","_x27","_x28","_createUser","_callee32","_context32","_x29","_x30","_updateArtist","_callee33","_context33","_x31","_x32","_x33","_updateDistribution","_callee34","_context34","_x34","_x35","_x36","_updateMember","_callee35","_context35","_x37","_x38","_x39","_updateSong","_callee36","_context36","_x40","_x41","_x42","_updateUnit","_callee37","_context37","_x43","_x44","_x45","_updateUser","_callee38","_context38","_x46","_x47","_updateUserBiases","_callee39","_context39","JSON","stringify","_x48","_x49","_updateUserFavoriteArtists","_callee40","_context40","_x50","_x51","_updateUserFavoriteMembers","_callee41","_context41","_x52","_x53","_updateUserLatestUnits","_callee42","_context42","_x54","_x55","_destroyUser","_callee43","_context43","remove","defineProperty","_x56","_x57","api","utils","bem","block","modifiers","element","extras","hasBlock","hasModifiers","hasElement","hasExtras","m","classes","trim","ensureColorUniqueness","membersList","refactoredMembers","oldColor","capitalizeWord","separator","word","charAt","slice","parseBirthDate","d","date","year","month","day","parseQueryParams","params","pair","parseArrayToObject","Array","isArray","parseResponse","responseParser","obj","parseResponseToObject","spinalCaseWord","findUnitIndex","findIndex","u","artists_operations","loadArtists","loadUserArtists","_ref","_callee","getState","_context","_x","_x2","loadArtist","updateSearchQuery","updateLatestUnits","_ref2","_callee2","_context2","_x3","_x4","showFavoriteArtistsOnlyToggle","switchArtistPageTab","event","_ref3","_callee3","unitIndex","currentUnit","target","parentNode","complete","_x5","_x6","artistsReducer","auth_types","SET_ADMIN","SET_AUTHENTICATED","SET_USER","isAuthenticated","auth_actions","auth_operations","login","logout","updateFavoriteArtists","newUserFavoriteArtists","toastr","updateFavoriteMembers","userFavoriteMembers","newUserFavoriteMembers","authReducer","db_types","SET_COLORS","dbReducer","temp_types","SET_TEST_1","SET_TEST_2","SET_TEST_3","SET_TEST_4","SET_TEST_5","test1","test2","test3","test4","test5","temp_actions","temp_operations","testFunction1","testFunction2","testFunction3","testFunction4","testFunction5","tempReducer","rootReducer","combineReducers","app","temp","appTypes","artistsTypes","authTypes","dbTypes","tempTypes","initializer","requestArtists","requestArtist","requestUnit","runLogin","runLogout","test","apiSaga","delay","DELAY_DURATION","dbStart","loggedUser","actionType","_marked","sortedArtistList","sortBy","_marked2","selectedUnitId","indexOf","t1","call","_marked3","_response2","_marked4","_context5","_marked5","_context6","logoff","_marked6","_context7","_marked7","_context8","takeLatest","takeEvery","_marked8","clearPending","clearPendingInline","errorToast","successInline","successToast","warningToast","statusHandlingSaga","pendingCache","pendingInlineCache","status_handling_marked","status_handling_marked2","status_handling_marked3","status_handling_marked4","err","status_handling_marked5","_ref4","status_handling_marked6","_ref5","status_handling_marked7","_ref6","status_handling_marked8","_ref7","_context9","_marked9","_ref8","_context10","warning","_marked10","_context11","_marked11","_marked12","rootSaga","fork","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","thunkMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","FavoriteIcon","className","size","react_default","createElement","onClick","components_Icon","defaultProps","DEFAULT_COLORS","default","black","blue","gray","green","orange","pink","purple","red","teal","white","yellow","FLAGS_LIST","american","brazilian","canadian","chinese","japanese","korean","taiwanese","thai","YOUTUBE_URLS","icons","check","clock","heart","heart-hollow","Icon","styles","svg","display","verticalAlign","margin","inline","fill","style","width","height","viewBox","ICONS","LoadingIcon","src","loading","alt","props","children","Component","ErrorContainer","withRouter","connect","RequirementWrapper","_this","possibleConstructorReturn","getPrototypeOf","authentication","activeArtist","ready","parseRequirements","_this2","requirements","requirement","setState","pages_error","RequirementWrapper_Loading","Link","to","logo","Loading","_ref$message","mapDispatchToProps","authOperations","SwitchToggle","labels","checked","left","right","onChange","Tabs","iconComponent","tabs","active","iconCondition","icon","objectWithoutProperties","tab","tabObj","isActive","showIcon","Menu","history","pathname","authHideClass","adminHideClass","userPlaceholder","href","LoadingBar","App","components_Menu","components_LoadingBar","appOperations","dbOperations","HeaderContainer","Header","Home","youtubeUrl","frameBorder","allowFullScreen","HomeContainer","ArtistsTable","favoriteAction","rowAction","filteredArtists","filter","o","emptyTableMessage","components_FavoriteIcon","colSpan","components_LoadingIcon","Artists","_this$props","handleTableClick","e","RequirementWrapperContainer","components_ArtistsTable","placeholder","Switch","artistsOperations","ArtistsContainer","MemberNationaltyFlag","flag","flagUrl","MemberPicture","fallback","failed","pictureUrl","pictureFallback","onError","MemberCard","favoriteState","components_MemberPicture","MemberNationalityFlag","Units","components_Tabs","values","components_MemberCard","ArtistDetails","components_Units","Artist","search","isArtistPending","components_ArtistDetails","ArtistContainer","ColorSheet","colorObj","Distribute","IconSheet","Lab","LearnMore","Manage","Member","Members","MyArtists","MyDistributions","Songs","Sync","Test","json","parse","readOnly","tempOperations","Temp","routes","HashRouter","header","Route","component","exact","DistributeContainer","LabContainer","LearnMoreContainer","MemberContainer","MembersContainer","SongsContainer","ColorSheetContainer","IconSheetContainer","ManageContainer","SyncContainer","TempContainer","MyArtistsContainer","MyDistributionsContainer","ReactDOM","render","es","lib_default","timeOut","newestOnTop","preventDuplicates","position","transitionIn","transitionOut","progressBar","document","getElementById","URL","origin","addEventListener","fetch","headers","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f190214e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-neg.048816e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d7f95990.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-placeholder.94d4fc32.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-alt.6de76e88.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const SET_DATABASE_READY = 'SET_DATABASE_READY';\nconst SET_ERROR = 'SET_ERROR';\nconst SET_ERROR_INLINE = 'SET_ERROR_INLINE';\nconst SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\nconst SET_PENDING = 'SET_PENDING';\nconst SET_PENDING_INLINE = 'SET_PENDING_INLINE';\nconst SET_SUCCESS = 'SET_SUCCESS';\nconst SET_SUCCESS_INLINE = 'SET_SUCCESS_INLINE';\nconst SET_SUCCESS_MESSAGE = 'SET_SUCCESS_MESSAGE';\n\nexport default {\n  SET_DATABASE_READY,\n  SET_ERROR,\n  SET_ERROR_INLINE,\n  SET_ERROR_MESSAGE,\n  SET_PENDING,\n  SET_PENDING_INLINE,\n  SET_SUCCESS,\n  SET_SUCCESS_INLINE,\n  SET_SUCCESS_MESSAGE,\n};\n","import types from './types';\n\nconst initialState = {\n  databaseReady: false,\n  error: false,\n  errorInline: false,\n  errorMessage: '',\n  pending: false,\n  pendingInline: false,\n  isLoading: false,\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_DATABASE_READY:\n      newState.databaseReady = action.payload;\n      break;\n\n    case types.SET_ERROR:\n      newState.error = action.payload;\n      break;\n\n    case types.SET_ERROR_INLINE:\n      newState.errorInline = action.payload;\n      break;\n\n    case types.SET_ERROR_MESSAGE:\n      newState.errorMessage = action.payload;\n      break;\n\n    case types.SET_PENDING:\n      newState.pending = action.payload;\n      break;\n\n    case types.SET_PENDING_INLINE:\n      newState.pendingInline = action.payload;\n      break;\n\n    case types.SET_SUCCESS:\n      newState.success = action.payload;\n      break;\n\n    case types.SET_IS_LOADING:\n      newState.isLoading = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","const init = () => dispatch => dispatch({ type: 'INITIALIZER' });\n\nconst setLoading = (value, instance) => dispatch => {\n  // TO-DO: Delete this when no internal operation is using this function\n};\n\nexport default {\n  init,\n  setLoading,\n};\n","import appReducer from './reducers';\n\nexport { default as appOperations } from './operations';\nexport { default as appTypes } from './types';\nexport default appReducer;\n","const SET_ARTIST_LIST = 'SET_ARTIST_LIST';\nconst SET_ARTIST_PAGE_TAB = 'SET_ARTIST_PAGE_TAB';\nconst SET_SEARCH_QUERY = 'SET_SEARCH_QUERY';\nconst SET_SELECTED_ARTIST = 'SET_SELECTED_ARTIST';\nconst SET_SELECTED_UNIT = 'SET_SELECTED_UNIT';\nconst SET_SHOW_FAVORITE_ARTISTS_ONLY = 'SET_SHOW_FAVORITE_ARTISTS_ONLY';\n\nexport default {\n  SET_ARTIST_LIST,\n  SET_ARTIST_PAGE_TAB,\n  SET_SEARCH_QUERY,\n  SET_SELECTED_ARTIST,\n  SET_SELECTED_UNIT,\n  SET_SHOW_FAVORITE_ARTISTS_ONLY,\n};\n","import types from './types';\n\nconst initialState = {\n  artistList: [],\n  artistPageTab: '',\n  searchQuery: '',\n  selectedArtist: {},\n  selectedUnit: {},\n  showFavoriteArtistsOnly: false,\n  userFavoriteArtists: {},\n  userLatestArtists: [],\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ARTIST_LIST:\n      newState.artistList = action.payload;\n      break;\n\n    case types.SET_ARTIST_PAGE_TAB:\n      newState.artistPageTab = action.payload;\n      break;\n\n    case types.SET_SEARCH_QUERY:\n      newState.searchQuery = action.payload;\n      break;\n\n    case types.SET_SELECTED_ARTIST:\n      newState.selectedArtist = action.payload;\n      break;\n\n    case types.SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      break;\n\n    case types.SET_SHOW_FAVORITE_ARTISTS_ONLY:\n      newState.showFavoriteArtistsOnly = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setArtistList = payload => dispatch =>\n  dispatch({ type: types.SET_ARTIST_LIST, payload });\nconst setArtistPageTab = payload => dispatch =>\n  dispatch({ type: types.SET_ARTIST_PAGE_TAB, payload });\nconst setSearchQuery = payload => dispatch =>\n  dispatch({ type: types.SET_SEARCH_QUERY, payload });\nconst setSelectedArtist = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_ARTIST, payload });\nconst setSelectedUnit = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_UNIT, payload });\nconst setShowFavoriteArtistsOnly = payload => dispatch =>\n  dispatch({ type: types.SET_SHOW_FAVORITE_ARTISTS_ONLY, payload });\n\nexport default {\n  setArtistList,\n  setArtistPageTab,\n  setSearchQuery,\n  setSelectedArtist,\n  setSelectedUnit,\n  setShowFavoriteArtistsOnly,\n};\n","import HttpStatus from 'http-status-codes';\n\nexport class NewResponse {\n  constructor() {\n    this.statusCode = null;\n    this.dataResponse = null;\n    this.errorResponse = null;\n  }\n\n  status(code) {\n    this.statusCode = code;\n  }\n\n  ok() {\n    this.statusCode = HttpStatus.OK;\n  }\n\n  data(dt, code = HttpStatus.OK) {\n    this.statusCode = code;\n    if (dt && dt.id && dt.type && dt.attributes) {\n      this.dataResponse = {\n        id: dt.id,\n        type: dt.type,\n        attributes: dt.attributes,\n      };\n    } else {\n      this.dataResponse = dt;\n    }\n  }\n\n  error(code = HttpStatus.INTERNAL_SERVER_ERROR, message = 'Unknown Error') {\n    this.statusCode = code;\n    this.errorResponse = {\n      code: this.statusCode,\n      message,\n    };\n  }\n\n  resolve() {\n    if (this.errorResponse) {\n      return this.throwError();\n    }\n\n    if (!this.statusCode) {\n      this.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'No status provided by the api'\n      );\n      return this.throwError();\n    }\n\n    if (!this.dataResponse) {\n      this.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'No data provided by the api'\n      );\n      return this.throwError();\n    }\n\n    return {\n      data: this.dataResponse,\n    };\n  }\n\n  throwError() {\n    throw new Error(\n      `${this.errorResponse.code}: ${this.errorResponse.message}`\n    );\n  }\n}\n\nexport const breadcrumble = path => {\n  if (!path) {\n    throw new Error(\n      `${HttpStatus.UNAUTHORIZED}: A path is required to make api requests`\n    );\n  }\n\n  if (typeof path !== 'string') {\n    throw new Error(\n      `${HttpStatus.BAD_REQUEST}: Breadcrumble path argument must be a string`\n    );\n  }\n\n  const urlSplit = path.split('?');\n  const fullPath = urlSplit[0].split('/');\n  const queryParams = urlSplit[1] || null;\n  const queryResult = {};\n\n  if (queryParams) {\n    const querySplit = queryParams.split('&');\n    for (let i = 0; i < querySplit.length; i++) {\n      const subQuery = querySplit[i].split('=');\n      if (subQuery.length === 2) {\n        const queryName = subQuery[0];\n        let queryValue = subQuery[1];\n        if (queryValue.includes(',')) {\n          queryValue = queryValue.split(',');\n        }\n        queryResult[queryName] = queryValue;\n      }\n    }\n  }\n\n  return {\n    length: fullPath.length - 1,\n    root: fullPath[1],\n    referenceId: fullPath[2] || null,\n    subPath: fullPath[3] || null,\n    queryParams: Object.keys(queryResult).length > 0 ? queryResult : null,\n  };\n};\n\nexport const buildArtistQuery = data => {\n  const { name } = data;\n  const otherNames = data.otherNames || '';\n  const memberList = data.memberList || [];\n  const memberNames = memberList.join(' ');\n  return `${name} ${otherNames} ${memberNames}`.toLowerCase();\n};\n\nexport const buildSongQuery = data => {\n  const { title } = data;\n  const originalArtist = data.originalArtist || '';\n  const album = data.album || [];\n  return `${title} ${originalArtist} ${album}`.toLowerCase();\n};\n\nexport const buildMemberInitials = name =>\n  `${name[0]}${name[Math.floor(name.length / 2)]}`.toUpperCase();\n\nexport const verifyRequirements = (data, id, uid, fields) => {\n  const missing = [];\n  fields.forEach(field => {\n    if (field === 'id' && (id === undefined || id === null)) {\n      missing.push('id');\n    } else if (field === 'uid' && (id === undefined || uid === null)) {\n      missing.push('user uid');\n    } else if (field !== 'id' && field !== 'uid' && data[field] === undefined) {\n      missing.push(field);\n    }\n  });\n\n  if (missing.length > 0) {\n    throw new Error(\n      `${HttpStatus.BAD_REQUEST}: Can NOT perform post request for ${id ||\n        null}, missing the following data: ${missing.join(', ')}`\n    );\n  }\n};\n\nexport const getNumberFromColorId = colorId => Number(colorId.split('0000')[1]);\n\nexport const getAlternativeColor = colorId => {\n  const oni = getNumberFromColorId(colorId);\n  const num = oni + 15;\n  let list = [num, num - 2, num - 1, num + 1, num + 2];\n  list = list.map(item => (item > 30 ? item - 30 : item));\n  return makeSixDigit(list[Math.floor(Math.random() * list.length)]);\n};\n\nexport const makeSixDigit = num => {\n  const pad = '000000';\n\n  // if it's not a number nor a stringified number\n  if (Number.isNaN(Number(num)) || typeof num === 'boolean') {\n    return pad;\n  }\n  const str = num.toString();\n\n  return pad.substring(0, pad.length - str.length) + str;\n};\n\nexport const wait = ms => new Promise((r, j) => setTimeout(r, ms)); // eslint-disable-line\n\nexport const mergeMembers = (unitMembersArr, membersArr) => {\n  const positionsDict = {};\n\n  unitMembersArr.forEach(member => {\n    positionsDict[member.memberId] = member.positions;\n  });\n\n  return membersArr.map(member => ({\n    ...member.attributes,\n    positions: positionsDict[member.id],\n  }));\n};\n","/* eslint arrow-body-style: 0 */\nimport _ from 'lodash';\n\nimport {\n  buildArtistQuery,\n  buildMemberInitials,\n  getNumberFromColorId,\n  buildSongQuery,\n} from './utils';\n\nconst UNKNOWN = 'UNKNOWN';\n\nexport const serialize = {\n  artist: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'artist',\n      attributes: {\n        createdBy: data.createdBy || null,\n        genre: data.genre || UNKNOWN,\n        memberIds: data.memberIds || [],\n        memberList: data.memberList || [],\n        modifiedBy: data.modifiedBy || null,\n        name: data.name,\n        otherNames: data.otherNames || '',\n        private: data.private || false,\n        query: data.query || buildArtistQuery(data),\n        units: data.units || [],\n      },\n    };\n  },\n  color: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'color',\n      attributes: {\n        b: data.b,\n        count: data.count || 0,\n        g: data.g,\n        hex: data.hex,\n        name: data.name,\n        number: data.id\n          ? getNumberFromColorId(data.id)\n          : getNumberFromColorId(id),\n        r: data.r,\n      },\n    };\n  },\n  distribution: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'distribution',\n      attributes: {\n        createdBy: data.createdBy || null,\n        modifiedBy: data.modifiedBy || null,\n        songId: data.songId,\n        // TO-DO: Complete distribution serializer\n      },\n    };\n  },\n  member: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'member',\n      attributes: {\n        altColorId: data.altColorId || null,\n        altColor: data.altColor || null,\n        birthdate: data.birthdate || 0,\n        colorId: data.colorId,\n        color: data.color || null,\n        createdBy: data.createdBy || null,\n        gender: data.gender || UNKNOWN,\n        initials: data.initials || buildMemberInitials(data.name),\n        name: data.name,\n        modifiedBy: data.modifiedBy || null,\n        nationality: data.nationality || UNKNOWN,\n        positions: data.positions || [],\n        private: data.private || false,\n        referenceArtist: data.referenceArtist || UNKNOWN,\n      },\n    };\n  },\n  song: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'song',\n      attributes: {\n        album: data.album || UNKNOWN,\n        createdBy: data.createdBy || null,\n        distribution: data.distribution,\n        groupSize: data.groupSize || 0,\n        modifiedBy: data.modifiedBy || null,\n        originalArtist: data.originalArtist || '',\n        originalArtistId: data.originalArtistId || null,\n        private: data.private || false,\n        query: data.query || buildSongQuery(data),\n        single: data.single || false,\n        title: data.title,\n        videoId: data.videoId || null,\n      },\n    };\n  },\n  unit: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'unit',\n      attributes: {\n        artistId: data.artistId,\n        averages: data.averages || [],\n        createdBy: data.createdBy || null,\n        debutYear: data.debutYear,\n        distributions: data.distributions || [],\n        distributions_legacy: data.distributions_legacy || [],\n        members: data.members ? parseUnitMembers(data.members) : [],\n        modifiedBy: data.modifiedBy || null,\n        name: data.name,\n        official: data.official || false,\n        private: data.private || false,\n      },\n    };\n  },\n  user: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'user',\n      attributes: {\n        email: data.email,\n        favoriteArtists: data.favoriteArtists || {}, // Oject(Reference(Artist):Boolean)\n        favoriteMembers: data.favoriteMembers || {}, // Oject(Reference(Member):Boolean)\n        biases: data.biases || {}, // Object(Reference(Artist):Reference(Member))\n        isAdmin: data.isAdmin || false,\n        latestUnits: data.latesUnits || [],\n        session: data.session || {},\n        displayName: null, // merged from auth\n        photoURL: null, // merged from auth\n      },\n    };\n  },\n};\n\nexport const serializeCollection = (object, type) =>\n  Object.keys(object).map(key => serialize[type](object[key], key));\n\n// Utils\n\nconst parseUnitMembers = membersObj => {\n  const dict = {};\n  Object.keys(membersObj).forEach(key => {\n    const entrySplit = key.split(':');\n    const memberId = entrySplit[0];\n    const memberName = entrySplit[1];\n    const memberPosition = entrySplit[2];\n\n    if (dict[memberId] === undefined) {\n      dict[memberId] = {\n        positions: {},\n      };\n    }\n\n    dict[memberId].memberId = memberId;\n    dict[memberId].name = memberName;\n\n    dict[memberId].positions[memberPosition] = true;\n  });\n\n  return Object.keys(dict).map(entry => {\n    const result = {\n      memberId: dict[entry].memberId,\n      name: dict[entry].name,\n      positions: Object.keys(dict[entry].positions),\n    };\n    return result;\n  });\n};\n","/* eslint arrow-body-style: 0 */\n\nimport {\n  buildMemberInitials,\n  getAlternativeColor,\n  verifyRequirements,\n} from './utils';\n\nexport const deserialize = {\n  post: {\n    artist: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'uid', 'name']);\n      return {\n        id,\n        createdBy: uid,\n        genre: data.genre || null,\n        modifiedBy: uid,\n        name: data.name,\n        otherNames: data.otherNames || null,\n        private: data.private || false,\n        units: data.units || [],\n      };\n    },\n    color: (data, id) => {\n      verifyRequirements(data, id, null, ['id', 'name', 'hex', 'r', 'g', 'b']);\n      return {\n        id,\n        b: data.b,\n        g: data.g,\n        hex: data.hex,\n        name: data.name,\n        r: data.r,\n      };\n    },\n    distribution: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'uid', 'songId']);\n      return {\n        songId: data.songId,\n        createdBy: uid,\n        modifiedBy: uid,\n      };\n    },\n    member: (data, id, uid) => {\n      verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'name',\n        'birthdate',\n        'colorId',\n        'gender',\n        'nationality',\n        'referenceArtist',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        altColorId:\n          data.altColorId || `col${getAlternativeColor(data.colorId)}`,\n        birthdate: data.birthdate,\n        colorId: data.colorId,\n        gender: data.gender,\n        initials: data.initials || buildMemberInitials(data.name),\n        modifiedBy: uid,\n        name: data.name,\n        nationality: data.nationality,\n        private: data.private || false,\n        referenceArtist: data.referenceArtist,\n      };\n    },\n    song: (data, id, uid) => {\n      verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'distribution',\n        'originalArtist',\n        'title',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        album: data.album || null,\n        distribution: data.distribution,\n        groupSize: data.groupSize || 0,\n        modifiedBy: uid,\n        originalArtist: data.originalArtist || '',\n        originalArtistId: data.originalArtistId || null,\n        private: data.private || false,\n        single: data.single || false,\n        title: data.title,\n        videoId: data.videoId || null,\n      };\n    },\n    unit: (data, id, uid) => {\n      verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'artistId',\n        'debutYear',\n        'name',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        artistId: data.artistId,\n        debutYear: data.debutYear,\n        distributions: data.distributions || [],\n        distributions_legacy: data.distributions_legacy || [],\n        modifiedBy: uid,\n        name: data.name,\n        members: data.members || [],\n        official: data.official || false,\n        private: data.private || false,\n      };\n    },\n    user: (data, id) => {\n      verifyRequirements(data, id, null, ['id', 'email']);\n      return {\n        uid: id,\n        email: data.email,\n        favoriteArtists: data.favoriteArtists || {}, // Oject(Reference(Artist):Boolean)\n        favoriteMembers: data.favoriteMembers || {}, // Oject(Reference(Member):Boolean)\n        biases: data.biases || {}, // Object(Reference(Artist):Reference(Member))\n        isAdmin: data.isAdmin || false,\n        latestUnits: data.latesUnits || [],\n        session: data.session || {},\n        displayName: null, // merged from auth\n        photoUrl: null, // merged from auth\n      };\n    },\n  },\n  put: {\n    artist: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n      if (uid) res.modifiedBy = uid;\n      if (data.genre) res.genre = data.genre;\n      if (data.memberList) res.memberList = data.memberList;\n      if (data.name) res.name = data.name;\n      if (data.otherNames) res.otherNames = data.otherNames;\n      if (data.private) res.private = data.private;\n      if (data.units) res.units = data.units;\n\n      return res;\n    },\n    distribution: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['uid']);\n      return {\n        songId: data.songId,\n        createdBy: uid,\n      };\n    },\n    member: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.colorId) {\n        res.colorId = data.colorId;\n        res.altColorId = `col${getAlternativeColor(data.colorId)}`;\n      }\n      if (data.altColorId) res.altColorId = data.altColorId;\n\n      if (data.birthdate) res.birthdate = data.birthdate;\n      if (data.gender) res.gender = data.gender;\n\n      if (data.name) {\n        res.name = data.name;\n        res.initials = buildMemberInitials(data.name);\n      }\n      if (data.initials) res.initials = data.initials;\n\n      if (data.nationality) res.nationality = data.nationality;\n      if (data.positions) res.positions = data.positions;\n\n      if (data.private) res.private = data.private;\n      if (data.referenceArtist) res.referenceArtist = data.referenceArtist;\n\n      return res;\n    },\n    song: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.album) res.album = data.album;\n      if (data.distribution) res.distribution = data.distribution;\n      if (data.groupSize) res.groupSize = data.groupSize;\n      if (data.originalArtist) res.originalArtist = data.originalArtist;\n      if (data.originalArtistId) res.originalArtistId = data.originalArtistId;\n      if (data.single) res.single = data.single;\n      if (data.private) res.private = data.private;\n      if (data.title) res.title = data.title;\n      if (data.videoId) res.videoId = data.videoId;\n\n      return res;\n    },\n    unit: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.artistId) res.artistId = data.artistId;\n      if (data.distributions) res.distributions = data.distributions;\n      if (data.distributions_legacy)\n        res.distributions_legacy = data.distributions_legacy;\n      if (data.members) res.members = data.members;\n      if (data.name) res.name = data.name;\n      if (data.official) res.official = data.official;\n      if (data.private) res.private = data.private;\n      if (data.artistId) res.artistId = data.artistId;\n\n      return res;\n    },\n    user: (data, id) => {\n      verifyRequirements(data, id, null, ['id']);\n      const res = {};\n\n      if (data.email) res.email = data.email;\n      if (data.favoriteArtists) res.favoriteArtists = data.favoriteArtists;\n      if (data.favoriteMembers) res.favoriteMembers = data.favoriteMembers;\n      if (data.biases) res.biases = data.biases;\n      if (data.isAdmin) res.isAdmin = data.isAdmin;\n      if (data.latesUnits) res.latesUnits = data.latesUnits;\n      if (data.session) res.session = data.session;\n\n      return res;\n    },\n  },\n};\n\nexport default deserialize;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\n\nexport const fb = firebase.initializeApp(config);\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const userSession = { user: {} };\n\n// Verify user auth session presence\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    userSession.user = user;\n  }\n});\n\nexport default fb;\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_authenticated\", \"_admin\", _loaded, _loggedInThisSession, _uid, _tries] }] */\n\nimport firebase from 'firebase';\nimport HttpStatus from 'http-status-codes';\nimport { NewResponse, breadcrumble, wait, mergeMembers } from './utils';\n\nimport { serialize, serializeCollection } from './serializers';\nimport { deserialize } from './deserializers';\n\nimport { fb, googleProvider, userSession } from './firebase';\n\nconst WAIT_DB_TIME = 3500;\nconst WAIT_AUTH_TIME = 2000;\n\nexport const db = {\n  artists: {},\n  colors: {},\n  distributions: {},\n  members: {},\n  positions: {},\n  songs: {},\n  units: {},\n  users: {},\n};\n\nexport let dbRef = null; // eslint-disable-line\n\nclass API {\n  constructor() {\n    // const db = {};\n    this._authenticated = false;\n    this._admin = false;\n    this._loaded = false;\n    this._loggedInThisSession = false;\n    this._tries = 0;\n    this._uid = null;\n  }\n\n  dbRef() {\n    return this._loaded ? dbRef : null;\n  }\n\n  /**\n   * Gets basic information about database\n   * @category Getter\n   * @returns {Object}\n   */\n  dbInfo() {\n    console.warn('Fetching DB info...');\n    const response = new NewResponse();\n\n    response.status(HttpStatus.OK);\n    response.data({\n      admin: this._authenticated ? this._admin : false,\n      authenticated: this._authenticated,\n      loaded: this._loaded,\n    });\n\n    return response.resolve();\n  }\n\n  /**\n   * Creates a reference to the firebase database and updates api loaded status\n   * @category Method\n   * @returns {Boolean}\n   */\n  async init() {\n    console.warn('Running init...');\n    const response = new NewResponse();\n\n    dbRef = await fb.database();\n\n    if (dbRef) {\n      this._loaded = true;\n      response.status(HttpStatus.OK);\n      response.data(this.dbInfo().data);\n      this._loaded = true;\n    } else {\n      response.error(\n        HttpStatus.BAD_REQUEST,\n        'Failed to load firebase database'\n      );\n    }\n\n    response.resolve();\n    return this;\n  }\n\n  /**\n   * Verifies if the users is still logged from a previous session\n   * @category Method\n   * @returns {Object} user\n   */\n  async auth() {\n    console.warn('Running auth...');\n    const response = new NewResponse();\n\n    if (!this._loaded) {\n      await wait(WAIT_AUTH_TIME);\n    }\n\n    const { user } = userSession;\n\n    if (user.emailVerified) {\n      this._authenticated = true;\n      this._uid = user.uid;\n\n      let userRes;\n      try {\n        userRes = await this.get(`/users/${user.uid}`);\n      } catch (_) {\n        userRes = await this.post(`/users/${user.uid}`);\n      }\n\n      userRes.data.attributes.displayName = user.displayName;\n      userRes.data.attributes.photoURL = user.photoURL;\n\n      this._admin = userRes.data.attributes.isAdmin;\n      response.data(userRes.data);\n    } else {\n      this._authenticated = false;\n      this._uid = null;\n      response.data({}, HttpStatus.NO_CONTENT);\n    }\n    return response.resolve();\n  }\n\n  async login() {\n    console.warn('Running login...');\n    const response = new NewResponse();\n\n    let result;\n\n    try {\n      await fb.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n      result = await fb.auth().signInWithPopup(googleProvider);\n    } catch (error) {\n      response.error(error.code, error.message);\n      return response.resolve();\n    }\n\n    try {\n      const { user } = result;\n      if (user.emailVerified) {\n        this._authenticated = true;\n        this._uid = user.uid;\n\n        let userRes;\n        try {\n          userRes = await this.get(`/users/${user.uid}`);\n        } catch (_) {\n          userRes = await this.post(`/users/${user.uid}`);\n        }\n\n        userRes.data.attributes.displayName = user.displayName;\n        userRes.data.attributes.photoURL = user.photoURL;\n\n        this._admin = userRes.data.attributes.isAdmin;\n        response.data(userRes.data);\n      }\n    } catch (error) {\n      response.error(error.code, error.message);\n    }\n\n    return response.resolve();\n  }\n\n  async logoff() {\n    console.warn('Running logout...');\n    const response = new NewResponse();\n\n    try {\n      await fb.auth().signOut();\n      this._authenticated = false;\n      this._uid = null;\n      response.ok();\n      response.data(true);\n    } catch (error) {\n      response.error(error.code, error.message);\n    }\n\n    return response.resolve();\n  }\n\n  async get(path) {\n    console.warn('Fetching data...', path);\n    /*\n     * List of possible get calls:\n     * /artists\n     * /artists/<id>\n     * /artists/<id>/units\n     * /colors\n     * /colors/<id>\n     * /members\n     * /members/<id>\n     * /positions\n     * /songs\n     * /songs/<id>\n     * /units/<id>\n     * /units/<id>/distribution\n     * /units/<id>/members\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      await wait(WAIT_DB_TIME);\n\n      if (!this._loaded || !this._authenticated) {\n        return this.throwDBError('GET');\n      }\n    }\n\n    const route = breadcrumble(path);\n    let result;\n\n    switch (route.root) {\n      // API/artists\n      case 'artists':\n        // API/artists/<id>/units\n        if (route.referenceId && route.subPath === 'units') {\n          result = await getFunctions.fetchArtistUnits(route.referenceId);\n        }\n        // API/artists/<id>\n        else if (route.referenceId) {\n          result = await getFunctions.fetchArtist(route.referenceId);\n        }\n        // API/aritsts\n        else {\n          result = await getFunctions.fetchArtists();\n        }\n        break;\n      // API/colors\n      case 'colors':\n        // API/colors/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchColor(route.referenceId);\n        }\n        // API/colors\n        else {\n          result = await getFunctions.fetchColors();\n        }\n        break;\n      case 'members':\n        // API/members/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchMember(route.referenceId);\n        }\n        // API/members\n        else {\n          result = await getFunctions.fetchMembers();\n        }\n        break;\n      // API/positions\n      case 'positions':\n        // TO-DO: fetch all positions\n        break;\n      // API/songs\n      case 'songs':\n        // API/songs/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchSong(route.referenceId);\n        }\n        // API/songs\n        else {\n          result = await getFunctions.fetchSongs();\n        }\n        break;\n      // API/units\n      case 'units':\n        // API/units/<id>/distributions\n        if (route.referenceId && route.subPath === 'distributions') {\n          result = await getFunctions.fetchUnitDistributions(route.referenceId);\n        }\n        // API/units/<id>/members\n        else if (route.referenceId && route.subPath === 'members') {\n          result = await getFunctions.fetchUnitMembers(route.referenceId);\n        }\n        // API/units/<id>\n        else if (route.referenceId) {\n          result = await getFunctions.fetchUnit(route.referenceId);\n        }\n        break;\n      // API/users\n      case 'users':\n        // API/users/<id>\n        result = await getFunctions.fetchUser(route.referenceId);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async post(path, body) {\n    console.warn('Writting data...');\n    /*\n     * List of possible post calls:\n     * /artists\n     * /distributions\n     * /members\n     * /songs\n     * /units\n     * /users\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('POST');\n    }\n\n    const route = breadcrumble(path);\n    let result;\n\n    switch (route.root) {\n      // API/artists/<id>\n      case 'artists':\n        result = await postFunctions.createArtist(body, this._uid);\n        break;\n      // API/distributions/<id>\n      case 'distributions':\n        result = await postFunctions.createDistribution(body, this._uid);\n        break;\n      // API/members/<id>\n      case 'members':\n        result = await postFunctions.createMember(body, this._uid);\n        break;\n      // API/songs/<id>\n      case 'songs':\n        result = await postFunctions.createSong(body, this._uid);\n        break;\n      // API/units/<id>\n      case 'units':\n        result = await postFunctions.createUnit(body, this._uid);\n        break;\n      // API/users/<id>\n      case 'users':\n        result = await postFunctions.createUser(body, this._uid);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async put(path, body) {\n    console.warn('Updating data...');\n    /*\n     * List of possible put calls:\n     * /artists/<id>\n     * /distributions/<id>\n     * /members/<id>\n     * /songs/<id>\n     * /units/<id>\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('PUT');\n    }\n\n    const route = breadcrumble(path);\n    let result;\n\n    if (!route.referenceId) {\n      // TO-DO: throw error\n    }\n\n    switch (route.root) {\n      // API/artists/<id>\n      case 'artists':\n        result = await putFunctions.updateArtist(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/distributions/<id>\n      case 'distributions':\n        result = await putFunctions.updateDistribution(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/members/<id>\n      case 'members':\n        result = await putFunctions.updateMember(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/songs/<id>\n      case 'songs':\n        result = await putFunctions.updateSong(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/units/<id>\n      case 'units':\n        result = await putFunctions.updateUnit(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/users/<id>\n      case 'users':\n        if (route.subPath === 'biases') {\n          result = await putFunctions.updateUserBiases(route.referenceId, body);\n        } else if (route.subPath === 'favorite-artists') {\n          result = await putFunctions.updateUserFavoriteArtists(\n            route.referenceId,\n            body\n          );\n        } else if (route.subPath === 'favorite-members') {\n          result = await putFunctions.updateUserFavoriteMembers(\n            route.referenceId,\n            body\n          );\n        } else if (route.subPath === 'latest-units') {\n          result = await putFunctions.updateUserLatestUnits(\n            route.referenceId,\n            body\n          );\n        } else {\n          result = await putFunctions.updateUser(route.referenceId, body);\n        }\n\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async delete(path) {\n    console.warn('Deleting data...');\n    /*\n     * List of possible delete calls:\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('DELETE');\n    }\n\n    if (!path) {\n      return this.throwPathError('DELETE', 'path');\n    }\n\n    const route = breadcrumble(path);\n    let result;\n\n    if (!route.referenceId) {\n      // TO-DO: throw error\n    }\n\n    switch (route.root) {\n      // API/users/<id>\n      case 'users':\n        result = await deleteFunctions.destroyUser(route.referenceId);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  /**\n   * Throws database related errors\n   * @category Method\n   * @param {String} action\n   * @throws Error\n   */\n  throwDBError(action = '') {\n    const response = new NewResponse();\n    if (!this._loaded) {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, database is not ready`\n      );\n    } else if (!this._authenticated) {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, you are not logged in`\n      );\n    }\n\n    return response.resolve();\n  }\n\n  /**\n   * Throws api methods related errors\n   * @category Method\n   * @param {String} action\n   * @param {String} type\n   * @throws Error\n   */\n  throwPathError(action = '', type = 'path') {\n    const response = new NewResponse();\n    if (this._loaded && type === 'body') {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, data was not provided`\n      );\n    } else if (this._loaded && type === 'path') {\n      response.error(\n        HttpStatus.BAD_REQUEST,\n        `Unable to perform ${action} action, path doesn't exist`\n      );\n    } else {\n      response.error();\n    }\n\n    return response.resolve();\n  }\n\n  async test() {\n    let r = 'bola';\n    await this.dbRef().once('value', snap => {\n      r = snap.val();\n      return r;\n    });\n\n    return r;\n  }\n\n  async getDB() {\n    return db;\n  }\n\n  async setter(key, value) {\n    this[key] = value;\n    return value;\n  }\n}\n\nconst getFunctions = {\n  // Fetches all artists\n  fetchArtists: async () => {\n    if (Object.keys(db.artists).length < 2) {\n      // TO-DO: Add 00 id to database, remove it in the serializer collection for a better cache check\n      let response = {};\n      await dbRef.ref(`/artists`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists = response;\n    }\n    return serializeCollection(db.artists, 'artist');\n  },\n  // Fetches single artist\n  fetchArtist: async id => {\n    if (!db.artists[id]) {\n      let response = {};\n      await dbRef.ref(`/artists/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists[id] = response;\n    }\n    return serialize.artist(db.artists[id], id);\n  },\n  // Fetches units from a single artist\n  fetchArtistUnits: async id => {\n    const artist = await getFunctions.fetchArtist(id);\n    const response = await artist.attributes.units.map(unitId =>\n      getFunctions.fetchUnit(unitId)\n    );\n    return Promise.all(response);\n  },\n  // Fetches all colors\n  fetchColors: async () => {\n    if (Object.keys(db.colors).length === 0) {\n      let response = {};\n      await dbRef.ref(`/colors`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.colors = response;\n    }\n    return serializeCollection(db.colors, 'color');\n  },\n  // Fetches single color\n  fetchColor: async id => {\n    if (!db.colors[id]) {\n      let response = {};\n      await dbRef.ref(`/colors/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.colors[id] = response;\n    }\n    return serialize.color(db.colors[id], id);\n  },\n  // Fetches single distribution\n  fetchDistribution: async id => {\n    if (!db.distributions[id]) {\n      let response = {};\n      await dbRef.ref(`/distributions/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.distributions[id] = response;\n    }\n    return serialize.distribution(db.distributions[id], id);\n  },\n  // Fetches all members\n  fetchMembers: async () => {\n    if (Object.keys(db.members).length === 0) {\n      let response = {};\n      await dbRef.ref(`/members`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.members = response;\n    }\n    return serializeCollection(db.members, 'member');\n  },\n  // Fetches single member\n  fetchMember: async id => {\n    if (!db.members[id]) {\n      let response = {};\n      await dbRef.ref(`/members/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n\n      const { altColorId = 'default', colorId = 'default' } = response;\n      if (colorId) {\n        const color = await getFunctions.fetchColor(colorId);\n        response.color = {\n          ...color.attributes,\n          id: color.id,\n        };\n      }\n      if (altColorId) {\n        const altColor = await getFunctions.fetchColor(altColorId);\n        response.altColor = {\n          ...altColor.attributes,\n          id: altColor.id,\n        };\n      }\n\n      db.members[id] = response;\n    }\n    return serialize.member(db.members[id], id);\n  },\n  // Fetches all songs\n  fetchSongs: async () => {\n    if (Object.keys(db.songs).length === 0) {\n      // TO-DO: Add 00 id to database, remove it in the serializer collection for a better cache check\n      let response = {};\n      await dbRef.ref(`/songs`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs = response;\n    }\n    return serializeCollection(db.songs, 'song');\n  },\n  // Fetches single song\n  fetchSong: async id => {\n    if (!db.songs[id]) {\n      let response = {};\n      await dbRef.ref(`/songs/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs[id] = response;\n    }\n    return serialize.song(db.songs[id], id);\n  },\n  // Fetches single unit\n  fetchUnit: async id => {\n    if (!db.units[id]) {\n      let response = {};\n      await dbRef.ref(`/units/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.units[id] = response;\n    }\n    return serialize.unit(db.units[id], id);\n  },\n  // Fetches units from a single artist\n  fetchUnitDistributions: async id => {\n    const unit = await getFunctions.fetchUnit(id);\n    const response = await unit.attributes.distributions.map(distributionId =>\n      getFunctions.fetchDistribution(distributionId)\n    );\n    return Promise.all(response);\n  },\n  // Fetches units from a single artist\n  fetchUnitMembers: async id => {\n    const unit = await getFunctions.fetchUnit(id);\n    const membersResponse = await unit.attributes.members.map(member =>\n      getFunctions.fetchMember(member.memberId)\n    );\n\n    const promiseResponse = await Promise.all(membersResponse);\n\n    const response = promiseResponse.map((member, index) => {\n      member.attributes.id = member.id;\n      member.attributes.positions = unit.attributes.members[index].positions;\n      return member;\n    });\n    return mergeMembers(unit.attributes.members, response);\n  },\n  // Fetches single user\n  fetchUser: async id => {\n    if (!db.users[id]) {\n      let response = {};\n      await dbRef.ref(`/users/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.users[id] = response;\n    }\n    return serialize.user(db.users[id], id);\n  },\n};\n\nconst postFunctions = {\n  // Creates single artist\n  createArtist: async (body, uid) => {\n    const key = await dbRef.ref(`/artists`).push().key;\n    const data = deserialize.post.artist(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/artists/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Artist ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.artists[key] = response;\n    return serialize.artist(db.artists[key]);\n  },\n  // Creates single color\n  // TO-DO: Delete this after feeding firebase\n  createColor: async body => {\n    const key = await dbRef.ref(`/colors`).push().key;\n    const data = deserialize.post.color(body, key);\n    let response = {};\n    await dbRef.ref(`/colors/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Color ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.colors[key] = response;\n    return serialize.color(db.colors[key]);\n  },\n  // Creates single distribution\n  createDistribution: async body => {},\n  // Creates single member\n  createMember: async (body, uid) => {\n    const key = await dbRef.ref(`/members`).push().key;\n    const data = deserialize.post.member(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/members/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Member ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.members[key] = response;\n    return serialize.member(db.members[key]);\n  },\n  // Creates single song\n  createSong: async (body, uid) => {\n    const key = await dbRef.ref(`/songs`).push().key;\n    const data = deserialize.post.song(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/songs/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Song ${key}: ${data.title}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.songs[key] = response;\n    return serialize.song(db.songs[key]);\n  },\n  // Creates single unit\n  createUnit: async (body, uid) => {\n    const key = await dbRef.ref(`/units`).push().key;\n    const data = deserialize.post.unit(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/units/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Unit ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.units[key] = response;\n    return serialize.unit(db.units[key]);\n  },\n  // Creates single user\n  createUser: async (body, uid) => {\n    const key = uid;\n    const data = deserialize.post.user(body, key);\n    let response = {};\n    await dbRef.ref(`/users/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create User ${key}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.users[key] = response;\n    return serialize.user(db.users[key]);\n  },\n};\n\nconst putFunctions = {\n  // Updates single artist\n  updateArtist: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.artist(body, key, uid);\n    await dbRef.ref(`/artists/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Artist ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/artists/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.artists[key] = response;\n    return serialize.artist(db.artists[key]);\n  },\n  // Updates single distribution\n  updateDistribution: async (id, body, uid) => {},\n  // Updates single member\n  updateMember: async (id, body, uid) => {\n    console.log(id, body, uid);\n    const key = id;\n    const data = deserialize.put.member(body, key, uid);\n    await dbRef.ref(`/members/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Member ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/members/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.members[key] = response;\n    return serialize.member(db.members[key]);\n  },\n  // Updates single song\n  updateSong: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.song(body, key, uid);\n    await dbRef.ref(`/songs/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Song ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/songs/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.songs[key] = response;\n    return serialize.song(db.songs[key]);\n  },\n  // Updates single unit\n  updateUnit: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.unit(body, key, uid);\n    await dbRef.ref(`/units/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Unit ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/units/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.units[key] = response;\n    return serialize.unit(db.units[key]);\n  },\n  // Updates single user\n  updateUser: async (id, body) => {\n    const key = id;\n    const data = deserialize.put.user(body, key);\n    await dbRef.ref(`/users/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update User ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/users/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.users[key] = response;\n    return serialize.user(db.users[key]);\n  },\n  updateUserBiases: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/biases`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Biases ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserFavoriteArtists: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/favoriteArtists`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Artists ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserFavoriteMembers: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/favoriteMembers`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Members ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserLatestUnits: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/latestUnits`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Members ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n};\n\nconst deleteFunctions = {\n  // Destroys single user\n  destroyUser: async (id, uid) => {\n    if (id === uid) {\n      await dbRef.ref(`/users/${uid}`).remove();\n      return { [id]: true };\n    }\n  },\n};\n\nexport default new API();\n","/* eslint wrap-iife: 0 */\n/* eslint func-names: 0 */\n\nimport _ from 'lodash';\n\n/**\n * Parsers bem classes accepting two or more arguments\n * @param {String} block\n * @param {String} modifiers\n * @param {String} element\n * @param {extra} extras\n * @returns {string} bem-class\n */\nconst bem = (...args) => {\n  const block = args[0];\n  let modifiers = args[1] || '';\n  let element = args[2];\n  let extras = args[3] || [];\n\n  const hasBlock = block !== undefined && block !== null && block !== '';\n  const hasModifiers =\n    modifiers !== undefined &&\n    modifiers !== null &&\n    modifiers !== '' &&\n    modifiers.length > 0;\n  const hasElement =\n    element !== undefined && element !== null && element !== '';\n  const hasExtras =\n    extras !== undefined &&\n    extras !== null &&\n    extras !== '' &&\n    extras.length > 0;\n\n  // Prepare modifiers\n  if (hasModifiers) {\n    if (typeof modifiers === 'string') {\n      modifiers = [modifiers];\n    }\n    modifiers = modifiers.map(m => `--${m}`);\n  }\n  // Prepare element\n  if (hasElement) {\n    element = `__${element}`;\n  }\n  // Prepare Extras\n  if (hasExtras) {\n    if (typeof extras === 'string') {\n      extras = [extras];\n    }\n  }\n\n  // No Block\n  if (!hasBlock) {\n    throw new Error('Block string missing');\n  }\n\n  let classes = block;\n\n  // Only Modifiers\n  if (hasModifiers && !hasElement) {\n    modifiers.forEach(m => {\n      classes += ` ${block}${m}`;\n    });\n  }\n\n  // Only Element\n  if (hasElement && !hasModifiers) {\n    classes = ` ${block}${element}`;\n  }\n\n  // Modifiers and Element\n  if (hasElement && hasModifiers) {\n    classes += `${element}`;\n    modifiers.forEach(m => {\n      classes += ` ${block}${element}${m}`;\n    });\n  }\n\n  return `${classes} ${extras.join(' ')}`.trim();\n};\n\n/**\n * Loops through members and reassign colors if they are duplicated\n * @param {Array} members\n * @returns {Array} members with unique colors\n */\nconst ensureColorUniqueness = members => {\n  const membersList = _.cloneDeep(members);\n  const dict = {};\n  const refactoredMembers = [];\n  // Loop through members and make color dict\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    if (dict[colorId] === undefined) {\n      dict[colorId] = 1;\n    } else {\n      dict[colorId] += 1;\n    }\n  });\n\n  // Loop again and check for uniqueness, unique stays\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    const altColorId = member.altColor.id;\n    if (dict[colorId] > 1) {\n      if (dict[altColorId] === undefined) {\n        const oldColor = member.color;\n        member.color = member.altColor;\n        member.altColor = oldColor;\n      } else {\n        console.warn(`Duplicated color for member ${member.id}`);\n      }\n    }\n    refactoredMembers.push(member);\n  });\n  return refactoredMembers;\n};\n\nconst capitalizeWord = (str, separator = ' ') =>\n  str\n    .toString()\n    .split(separator)\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(separator);\n\nconst spinalCaseWord = str =>\n  str\n    .toLowerCase()\n    .split(' ')\n    .join('-');\n\nconst parseBirthDate = d => {\n  const date = `${d}`;\n  if (date.length < 5) {\n    return date;\n  }\n  if (date.length === 8) {\n    const year = date.substring(0, 4);\n    const month = date.substring(4, 6);\n    const day = date.substring(6);\n    return `${month}/${day}/${year}`;\n  }\n  return '?';\n};\n\nconst parseResponse = response => {\n  const responseParser = obj => {\n    return {\n      id: obj.id,\n      ...obj.attributes,\n    };\n  };\n\n  // Response has a single object instance without the \"data\" object\n  if (response && response.id && response.attributes) {\n    return responseParser(response);\n  }\n\n  // Response has a \"data\" object\n  if (response && response.data) {\n    response = response.data;\n\n    // If response.data is not an array\n    if (response && response.id && response.attributes) {\n      return responseParser(response);\n    }\n\n    if (Array.isArray(response)) {\n      const result = [];\n      for (let i = 0; i < response.length; i++) {\n        result.push(responseParser(response[i]));\n      }\n      return result;\n    }\n  }\n\n  throw new Error('parserResponse failed. Object is not a response');\n};\n\nconst parseResponseToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = {\n          id: instance.id,\n          ...instance.attributes,\n        };\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseArrayToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = instance;\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseQueryParams = query => {\n  if (!query) return null;\n\n  if (query[0] === '?') {\n    query = query.substring(1);\n  }\n\n  const params = {};\n  query.split('&').forEach(item => {\n    const pair = item.split('=');\n    const key = pair[0];\n    if (key) {\n      params[key] = pair[1] || null;\n    }\n  });\n\n  return params;\n};\n\nexport default {\n  bem,\n  ensureColorUniqueness,\n  capitalizeWord,\n  parseBirthDate,\n  parseQueryParams,\n  parseArrayToObject,\n  parseResponse,\n  parseResponseToObject,\n  spinalCaseWord,\n};\n","import _ from 'lodash';\nimport { toastr } from 'react-redux-toastr';\n\nimport actions from './actions';\n\nimport API from '../../api';\n\nimport utils from '../../utils';\n\nimport { appOperations } from '../app';\n\nconst loadArtists = () => dispatch => dispatch({ type: 'REQUEST_ARTISTS' });\n\nconst loadArtist = (artistId, queryParams) => dispatch =>\n  dispatch({ type: 'REQUEST_ARTIST', artistId, queryParams });\n\nconst loadUserArtists = () => async (dispatch, getState) => {};\n\nconst findUnitIndex = (units, unitId) => units.findIndex(u => u.id === unitId);\n\nconst updateSearchQuery = value => dispatch => {\n  if (value === '' || value.length > 2) {\n    dispatch(actions.setSearchQuery(value.toLowerCase()));\n  }\n};\n\nconst showFavoriteArtistsOnlyToggle = () => (dispatch, getState) => {\n  const { showFavoriteArtistsOnly } = getState().artists;\n\n  dispatch(actions.setShowFavoriteArtistsOnly(!showFavoriteArtistsOnly));\n};\n\nconst updateLatestUnits = id => async (dispatch, getState) => {};\n\nconst switchArtistPageTab = event => async (dispatch, getState) => {\n  let { id } = event.target;\n\n  // When clicking on the tab icon, the id is lost\n  if (!id) {\n    id = event.target.parentNode.parentNode.id; // eslint-disable-line\n  }\n  if (!id) return null;\n\n  dispatch(actions.setArtistPageTab(id));\n\n  const selectedArtist = { ...getState().artists.selectedArtist };\n  const unitIndex = findUnitIndex(selectedArtist.units, id);\n  const currentUnit = selectedArtist.units[unitIndex];\n\n  // If unit has the complete flag, use it, else request a new complete one\n  if (currentUnit.complete) {\n    dispatch(actions.setSelectedUnit(currentUnit));\n  } else {\n    await dispatch({\n      type: 'REQUEST_UNIT',\n      unitId: id,\n      selectedArtist,\n      unitIndex,\n    });\n  }\n};\n\nexport default {\n  loadArtists,\n  loadUserArtists,\n  loadArtist,\n  updateSearchQuery,\n  updateLatestUnits,\n  showFavoriteArtistsOnlyToggle,\n  switchArtistPageTab,\n};\n","import artistsReducer from './reducers';\n\nexport { default as artistsOperations } from './operations';\nexport { default as artistsTypes } from './types';\nexport default artistsReducer;\n","const SET_ADMIN = 'SET_ADMIN';\nconst SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nconst SET_USER = 'SET_USER';\n\nexport default {\n  SET_ADMIN,\n  SET_AUTHENTICATED,\n  SET_USER,\n};\n","import types from './types';\n\nconst initialState = {\n  isAuthenticated: false,\n  isAdmin: false,\n  user: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ADMIN:\n      newState.isAdmin = action.payload;\n      break;\n\n    case types.SET_AUTHENTICATED:\n      newState.isAuthenticated = action.payload;\n      break;\n\n    case types.SET_USER:\n      newState.user = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setAdmin = payload => dispatch =>\n  dispatch({ type: types.SET_ADMIN, payload });\nconst setAuthenticated = payload => dispatch =>\n  dispatch({ type: types.SET_AUTHENTICATED, payload });\nconst setUser = payload => dispatch =>\n  dispatch({ type: types.SET_USER, payload });\n\nexport default {\n  setAdmin,\n  setAuthenticated,\n  setUser,\n};\n","import { toastr } from 'react-redux-toastr';\n\nimport API from '../../api';\n\nimport actions from './actions';\n\nconst login = () => dispatch => dispatch({ type: 'RUN_LOGIN' });\n\nconst logout = () => dispatch => dispatch({ type: 'RUN_LOGOUT' });\n\nconst updateFavoriteArtists = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteArtists = { ...user.favoriteArtists } || {};\n  console.log(userFavoriteArtists);\n  if (user.id) {\n    if (userFavoriteArtists[id]) {\n      userFavoriteArtists[id] = false;\n    } else {\n      userFavoriteArtists[id] = true;\n    }\n    console.log(userFavoriteArtists);\n    try {\n      const newUserFavoriteArtists = await API.put(\n        `/users/${user.id}/favorite-artists`,\n        userFavoriteArtists\n      );\n      user.favoriteArtists = newUserFavoriteArtists.data;\n\n      dispatch(actions.setUser(user));\n    } catch (error) {\n      console.error(error);\n      toastr.error('Oh no', error.errorMessage);\n    }\n  }\n};\n\nconst updateFavoriteMembers = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteMembers = { ...user.favoriteMembers } || {};\n\n  if (user.id) {\n    if (userFavoriteMembers[id]) {\n      userFavoriteMembers[id] = false;\n    } else {\n      userFavoriteMembers[id] = true;\n    }\n\n    try {\n      const newUserFavoriteMembers = await API.put(\n        `/users/${user.id}/favorite-members`,\n        userFavoriteMembers\n      );\n      user.userFavoriteMembers = newUserFavoriteMembers.data;\n\n      dispatch(actions.setUser(user));\n    } catch (error) {\n      console.error(error);\n      toastr.error('Oh no', error.errorMessage);\n    }\n  }\n};\n\nexport default {\n  login,\n  logout,\n  updateFavoriteArtists,\n  updateFavoriteMembers,\n};\n","import authReducer from './reducers';\n\nexport { default as authOperations } from './operations';\nexport { default as authTypes } from './types';\nexport default authReducer;\n","const SET_COLORS = 'SET_COLORS';\n\nexport default {\n  SET_COLORS,\n};\n","import types from './types';\n\nconst initialState = {\n  colors: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_COLORS:\n      newState.colors = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import dbReducer from './reducers';\n\nexport { default as dbOperations } from './operations';\nexport { default as dbTypes } from './types';\nexport default dbReducer;\n","const SET_TEST_1 = 'SET_TEST_1';\nconst SET_TEST_2 = 'SET_TEST_2';\nconst SET_TEST_3 = 'SET_TEST_3';\nconst SET_TEST_4 = 'SET_TEST_4';\nconst SET_TEST_5 = 'SET_TEST_5';\n\nexport default {\n  SET_TEST_1,\n  SET_TEST_2,\n  SET_TEST_3,\n  SET_TEST_4,\n  SET_TEST_5,\n};\n","import types from './types';\n\nconst initialState = {\n  test1: '',\n  test2: 0,\n  test3: true,\n  test4: [],\n  test5: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_TEST_1:\n      newState.test1 = action.payload;\n      break;\n\n    case types.SET_TEST_2:\n      newState.test2 = action.payload;\n      break;\n\n    case types.SET_TEST_3:\n      newState.test3 = action.payload;\n      break;\n\n    case types.SET_TEST_4:\n      newState.test4 = action.payload;\n      break;\n\n    case types.SET_TEST_5:\n      newState.test5 = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setTest1 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_1, payload });\nconst setTest2 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_2, payload });\nconst setTest3 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_3, payload });\nconst setTest4 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_4, payload });\nconst setTest5 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_5, payload });\n\nexport default {\n  setTest1,\n  setTest2,\n  setTest3,\n  setTest4,\n  setTest5,\n};\n","import actions from './actions';\n\nconst testFunction1 = () => dispatch => {\n  console.log('testFunction1');\n\n  dispatch(actions.setTest1('Ran testFunction1'));\n};\n\nconst testFunction2 = () => dispatch => {\n  console.log('testFunction2');\n\n  dispatch(actions.setTest1('Ran testFunction2'));\n};\n\nconst testFunction3 = () => dispatch => {\n  console.log('testFunction3');\n\n  dispatch(actions.setTest1('Ran testFunction3'));\n};\n\nconst testFunction4 = () => dispatch => {\n  console.log('testFunction4');\n\n  dispatch(actions.setTest1('Ran testFunction4'));\n};\n\nconst testFunction5 = () => dispatch => {\n  console.log('testFunction5');\n\n  dispatch(actions.setTest1('Ran testFunction5'));\n};\n\nexport default {\n  testFunction1,\n  testFunction2,\n  testFunction3,\n  testFunction4,\n  testFunction5,\n};\n","import tempReducer from './reducers';\n\nexport { default as tempOperations } from './operations';\nexport { default as tempTypes } from './types';\nexport default tempReducer;\n","import { combineReducers } from 'redux';\n\nimport { reducer as toastr } from 'react-redux-toastr';\n\nimport app, { appTypes } from './app';\nimport artists, { artistsTypes } from './artists';\nimport auth, { authTypes } from './auth';\nimport db, { dbTypes } from './db';\nimport temp, { tempTypes } from './temp';\n\nconst rootReducer = combineReducers({\n  app,\n  auth,\n  artists,\n  db,\n  temp,\n  toastr,\n});\n\nexport const types = {\n  ...appTypes,\n  ...artistsTypes,\n  ...authTypes,\n  ...dbTypes,\n  ...tempTypes,\n};\n\nexport default rootReducer;\n","import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport _ from 'lodash';\n\nimport API from '../api';\n\nimport { types } from '../reducers';\nimport utils from '../utils';\n\n// Delay helper to make API look more realistic\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nconst DELAY_DURATION = process.env.NODE_ENV === 'development' ? 500 : 0;\n\n// API Workers\n\n/**\n * Initializes database, check for existing auth session, and load colors\n * @param {object} action\n */\nfunction* initializer(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const dbStart = yield API.init();\n    const status = dbStart.dbInfo();\n    yield put({ type: types.SET_DATABASE_READY, payload: status.data.loaded });\n\n    yield delay(DELAY_DURATION);\n\n    let loggedUser = yield API.auth();\n    loggedUser = loggedUser.data.attributes ? loggedUser.data : null;\n    if (loggedUser) {\n      const user = utils.parseResponse(loggedUser);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Welcome back!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: error,\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestArtists(action) {\n  yield put({ type: 'PENDING_INLINE', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/artists');\n    const artistList = utils.parseResponse(response);\n\n    const sortedArtistList = _.sortBy(artistList, [a => a.name.toLowerCase()]);\n    yield put({ type: types.SET_ARTIST_LIST, payload: sortedArtistList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load artists database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  // TO-DO: Load latest artists, and favorite units\n\n  yield put({ type: 'CLEAR_PENDING_INLINE', actionType: action.type });\n}\n\nfunction* requestArtist(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { artistId } = action;\n  let { queryParams } = action;\n\n  let selectedArtist = {};\n\n  // Fetch Artist\n  try {\n    const response = yield API.get(`/artists/${artistId}`);\n    selectedArtist = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load artist ${artistId} from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  // Select default unit id\n  queryParams = utils.parseQueryParams(queryParams);\n  let selectedUnitId = selectedArtist.units[0];\n  let unitIndex = 0;\n  if (\n    queryParams &&\n    queryParams.unit &&\n    selectedArtist.units.includes(queryParams.unit)\n  ) {\n    selectedUnitId = queryParams.unit;\n    unitIndex = selectedArtist.units.indexOf(selectedUnitId);\n  }\n\n  // Fetch Artist's Units\n  try {\n    const response = yield API.get(`/artists/${artistId}/units`);\n    selectedArtist.units = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load artist ${artistId}'s units from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  // Fetch complete unit for default unit\n  const selectedUnit = yield call(requestUnit, {\n    unitId: selectedUnitId,\n  });\n\n  selectedArtist.units[unitIndex] = selectedUnit;\n\n  yield put({ type: types.SET_ARTIST_PAGE_TAB, payload: selectedUnitId });\n  yield put({ type: types.SET_SELECTED_ARTIST, payload: selectedArtist });\n  yield put({ type: types.SET_SELECTED_UNIT, payload: selectedUnit });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestUnit({ type, unitId, selectedArtist, unitIndex }) {\n  const actionType = 'REQUEST_UNIT';\n  yield put({ type: 'PENDING', actionType });\n\n  let unit = {};\n  try {\n    const response = yield API.get(`/units/${unitId}`);\n    unit = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n\n  // Fetch members\n  let members = {};\n  try {\n    const response = yield API.get(`/units/${unitId}/members`);\n    members = utils.parseArrayToObject(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load members from unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n  unit.members = members;\n\n  // Fetch distributions and merge\n\n  // Fetch legacy distributions and merge\n\n  // Calculate averages\n\n  // Flag unit as complete\n  unit.complete = true;\n\n  // The following if statements are used when the unit tab is updated in the UI\n  if (type) {\n    yield put({ type: types.SET_SELECTED_UNIT, payload: unit });\n  }\n  if (selectedArtist) {\n    selectedArtist.units[unitIndex] = unit;\n    yield put({ type: types.SET_SELECTED_ARTIST, payload: selectedArtist });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType });\n  return unit;\n}\n\nfunction* runLogin(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    let loggedUser = yield API.login();\n    loggedUser = loggedUser.data.attributes ? loggedUser.data : null;\n\n    if (loggedUser) {\n      const user = utils.parseResponse(loggedUser);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Hello!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\nfunction* runLogout(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    yield API.logoff();\n\n    yield put({ type: types.SET_USER, payload: {} });\n    yield put({ type: types.SET_AUTHENTICATED, payload: false });\n    yield put({ type: types.SET_ADMIN, payload: false });\n\n    yield put({\n      type: 'WARNING_TOAST',\n      message: 'You are logged out',\n      actionType: action.type,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* apiSaga() {\n  yield takeLatest('INITIALIZER', initializer);\n  yield takeLatest('REQUEST_ARTISTS', requestArtists);\n  yield takeLatest('REQUEST_ARTIST', requestArtist);\n  yield takeLatest('REQUEST_UNIT', requestUnit);\n  yield takeLatest('RUN_LOGIN', runLogin);\n  yield takeLatest('RUN_LOGOUT', runLogout);\n\n  yield takeEvery('TEST', test);\n}\n\nexport default apiSaga;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { toastr } from 'react-redux-toastr';\n\nimport { types } from '../reducers';\n\n// Loading Bar Action Type Cache\nconst pendingCache = {};\nconst pendingInlineCache = {};\n\n// PENDING WORKERS\n\n/**\n * Removes action type from pendingCache and updates pending if pendingCache is empty\n * @param {string} actionType\n */\nfunction* clearPending(actionType) {\n  if (typeof actionType === 'object') {\n    actionType = actionType.actionType; // eslint-disable-line\n  }\n  if (pendingCache[actionType]) {\n    delete pendingCache[actionType];\n  }\n\n  if (Object.keys(pendingCache).length === 0) {\n    yield put({ type: types.SET_PENDING, payload: false });\n  }\n}\n\n/**\n * Removes action type from pendingCache and updates pending if pendingCache is empty\n * @param {string} actionType\n */\nfunction* clearPendingInline(actionType) {\n  if (typeof actionType === 'object') {\n    actionType = actionType.actionType; // eslint-disable-line\n  }\n\n  if (pendingInlineCache[actionType]) {\n    delete pendingInlineCache[actionType];\n  }\n\n  if (Object.keys(pendingInlineCache).length === 0) {\n    yield put({ type: types.SET_PENDING_INLINE, payload: false });\n  }\n\n  yield call(clearPending, actionType);\n}\n\n/**\n * Adds action type to pendingInlineCache and updates pending based on pendingInlineCache values\n * @param {string} actionType\n */\nfunction* pending({ actionType }) {\n  if (pendingCache[actionType] === undefined) {\n    pendingCache[actionType] = true;\n  }\n\n  if (Object.keys(pendingCache).length > 0) {\n    yield put({ type: types.SET_PENDING, payload: true });\n  } else {\n    yield put({ type: types.SET_PENDING, payload: false });\n  }\n}\n\n/**\n * Adds action type to pendingInlineCache and updates pending based on pendingInlineCache values\n * @param {string} actionType\n */\nfunction* pendingInline({ actionType }) {\n  if (pendingInlineCache[actionType] === undefined) {\n    pendingInlineCache[actionType] = true;\n  }\n\n  if (Object.keys(pendingInlineCache).length > 0) {\n    yield put({ type: types.SET_PENDING_INLINE, payload: true });\n  } else {\n    yield put({ type: types.SET_PENDING_INLINE, payload: false });\n  }\n\n  yield call(pending, { actionType });\n}\n\n// ERROR WORKERS\n\n/**\n * Dispatches an error message and an error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* error({ message, actionType }) {\n  const errorMessage = typeof err === 'string' ? message : message.toString();\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield toastr.error(errorMessage);\n  yield call(clearPending, actionType);\n}\n\n/**\n * Dispatches an error message and and an inline error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* errorInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR_INLINE, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops an error toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* errorToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.error(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.error(message);\n  }\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n// SUCCESS WORKERS\n\n/**\n * Dispatches a success message and and an inline sucess flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* successInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_SUCCESS_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_SUCCESS_INLINE, payload: true });\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops a sucess toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* successToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.success(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.success(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// WARNING WORKERS\n\n/**\n * Pops a warning toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* warningToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.warning(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.warning(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* statusHandlingSaga() {\n  yield takeEvery('CLEAR_PENDING', clearPending);\n  yield takeEvery('CLEAR_PENDING_INLINE', clearPendingInline);\n  yield takeEvery('ERROR', error);\n  yield takeEvery('ERROR_INLINE', errorInline);\n  yield takeEvery('ERROR_TOAST', errorToast);\n  yield takeEvery('PENDING', pending);\n  yield takeEvery('PENDING_INLINE', pendingInline);\n  yield takeEvery('SUCCESS_INLINE', successInline);\n  yield takeEvery('SUCCESS_TOAST', successToast);\n  yield takeEvery('WARNING_TOAST', warningToast);\n  yield takeEvery('TEST', test);\n}\n\nexport default statusHandlingSaga;\n","import { all, fork } from 'redux-saga/effects';\nimport apiSaga from './api-saga';\nimport statusHandlingSaga from './status-handling';\n\nexport default function* rootSaga() {\n  yield all([fork(apiSaga), fork(statusHandlingSaga)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, thunkMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger({ collapsed: true }));\n}\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon } from '../../common';\n\nconst FavoriteIcon = ({ action, className, id, size, state }) => (\n  <button\n    className={`btn btn-transparent ${className}`}\n    onClick={() => action(id)}\n  >\n    {state ? (\n      <Icon type=\"heart\" color=\"red\" size={size} />\n    ) : (\n      <Icon type=\"heart-hollow\" color=\"gray\" size={size} />\n    )}\n  </button>\n);\n\nFavoriteIcon.propTypes = {\n  action: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  state: PropTypes.bool,\n};\n\nFavoriteIcon.defaultProps = {\n  className: '',\n  size: 12,\n  state: false,\n};\n\nexport default FavoriteIcon;\n","export const DEFAULT_COLORS = {\n  default: '#000000',\n  black: '#000000',\n  blue: '#598ffd',\n  gray: '#707070',\n  green: '#49d156',\n  orange: '#fea245',\n  pink: '#fb9cf0',\n  purple: '#9e8ef0',\n  red: '#d14949',\n  teal: '#34ac9e',\n  white: 'FFFFFF',\n  yellow: '#ffd700',\n};\n\nexport const FLAGS_LIST = {\n  american: 'usa',\n  brazilian: 'brazil',\n  canadian: 'canada',\n  chinese: 'china',\n  japanese: 'japan',\n  korean: 'korea',\n  taiwanese: 'taiwan',\n  thai: 'thailand',\n};\n\nexport const NATIONALITY_FLAG_URL = '/images/flags/';\n\nexport const PROFILE_PICTURE_URL = '/images/profiles/';\n\nexport const YOUTUBE_URLS = ['cudssvDuOpc'];\n","export default {\n  check:\n    'M50,0C22.5,0,0,22.5,0,50s22.5,50,50,50s50-22.5,50-50S77.5,0,50,0z M75.6,41.2L47.5,73.1 c-1.2,1.2-3.1,1.2-4.4,0.6L23.1,60c-1.9-1.3-1.9-3.1-0.6-4.4l6.2-8.8c0.6-1.9,2.5-1.9,4.4-1.2l6.9,5c1.2,1.2,3.1,0.6,4.4-0.6 l18.1-20c1.2-1.2,3.1-1.2,4.4,0l8.1,6.9C76.2,38.1,76.2,40,75.6,41.2z',\n  clock:\n    'M100,50c0,9.4-2.2,17.8-6.6,25.1c-4.6,7.6-10.7,13.7-18.3,18.3C67.8,97.8,59.4,100,50,100s-17.8-2.2-25.1-6.6 c-7.6-4.6-13.7-10.7-18.3-18.3C2.2,67.8,0,59.4,0,50s2.2-17.8,6.6-25.1c4.6-7.6,10.7-13.7,18.3-18.3C32.2,2.2,40.6,0,50,0 s17.8,2.2,25.1,6.6c7.6,4.6,13.7,10.7,18.3,18.3C97.8,32.2,100,40.6,100,50z M85.4,50c0-6.2-1.5-12.2-4.6-17.8 c-3.2-5.5-7.5-9.8-13-13c-5.6-3-11.6-4.6-17.8-4.6s-12.2,1.5-17.8,4.6c-5.5,3.2-9.8,7.5-13,13c-3,5.6-4.6,11.6-4.6,17.8 s1.5,12.2,4.6,17.8c3.2,5.5,7.5,9.8,13,13c5.6,3,11.6,4.6,17.8,4.6s12.2-1.5,17.8-4.6c5.5-3.2,9.8-7.5,13-13 C83.9,62.2,85.4,56.2,85.4,50z M58.4,26.9v29.2c0,0.6-0.2,1.1-0.7,1.6c-0.5,0.5-1,0.7-1.6,0.7H35.4c-0.6,0-1.1-0.2-1.6-0.7 c-0.3-0.6-0.5-1.1-0.5-1.6v-4.1c0-0.6,0.2-1.1,0.5-1.4c0.5-0.5,1-0.7,1.6-0.7H50V26.9c0-0.5,0.2-0.9,0.7-1.4 c0.2-0.5,0.6-0.7,1.4-0.7h4.1c0.6,0,1.1,0.2,1.6,0.7C58.2,26,58.4,26.5,58.4,26.9z',\n  heart:\n    'M50,85.5c-1,0-1.9-0.3-2.5-1L12.7,51c-0.1,0-0.4-0.2-0.7-0.6s-0.6-0.7-0.9-0.8c-0.7-0.8-1.7-2-3.1-3.7 c-1.3-1.6-2.5-3.4-3.7-5.5c-1-1.7-2-3.9-2.9-6.6C0.5,31.2,0,28.6,0,26c0-8.1,2.3-14.5,7-19.1C11.6,2.3,18.2,0,26.8,0 c2.2,0,4.6,0.4,7,1.2s4.7,1.8,6.6,3.1c1.8,1.2,3.6,2.5,5.3,3.9c1.6,1.2,3,2.4,4.3,3.7c1.3-1.3,2.7-2.5,4.3-3.7 c1.7-1.4,3.5-2.7,5.3-3.9c2-1.3,4.2-2.3,6.6-3.1C68.7,0.4,71,0,73.2,0C81.8,0,88.4,2.3,93,6.8c4.7,4.7,7,11.1,7,19.1 s-4.2,16.5-12.7,25.2L52.5,84.6C51.9,85.2,51,85.5,50,85.5z',\n  'heart-hollow':\n    'M73.2,8c6.4,0,11,1.5,14.1,4.5C90.5,15.6,92,20.1,92,26c0,5.9-3.5,12.4-10.3,19.5L50,75.9L18.3,45.2 c-0.2-0.2-0.4-0.4-0.6-0.5c-0.3-0.3-0.7-0.7-1-1c-0.6-0.8-1.5-1.7-2.5-3c-1-1.2-1.9-2.6-2.9-4.2c-0.1-0.1-0.1-0.2-0.2-0.3 c-0.5-0.8-1.3-2.3-2.2-5c0,0,0-0.1,0-0.1C8.3,29.4,8,27.7,8,26c0-5.9,1.5-10.3,4.7-13.5c3-3,7.6-4.5,14.1-4.5 c1.4,0,2.9,0.3,4.6,0.8c1.7,0.6,3.3,1.3,4.6,2.2c0,0,0.1,0,0.1,0.1c1.5,1,3,2.1,4.4,3.3c0.1,0.1,0.2,0.2,0.4,0.3 c1.3,0.9,2.4,1.9,3.4,3c1.5,1.5,3.5,2.3,5.7,2.3s4.2-0.8,5.7-2.3c1-1,2.2-2,3.4-3c0.1-0.1,0.2-0.2,0.4-0.3c1.4-1.2,2.9-2.3,4.4-3.3 c0,0,0.1,0,0.1-0.1c1.3-0.9,2.9-1.6,4.6-2.2C70.3,8.3,71.9,8,73.2,8 M73.2,0c-2.2,0-4.6,0.4-7,1.2C63.7,2,61.5,3,59.6,4.3 c-1.8,1.2-3.6,2.5-5.3,3.9c-1.6,1.2-3,2.4-4.3,3.7c-1.3-1.3-2.7-2.5-4.3-3.7c-1.7-1.4-3.5-2.7-5.3-3.9c-2-1.3-4.2-2.3-6.6-3.1 C31.3,0.4,29,0,26.8,0C18.2,0,11.6,2.3,7,6.8C2.3,11.5,0,17.9,0,26c0,2.6,0.5,5.2,1.4,7.8c0.9,2.7,1.9,4.9,2.9,6.6 c1.2,2.1,2.4,3.9,3.7,5.5c1.4,1.7,2.5,2.9,3.1,3.7c0.3,0.1,0.6,0.4,0.9,0.8c0.3,0.4,0.6,0.6,0.7,0.6l34.8,33.6c0.7,0.7,1.5,1,2.5,1 s1.9-0.3,2.5-1l34.8-33.4C95.8,42.4,100,34,100,26c0-8.1-2.3-14.5-7-19.1C88.4,2.3,81.8,0,73.2,0L73.2,0z',\n  login:\n    'M77.2,50c0,1.1-0.5,2.1-1.4,3L40.4,88.4c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H4.1 c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3 c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L75.8,47C76.7,47.9,77.2,48.9,77.2,50z M82,8H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20 c1.7,0,10,0.7,10,11v21v4v21c0,10.3-8.4,11-10,11H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20c0.5,0,4.6-0.1,8.9-2.3C95,87.4,100,82.7,100,73 V52v-4V27C100,11.4,87,8,82,8z',\n  logout:\n    'M0,27l0,21l0,4l0,21c0,9.7,5,14.4,9.1,16.7c4.3,2.3,8.4,2.3,8.9,2.3h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18c-1.6,0-10-0.7-10-11 V52v-4V27c0-10.3,8.4-11,10-11h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18C13,8,0,11.4,0,27z M100.2,50c0,1.1-0.5,2.1-1.4,3L63.4,88.4 c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H27.1c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4 c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L98.8,47 C99.7,47.9,100.2,48.9,100.2,50z',\n  stop:\n    'M68.3,90.5H31.7c-4.4,0-9.5-3-11.7-6.8L1.6,52c-2.2-3.8-2.2-9.7,0-13.5L20,6.8C22.2,3,27.3,0,31.7,0h36.6 c4.4,0,9.5,3,11.7,6.8l18.3,31.7c2.2,3.8,2.2,9.7,0,13.5L80,83.8C77.9,87.6,72.7,90.5,68.3,90.5z M31.7,5.9c-2.3,0-5.5,1.8-6.6,3.8\tL6.7,41.4c-1.2,2-1.2,5.6,0,7.6l18.3,31.7c1.2,2,4.3,3.8,6.6,3.8h36.6c2.3,0,5.5-1.8,6.6-3.8l18.3-31.7c1.1-2,1.1-5.6,0-7.6 L74.9,9.7c-1.1-2-4.3-3.8-6.6-3.8H31.7z M70.9,30.5c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.8-3.6,4.6c0,4.8,0,9.6,0,14.3 c0,0.7-0.4,1.3-0.7,2c-0.3-0.7-0.9-1.3-0.9-2c-0.1-6,0-11.9-0.1-17.9c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.7-3.6,4.6 c0,6,0,11.9,0,17.9c0,0.6-0.5,1.3-0.8,1.9c-0.3-0.6-0.7-1.2-0.9-1.9c-0.1-0.5,0-1.1,0-1.6c0-7.8,0-15.5,0-23.3 c0-2.1-0.5-3.8-2.8-4.3c-2.5-0.6-4.4,1.1-4.4,4c0,8,0,16,0,24c0,1-0.5,2-0.8,3c-0.3-1-0.8-2-0.8-3.1c-0.1-5.8,0.1-11.6-0.1-17.4 c0-1.2-1.1-2.8-2.1-3.4c-0.8-0.5-2.8-0.2-3.6,0.5c-0.9,0.8-1.3,2.4-1.3,3.7c-0.1,10.6,0,21.2-0.1,31.8c0,0.7-0.5,1.3-0.7,2 c-0.5-0.4-1.1-0.8-1.5-1.3c-2.3-3.6-4.4-7.2-6.7-10.8c-1.5-2.5-3.5-3.2-5.4-2c-2,1.2-2.3,3.2-0.8,5.7c3.2,5.3,6.5,10.5,9.7,15.8 c2.6,4.3,6.4,6.3,11.4,6.3c4.9,0,9.9,0,14.8,0c8.1,0,13.2-5.1,13.3-13.2c0-5,0-10,0-15.1C70.9,41.2,70.9,35.8,70.9,30.5z',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DEFAULT_COLORS } from '../../../utils/constants';\nimport ICONS from '../../../utils/icons';\n\nconst Icon = ({ type, size, color, inline }) => {\n  const margin = inline ? '0 3px' : 0;\n\n  const styles = {\n    svg: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      margin,\n    },\n    path: {\n      fill: DEFAULT_COLORS[color],\n    },\n  };\n\n  return (\n    <svg\n      style={styles.svg}\n      width={`${size}px`}\n      height={`${size}px`}\n      viewBox=\"0 0 100 100\"\n    >\n      <path style={styles.path} d={ICONS[type]} className={`icon-${type}`} />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string.isRequired,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  color: PropTypes.string,\n  inline: PropTypes.bool,\n};\n\nIcon.defaultProps = {\n  size: 12,\n  color: 'default',\n  inline: false,\n};\n\nexport default Icon;\n","import React from 'react';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst LoadingIcon = () => (\n  <span className=\"loading-icon\">\n    <img className=\"loading-icon__image\" src={loading} alt=\"Loading Icon\" />\n  </span>\n);\n\nLoadingIcon.propTypes = {};\n\nLoadingIcon.defaultProps = {};\n\nexport default LoadingIcon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Error extends Component {\n  componentDidMount() {}\n\n  render() {\n    console.log(this.props);\n    if (this.props.app.error) {\n      return (\n        <main className=\"container container--no-padding\">\n          <h1>ERROR</h1>\n          <h3>{this.props.app.errorMessage}</h3>\n        </main>\n      );\n    }\n    return <div>{this.props.children}</div>;\n  }\n}\n\nError.propTypes = {\n  app: PropTypes.object.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Error;\n","import ErrorContainer from './containers/ErrorContainer';\n\nexport default ErrorContainer;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Error from '../components/Error';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Error)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon } from '..';\n// Import images\nimport logo from '../../../images/logo-neg.svg';\nimport loading from '../../../images/loading.svg';\nimport ErrorPage from '../../pages/error';\n\nclass RequirementWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: true,\n      authentication: true,\n      admin: false,\n      activeArtist: false,\n      ready: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.ready) {\n      this.parseRequirements();\n    }\n  }\n\n  parseRequirements() {\n    this.props.requirements.forEach(requirement => {\n      this.setState({ [requirement]: true });\n    });\n    this.setState({ ready: true });\n  }\n\n  render() {\n    // If error is active\n    if (this.props.app.error) {\n      console.log('AN ERROR HAS HAPPENED!');\n      // this.props.history.push('error');\n      return <ErrorPage />;\n    }\n\n    if (!this.state.ready) {\n      return <Loading message=\"Loading...\" />;\n    }\n\n    // Verify Database\n    if (this.state.database && !this.props.app.databaseReady) {\n      return <Loading message=\"Fecthing database...\" />;\n    }\n\n    // Verify Authentication\n    if (\n      !this.props.app.pending &&\n      this.state.authentication &&\n      !this.props.auth.isAuthenticated\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <img className=\"login-logo\" src={logo} alt=\"Line Distribution\" />\n            <p>You must be logged in to access this page.</p>\n            <button className=\"btn btn-simple\" onClick={this.props.login}>\n              Sign-in now <Icon type=\"login\" color=\"black\" inline />\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Admin\n    if (\n      !this.props.app.pending &&\n      this.state.admin &&\n      !this.props.auth.isAdmin\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <div className=\"requirement-wrapper__big-icon\">\n              <Icon type=\"stop\" color=\"red\" size={120} />\n            </div>\n            <p>You must be an administrator to access this page.</p>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Selected Artist\n    if (\n      !this.props.app.pending &&\n      this.state.selectedArtist &&\n      (!this.props.artists.selectedArtist ||\n        !this.props.artists.selectedArtist.id)\n    ) {\n      if (this.props.app.isLoading) {\n        return <Loading message=\"Fecthing artist...\" />;\n      }\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group.\n          </p>\n        </main>\n      );\n    }\n\n    // Verify Active Artist\n    if (\n      !this.props.app.pending &&\n      this.state.activeArtist &&\n      this.props.artists.activeArtist &&\n      this.props.artists.activeArtist.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Required</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group and then\n            a unit.\n          </p>\n        </main>\n      );\n    }\n\n    return <div className=\"wrapper\">{this.props.children}</div>;\n  }\n}\n\nconst Loading = ({ message = '' }) => (\n  <main className=\"container container--flex container--center container--requirement-wrapper\">\n    <div className=\"requirement-wrapper__container\">\n      <img\n        className=\"requirement-wrapper__loading-icon\"\n        src={loading}\n        alt=\"Loading Icon\"\n      />\n      <p>{message}</p>\n    </div>\n  </main>\n);\n\nRequirementWrapper.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  children: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  requirements: PropTypes.array,\n};\n\nRequirementWrapper.defaultProps = {\n  requirements: [],\n};\n\nLoading.propTypes = {\n  message: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  message: '',\n};\n\nexport default RequirementWrapper;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport RequirementWrapper from '../components/RequirementWrapper';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RequirementWrapper)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SwitchToggle = ({ action, labels, checked }) => {\n  if (!labels) {\n    labels = { left: '', right: '' };\n  } else if (Array.isArray(labels)) {\n    labels = { left: labels[0], right: labels[1] };\n  } else if (typeof labels !== 'object') {\n    labels = { left: 'A', right: 'B' };\n  }\n\n  return (\n    <span>\n      <span className=\"slide-text-left\">{labels.left}</span>\n      <label className=\"switch\">\n        <input type=\"checkbox\" onChange={action} checked={checked} />\n        <span className=\"slider\" />\n      </label>\n      <span className=\"slide-text-right\">{labels.right}</span>\n    </span>\n  );\n};\n\nSwitchToggle.propTypes = {\n  action: PropTypes.func.isRequired,\n  labels: PropTypes.object, // eslint-disable-line\n  checked: PropTypes.bool,\n};\n\nSwitchToggle.defaultProps = {\n  checked: false,\n};\n\nexport default SwitchToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../utils';\n\nconst Tabs = ({ tabs, active, action, iconCondition, icon, ...props }) => {\n  // Check for names and ids\n  tabs = tabs.map((tab, index) => {\n    const tabObj = {\n      name: tab.name || '',\n      id: tab.id || '',\n    };\n    if (tab.id !== undefined && tab.name === undefined) {\n      tabObj.name = utils.capitalizeWord(tab.id);\n    }\n    if (tab.id === undefined && tab.name !== undefined) {\n      tabObj.id = utils.spinalCaseWord(tab.name);\n    }\n\n    tabObj.key = `${tab.id}-${index}`;\n    tabObj.isActive = active === tab.id ? 'selected' : '';\n    tabObj.showIcon = tab[iconCondition] || false;\n    return tabObj;\n  });\n\n  // Build icon component\n  let iconComponent;\n  if (iconCondition) {\n    iconComponent = icon;\n  }\n\n  // Activate first tab if action paramenter is not available\n  if (!active) {\n    tabs[0].isActive = 'selected';\n  }\n\n  return (\n    <section className=\"tabs-container\">\n      <ul className=\"tabs\" onClick={action}>\n        {tabs.map(tab => (\n          <li\n            key={tab.key}\n            className={utils.bem('tabs', tab.isActive, 'tab')}\n            id={tab.id}\n          >\n            {tab.name} {tab.showIcon ? iconComponent : null}\n          </li>\n        ))}\n      </ul>\n      <div className=\"tabs-content\">{props.children}</div>\n    </section>\n  );\n};\n\nTabs.propTypes = {\n  action: PropTypes.func.isRequired,\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any.isRequired,\n  iconCondition: PropTypes.string,\n  icon: PropTypes.object,\n  tabs: PropTypes.array.isRequired,\n};\n\nTabs.defaultProps = {\n  active: 0,\n  iconCondition: '',\n  icon: null,\n};\n\nexport default Tabs;\n","/* eslint react/require-default-props: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon } from '../../../common';\n// Import images\nimport logo from '../../../../images/logo.svg';\nimport userPlaceholder from '../../../../images/user-placeholder.svg';\n\nconst Menu = ({ auth, history, location, login, logout }) => {\n  const handleLogoClick = () => {\n    history.push('/');\n  };\n\n  const { pathname } = location;\n\n  // Hide parts of the menu if user is not authenticaded\n  const authHideClass = auth.isAuthenticated ? '' : 'hidden';\n\n  // Hide parts of the menu if user is not an administrator\n  const adminHideClass = auth.isAdmin ? '' : 'hidden';\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-nav\">\n        <img\n          className=\"header-nav__logo\"\n          src={logo}\n          alt=\"Logo\"\n          onClick={() => handleLogoClick()}\n        />\n        <nav className={`header-nav__links ${authHideClass}`}>\n          <Link\n            to=\"/artists\"\n            className={pathname === '/artists' ? 'active' : ''}\n          >\n            Artists\n          </Link>\n          <Link\n            to=\"/distribute\"\n            className={pathname === '/distribute' ? 'active' : ''}\n          >\n            Distribute\n          </Link>\n          <Link to=\"/songs\" className={pathname === '/songs' ? 'active' : ''}>\n            Songs\n          </Link>\n          <Link\n            to=\"/members\"\n            className={pathname === '/members' ? 'active' : ''}\n          >\n            Idols\n          </Link>\n          <Link to=\"/lab\" className={pathname === '/lab' ? 'active' : ''}>\n            Lab\n          </Link>\n          <div className={`header-admin ${adminHideClass}`}>\n            <button\n              className={\n                pathname.includes('/admin')\n                  ? 'header-admin__nav active'\n                  : 'header-admin__nav'\n              }\n            >\n              Admin Tools\n            </button>\n            <div className=\"header-admin__dropdown\">\n              <Link to=\"/admin/color-sheet\">Color Sheet</Link>\n              <Link to=\"/admin/icon-sheet\">Icon Sheet</Link>\n              <Link to=\"/admin/manage\">Manage</Link>\n              <Link to=\"/admin/sync\">Sync</Link>\n              <Link to=\"/admin/temp\">Test/Temp</Link>\n            </div>\n          </div>\n        </nav>\n      </div>\n      {auth.isAuthenticated ? (\n        <div className=\"header-user\">\n          <button className=\"header-user__nav\">\n            <img\n              className=\"header-user__photo\"\n              src={auth.user.photoURL || userPlaceholder}\n              alt=\"user\"\n            />\n            {auth.user.displayName}\n          </button>\n          <div className=\"header-user__dropdown\">\n            <Link to=\"/user/my-artists\">My Artists</Link>\n            <Link to=\"/user/my-distributions\">My Distributions</Link>\n            <hr />\n            <a href=\"#\" onClick={logout}>\n              Sign out <Icon type=\"logout\" inline />\n            </a>\n          </div>\n        </div>\n      ) : (\n        <div className=\"header-user\">\n          <button className=\"btn btn-hollow header-user__btn\" onClick={login}>\n            Sign-in<Icon type=\"login\" color=\"white\" inline />\n          </button>\n        </div>\n      )}\n    </header>\n  );\n};\n\nMenu.propTypes = {\n  auth: PropTypes.object,\n  history: PropTypes.object,\n  location: PropTypes.object,\n  login: PropTypes.func,\n  logout: PropTypes.func,\n};\n\nMenu.defaultProps = {\n  auth: {},\n  history: {},\n  location: {},\n  login: () => {},\n  logout: () => {},\n};\n\nexport default Menu;\n","import React from 'react';\n\nconst LoadingBar = () => (\n  <div className=\"loading-bar\">\n    <div className=\"bar-container\">\n      <span className=\"bar bar-0\" />\n      <span className=\"bar bar-1\" />\n      <span className=\"bar bar-2\" />\n      <span className=\"bar bar-3\" />\n      <span className=\"bar bar-4\" />\n      <span className=\"bar bar-5\" />\n      <span className=\"bar bar-6\" />\n      <span className=\"bar bar-7\" />\n      <span className=\"bar bar-8\" />\n    </div>\n  </div>\n);\n\nexport default LoadingBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Menu from './Menu';\nimport LoadingBar from './LoadingBar';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.init();\n  }\n\n  render() {\n    return (\n      <div>\n        <Menu\n          auth={this.props.auth}\n          history={this.props.history}\n          location={this.props.location}\n          login={this.props.login}\n          logout={this.props.logout}\n        />\n        {this.props.app.isLoading || this.props.app.pending ? (\n          <LoadingBar />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  app: PropTypes.object.isRequired,\n  init: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Header from '../components/Header';\n\nimport { appOperations } from '../../../../reducers/app';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = {\n  ...appOperations,\n  ...authOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Header)\n);\n","import HeaderContainer from './containers/HeaderContainer';\n\nexport default HeaderContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport logo from '../../../../images/logo-alt.svg';\n\nimport { YOUTUBE_URLS } from '../../../../utils/constants';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nconst Home = props => {\n  // Randomly choose one video in the playlist\n  const youtubeUrl =\n    YOUTUBE_URLS[Math.floor(Math.random() * YOUTUBE_URLS.length)];\n\n  const handleLearnMoreClick = () => {\n    props.history.push('/learn-more');\n  };\n\n  return (\n    <main className=\"container container--no-padding\">\n      <div className=\"home__video\">\n        <iframe\n          className=\"home__iframe\"\n          title=\"home__video\"\n          src={`https://www.youtube.com/embed/${youtubeUrl}?controls=0&showinfo=0&rel=0&autoplay=1&loop=1&mute=1&playlist=${youtubeUrl}`}\n          frameBorder=\"0\"\n          allowFullScreen\n        />\n      </div>\n      <div className=\"home__content\">\n        <img className=\"home__logo\" src={logo} alt=\"Line Distribution\" />\n        <div className=\"home__buttons\">\n          {!props.auth.isAuthenticated ? (\n            <button className=\"btn-home\" onClick={props.login}>\n              Sign-in <Icon type=\"logout\" color=\"white\" inline />\n            </button>\n          ) : null}\n          <button className=\"btn-home\" onClick={() => handleLearnMoreClick()}>\n            Learm more\n          </button>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nHome.propTypes = {\n  auth: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default Home;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Home from '../components/Home';\n\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  login: authOperations.login,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Home)\n);\n","import HomeContainer from './containers/HomeContainer';\n\nexport default HomeContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import shared components\nimport { FavoriteIcon, LoadingIcon } from '../../../common';\n\nconst ArtistsTable = ({\n  artists,\n  favoriteAction,\n  pending,\n  rowAction,\n  searchQuery,\n  user,\n}) => {\n  // Filter table rows based on searchQuery\n  let filteredArtists = artists;\n  if (searchQuery && filteredArtists[0]) {\n    filteredArtists = _.filter(artists, o => o.query.includes(searchQuery));\n  }\n  // Message to be display when table has no rows\n  const emptyTableMessage =\n    searchQuery.length > 0\n      ? 'No artists available within your search'\n      : 'No artists available';\n\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"5\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"5\">{emptyTableMessage}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th className=\"artists-table__favorite-col\" />\n          <th>Name</th>\n          <th>Genre</th>\n          <th>Units</th>\n          <th>Members</th>\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {filteredArtists.length > 0\n          ? filteredArtists.map(entry => (\n              <tr key={`all-artists-${entry.id}`} id={`a-${entry.id}`}>\n                <td\n                  className=\"artists-cell-favorite\"\n                  onClick={() => favoriteAction(entry.id)}\n                >\n                  <FavoriteIcon\n                    action={() => {}}\n                    id={entry.id}\n                    size=\"12\"\n                    state={\n                      user.favoriteArtists && user.favoriteArtists[entry.id]\n                    }\n                  />\n                </td>\n                <td>{entry.name}</td>\n                <td>{entry.genre}</td>\n                <td>{entry.units ? entry.units.length : 0}</td>\n                <td>\n                  {entry.memberList.join(', ')} ({entry.memberList.length})\n                </td>\n              </tr>\n            ))\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nArtistsTable.propTypes = {\n  artists: PropTypes.array.isRequired,\n  favoriteAction: PropTypes.func.isRequired,\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string,\n  user: PropTypes.object.isRequired,\n};\n\nArtistsTable.defaultProps = {\n  pending: false,\n  searchQuery: '',\n};\n\nexport default ArtistsTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import components\n// import CurrentArtist from './CurrentArtist';\n// Import common components\nimport { Icon, Switch, RequirementWrapper } from '../../../common';\nimport ArtistsTable from './ArtistsTable';\n\nclass Artists extends Component {\n  componentDidMount() {\n    this.props.loadArtists();\n    this.props.updateSearchQuery('');\n  }\n  render() {\n    const { app, artists, auth } = this.props;\n    const {\n      artistList,\n      searchQuery,\n      showFavoriteArtistsOnly,\n      userLatestArtists,\n    } = artists;\n    const { user } = auth;\n\n    let filteredArtists = artistList;\n    if (showFavoriteArtistsOnly) {\n      filteredArtists = _.filter(artistList, o => user.favoriteArtists[o.id]);\n    }\n\n    // Row click should send user to the selected artist page\n    const handleTableClick = e => {\n      const { id } = e.target.parentNode;\n      const { className } = e.target;\n      if (id && className !== 'artists-cell-favorite') {\n        const artistId = id.substring(2);\n        this.props.history.push(`/artists/${artistId}`);\n      }\n    };\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--artists\">\n          <h1>Artists</h1>\n\n          {/* <CurrentArtist props={this.props} /> */}\n\n          {userLatestArtists.length > 0 ? (\n            <section className=\"artists__section\">\n              <h2>\n                <Icon type=\"clock\" size=\"20\" color=\"blue\" /> Your Recently Used\n                Artists\n              </h2>\n\n              <ArtistsTable\n                artists={filteredArtists}\n                rowAction={handleTableClick}\n                favoriteAction={this.props.updateFavoriteArtists}\n                pending={app.pendingInline}\n                user={user}\n              />\n            </section>\n          ) : null}\n\n          <section className=\"artists__section\">\n            <h2>All Artists</h2>\n            <input\n              className=\"artists__search-bar\"\n              type=\"text\"\n              placeholder=\"Filter...\"\n              onChange={e => this.props.updateSearchQuery(e.target.value)}\n            />{' '}\n            Show Favorite Artists Only:{' '}\n            <Switch\n              action={this.props.showFavoriteArtistsOnlyToggle}\n              checked={showFavoriteArtistsOnly}\n            />\n            <ArtistsTable\n              artists={filteredArtists}\n              searchQuery={searchQuery}\n              pending={app.pendingInline}\n              rowAction={handleTableClick}\n              favoriteAction={this.props.updateFavoriteArtists}\n              user={user}\n            />\n          </section>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtists.propTypes = {\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  showFavoriteArtistsOnlyToggle: PropTypes.func.isRequired,\n  updateSearchQuery: PropTypes.func.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtists.defaultProps = {};\n\nexport default Artists;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artists from '../components/Artists';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artists)\n);\n","import ArtistsContainer from './containers/ArtistsContainer';\n\nexport default ArtistsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FLAGS_LIST, NATIONALITY_FLAG_URL } from '../../../../utils/constants';\n\nconst MemberNationaltyFlag = ({ nationality }) => {\n  const flag = FLAGS_LIST[nationality];\n\n  let flagUrl = `${process.env.PUBLIC_URL}${NATIONALITY_FLAG_URL}unknown.jpg`;\n\n  if (flag) {\n    flagUrl = `${process.env.PUBLIC_URL}${NATIONALITY_FLAG_URL}${flag}.jpg`;\n  }\n\n  return <img className=\"card__flag\" src={flagUrl} alt={nationality} />;\n};\n\nMemberNationaltyFlag.propTypes = {\n  nationality: PropTypes.string,\n};\n\nMemberNationaltyFlag.defaultProps = {\n  nationality: 'unknown',\n};\n\nexport default MemberNationaltyFlag;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PROFILE_PICTURE_URL } from '../../../../utils/constants';\n\nclass MemberPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.fallback = () => {\n      this.setState({ failed: true });\n    };\n  }\n\n  render() {\n    const pictureUrl = `${process.env.PUBLIC_URL}${PROFILE_PICTURE_URL}${\n      this.props.name\n    }${this.props.memberId}.jpg`;\n\n    const gender = this.props.gender === 'female' ? 'f' : 'm';\n\n    const pictureFallback = `${\n      process.env.PUBLIC_URL\n    }${PROFILE_PICTURE_URL}-profile-${gender}-${Math.floor(Math.random() * 5) +\n      1}.jpg`;\n\n    if (this.state.failed) {\n      return (\n        <img\n          className={this.props.className}\n          src={pictureFallback}\n          alt=\"Member\"\n        />\n      );\n    }\n    return (\n      <img\n        className={this.props.className}\n        src={pictureUrl}\n        onError={this.fallback}\n        alt=\"Member\"\n      />\n    );\n  }\n}\n\nMemberPicture.propTypes = {\n  className: PropTypes.string,\n  gender: PropTypes.string,\n  memberId: PropTypes.string.isRequired,\n  name: PropTypes.string,\n};\n\nMemberPicture.defaultProps = {\n  className: 'card__profile-image',\n  gender: 'female',\n  name: '',\n};\n\nexport default MemberPicture;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import Member components\nimport MemberNationaltyFlag from './MemberNationalityFlag';\nimport MemberPicture from './MemberPicture';\n// Import utility functions\nimport utils from '../../../../utils';\nimport { FavoriteIcon } from '../../../../app/common';\n\nconst MemberCard = ({ favoriteState, member, updateFavoriteMembers }) => {\n  // TO-DO: Avg logic\n  console.log(member);\n  return (\n    <div className=\"card\">\n      <MemberPicture\n        gender={member.gender}\n        memberId={member.id}\n        name={member.name}\n      />\n      {/* <FavoriteIcon\n        action={this.props.updateFavoriteArtists}\n        id={entry.id}\n        size=\"12\"\n        state={user.favoriteArtists && user.favoriteArtists[entry.id]}\n      /> */}\n      <span className=\"card__color-bar\">\n        <span\n          className={`card__color-bar--main background-color-${\n            member.color.number\n          }`}\n        />\n        <span\n          className={`card__color-bar--alt background-color-${\n            member.altColor.number\n          }`}\n        />\n      </span>\n      <h3 className=\"card__name\">\n        {member.name}\n        <FavoriteIcon\n          action={updateFavoriteMembers}\n          id={member.id}\n          size=\"20\"\n          state={favoriteState}\n        />\n      </h3>\n      <p>\n        <b>Date of Birth:</b> {utils.parseBirthDate(member.birthdate)}\n      </p>\n      <p>\n        <b>Nationality:</b>{' '}\n        <MemberNationaltyFlag nationality={member.nationality} />\n      </p>\n      <p>\n        <b>Avg Official Songs:</b> 0%\n      </p>\n      <p>\n        <b>Avg Custom Songs:</b> 0%\n      </p>\n      <p>\n        <b>Avg All Songs:</b> 0%\n      </p>\n      <p>\n        <b>Positions:</b>\n      </p>\n      POSITIONS_LIST\n    </div>\n  );\n};\n\nMemberCard.propTypes = {\n  favoriteState: PropTypes.bool,\n  member: PropTypes.object.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n};\n\nMemberCard.defaultProps = {\n  favoriteState: false,\n};\n\nexport default MemberCard;\n","import React from 'react';\n\n// Import components\nimport MemberCard from './MemberCard';\n// Import common components\nimport { Tabs, Icon, LoadingIcon } from '../../../common';\n\nconst Units = ({ props, switchArtistPageTab }) => {\n  // console.log(props);\n  const { app, artists, auth } = props;\n  const { artistPageTab, selectedArtist, selectedUnit } = artists;\n\n  // If Artist has no unit\n  if (!app.pending && !Object.keys(selectedUnit).length) {\n    return (\n      <section className=\"artist__section\">\n        <div className=\"tabs-container\">\n          <p className=\"tabs-content--empty\">\n            This artist has no units available.\n          </p>\n        </div>\n      </section>\n    );\n  }\n\n  const isUnitPending = app.pending && !Object.keys(selectedUnit).length;\n\n  return (\n    <section className=\"artist__section\">\n      <Tabs\n        tabs={selectedArtist.units || []}\n        action={switchArtistPageTab}\n        active={artistPageTab}\n        icon={<Icon type=\"check\" color=\"blue\" />}\n        iconCondition=\"official\"\n      >\n        {selectedUnit.id ? (\n          <div className=\"unit-section\">\n            <p>\n              <b>Debut Year:</b> {selectedUnit.debutYear || '?'}\n            </p>\n            <p>\n              <b>Official Distributions:</b>{' '}\n              {selectedUnit.distributions.length || 0}\n            </p>\n            <p>\n              <b>Custom Distributions:</b>{' '}\n              {selectedUnit.distributions_legacy.length || 0}\n            </p>\n            <hr />\n            <p>Navigation buttons go here</p>\n            <hr />\n            <h2>Members:</h2>\n            <div className=\"unit-section__members\">\n              {Object.values(selectedUnit.members).map(member => (\n                <MemberCard member={member} key={member.id} />\n              ))}\n            </div>\n            <hr />\n            <h2>Distributions for the unit go here</h2>\n            <hr />\n            <h2>Legacy Distributions for the unit go here</h2>\n          </div>\n        ) : (\n          <p>The selected Artist has no units.</p>\n        )}\n      </Tabs>\n    </section>\n  );\n\n  //   {/*\n  // {selectedUnits ? (\n  //   <section className=\"artist__section\">\n  //     <Tabs\n  //       tabs={Object.keys(selectedUnits).map(u => selectedUnits[u])}\n  //       active={selectedUnit.id}\n  //       action={this.props.switchUnitsTab}\n  //       iconCondition=\"official\"\n  //       icon={<Icon type=\"check\" color=\"blue\" inline />}\n  //     />\n  //     <div className=\"tabs__content\">\n  //       <section className=\"unit-section__top\">\n  //         <div className=\"unit-section__summary\">\n  //           <p>\n  //             <b>Debut Year:</b> {selectedUnit.debutYear}\n  //           </p>\n  //           <p>\n  //             <b>Number of Members:</b> {selectedUnit.members.length}\n  //           </p>\n  //           <p>\n  //             <b>Total Number of Songs:</b> NUMBER\n  //           </p>\n  //         </div>\n  //         <div className=\"unit-section__actions\">\n  //           <button className=\"btn\">Load Song</button>\n  //           <button className=\"btn\">PLACEHOLDER</button>\n  //           <button className=\"btn\">PLACEHOLDER</button>\n  //         </div>\n  //       </section>\n\n  //       {selectedUnit.members && selectedUnit.members.length > 0 ? (\n  //         <section className=\"unit-section\">\n  //           <h3>Members</h3>\n  //           <div className=\"unit-section__members\">\n  //             {selectedUnit.members.map(member => (\n  //               <MemberCard\n  //                 key={member.id}\n  //                 favoriteState={auth.user.favoriteMembers[member.id]}\n  //                 member={member}\n  //                 updateFavoriteMembers={this.props.updateFavoriteMembers}\n  //               />\n  //             ))}\n  //           </div>\n  //         </section>\n  //       ) : null}\n  //     </div>\n  //     <div className=\"tabs__content\">SONGS TABLE</div>\n  //   </section>\n  // ) : null} */}\n};\n\nexport default Units;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FavoriteIcon } from '../../../common';\nimport Units from './Units';\n\nconst ArtistDetails = ({\n  props,\n  switchArtistPageTab,\n  updateFavoriteArtists,\n}) => {\n  const { artists, auth } = props;\n  const { selectedArtist } = artists;\n\n  return (\n    <section className=\"artist__section\">\n      <h2 className=\"artist-page__name\">\n        {selectedArtist.name}\n        <FavoriteIcon\n          action={updateFavoriteArtists}\n          id={selectedArtist.id || ''}\n          className=\"artist-page__name--fav-icon\"\n          size=\"20\"\n          state={\n            selectedArtist &&\n            selectedArtist.id &&\n            auth.user &&\n            auth.user.favoriteArtists[selectedArtist.id]\n          }\n        />\n      </h2>\n      <p className=\"artist-page__genre\">{selectedArtist.genre}</p>\n      <ul className=\"artist-page__members-list\">\n        {selectedArtist.memberList &&\n          selectedArtist.memberList.map(memberName => (\n            <li className=\"artist-page__member-pill\" key={`mp-${memberName}`}>\n              {memberName}\n            </li>\n          ))}\n      </ul>\n      <Units props={props} switchArtistPageTab={switchArtistPageTab} />\n    </section>\n  );\n};\n\nArtistDetails.propTypes = {\n  artists: PropTypes.object,\n  auth: PropTypes.object,\n  props: PropTypes.object.isRequired,\n  switchArtistPageTab: PropTypes.func.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtistDetails.defaultProps = {\n  artists: {},\n  auth: {},\n};\n\nexport default ArtistDetails;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport ArtistDetails from './ArtistDetails';\n// Import common components\nimport { RequirementWrapper, LoadingIcon } from '../../../common';\n\nclass Artist extends Component {\n  componentDidMount() {\n    const { artistId } = this.props.match.params;\n    if (\n      this.props.artists.selectedArtist &&\n      this.props.artists.selectedArtist.id !== artistId\n    ) {\n      this.props.loadArtist(artistId, this.props.location.search);\n    }\n  }\n\n  render() {\n    const { app, artists } = this.props;\n    const { selectedArtist } = artists;\n\n    const isArtistPending = app.pending && !Object.keys(selectedArtist).length;\n\n    return (\n      <RequirementWrapper requirements={['selectedArtist']}>\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          {isArtistPending ? (\n            <LoadingIcon />\n          ) : (\n            <ArtistDetails\n              props={this.props}\n              switchArtistPageTab={this.props.switchArtistPageTab}\n              updateFavoriteArtists={this.props.updateFavoriteArtists}\n            />\n          )}\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtist.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  loadArtist: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  switchArtistPageTab: PropTypes.func.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtist.defaultProps = {};\n\nexport default Artist;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artist from '../components/Artist';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artist)\n);\n","import ArtistContainer from './containers/ArtistContainer';\n\nexport default ArtistContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ColorSheet extends Component {\n  componentDidMount() {\n    // nothing\n  }\n  render() {\n    const colors = Object.values(this.props.db.colors);\n    return (\n      <main className=\"container\">\n        <h1>Color Sheet</h1>\n        <ul className=\"color-palette\">\n          {colors &&\n            colors.map(colorObj => (\n              <li\n                key={colorObj.id}\n                className={`palette background-color-${colorObj.number}`}\n              >\n                {colorObj.id}\n                <br />\n                {colorObj.name}\n                <br />\n                {colorObj.count} uses\n              </li>\n            ))}\n        </ul>\n      </main>\n    );\n  }\n}\n\nColorSheet.propTypes = {\n  db: PropTypes.object,\n};\n\nColorSheet.defaultProps = {\n  db: {},\n};\n\nexport default ColorSheet;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ColorSheet from '../components/ColorSheet';\n\nconst mapStateToProps = state => ({ db: state.db });\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ColorSheet)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Distribute extends Component {\n  render() {\n    return <h1>Distribute</h1>;\n  }\n}\n\nDistribute.propTypes = {};\n\nDistribute.defaultProps = {};\n\nexport default Distribute;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Distribute from '../components/Distribute';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Distribute)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass IconSheet extends Component {\n  render() {\n    return <h1>IconSheet</h1>;\n  }\n}\n\nIconSheet.propTypes = {};\n\nIconSheet.defaultProps = {};\n\nexport default IconSheet;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport IconSheet from '../components/IconSheet';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(IconSheet)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Lab extends Component {\n  render() {\n    return <h1>Lab</h1>;\n  }\n}\n\nLab.propTypes = {};\n\nLab.defaultProps = {};\n\nexport default Lab;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Lab from '../components/Lab';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Lab)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass LearnMore extends Component {\n  render() {\n    return <h1>LearnMore</h1>;\n  }\n}\n\nLearnMore.propTypes = {};\n\nLearnMore.defaultProps = {};\n\nexport default LearnMore;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport LearnMore from '../components/LearnMore';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LearnMore)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Manage extends Component {\n  render() {\n    return <h1>Manage</h1>;\n  }\n}\n\nManage.propTypes = {};\n\nManage.defaultProps = {};\n\nexport default Manage;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Manage from '../components/Manage';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Manage)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Member extends Component {\n  render() {\n    return <h1>Member</h1>;\n  }\n}\n\nMember.propTypes = {};\n\nMember.defaultProps = {};\n\nexport default Member;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Member from '../components/Member';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Member)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Members extends Component {\n  render() {\n    return <h1>Members</h1>;\n  }\n}\n\nMembers.propTypes = {};\n\nMembers.defaultProps = {};\n\nexport default Members;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Members from '../components/Members';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Members)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass MyArtists extends Component {\n  render() {\n    return <h1>MyArtists</h1>;\n  }\n}\n\nMyArtists.propTypes = {};\n\nMyArtists.defaultProps = {};\n\nexport default MyArtists;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport MyArtists from '../components/MyArtists';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MyArtists)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass MyDistributions extends Component {\n  render() {\n    return <h1>MyDistributions</h1>;\n  }\n}\n\nMyDistributions.propTypes = {};\n\nMyDistributions.defaultProps = {};\n\nexport default MyDistributions;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport MyDistributions from '../components/MyDistributions';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MyDistributions)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Songs extends Component {\n  render() {\n    return <h1>Songs</h1>;\n  }\n}\n\nSongs.propTypes = {};\n\nSongs.defaultProps = {};\n\nexport default Songs;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Songs from '../components/Songs';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Songs)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Sync extends Component {\n  render() {\n    return <h1>Sync</h1>;\n  }\n}\n\nSync.propTypes = {};\n\nSync.defaultProps = {};\n\nexport default Sync;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Sync from '../components/Sync';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Sync)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Test extends Component {\n  componentDidMount() {\n    // nothing\n  }\n  render() {\n    console.log(this.props);\n\n    const stringify = json =>\n      JSON.stringify(JSON.parse(JSON.stringify(json)), null, 2);\n\n    return (\n      <main className=\"container\">\n        <h1>Test/Temp</h1>\n        <div className=\"textareas\">\n          <textarea readOnly value={stringify(this.props.temp.test1)} />\n          <textarea readOnly value={stringify(this.props.temp.test2)} />\n          <textarea readOnly value={stringify(this.props.temp.test3)} />\n          <textarea readOnly value={stringify(this.props.temp.test4)} />\n          <textarea readOnly value={stringify(this.props.temp.test5)} />\n        </div>\n        <div className=\"buttons\">\n          <button onClick={() => this.props.testFunction1()}>\n            Run Test Function1\n          </button>\n          <button onClick={() => this.props.testFunction2()}>\n            Run Test Function2\n          </button>\n        </div>\n      </main>\n    );\n  }\n}\n\nTest.propTypes = {\n  temp: PropTypes.object.isRequired,\n  test1: PropTypes.string.isRequired,\n  test2: PropTypes.number.isRequired,\n  test3: PropTypes.bool.isRequired,\n  test4: PropTypes.array.isRequired,\n  test5: PropTypes.object.isRequired,\n  testFunction1: PropTypes.func.isRequired,\n  testFunction2: PropTypes.func.isRequired,\n};\n\nTest.defaultProps = {};\n\nexport default Test;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Temp from '../components/Temp';\n\nimport { tempOperations } from '../reducers/temp';\n\nconst mapStateToProps = state => ({\n  temp: state.temp,\n});\n\nconst mapDispatchToProps = {\n  ...tempOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Temp)\n);\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './app/pages/header';\nimport Home from './app/pages/home';\nimport Artists from './app/pages/artists';\nimport Artist from './app/pages/artist';\n\nimport ColorSheetContainer from './containers/ColorSheetContainer';\nimport DistributeContainer from './containers/DistributeContainer';\nimport IconSheetContainer from './containers/IconSheetContainer';\nimport LabContainer from './containers/LabContainer';\nimport LearnMoreContainer from './containers/LearnMoreContainer';\nimport ManageContainer from './containers/ManageContainer';\nimport MemberContainer from './containers/MemberContainer';\nimport MembersContainer from './containers/MembersContainer';\nimport MyArtistsContainer from './containers/MyArtistsContainer';\nimport MyDistributionsContainer from './containers/MyDistributionsContainer';\nimport SongsContainer from './containers/SongsContainer';\nimport SyncContainer from './containers/SyncContainer';\nimport TempContainer from './containers/TempContainer';\n\nimport './stylesheets/index.css';\n\nconst routes = (\n  <Router>\n    <div className=\"app\">\n      <Header />\n      <Route path=\"/artists/:artistId\" component={Artist} />\n      <Route exact path=\"/artists\" component={Artists} />\n      <Route path=\"/distribute\" component={DistributeContainer} />\n      <Route path=\"/lab\" component={LabContainer} />\n      <Route path=\"/learn-more\" component={LearnMoreContainer} />\n      <Route path=\"/member/:memberId\" component={MemberContainer} />\n      <Route path=\"/members\" component={MembersContainer} />\n      <Route path=\"/songs\" component={SongsContainer} />\n\n      <Route path=\"/admin/color-sheet\" component={ColorSheetContainer} />\n      <Route path=\"/admin/icon-sheet\" component={IconSheetContainer} />\n      <Route path=\"/admin/manage\" component={ManageContainer} />\n      <Route path=\"/admin/sync\" component={SyncContainer} />\n      <Route path=\"/admin/temp\" component={TempContainer} />\n\n      <Route path=\"/user/my-artists\" component={MyArtistsContainer} />\n      <Route\n        path=\"/user/my-distributions\"\n        component={MyDistributionsContainer}\n      />\n\n      <Route exact path=\"/\" component={Home} />\n    </div>\n  </Router>\n);\n\nexport default routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ReduxToastr from 'react-redux-toastr';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport store from './store';\nimport routes from './routes';\n\nimport './stylesheets/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <div>\n      {routes}\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates\n        position=\"bottom-center\"\n        transitionIn=\"bounceIn\"\n        transitionOut=\"bounceOut\"\n        progressBar\n      />\n    </div>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/loading.db2dd907.svg\";"],"sourceRoot":""}