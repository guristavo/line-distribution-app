{"version":3,"sources":["images/icon-all.svg","images/icon-none.svg","images/logo-neg.svg","images/logo.svg","images/user-placeholder.svg","images/bias-choose.svg","images/distribute-basic.svg","images/distribute-vertical.svg","images/distribute-discs.svg","images/distribute-report.svg","images/distribute-rank.svg","images/16x9.svg","images/logo-alt.svg","registerServiceWorker.js","reducers/app/types.js","reducers/app/reducers.js","reducers/app/actions.js","reducers/app/operations.js","reducers/app/index.js","reducers/admin/types.js","reducers/admin/reducers.js","utils/constants.js","utils/readable-enums.js","reducers/admin/actions.js","reducers/admin/operations.js","reducers/admin/index.js","reducers/artists/types.js","reducers/artists/reducers.js","reducers/artists/actions.js","reducers/artists/operations.js","reducers/artists/index.js","reducers/auth/types.js","reducers/auth/reducers.js","reducers/auth/operations.js","reducers/auth/index.js","reducers/db/types.js","reducers/db/reducers.js","reducers/db/operations.js","reducers/db/index.js","reducers/distribute/types.js","reducers/distribute/reducers.js","reducers/distribute/actions.js","reducers/distribute/operations.js","reducers/distribute/index.js","reducers/sync/types.js","reducers/sync/reducers.js","reducers/sync/actions.js","reducers/sync/operations.js","reducers/sync/index.js","reducers/temp/types.js","reducers/temp/reducers.js","reducers/temp/actions.js","reducers/temp/index.js","reducers/index.js","api2/firebase.js","api2/enums.js","api2/utils.js","api2/serializers.js","api2/deserializers.js","api2/index.js","utils/index.js","sagas/api-saga.js","sagas/status-handling.js","sagas/index.js","store.js","app/global/footer/components/Footer.jsx","app/global/footer/index.js","app/global/footer/containers/FooterContainer.js","app/common/components/ActiveSongWidget.jsx","app/common/containers/ActiveSongWidgetContainer.js","app/common/components/ActiveUnitWidget.jsx","app/common/containers/ActiveUnitWidgetContainer.js","app/common/components/ActiveVideoWidget.jsx","app/common/components/Collapsible.jsx","app/common/components/FavoriteIcon.jsx","utils/icons.js","app/common/components/Icon.jsx","app/common/components/Loading.jsx","app/common/components/LoadingIcon.jsx","app/common/components/LoadingWrapper.jsx","app/common/components/member/MemberNationalityFlag.jsx","app/common/components/member/MemberPicture.jsx","app/common/components/member/MemberPositions.jsx","app/common/components/member/MemberTags.jsx","app/common/components/MemberCard.jsx","app/common/components/ModeWidget.jsx","app/common/components/PositionIcon.jsx","app/common/components/RequirementWrapper.jsx","app/common/containers/RequirementWrapperContainer.js","app/common/components/Select.jsx","app/common/components/SortingButton.jsx","app/common/components/Switch.jsx","app/common/components/Tabs.jsx","app/common/components/Typeahead.jsx","app/global/header/components/Menu.jsx","app/global/header/components/LoadingBar.jsx","app/global/header/components/Header.jsx","app/global/header/containers/HeaderContainer.js","app/global/header/index.js","app/global/error-modal/components/ErrorModal.jsx","app/global/error-modal/containers/ErrorModalContainer.js","app/global/error-modal/index.js","app/pages/admin-actions/components/AdminAction.jsx","app/pages/admin-actions/components/AdminActions.jsx","app/pages/admin-actions/containers/AdminActionsContainer.js","app/pages/admin-actions/index.js","app/pages/artists/components/ArtistsTable.jsx","utils/local-storage.js","app/pages/artists/components/Artists.jsx","app/pages/artists/containers/ArtistsContainer.js","app/pages/artists/index.js","app/pages/artist/components/ArtistPicture.jsx","app/pages/artist/components/Bias.jsx","app/pages/artist/components/DistributedSongPreview.jsx","app/pages/artist/components/DistributedSongsTable.jsx","app/pages/artist/components/Units.jsx","app/pages/artist/containers/UnitsContainer.js","app/pages/artist/components/Artist.jsx","app/pages/artist/containers/ArtistContainer.js","app/pages/artist/index.js","app/pages/distribute/components/DistributeConnect.jsx","app/pages/distribute/components/DistributeEdit.jsx","app/pages/distribute/components/DistributeProgressBar.jsx","app/pages/distribute/components/DistributeView.jsx","app/pages/distribute/components/Distribute.jsx","app/pages/distribute/containers/DistributeContainer.js","app/pages/distribute/index.js","app/pages/home/components/Home.jsx","app/pages/home/containers/HomeContainer.js","app/pages/home/index.js","app/pages/idols/components/IdolsFilters.jsx","app/pages/idols/components/IdolsEdit.jsx","app/pages/idols/components/Idols.jsx","app/pages/idols/containers/IdolsContainer.js","app/pages/idols/index.js","app/pages/lab/components/Lab.jsx","app/pages/lab/index.js","app/pages/lab/containers/LabContainer.js","app/pages/learn-more/components/LearnMore.jsx","app/pages/learn-more/index.js","app/pages/learn-more/containers/LearnMoreContainer.js","app/pages/lyrics/components/LyricsOutput.jsx","app/pages/lyrics/parser/index.js","app/pages/lyrics/components/Lyrics.jsx","app/pages/lyrics/containers/LyricsContainer.js","app/pages/lyrics/index.js","app/pages/manage/components/ColorReferenceBar.jsx","app/pages/manage/components/ManageArtist.jsx","app/pages/manage/components/ManageUnit.jsx","app/pages/manage/components/ManageMembers.jsx","app/pages/manage/components/Manage.jsx","app/pages/manage/containers/ManageContainer.js","app/pages/manage/index.js","app/pages/songs/components/SongsTable.jsx","app/pages/songs/components/Songs.jsx","app/pages/songs/containers/SongsContainer.js","app/pages/songs/index.js","app/pages/sync/components/SyncStep1VideoId.jsx","app/pages/sync/components/SyncStep2Info.jsx","app/pages/sync/components/SyncStep3Lyrics.jsx","app/pages/sync/components/SyncStep4Buttons.jsx","app/pages/sync/components/SyncStep4Distribution.jsx","app/pages/sync/components/SyncStep5Verify.jsx","app/pages/sync/components/SyncStep5Save.jsx","app/pages/sync/components/Sync.jsx","app/pages/sync/containers/SyncContainer.js","app/pages/sync/index.js","app/pages/temp/components/Temp.jsx","app/pages/temp/index.js","app/pages/temp/containers/TempContainer.js","app/pages/ui-reference/components/ColorSheet.jsx","app/pages/ui-reference/components/ComponentsSheet.jsx","app/pages/ui-reference/components/IconSheet.jsx","app/pages/ui-reference/components/UIReference.jsx","app/pages/ui-reference/containers/UIReferenceContainer.js","app/pages/ui-reference/index.js","app/pages/user/components/User.jsx","app/pages/user/index.js","app/pages/user/containers/UserContainer.js","routes.js","index.js","images/loading.svg","images/manage-lock.svg","images/manage-plus.svg","images/icon-leader.svg","images/icon-main-vocalist.svg","images/icon-main-rapper.svg","images/icon-main-dancer.svg","images/icon-lead-vocalist.svg","images/icon-lead-rapper.svg","images/icon-lead-dancer.svg","images/icon-vocalist.svg","images/icon-dancer.svg","images/icon-rapper.svg","images/icon-center.svg","images/icon-visual.svg","images/icon-maknae.svg"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","types","RESET_ERROR","SET_DATABASE_READY","SET_ERROR","SET_ERROR_INLINE","SET_ERROR_MESSAGE","SET_LOADING","SET_PENDING","SET_SUCCESS","SET_SUCCESS_INLINE","SET_SUCCESS_MESSAGE","initialState","databaseReady","errorInline","errorMessage","pending","loading","actions","payload","dispatch","type","operations","init","handleCloseErrorModal","handleSendBugReport","getState","app","body","timestamp","Date","now","content","appReducer","prevState","arguments","length","undefined","action","newState","Object","assign","success","admin_types","SET_COLORS_IN_USE","SET_CREATE_SUCCESS","SET_EDITING_ARTIST","SET_EDITING_MEMBERS","SET_EDITING_UNIT","SET_MANAGE_RESULT","SET_PANELS","SET_UI_REFERENCE_TAB","SET_UNITS_TYPEAHEAD","SET_UNITS_TYPEAHEAD_DICT","colorsInUse","editingArtist","editingMembers","editingUnit","manageResult","panels","artist","unit","members","uiReferenceTab","unitsTypeahead","unitsTypeaheadDict","constants","COLORS","col000001","col000002","col000003","col000004","col000005","col000006","col000007","col000008","col000009","col000010","col000011","col000012","col000013","col000014","col000015","col000016","col000017","col000018","col000019","col000020","col000021","col000022","col000023","col000024","col000025","col000026","col000027","col000028","col000029","col000030","DEFAULT_COLORS","default","black","blue","gray","green","orange","pink","purple","red","teal","white","yellow","FLAGS_LIST","AMERICAN","BRAZILIAN","BRITISH","CANADIAN","CHINESE","JAPANESE","KOREAN","TAIWANESE","THAI","VIETNAMISE","GENRES_DB","C-Pop","J-Pop","K-Pop","Other","Pop","GROUPS_PICTURE_URL","POSITIONS_LIST","NATIONALITY_FLAG_URL","PROFILE_PICTURE_URL","SYNC_KEY_LIST","1","2","3","4","5","SYNC_KEY_COLOR_LIST","YOUTUBE_URLS","readable_enums","GENDERS","FEMALE","MALE","MIXED","UNKOWN","GENRES","C-POP","J-POP","K-POP","OTHER","POP","NATIONALITIES","POSITIONS","MAIN_VOCALIST","LEAD_VOCALIST","VOCALIST","MAIN_RAPPER","LEAD_RAPPER","RAPPER","MAIN_DANCER","LEAD_DANCER","DANCER","LEADER","CENTER","VISUAL","TAGS","ALL_AROUND","CHARISMATIC","DANCE_MACHINE","GOOD_LOOKING","POWER_VOCALS","RAPSTAR","UNKNOWN","admin_actions","admin_operations","handleEditArtist","artistId","objectSpread","admin","new","handleEditMember","memberId","formState","toConsumableArray","db","memberIndex","_","findIndex","m","id","addedMember","push","reduce","dict","member","colorId","lastMember","values","positions","gender","nationality","handleEditUnit","unitId","units","currentUnit","u","handleResyncDB","removeMember","index","resetManage","saveManage","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","artistState","unitState","membersState","missingField","editingArtistState","editingUnitState","editingMembersState","wrap","_context2","prev","next","keys","errors","toastr","warning","toString","abrupt","name","genre","debutYear","concat","forEach","birthdate","some","enums","otherNames","private","memberIds","memberList","map","createdBy","official","subUnit","averages","distributions","memberState","newMember","replace","initials","referenceArtist","key","includes","stop","_x2","_x3","apply","this","switchUIReferenceTab","event","_ref","_callee","_context","target","_x","unlockUnit","unlockMembers","updateManageForm","updateMemberColor","value","updateMemberPositions","adminReducer","SET_SONGS","songs","SET_SONG_SEARCH_QUERY","songSearchQuery","artists_types","SET_ARTIST_LIST","SET_BIAS","SET_SELECTED_ARTIST","SET_SELECTED_UNIT","artistList","bias","selectedArtist","selectedUnit","userFavoriteArtists","userLatestArtists","artists_actions","artists_operations","getBias","biases","auth","user","artists","loadUserArtists","loadArtist","queryParams","loadUnit","updateLatestUnits","_x4","artistsReducer","auth_types","SET_ADMIN","SET_AUTHENTICATED","SET_BIASES","SET_USER","isAuthenticated","isAdmin","auth_operations","login","logout","updateBias","biasId","_ref3","_callee3","userBiases","_context3","userId","_x5","_x6","updateFavoriteArtists","favoriteArtists","updateFavoriteMembers","userFavoriteMembers","favoriteMembers","authReducer","db_types","SET_ARTISTS","SET_ARTISTS_TYPEAHEAD","SET_ARTISTS_TYPEAHEAD_DICT","SET_COLORS","SET_DB_RELOAD","SET_MEMBERS","SET_MEMBERS_TYPEAHEAD","SET_MEMBERS_TYPEAHEAD_DICT","colors","reload","typeahead","db_operations","loadArtists","loadColors","loadMembers","loadSongs","updateMember","dbReducer","SET_UNIT_TYPEAHEAD","distribute_types","RESET_DISTRIBUTE","RESET_DISTRIBUTE_SONG","SET_ACTIVE_DISTRIBUTION","SET_ACTIVE_MEMBER_PILL","SET_ACTIVE_SONG","SET_ACTIVE_UNIT","SET_DISTRIBUTE_VIEW","SET_DISTRIBUTION_CATEGORY","SET_DISTRIBUTION_LINES","SET_DISTRIBUTION_REMAINDER","SET_RATES","SET_TIMESTAMPS_DICT","activeMemberPill","activeDistribution","activeSong","activeUnit","category","distributeView","distributionLines","rates","remainder","timestampsDict","distribute_actions","calculateRates","total","remaining","max","l","line","part","duration","mId","_rates$mId","slicedToArray","rate","Number","toFixed","Math","round","calculateRemainder","parseTimestamps","dLines","distribute","membersDict","timestampDict","distributionLine","distributionPart","startTime","floor","endTime","ceil","start","distribute_operations","activateMemberPill","activateSong","find","songsDict","distributionId","activateSongDistribution","distribution","songId","allSongs","previouslyLoadedSongs","activateUnit","artistName","handleDistributeView","label","handleDistributionCategory","_ref4","handleSaveDistribution","_ref5","ratesToSave","relationships","entries","entry","Array","isArray","features","JSON","stringify","linkMemberToPart","found","filter","loadDistribution","mergeActiveDistribution","distributionRelationships","cloneDeep","prepareDistributionViewer","_getState$distribute","_getState$distribute$","totals","acc","Timestamp","tts","actv","iactv","classCallCheck","active","inactive","createClass","_this","_this2","newContent","_this3","newMembers","newTotals","defaultTimestampEntry","0","lyricsStart","lyricsEnd","timestamps","lyricLineStart","lyricLineEnd","timestampOnKey","timestampOffKey","addActive","addInactive","addDuration","trimmedContent","join","trim","latestTotals","currentLyrics","indexOf","splice","prepareSong","activeSongParam","distributionString","buildPartData","data","_data$split","split","_data$split2","parsedLine","insideBracket","i","char","substring","distributeReducer","sync_types","RESET_SYNC","SET_ACTIVE_LINE","SET_ACTIVE_PILL","SET_ARE_LYRICS_LOCKED","SET_FINAL_LYRICS","SET_INFO","SET_IS_DISTRIBUTION_COMPLETE","SET_LINK_SEQUENCE_MODE","SET_LAST_ID_NUM","SET_LYRICS","SET_PILLS","SET_QUEUE","SET_STEP","SET_STEPS","SET_SYNC_DISTRIBUTION_LINES","SET_SYNC_STATS","SET_TIMESTAMPS","SET_VIDEO_ID","activeLine","activePill","areLyricsLocked","finalLyrics","info","isDistributionComplete","linkSequenceMode","lastIdNum","lyrics","pills","queue","step","steps","locked","expanded","stats","lines","linked","videoId","sync_actions","unlockNextStep","sync","finalizeLyrics","prepareLines","clearBrackets","preparedLyrics","startsWith","parseLyricsToObject","lineCount","link","color","setTimeout","enqueueCapture","newPillId","dequeueCapture","pillId","linksBackUp","connect","lineId","collection","searchId","newValue","nullifyLine","nullifyPill","isComplete","item","partId","k","pill","newLines","finalId","timepstamps","bracket","second","size","totalSize","intervalId","sync_operations","connectSyncLine","_getState$sync","connectSyncPill","_getState$sync2","deleteSyncPill","clearInterval","handleFormInfo","originalArtist","artistsTypeaheadDict","album","groupSize","single","title","handleLyricsEdit","e","text","handleResetSync","handleSyncBoxMouseDown","player","getPlayerState","getCurrentTime","handleSyncBoxMouseUp","handleSyncKeydown","handleSyncKeyup","handleVideoId","youtubeLink","youtubeLinkQuery","linkPillsSequence","pillList","findNextPill","nextActive","el","setInterval","lockLyrics","s","idNum","resetPillLinks","saveSync","_getState$sync3","originalArtistId","unlockSpecificStep","num","st","syncReducer","temp_types","SET_TEST_1","SET_TEST_2","SET_TEST_3","SET_TEST_4","SET_TEST_5","test1","test2","test3","test4","test5","tempReducer","rootReducer","combineReducers","temp","appTypes","adminTypes","artistsTypes","authTypes","dbTypes","distributeTypes","syncTypes","tempTypes","fb","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","googleProvider","GoogleAuthProvider","userSession","onAuthStateChanged","CATEGORY","OFFICIAL","SHOULD","WOULD","CPOP","JPOP","KPOP","INDIAN","INDONESIAN","FILIPINO","FACE","MAKNAE","getEnum","result","library","Error","TODAY","ageDict","utils","path","HttpStatus","UNAUTHORIZED","BAD_REQUEST","urlSplit","fullPath","queryResult","querySplit","subQuery","queryName","queryValue","isReferenceId","referenceId","subPath","root","membersData","agency","membersNames","toLowerCase","toUpperCase","birthday","birthdateString","birthDate","ageDate","getTime","abs","getUTCFullYear","custom","rework","calculateAverage","_ref6","durations","all","sortBy","d","songTitle","res","attributes","membersObj","arr","memberUnitUrn","relationshipsStr","legend","parse","_ref7","_ref8","legendIds","legendId","positionsObj","urn","_urn$split","_urn$split2","rgb","_rgb$split","_rgb$split2","r","g","b","_key$split","_key$split2","position","_ref9","_ref10","ms","Promise","j","serializers","unitsData","query","disbanded","modifiedBy","unitIds","unitData","count","hex","songData","song","distributionSummary","sondId","songInfo","songArtist","referenceArtists","age","hide","primaryGenre","referenceArtistsQuery","raq","ra","tags","referenceArtistsName","originalArtistName","hasMusicVideo","hasNoMusicVideo","hasRap","hasDanceBreak","hasDance","additionalData","unofficial","serializedMembers","serialize","parsedUnitMembers","serializedDistributions","email","latestUnits","latesUnits","session","displayName","photoURL","entity","serializeCollection","includeTypeahead","collectionEntries","serializedCollectionResult","serializedTypeahead","meta","deserializers","put","uid","year","mouth","day","subRoute","defineProperty","deserialize","method","dbRef","API","_authenticated","_admin","_loaded","_uid","_user","_db","users","userAdditionalInfo","_reload","print","resolve","reject","database","sent","printError","userResponse","emailVerified","get","t0","post","_errorMessage","setPersistence","Auth","Persistence","LOCAL","signInWithPopup","message","t1","t2","_callee5","_context5","signOut","_this4","_x7","warn","_callee7","route","_context7","_this5","buildErrorMessage","getFunctions","fetchArtist","fetchArtists","fetchColors","fetchDistribution","fetchMembers","fetchSongs","fetchUnit","fetchUser","_x9","_x10","_callee9","_context9","_this6","putFunctions","updateUserFavoriteArtists","updateUserFavoriteMembers","updateUserBiases","_x13","_x14","authenticated","loaded","_fetchArtists","_callee11","response","_context11","ref","once","snapshot","val","_x15","_x16","_fetchArtist","_callee12","_context12","fetchUnitsSet","_x17","_x18","_x19","_fetchColors","_callee13","_context13","_x20","_x21","_fetchDistribution","_callee14","_context14","fetchSong","_x22","_x23","_x24","fetchDistributionsSet","_fetchDistributionsSet","_callee16","ids","responses","_context16","_callee15","_context15","_x28","_x29","_x25","_x26","_x27","_fetchMembers","_callee17","_context17","_x30","_x31","fetchMembersSet","_fetchMembersSet","_callee19","_context19","_callee18","_context18","_x35","_x36","_x32","_x33","_x34","_fetchSong","_callee20","_context20","_x37","_x38","_x39","_fetchSongs","_callee21","_context21","_x40","_x41","_fetchUnitsSet","_callee23","_context23","_callee22","_context22","_x45","_x46","_x42","_x43","_x44","_fetchUnit","_callee24","additionalInformation","distributionIds","artistResponse","membersIds","_context24","_x47","_x48","_x49","_fetchUser","_callee25","_context25","_x50","_x51","_x52","_updateMember","_callee26","deserializedBody","_context26","set","_x53","_x54","_x55","_x56","_updateUserBiases","_callee27","_context27","_x57","_x58","_x59","_x60","_updateUserFavoriteArtists","_callee28","extendedBody","_context28","_x61","_x62","_x63","_x64","_updateUserFavoriteMembers","_callee29","_context29","_x65","_x66","_x67","_x68","api2","spiralCase","string","src_utils","bem","block","modifiers","element","extras","hasBlock","hasModifiers","hasElement","hasExtras","classes","camelCase","word","capitalizeWord","str","separator","charAt","slice","ensureColorUniqueness","membersList","refactoredMembers","altColorId","altColor","oldColor","generateAdminCode","numDigits","code","random","getColorNumber","getMostImportantPosition","POSITIONS_IMPORTANT_ORDER","humanize","option","captalizeFirstLetter","insertAtCursor","field","valueToInsert","selectionStart","selectionEnd","startPos","endPos","makePositionsEditable","pos","parseBirthDate","date","month","parseBirthdateToInput","bd","parseQueryParams","params","pair","parseArrayToObject","instance","parseResponse","responseParser","obj","parseResponseToObject","removeSpecialCharacters","spiralBirthdate","dateStr","spinalCaseWord","initializer","runAuth","requestArtists","requestArtist","requestColors","requestDistribution","requestMembers","requestSong","requestSongs","requestUnit","requestUnitMembers","resyncDatabase","runLogin","runLogout","sendDistribution","sendLog","sendSong","updateCompleteArtist","test","apiSaga","delay","DELAY_DURATION","actionType","call","_marked","_response","_marked2","_response2","parsedArtists","_marked3","_response3","_context4","_marked4","_response4","colorsList","_marked5","selectedDistribution","_response5","selectedDistributionWithoutSong","_context6","_marked6","_response6","_typeahead","_marked7","selectedSong","_response7","sortedSongsList","_context8","orderBy","_marked8","_response8","songsList","_marked9","_response9","_context10","_marked10","_response10","_marked11","_marked12","loggedUser","_user2","_marked13","logoff","_marked14","receivedSong","pyt","_marked15","logType","_marked16","_marked17","receivedMembers","unitMembers","receivedArtist","receivedUnit","artistGenre","_marked18","_membersList","_typeahead2","_marked19","_response11","_user3","_marked20","_response12","_user4","_marked21","_response13","_user5","_marked22","_marked23","takeLatest","takeEvery","_marked24","clearPending","errorToast","successInline","successToast","warningToast","statusHandlingSaga","localPendingCache","status_handling_marked","status_handling_marked2","err","status_handling_marked3","status_handling_marked4","status_handling_marked5","status_handling_marked6","status_handling_marked7","status_handling_marked8","status_handling_marked9","status_handling_marked10","rootSaga","fork","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","thunkMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","Footer","react_default","createElement","className","href","rel","FooterContainer","withRouter","ActiveSongWidget","inline","props","objectWithoutProperties","inlineClass","onClick","history","components_Icon","defaultProps","mapDispatchToProps","authOperations","ActiveUnitWidget","showMembers","ActiveVideoWidget","possibleConstructorReturn","getPrototypeOf","height","setDimentions","bind","assertThisInitialized","document","getElementById","width","clientWidth","clientHeight","setState","opts","hasVideoClass","YouTube","Component","Collapsible","collapse","enforceProperties","expand","togglePanel","nextProps","synced","collapsed","_this$props","iconComponent","disabled","children","FavoriteIcon","utils_icons","alert","back-arrow","back-arrow-circle","check","chevron-down","chevron-left","chevron-right","chevron-up","clock","edit","edit-box","fast-forward","grave","gender-female","gender-male","gender-mixed","go-to","go-up","hand-negative","hand-positive","heart","heart-hollow","lock","no","pause","play","plug","plug-available","plug-connected","restart","rewind","question-mark","save","sorting-arrows","sub-unit","title-song","trash","trophy","youtube","Icon","styles","svg","display","verticalAlign","margin","transform","fill","style","viewBox","ICONS","Loading","_ref$message","src","alt","LoadingIcon","LoadingWrapper","MemberNationaltyFlag","flag","flagUrl","loggedMissingPictures","MemberPicture","fallback","failed","pictureUrl","genderSuffix","profilePlaceholderCode","pictureFallback","build","onError","MemberPositions","sortedPositions","positionPriority","iconBank","iconLeader","iconMainVocalist","iconMainRapper","iconMainDancer","iconLeadVocalist","iconLeadRapper","iconLeadDancer","iconVocalist","iconDancer","iconRapper","iconCenter","iconVisual","iconMaknae","positionName","MemberTags","tag","MemberCard","favoriteState","showId","showReferenceArtist","editMember","member_MemberPicture","components_FavoriteIcon","MemberNationalityFlag","react","member_MemberPositions","member_MemberTags","ModeWidget","labels","activeClass","isDisabled","PositionIcon","ALL","iconAll","NONE","iconNone","RequirementWrapper","authentication","activeArtist","ready","parseRequirements","requirements","requirement","components_Loading","Link","to","logo","selectKey","Select","options","optionValue","optionName","optionPrefix","placeholder","disablePlaceholder","classNameModifier","onChange","SortingButton","SwitchToggle","checked","left","right","Tabs","tabs","icons","tab","tabObj","isActive","condition","icon","Typeahead","suggestions","list","suggestion","Menu","pathname","authHideClass","adminHideClass","activeUnitHideClass","isPending","INITIALIZER","RUN_LOGIN","RUN_AUTH","userPlaceholder","components_LoadingIcon","LoadingBar","App","components_Menu","components_LoadingBar","appOperations","HeaderContainer","Header","ErrorModal","ErrorModalContainer","AdminAction","generateCode","performAction","verifyCode","actionName","maxLength","NOOP","AdminActions","RequirementWrapperContainer","components_AdminAction","RESYNC_DATABASE","adminOperations","dbOperations","AdminActionsContainer","ArtistsTable","favoriteAction","rowAction","searchQuery","showFavoriteArtistsOnly","filteredArtists","o","include","emptyTableMessage","hasActiveFilters","colSpan","local_storage","LocalStorage","notLoaded","load","localStorage","getItem","setItem","Artists","artistsFavoritesOnly","artistSearchQuery","handleTableClick","updateSearchQuery","toggleShowFavoriteArtistsOnly","prevProps","toggleValue","parentNode","_id$split","_id$split2","unitSubRoute","_this$props$distribut","isArtistPending","REQUEST_ARTISTS","ActiveUnitWidgetContainer","ActiveSongWidgetContainer","Switch","components_ArtistsTable","artistsOperations","ArtistsContainer","picturePlaceholder","ArtistPicture","fetchPictureFailed","parsedName","Bias","isHovering","handleMouseOver","setBiasId","biasPictureUrl","placeholderComponent","biasChoose","biasColor","pictureComponent","onMouseEnter","onMouseLeave","DistributedSongPreview","allRate","noneRate","percentage","spanWidth","DistributedSongsTable","humanizeCategory","components_DistributedSongPreview","Units","redirectToUnit","goToDistribution","prevUnitId","page","goToPage","_this$props$artists","isUnitPending","REQUEST_UNIT","components_Tabs","components_LoadingWrapper","components_MemberCard","components_DistributedSongsTable","distributeOperations","Artist","search","REQUEST_ARTIST","hasNoUnits","isArtistFavoritedByUser","components_ArtistPicture","components_Bias","UPDATE_USER_BIASES","UnitsContainer","ArtistContainer","DistributeConnect","colorNumber","percentageWidth","role","tabIndex","components_PositionIcon","partIndex","partKey","lineColors","_colors","background","fontStyle","mKey","DistributeEdit","components_ActiveVideoWidget","components_DistributeConnect","defaultValue","DistributeProgressBar","widthStyle","transition","animationInterval","DistributeView","dimensions","isVideoAreaReady","currentTime","isPlaying","isReady","membersProgress","membersGroups","onStateChange","onReady","onPlay","onPause","onEnd","restartVideo","calculateBars","setMembers","picUrl","membersLength","numberOfColumns","membersPerColumn","lastGroup","arrayOfTotals","currentTimestamp","pauseVideo","playVideo","seekTo","direction","_this$props2","optionBasic","optionVertical","optionDiscs","vplaceholder","group","components_DistributeProgressBar","togglePlayPause","rewindFastforward","optionRank","optionReport","Distribute","hasActiveSong","hasActiveDistribution","isNewActiveSong","isNewActiveDistribution","number","getMembers","components_ModeWidget","components_DistributeView","DistributeContainer","Home","youtubeUrl","frameBorder","allowFullScreen","HomeContainer","IdolsFilters","isExpanded","filters","updateFilters","openPanel","esm","autoComplete","initialValue","favorite","privacy","Fragment","showIds","sort","order","IdolsEdit","editingMember","onSubmit","formApi","multiple","touched","submitForm","reset","Idols","sidePanel","toggleMemberEditing","filteredMembers","evaluation","every","forceUpdateFilters","isEqual","constructor","filterIdols","idolsShowIds","idolsSort","idolsOrder","panelName","formValues","_this$props$auth","_this$state","REQUEST_MEMBERS","components_IdolsFilters","components_IdolsEdit","IdolsContainer","Lab","LabContainer","LearnMore","LearnMoreContainer","colorDict","keyNumber","Verse","verse","LyricsOutput_Line","Line","adlib","LyricsOutput_Bracket","LyricsOutput_Part","Part","bitStyle","getBitStyle","Bracket","omit","hasSingers","singers","hasSubSingers","subSingers","omitSub","hasChoirSingers","choirSingers","omitChoir","colorHexes","c","subColors","choirColors","LyricsOutput","colorsDB","col000000","LyricsOutput_Verse","COLOR_BANK","latestUnitId","lastSingers","lastColors","lastSubsingers","lastSubColors","lastChoirSingers","lastChoirColors","wasLastLineEmpty","lastLineHadSubSingers","lastLineHadChoirSings","uses","updateUses","addEntry","n","cleanUpPart","empty","parseLine","insideParentheses","insideCurly","names","currentString","lastCharacter","currentPart","parseLyrics","input","paragraphedResult","paragraphIndex","currentLine","Lyrics","REQUEST_COLORS","dist","cols","rows","components_LyricsOutput","LyricsContainer","ColorReferenceBar","isInUse","PropTypes","object","ManageArtist","validateTypeahead","isValid","defaultValues","artistsTypeahead","manageLock","managePlus","components_Typeahead","isRequired","isValidName","scope","validateOnBlur","validate","required","ManageUnit","_props$admin","isValidDebutYear","getFullYear","min","ManageMembers","membersTypeahead","Manage","validArtist","validUnit","validMember","handleEditMemberAndState","resetAll","validateArtist","validateUnit","validateMembers","membersTypeaheadDict","_this$props$admin","isSaveable","UPDATE_COMPLETE_ARTIST","components_ColorReferenceBar","components_ManageArtist","components_ManageUnit","components_ManageMembers","ManageContainer","MEANT_FOR_TEXT","MEANT_FOR_ICON","MEANT_FOR_COLOR","SongsTable","filteredSongs","previouslyDistributedSongsDict","sortedBy","components_SortingButton","previouslyDistributed","Songs","undone","matchGender","filterSongs","setSort","sortSongs","songsSort","songsOrder","songsUndone","songsMatchGender","components_SongsTable","REQUEST_SONGS","SongsContainer","SyncStep1VideoId","loadYoutubeVideo","SyncStep2Info","addToOriginalArtistForm","GEND","SyncStep3Lyrics","newEl","SyncStep4Buttons","addEventListener","pillColors","boxId","box","onMouseDown","onMouseUp","ICON_COLOR_CODE_HASH","8","12","20","26","SyncStep4Distributions","linesOn","SyncStep5Verify","timestampsList","tsObj","SyncStep5Save","loadYT","Sync","onPlayerStateChange","setHeight","firstScriptTag","getElementsByTagName","insertBefore","onYouTubeIframeAPIReady","YT","Player","youtubePlayerAnchor","events","_this$props$sync","components_Collapsible","components_SyncStep4Buttons","components_SyncStep5Save","SEND_SONG","components_SyncStep1VideoId","components_SyncStep2Info","components_SyncStep3Lyrics","SyncStep4Distribution","components_SyncStep5Verify","syncOperations","SyncContainer","Temp","TempContainer","ColorSheet","colorObj","ComponentSheet","IconSheet","UIReference","tabContent","ComponentsSheet","components_IconSheet","components_ColorSheet","UIReferenceContainer","User","UserContainer","routes","HashRouter","header","error_modal","Route","component","exact","footer","ReactDOM","render","es","lib_default","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","URL","origin","fetch","status","headers","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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3jB,EAAhCgR,EAAgChR,MAAhC,OACnBypC,EAAA77B,EAAA87B,cAAA,UACEC,UAAS,uBAAAx6B,OAAyBw6B,GAClCU,QAAS,kBAAM1nC,EAAOwJ,KAErBnM,EACCypC,EAAA77B,EAAA87B,cAACa,GAAD,CAAM7oC,KAAK,QAAQygB,MAAM,MAAMwB,KAAMA,IAErC8lB,EAAA77B,EAAA87B,cAACa,GAAD,CAAM7oC,KAAK,eAAeygB,MAAM,OAAOwB,KAAMA,MAanD+oB,GAAalC,aAAe,CAC1Bb,UAAW,GACXhmB,KAAM,GACN3jB,OAAO,GAGM0sC,UC/BAC,GAAA,CACbC,MACE,gXACFC,aACE,kiBACFC,oBACE,kpBACFC,MACE,sRACFC,eACE,sMACFC,eACE,qMACFC,gBACE,uMACFC,aACE,uMACFC,MACE,01BACF5mC,QACE,yzCACF6mC,KACE,utBACFC,WACE,ktBACFjtC,MACE,uXACFktC,eACE,yhBACF9xB,OACE,qpCACF+xB,MACE,seACFC,gBACE,6gBACFC,cACE,0eACFC,eACE,48BACFC,QACE,6oBACFC,QACE,ylBACFC,gBACE,2gDACFC,gBACE,iyBACFC,MACE,4eACFC,eACE,mnCACFxtB,KACE,sRACFytB,KACE,+VACFj6B,MACE,mgBACFC,OACE,4gBACFi6B,GACE,6cACFC,MACE,0SACFC,KACE,kQACFC,KACE,2ZACFC,iBACE,6sCACFC,iBACE,2iBACF/+B,QACE,iVACFg/B,QACE,wmBACFC,OACE,ohBACFC,gBACE,82BACFC,KACE,8dACFC,iBACE,8eACFp+B,KACE,ipCACFq+B,WACE,6xDACFC,aACE,waACFC,MACE,2pCACFC,OACE,6wEACFC,QACE,ydC1FEC,GAAO,SAAAn+B,GAA0C,IAAvCtP,EAAuCsP,EAAvCtP,KAAMiiB,EAAiC3S,EAAjC2S,KAAMxB,EAA2BnR,EAA3BmR,MAAO8nB,EAAoBj5B,EAApBi5B,OAAQtlB,EAAY3T,EAAZ2T,MAGpCA,IAAOA,EAAQjjB,GAEpB,IAAM0tC,EAAS,CACbC,IAAK,CACHC,QAAS,eACTC,cAAe,SACfC,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","file":"static/js/main.29c61fae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-all.c2247d81.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-none.ba42a31e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-neg.048816e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d7f95990.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-placeholder.94d4fc32.svg\";","module.exports = __webpack_public_path__ + \"static/media/bias-choose.5ead89ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/distribute-basic.f78f7789.svg\";","module.exports = __webpack_public_path__ + \"static/media/distribute-vertical.2fd565dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/distribute-discs.773bc7fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/distribute-report.fad8df08.svg\";","module.exports = __webpack_public_path__ + \"static/media/distribute-rank.66334d39.svg\";","module.exports = __webpack_public_path__ + \"static/media/16x9.c4fe963b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-alt.6de76e88.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const RESET_ERROR = 'RESET_ERROR';\nconst SET_DATABASE_READY = 'SET_DATABASE_READY';\nconst SET_ERROR = 'SET_ERROR';\nconst SET_ERROR_INLINE = 'SET_ERROR_INLINE';\nconst SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\nconst SET_LOADING = 'SET_LOADING';\nconst SET_PENDING = 'SET_PENDING';\nconst SET_SUCCESS = 'SET_SUCCESS';\nconst SET_SUCCESS_INLINE = 'SET_SUCCESS_INLINE';\nconst SET_SUCCESS_MESSAGE = 'SET_SUCCESS_MESSAGE';\n\nexport default {\n  RESET_ERROR,\n  SET_DATABASE_READY,\n  SET_ERROR,\n  SET_ERROR_INLINE,\n  SET_ERROR_MESSAGE,\n  SET_LOADING,\n  SET_PENDING,\n  SET_SUCCESS,\n  SET_SUCCESS_INLINE,\n  SET_SUCCESS_MESSAGE,\n};\n","import types from './types';\n\nconst initialState = {\n  databaseReady: false,\n  error: false,\n  errorInline: false,\n  errorMessage: '',\n  pending: {},\n  loading: false,\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_ERROR:\n      newState.error = false;\n      newState.errorInline = false;\n      newState.errorMessage = '';\n      break;\n\n    case types.SET_DATABASE_READY:\n      newState.databaseReady = action.payload;\n      break;\n\n    case types.SET_ERROR:\n      newState.error = action.payload;\n      break;\n\n    case types.SET_ERROR_INLINE:\n      newState.errorInline = action.payload;\n      break;\n\n    case types.SET_ERROR_MESSAGE:\n      newState.errorMessage = action.payload;\n      break;\n\n    case types.SET_PENDING:\n      newState.pending = action.payload;\n      break;\n\n    case types.SET_SUCCESS:\n      newState.success = action.payload;\n      break;\n\n    case types.SET_LOADING:\n      newState.loading = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetError = payload => dispatch =>\n  dispatch({ type: types.RESET_ERROR, payload });\nconst setDatabaseReady = payload => dispatch =>\n  dispatch({ type: types.SET_DATABASE_READY, payload });\n\nexport default {\n  resetError,\n  setDatabaseReady,\n};\n","import actions from './actions';\n\nconst init = () => dispatch => dispatch({ type: 'INITIALIZER' });\n\nconst handleCloseErrorModal = () => dispatch => {\n  dispatch(actions.resetError());\n};\nconst handleSendBugReport = () => (dispatch, getState) => {\n  const { errorMessage } = getState().app;\n  const today = Date.now();\n\n  const body = {\n    type: 'error',\n    timestamp: today,\n    content: errorMessage,\n  };\n\n  dispatch({ type: 'SEND_LOG', body });\n  dispatch(actions.resetError());\n};\n\nexport default {\n  init,\n  handleCloseErrorModal,\n  handleSendBugReport,\n};\n","import appReducer from './reducers';\n\nexport { default as appOperations } from './operations';\nexport { default as appTypes } from './types';\nexport default appReducer;\n","const SET_COLORS_IN_USE = 'SET_COLORS_IN_USE';\nconst SET_CREATE_SUCCESS = 'SET_CREATE_SUCCESS';\nconst SET_EDITING_ARTIST = 'SET_EDITING_ARTIST';\nconst SET_EDITING_MEMBERS = 'SET_EDITING_MEMBERS';\nconst SET_EDITING_UNIT = 'SET_EDITING_UNIT';\nconst SET_MANAGE_RESULT = 'SET_MANAGE_RESULT';\nconst SET_PANELS = 'SET_PANELS';\nconst SET_UI_REFERENCE_TAB = 'SET_UI_REFERENCE_TAB';\nconst SET_UNITS_TYPEAHEAD = 'SET_UNITS_TYPEAHEAD';\nconst SET_UNITS_TYPEAHEAD_DICT = 'SET_UNITS_TYPEAHEAD_DICT';\n\nexport default {\n  SET_COLORS_IN_USE,\n  SET_CREATE_SUCCESS,\n  SET_EDITING_ARTIST,\n  SET_EDITING_MEMBERS,\n  SET_EDITING_UNIT,\n  SET_MANAGE_RESULT,\n  SET_PANELS,\n  SET_UI_REFERENCE_TAB,\n  SET_UNITS_TYPEAHEAD,\n  SET_UNITS_TYPEAHEAD_DICT,\n};\n","import types from './types';\n\nconst initialState = {\n  colorsInUse: {},\n  editingArtist: {},\n  editingMembers: [],\n  editingUnit: {},\n  manageResult: null,\n  panels: {\n    artist: 'open',\n    unit: 'locked',\n    members: 'locked',\n  },\n  uiReferenceTab: null,\n  unitsTypeahead: [],\n  unitsTypeaheadDict: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_COLORS_IN_USE:\n      newState.colorsInUse = action.payload;\n      break;\n\n    case types.SET_EDITING_ARTIST:\n      newState.editingArtist = action.payload;\n      break;\n\n    case types.SET_EDITING_MEMBERS:\n      newState.editingMembers = action.payload;\n      break;\n\n    case types.SET_EDITING_UNIT:\n      newState.editingUnit = action.payload;\n      break;\n\n    case types.SET_MANAGE_RESULT:\n      newState.manageResult = action.payload;\n      break;\n\n    case types.SET_PANELS:\n      newState.panels = action.payload;\n      break;\n\n    case types.SET_SONGS:\n      newState.songs = action.payload;\n      break;\n\n    case types.SET_SONG_SEARCH_QUERY:\n      newState.songSearchQuery = action.payload;\n      break;\n\n    case types.SET_UI_REFERENCE_TAB:\n      newState.uiReferenceTab = action.payload;\n      break;\n\n    case types.SET_UNITS_TYPEAHEAD:\n      newState.unitsTypeahead = action.payload;\n      break;\n\n    case types.SET_UNITS_TYPEAHEAD_DICT:\n      newState.unitsTypeaheadDict = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","const COLORS = {\n  col000001: 'red',\n  col000002: 'blood',\n  col000003: 'coral',\n  col000004: 'peach',\n  col000005: 'brown',\n  col000006: 'orange',\n  col000007: 'gold',\n  col000008: 'yellow',\n  col000009: 'olive',\n  col000010: 'lemon',\n  col000011: 'lime',\n  col000012: 'green',\n  col000013: 'basil',\n  col000014: 'forest',\n  col000015: 'jade',\n  col000016: 'teal',\n  col000017: 'cyan',\n  col000018: 'turquoise',\n  col000019: 'navy',\n  col000020: 'blue',\n  col000021: 'sky',\n  col000022: 'purple',\n  col000023: 'violet',\n  col000024: 'rose',\n  col000025: 'mauve',\n  col000026: 'magenta',\n  col000027: 'jam',\n  col000028: 'pink',\n  col000029: 'burgundy',\n  col000030: 'salmon',\n};\n\nconst DEFAULT_COLORS = {\n  default: '#000000',\n  black: '#000000',\n  blue: '#598ffd',\n  gray: '#707070',\n  green: '#49d156',\n  orange: '#fea245',\n  pink: '#fb9cf0',\n  purple: '#9e8ef0',\n  red: '#d14949',\n  teal: '#34ac9e',\n  white: 'FFFFFF',\n  yellow: '#ffd700',\n};\n\nconst FLAGS_LIST = {\n  AMERICAN: 'usa',\n  BRAZILIAN: 'brazil',\n  BRITISH: 'uk',\n  CANADIAN: 'canada',\n  CHINESE: 'china',\n  JAPANESE: 'japan',\n  KOREAN: 'korea',\n  TAIWANESE: 'taiwan',\n  THAI: 'thailand',\n  VIETNAMISE: 'vietnamise',\n};\n\nconst GENRES_DB = {\n  'C-Pop': 'CPOP',\n  'J-Pop': 'JPOP',\n  'K-Pop': 'KPOP',\n  Other: 'OTHER',\n  Pop: 'POP',\n};\n\nconst POSITIONS_LIST = [\n  'MAIN_VOCALIST',\n  'MAIN_RAPPER',\n  'MAIN_DANCER',\n  'LEAD_VOCALIST',\n  'LEAD_RAPPER',\n  'LEAD_DANCER',\n  'VOCALIST',\n  'RAPPER',\n  'DANCER',\n  'LEADER',\n  'CENTER',\n  'VISUAL',\n];\n\nconst NATIONALITY_FLAG_URL = '/images/flags/';\n\nconst PROFILE_PICTURE_URL = '/images/profiles/';\n\nconst GROUPS_PICTURE_URL = '/images/groups/';\n\nconst SYNC_KEY_LIST = {\n  1: true,\n  2: true,\n  3: true,\n  4: true,\n  5: true,\n};\n\nconst SYNC_KEY_COLOR_LIST = {\n  1: '1',\n  2: '8',\n  3: '12',\n  4: '20',\n  5: '26',\n};\n\nconst YOUTUBE_URLS = ['cudssvDuOpc'];\n\nexport default {\n  COLORS,\n  DEFAULT_COLORS,\n  FLAGS_LIST,\n  GENRES_DB,\n  GROUPS_PICTURE_URL,\n  POSITIONS_LIST,\n  NATIONALITY_FLAG_URL,\n  PROFILE_PICTURE_URL,\n  SYNC_KEY_LIST,\n  SYNC_KEY_COLOR_LIST,\n  YOUTUBE_URLS,\n};\n","const GENDERS = {\n  FEMALE: 'Female',\n  MALE: 'Male',\n  MIXED: 'Mixed',\n  UNKOWN: 'Unknown',\n};\n\nconst GENRES = {\n  'C-POP': 'C-Pop',\n  'J-POP': 'J-Pop',\n  'K-POP': 'K-Pop',\n  OTHER: 'Other',\n  POP: 'Pop',\n};\n\nconst NATIONALITIES = {\n  AMERICAN: 'American',\n  BRAZILIAN: 'Brazilian',\n  BRITISH: 'British',\n  CANADIAN: 'Canadian',\n  CHINESE: 'Chinese',\n  JAPANESE: 'Japanese',\n  KOREAN: 'Korean',\n  OTHER: 'Other',\n  TAIWANESE: 'Taiwanese',\n  THAI: 'Thai',\n  VIETNAMISE: 'Vietnamise',\n};\n\nconst POSITIONS = {\n  MAIN_VOCALIST: 'Main Vocalist',\n  LEAD_VOCALIST: 'Lead Vocalist',\n  VOCALIST: 'Vocalist',\n  MAIN_RAPPER: 'Main Rapper',\n  LEAD_RAPPER: 'Lead Rapper',\n  RAPPER: 'Rapper',\n  MAIN_DANCER: 'Main Dancer',\n  LEAD_DANCER: 'Lead Dancer',\n  DANCER: 'Dancer',\n  LEADER: 'Leader',\n  CENTER: 'Center',\n  VISUAL: 'Visual',\n};\n\nconst TAGS = {\n  ALL_AROUND: 'All Around',\n  CHARISMATIC: 'Charismatic',\n  DANCE_MACHINE: 'Dancing Machine',\n  GOOD_LOOKING: 'Good Looking',\n  POWER_VOCALS: 'Power Vocals',\n  RAPSTAR: 'Rapstar',\n  UNKNOWN: 'Unknown',\n};\n\nexport default {\n  GENDERS,\n  GENRES,\n  NATIONALITIES,\n  POSITIONS,\n  TAGS,\n};\n","import types from './types';\n\nconst setColorsInUse = payload => dispatch =>\n  dispatch({ type: types.SET_COLORS_IN_USE, payload });\nconst setEditingArtist = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_ARTIST, payload });\nconst setEditingMembers = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_MEMBERS, payload });\nconst setEditingUnit = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_UNIT, payload });\nconst setManageResult = payload => dispatch =>\n  dispatch({ type: types.SET_MANAGE_RESULT, payload });\nconst setPanels = payload => dispatch =>\n  dispatch({ type: types.SET_PANELS, payload });\nconst setUIReferenceTab = payload => dispatch =>\n  dispatch({ type: types.SET_UI_REFERENCE_TAB, payload });\nconst setUnitsTypeahead = payload => dispatch =>\n  dispatch({ type: types.SET_UNITS_TYPEAHEAD, payload });\nconst setUnitsTypeaheadDict = payload => dispatch =>\n  dispatch({ type: types.SET_UNITS_TYPEAHEAD_DICT, payload });\n\nexport default {\n  setColorsInUse,\n  setEditingArtist,\n  setEditingMembers,\n  setEditingUnit,\n  setManageResult,\n  setPanels,\n  setUIReferenceTab,\n  setUnitsTypeahead,\n  setUnitsTypeaheadDict,\n};\n","import _ from 'lodash';\nimport { toastr } from 'react-redux-toastr';\n\nimport constants from '../../utils/constants';\nimport enums from '../../utils/readable-enums';\n\nimport actions from './actions';\n\nconst switchUIReferenceTab = event => async dispatch => {\n  const { id } = event.target;\n\n  if (!id) return null;\n\n  return dispatch(actions.setUIReferenceTab(id));\n};\n\nconst handleResyncDB = () => dispatch => dispatch({ type: 'RESYNC_DATABASE' });\n\nconst handleEditArtist = artistId => (dispatch, getState) => {\n  const panels = { ...getState().admin.panels };\n\n  panels.artist = 'edit';\n\n  if (artistId) {\n    dispatch({ type: 'REQUEST_ARTIST', artistId, panels, state: 'edit' });\n  } else {\n    dispatch(actions.setEditingArtist({ new: true }));\n    dispatch(actions.setPanels(panels));\n  }\n};\n\nconst handleEditUnit = unitId => (dispatch, getState) => {\n  const panels = { ...getState().admin.panels };\n\n  panels.unit = 'edit';\n\n  if (unitId) {\n    const units = [...getState().admin.editingArtist.units];\n    const unitIndex = _.findIndex(units, u => u.id === unitId);\n    const currentUnit = units[unitIndex];\n\n    dispatch(actions.setEditingUnit(currentUnit));\n  } else {\n    dispatch(actions.setEditingUnit({ new: true }));\n  }\n\n  dispatch(actions.setPanels(panels));\n};\n\nconst handleEditMember = (memberId, formState) => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  if (memberId) {\n    const { members } = getState().db;\n    const memberIndex = _.findIndex(members, m => m.id === memberId);\n    const addedMember = { ...members[memberIndex] };\n    editingMembers.push(addedMember);\n    dispatch(actions.setEditingMembers(editingMembers));\n\n    // Also update colors in use\n    // const colorsInUse = {};\n    // editingMembers.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n    const colorsInUse = editingMembers.reduce((dict, member) => {\n      if (member && member.colorId) {\n        dict[member.colorId] = true;\n      }\n      return dict;\n    }, {});\n    dispatch(actions.setColorsInUse(colorsInUse));\n  } else {\n    let lastMember = editingMembers[editingMembers.length - 1] || false;\n    if (lastMember && formState.values.members) {\n      lastMember =\n        formState.values.members[formState.values.members.length - 1];\n    }\n\n    editingMembers.push({\n      new: true,\n      positions: [],\n      gender: lastMember.gender || undefined,\n      nationality: lastMember.nationality || undefined,\n    });\n    dispatch(actions.setEditingMembers(editingMembers));\n  }\n};\n\nconst updateMemberColor = (value, index) => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  editingMembers[index].colorId = value;\n  dispatch(actions.setEditingMembers(editingMembers));\n\n  // Also update colors in use\n  const colorsInUse = editingMembers.reduce((dict, member) => {\n    if (member && member.colorId) {\n      dict[member.colorId] = true;\n    }\n    return dict;\n  }, {});\n  dispatch(actions.setColorsInUse(colorsInUse));\n};\n\nconst updateMemberPositions = () => {};\n\n// const updateMemberPositions = (value, position, index) => (\n//   dispatch,\n//   getState\n// ) => {\n//   const editingMembers = [...getState().admin.editingMembers];\n//   const positionsObj = {};\n//   editingMembers[index].positions.forEach(pos => (positionsObj[pos] = true));\n//   if (value === false) {\n//     delete positionsObj[position];\n//   } else {\n//     positionsObj[position] = true;\n//     switch (position) {\n//       case 'MAIN_VOCALIST':\n//         delete positionsObj.LEAD_VOCALIST;\n//         delete positionsObj.VOCALIST;\n//         break;\n//       case 'LEAD_VOCALIST':\n//         delete positionsObj.MAIN_VOCALIST;\n//         delete positionsObj.VOCALIST;\n//         break;\n//       case 'VOCALIST':\n//         delete positionsObj.MAIN_VOCALIST;\n//         delete positionsObj.LEAD_VOCALIST;\n//         break;\n//       case 'MAIN_DANCER':\n//         delete positionsObj.LEAD_DANCER;\n//         delete positionsObj.DANCER;\n//         break;\n//       case 'LEAD_DANCER':\n//         delete positionsObj.MAIN_DANCER;\n//         delete positionsObj.DANCER;\n//         break;\n//       case 'DANCER':\n//         delete positionsObj.MAIN_DANCER;\n//         delete positionsObj.LEAD_DANCER;\n//         break;\n//       case 'MAIN_RAPPER':\n//         delete positionsObj.LEAD_RAPPER;\n//         delete positionsObj.RAPPER;\n//         break;\n//       case 'LEAD_RAPPER':\n//         delete positionsObj.MAIN_RAPPER;\n//         delete positionsObj.RAPPER;\n//         break;\n//       case 'RAPPER':\n//         delete positionsObj.MAIN_RAPPER;\n//         delete positionsObj.LEAD_RAPPER;\n//         break;\n//       default:\n//       // do nothing\n//     }\n//   }\n//   editingMembers[index].positions = Object.keys(positionsObj);\n//   dispatch(actions.setEditingMembers(editingMembers));\n// };\n\nconst updateManageForm = () => () => {\n  // // console.log(formObj);\n  // if (formObj.dirty) {\n  //   // console.log('DIRTY');\n  //   // console.log(formObj);\n  // } else {\n  //   // console.log('CLEAN');\n  // }\n};\n\nconst unlockUnit = formState => (dispatch, getState) => {\n  const artistState = formState.values.artist;\n\n  // Only unlock if required fields are filled.\n  if (!artistState || !artistState.name || !artistState.genre) return;\n\n  const panels = { ...getState().admin.panels };\n  panels.unit = 'open';\n\n  const editingArtistState = getState().admin.editingArtist;\n  const editingArtist = {\n    genre: artistState.genre,\n    name: artistState.name,\n    otherNames: artistState.otherNames || '',\n    private: artistState.private || false,\n    new: editingArtistState.new || false,\n    memberIds: editingArtistState.memberIds || false,\n    memberList: editingArtistState.memberList || false,\n    units: editingArtistState.units || false,\n    id: editingArtistState.id,\n    createdBy: editingArtistState.createdBy,\n  };\n\n  dispatch(actions.setEditingArtist(editingArtist));\n  dispatch(actions.setPanels(panels));\n};\n\nconst unlockMembers = formState => (dispatch, getState) => {\n  const unitState = formState.values.unit;\n\n  // Only unlock if required fields are filled.\n  if (!unitState || !unitState.name || !unitState.debutYear) return;\n\n  const panels = { ...getState().admin.panels };\n  panels.members = 'open';\n\n  const editingUnitState = getState().admin.editingUnit;\n  const editingUnit = {\n    debutYear: unitState.debutYear,\n    name: unitState.name,\n    official: unitState.official,\n    private: unitState.private || false,\n    subUnit: unitState.subUnit || null,\n    new: editingUnitState.new || false,\n    averages: editingUnitState.averages || false,\n    distributions: editingUnitState.distributions || false,\n    members: editingUnitState.members || false,\n    id: editingUnitState.id,\n    createdBy: editingUnitState.createdBy,\n  };\n\n  dispatch(actions.setEditingUnit(editingUnit));\n  dispatch({\n    type: 'REQUEST_UNIT_MEMBERS',\n    unitId: editingUnitState.id,\n    panels,\n  });\n};\n\nconst removeMember = index => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  // editingMembers.splice(index, 1);\n  editingMembers[index] = null;\n  dispatch(actions.setEditingMembers(editingMembers));\n};\n\nconst resetManage = () => dispatch => {\n  dispatch(actions.setEditingArtist({}));\n  dispatch(actions.setEditingMembers([]));\n  dispatch(actions.setEditingUnit({}));\n  dispatch(actions.setUnitsTypeahead([]));\n  dispatch(actions.setUnitsTypeaheadDict({}));\n  dispatch(actions.setManageResult(null));\n  dispatch(actions.setColorsInUse({}));\n  dispatch(\n    actions.setPanels({\n      artist: 'open',\n      unit: 'locked',\n      members: 'locked',\n    })\n  );\n};\n\nconst saveManage = formState => async (dispatch, getState) => {\n  const artistState = formState.values.artist;\n  const unitState = formState.values.unit;\n  const membersState = formState.values.members;\n\n  // Check formState\n  if (Object.keys(formState.errors).length) {\n    toastr.warning('The form has errors', formState.errors.toString());\n    return;\n  }\n\n  // Check artist required fields\n  if (!artistState || !artistState.name || !artistState.genre) {\n    toastr.warning('Artist is incomplete', 'Missing name and/or genre');\n    return;\n  }\n\n  // Check unit required fields\n  if (!unitState || !unitState.name || !unitState.debutYear) {\n    toastr.warning('Unit is incomplete', 'Missing name and/or debut year');\n    return;\n  }\n\n  if (!membersState || membersState.length < 2) {\n    toastr.warning(\n      'Minimum of 2 members are required',\n      `You have ${membersState.length} members so far`\n    );\n    return;\n  }\n\n  // Check members required fields\n  let missingField = false;\n  membersState.forEach(member => {\n    if (\n      !member.name ||\n      !member.birthdate ||\n      !member.colorId ||\n      !member.gender ||\n      !member.nationality\n    ) {\n      missingField = true;\n    }\n    const hasPositions = Object.keys(member).some(m => enums.POSITIONS[m]);\n    if (!hasPositions) missingField = true;\n  });\n  if (missingField) {\n    toastr.warning(\n      'A members has missing fields',\n      'Check the console for details'\n    );\n    console.log(membersState); // eslint-disable-line\n    return;\n  }\n\n  // Prepare Artist\n  const editingArtistState = getState().admin.editingArtist;\n  const editingArtist = {\n    genre: artistState.genre,\n    name: artistState.name,\n    otherNames: artistState.otherNames || '',\n    private: artistState.private || false,\n    new: editingArtistState.new || false,\n    memberIds: editingArtistState.memberIds || [],\n    memberList: editingArtistState.memberList || [],\n    units: editingArtistState.units\n      ? editingArtistState.units.map(unit => unit.id)\n      : [],\n    id: editingArtistState.id || null,\n    createdBy: editingArtistState.createdBy || null,\n  };\n\n  // Prepare Unit\n  const editingUnitState = getState().admin.editingUnit;\n  const editingUnit = {\n    debutYear: unitState.debutYear,\n    name: unitState.name,\n    official: unitState.official,\n    private: unitState.private || false,\n    subUnit: unitState.subUnit || null,\n    new: editingUnitState.new || false,\n    averages: editingUnitState.averages || false,\n    distributions: editingUnitState.distributions || false,\n    artistId: editingUnitState.id || null,\n    id: editingUnitState.id || null,\n    createdBy: editingUnitState.createdBy || null,\n  };\n\n  // Prepare Members\n  const editingMembersState = getState().admin.editingMembers;\n  const editingMembers = [];\n  membersState.forEach((memberState, index) => {\n    if (memberState) {\n      const newMember = {\n        birthdate: +memberState.birthdate.replace(/(-)/g, ''),\n        colorId: memberState.colorId,\n        gender: memberState.gender,\n        initials: memberState.initials || '',\n        name: memberState.name,\n        nationality: memberState.nationality,\n        private: memberState.private || false,\n      };\n      // Handle existing database member\n      if (editingMembersState[index].id) {\n        newMember.createdBy = editingMembersState[index].createdBy || null;\n        newMember.id = editingMembersState[index].id || null;\n        newMember.referenceArtist =\n          editingMembersState[index].referenceArtist || null;\n      }\n      // Handle positions\n      const positions = [];\n      Object.keys(memberState).forEach(key => {\n        if (constants.POSITIONS_LIST.includes(key)) positions.push(key);\n      });\n      newMember.positions = positions;\n\n      editingMembers.push(newMember);\n    }\n  });\n\n  dispatch({\n    type: 'UPDATE_COMPLETE_ARTIST',\n    artist: editingArtist,\n    unit: editingUnit,\n    members: editingMembers,\n  });\n};\n\nexport default {\n  handleEditArtist,\n  handleEditMember,\n  handleEditUnit,\n  handleResyncDB,\n  removeMember,\n  resetManage,\n  saveManage,\n  switchUIReferenceTab,\n  unlockUnit,\n  unlockMembers,\n  updateManageForm,\n  updateMemberColor,\n  updateMemberPositions,\n};\n","import adminReducer from './reducers';\n\nexport { default as adminOperations } from './operations';\nexport { default as adminTypes } from './types';\nexport default adminReducer;\n","const SET_ARTIST_LIST = 'SET_ARTIST_LIST';\nconst SET_BIAS = 'SET_BIAS';\nconst SET_SELECTED_ARTIST = 'SET_SELECTED_ARTIST';\nconst SET_SELECTED_UNIT = 'SET_SELECTED_UNIT';\n\nexport default {\n  SET_ARTIST_LIST,\n  SET_BIAS,\n  SET_SELECTED_ARTIST,\n  SET_SELECTED_UNIT,\n};\n","import types from './types';\n\nconst initialState = {\n  artistList: [],\n  bias: {},\n  selectedArtist: {},\n  selectedUnit: {},\n  userFavoriteArtists: {},\n  userLatestArtists: [],\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ARTIST_LIST:\n      newState.artistList = action.payload;\n      break;\n\n    case types.SET_BIAS:\n      newState.bias = action.payload;\n      break;\n\n    case types.SET_SELECTED_ARTIST:\n      newState.selectedArtist = action.payload;\n      break;\n\n    case types.SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setArtistList = payload => dispatch =>\n  dispatch({ type: types.SET_ARTIST_LIST, payload });\nconst setBias = payload => dispatch =>\n  dispatch({ type: types.SET_BIAS, payload });\nconst setSelectedArtist = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_ARTIST, payload });\nconst setSelectedUnit = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_UNIT, payload });\n\nexport default {\n  setArtistList,\n  setBias,\n  setSelectedArtist,\n  setSelectedUnit,\n};\n","import actions from './actions';\n\nconst loadArtist = (artistId, queryParams) => dispatch =>\n  dispatch({ type: 'REQUEST_ARTIST', artistId, queryParams });\n\nconst loadUnit = (unitId, queryParams) => dispatch =>\n  dispatch({ type: 'REQUEST_UNIT', unitId, queryParams });\n\nconst loadUserArtists = () => async (dispatch, getState) => {};\n\nconst updateLatestUnits = id => async (dispatch, getState) => {};\n\nconst getBias = () => (dispatch, getState) => {\n  const { biases } = getState().auth.user;\n  const { selectedUnit } = getState().artists;\n  const { id, members } = selectedUnit;\n  let bias = null;\n  if (id && Object.keys(members).length) {\n    Object.keys(members).forEach(key => {\n      if (biases[`${id}:${key}`]) {\n        bias = { ...selectedUnit.members[key] };\n      }\n    });\n  }\n\n  if (bias) {\n    dispatch(actions.setBias(bias));\n  } else {\n    dispatch(actions.setBias({}));\n  }\n};\n\nexport default {\n  getBias,\n  loadUserArtists,\n  loadArtist,\n  loadUnit,\n  updateLatestUnits,\n};\n","import artistsReducer from './reducers';\n\nexport { default as artistsOperations } from './operations';\nexport { default as artistsTypes } from './types';\nexport default artistsReducer;\n","const SET_ADMIN = 'SET_ADMIN';\nconst SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nconst SET_BIASES = 'SET_BIASES';\nconst SET_USER = 'SET_USER';\n\nexport default {\n  SET_ADMIN,\n  SET_AUTHENTICATED,\n  SET_BIASES,\n  SET_USER,\n};\n","import types from './types';\n\nconst initialState = {\n  isAuthenticated: false,\n  isAdmin: false,\n  user: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ADMIN:\n      newState.isAdmin = action.payload;\n      break;\n\n    case types.SET_AUTHENTICATED:\n      newState.isAuthenticated = action.payload;\n      break;\n\n    case types.SET_BIASES:\n      newState.user.biases = action.payload;\n      break;\n\n    case types.SET_USER:\n      newState.user = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","const login = () => dispatch => dispatch({ type: 'RUN_LOGIN' });\n\nconst logout = () => dispatch => dispatch({ type: 'RUN_LOGOUT' });\n\nconst updateFavoriteArtists = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteArtists = { ...user.favoriteArtists } || {};\n  if (user.id) {\n    if (userFavoriteArtists[id]) {\n      userFavoriteArtists[id] = false;\n    } else {\n      userFavoriteArtists[id] = true;\n    }\n\n    await dispatch({\n      type: 'UPDATE_USER_FAVORITE_ARTISTS',\n      userFavoriteArtists,\n      userId: user.id,\n    });\n  }\n};\n\nconst updateFavoriteMembers = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteMembers = { ...user.favoriteMembers } || {};\n  if (user.id) {\n    if (userFavoriteMembers[id]) {\n      userFavoriteMembers[id] = false;\n    } else {\n      userFavoriteMembers[id] = true;\n    }\n\n    await dispatch({\n      type: 'UPDATE_USER_FAVORITE_MEMBERS',\n      userFavoriteMembers,\n      userId: user.id,\n    });\n  }\n};\n\nconst updateBias = (biasId, artistId) => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userBiases = { ...user.biases } || {};\n\n  if (!biasId || !artistId || !user.id) return;\n\n  if (userBiases[artistId] === biasId) {\n    delete userBiases[artistId];\n  } else {\n    userBiases[artistId] = biasId;\n  }\n\n  await dispatch({\n    type: 'UPDATE_USER_BIASES',\n    biases: userBiases,\n    userId: user.id,\n  });\n};\n\nexport default {\n  login,\n  logout,\n  updateBias,\n  updateFavoriteArtists,\n  updateFavoriteMembers,\n};\n","import authReducer from './reducers';\n\nexport { default as authOperations } from './operations';\nexport { default as authTypes } from './types';\nexport default authReducer;\n","const SET_ARTISTS = 'SET_ARTISTS';\nconst SET_ARTISTS_TYPEAHEAD = 'SET_ARTISTS_TYPEAHEAD';\nconst SET_ARTISTS_TYPEAHEAD_DICT = 'SET_ARTISTS_TYPEAHEAD_DICT';\nconst SET_COLORS = 'SET_COLORS';\nconst SET_DB_RELOAD = 'SET_DB_RELOAD';\nconst SET_MEMBERS = 'SET_MEMBERS';\nconst SET_MEMBERS_TYPEAHEAD = 'SET_MEMBERS_TYPEAHEAD';\nconst SET_MEMBERS_TYPEAHEAD_DICT = 'SET_MEMBERS_TYPEAHEAD_DICT';\nconst SET_SONGS = 'SET_SONGS';\n\nexport default {\n  SET_ARTISTS,\n  SET_ARTISTS_TYPEAHEAD,\n  SET_ARTISTS_TYPEAHEAD_DICT,\n  SET_COLORS,\n  SET_DB_RELOAD,\n  SET_MEMBERS,\n  SET_MEMBERS_TYPEAHEAD,\n  SET_MEMBERS_TYPEAHEAD_DICT,\n  SET_SONGS,\n};\n","import types from './types';\n\nconst initialState = {\n  artists: [],\n  colors: {},\n  members: [],\n  songs: [],\n  // Indicates when bulk get requests should be performed\n  reload: {\n    artists: true,\n    colors: true,\n    members: true,\n    songs: true,\n  },\n  typeahead: {\n    artists: [],\n    members: [],\n    units: [],\n  },\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ARTISTS:\n      newState.artists = action.payload;\n      newState.reload.artists = false;\n      break;\n\n    case types.SET_ARTISTS_TYPEAHEAD:\n      newState.typeahead.artists = action.payload;\n      break;\n\n    case types.SET_COLORS:\n      newState.colors = action.payload;\n      newState.reload.colors = false;\n      break;\n\n    case types.SET_DB_RELOAD:\n      newState.reload = {\n        ...newState.reload,\n        ...action.payload,\n      };\n      break;\n\n    case types.SET_MEMBERS:\n      newState.members = action.payload;\n      newState.reload.members = false;\n      break;\n\n    case types.SET_MEMBERS_TYPEAHEAD:\n      newState.typeahead.members = action.payload;\n      break;\n\n    case types.SET_SONGS:\n      newState.songs = action.payload;\n      newState.reload.songs = false;\n      break;\n\n    case types.SET_UNIT_TYPEAHEAD:\n      newState.typeahead.units = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n  return newState;\n}\n","/**\n * Trigger saga to fetch artists from the database if reloaded is necessary\n * @category Reducer Operator\n * @dispatches list of artists\n */\nconst loadArtists = () => (dispatch, getState) => {\n  const { reload } = getState().db;\n  const { isAuthenticated } = getState().auth;\n\n  if (reload.artists && isAuthenticated) {\n    dispatch({ type: 'REQUEST_ARTISTS' });\n  }\n};\n\n/**\n * Trigger saga to fetch colors from the database if reloaded is necessary\n * @category Reducer Operator\n * @dispatches list of colors\n */\nconst loadColors = () => (dispatch, getState) => {\n  const { reload } = getState().db;\n  const { isAuthenticated } = getState().auth;\n\n  if (reload.colors && isAuthenticated) {\n    dispatch({ type: 'REQUEST_COLORS' });\n  }\n};\n\n/**\n * Trigger saga to fetch members from the database if reloaded is necessary\n * @category Reducer Operator\n * @dispatches list of members\n */\nconst loadMembers = () => (dispatch, getState) => {\n  const { reload } = getState().db;\n  const { isAuthenticated } = getState().auth;\n\n  if (reload.members && isAuthenticated) {\n    dispatch({ type: 'REQUEST_MEMBERS' });\n  }\n};\n\n/**\n * Trigger saga to fetch songs from the database if reloaded is necessary\n * @category Reducer Operator\n * @dispatches list of songs\n */\nconst loadSongs = () => (dispatch, getState) => {\n  const { reload } = getState().db;\n  const { isAuthenticated } = getState().auth;\n\n  if (reload.songs && isAuthenticated) {\n    dispatch({ type: 'REQUEST_SONGS' });\n  }\n};\n\n/**\n * Trigger saga to update members from the database\n * @category Reducer Operator\n * @dispatches member\n */\nconst updateMember = member => dispatch => {\n  dispatch({ type: 'UPDATE_MEMBER', member });\n};\n\nexport default {\n  loadArtists,\n  loadColors,\n  loadMembers,\n  loadSongs,\n  updateMember,\n};\n","import dbReducer from './reducers';\n\nexport { default as dbOperations } from './operations';\nexport { default as dbTypes } from './types';\nexport default dbReducer;\n","const RESET_DISTRIBUTE = 'RESET_DISTRIBUTE';\nconst RESET_DISTRIBUTE_SONG = 'RESET_DISTRIBUTE_SONG';\nconst SET_ACTIVE_DISTRIBUTION = 'SET_ACTIVE_DISTRIBUTION';\nconst SET_ACTIVE_MEMBER_PILL = 'SET_ACTIVE_MEMBER_PILL';\nconst SET_ACTIVE_SONG = 'SET_ACTIVE_SONG';\nconst SET_ACTIVE_UNIT = 'SET_ACTIVE_UNIT';\nconst SET_DISTRIBUTE_VIEW = 'SET_DISTRIBUTE_VIEW';\nconst SET_DISTRIBUTION_CATEGORY = 'SET_DISTRIBUTION_CATEGORY';\nconst SET_DISTRIBUTION_LINES = 'SET_DISTRIBUTION_LINES';\nconst SET_DISTRIBUTION_REMAINDER = 'SET_DISTRIBUTION_REMAINDER';\nconst SET_RATES = 'SET_RATES';\nconst SET_TIMESTAMPS_DICT = 'SET_TIMESTAMPS_DICT';\n\nexport default {\n  RESET_DISTRIBUTE,\n  RESET_DISTRIBUTE_SONG,\n  SET_ACTIVE_DISTRIBUTION,\n  SET_ACTIVE_MEMBER_PILL,\n  SET_ACTIVE_SONG,\n  SET_ACTIVE_UNIT,\n  SET_DISTRIBUTE_VIEW,\n  SET_DISTRIBUTION_CATEGORY,\n  SET_DISTRIBUTION_LINES,\n  SET_DISTRIBUTION_REMAINDER,\n  SET_RATES,\n  SET_TIMESTAMPS_DICT,\n};\n","import types from './types';\n\nimport mockData from './mock-data';\n\nconst initialState = {\n  activeMemberPill: '',\n  activeDistribution: {},\n  activeSong: {},\n  activeUnit: {},\n  category: 'OFFICIAL',\n  distributeView: 'view',\n  distributionLines: [],\n  rates: {},\n  remainder: 100,\n  timestampsDict: {},\n  // TO-DO: Remove or comment out to deploy\n  // ...mockData,\n};\n\nexport default function reducer(prevState = initialState, action) {\n  let newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_DISTRIBUTE:\n      newState = Object.assign({}, initialState);\n      break;\n\n    case types.RESET_DISTRIBUTE_SONG:\n      newState = Object.assign({}, initialState);\n      newState.activeUnit = Object.assign({}, prevState.activeUnit);\n      break;\n\n    case types.SET_ACTIVE_DISTRIBUTION:\n      newState.activeDistribution = action.payload;\n      break;\n\n    case types.SET_ACTIVE_MEMBER_PILL:\n      newState.activeMemberPill = action.payload;\n      break;\n\n    case types.SET_ACTIVE_SONG:\n      newState.activeSong = action.payload;\n      break;\n\n    case types.SET_ACTIVE_UNIT:\n      newState.activeUnit = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTE_VIEW:\n      newState.distributeView = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_CATEGORY:\n      newState.category = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_LINES:\n      newState.distributionLines = action.payload;\n      break;\n\n    case types.SET_RATES:\n      newState.rates = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_REMAINDER:\n      newState.remainder = action.payload;\n      break;\n\n    case types.SET_TIMESTAMPS_DICT:\n      newState.timestampsDict = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetDistribute = payload => dispatch =>\n  dispatch({ type: types.RESET_DISTRIBUTE, payload });\nconst resetDistributeSong = payload => dispatch =>\n  dispatch({ type: types.RESET_DISTRIBUTE_SONG, payload });\nconst setActiveDistribution = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_DISTRIBUTION, payload });\nconst setActiveMemberPill = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_MEMBER_PILL, payload });\nconst setActiveSong = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_SONG, payload });\nconst setActiveUnit = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_UNIT, payload });\nconst setDistributeView = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTE_VIEW, payload });\nconst setDistributionCategory = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_CATEGORY, payload });\nconst setDistributionLines = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_LINES, payload });\nconst setDistributionRemainder = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_REMAINDER, payload });\nconst setRates = payload => dispatch =>\n  dispatch({ type: types.SET_RATES, payload });\nconst setTimestampsDict = payload => dispatch =>\n  dispatch({ type: types.SET_TIMESTAMPS_DICT, payload });\n\nexport default {\n  resetDistribute,\n  resetDistributeSong,\n  setActiveDistribution,\n  setActiveMemberPill,\n  setActiveSong,\n  setActiveUnit,\n  setDistributeView,\n  setDistributionCategory,\n  setDistributionLines,\n  setDistributionRemainder,\n  setRates,\n  setTimestampsDict,\n};\n","import _ from 'lodash';\n\nimport actions from './actions';\n\nconst loadDistribution = distributionId => dispatch =>\n  dispatch({ type: 'REQUEST_DISTRIBUTION', distributionId });\n\nconst activateSong = id => (dispatch, getState) => {\n  // Reset everything but Unit\n  dispatch(actions.resetDistributeSong({}));\n\n  const activeSong = _.find(getState().db.songs, { id });\n  dispatch(actions.setActiveSong(activeSong));\n\n  // Determine if it's a view or edit\n  const { songsDict } = getState().distribute.activeUnit || {};\n  const distributeView = songsDict[activeSong.id] ? 'view' : 'edit';\n  dispatch(actions.setDistributeView(distributeView));\n\n  // If distribution has been previously done, make connections\n  if (distributeView === 'view') {\n    dispatch({\n      type: 'REQUEST_DISTRIBUTION',\n      distributionId: songsDict[activeSong.id],\n    });\n  }\n};\n\nconst activateUnit = () => (dispatch, getState) => {\n  // Reset everything\n  dispatch(actions.resetDistribute({}));\n\n  const selectedArtist = { ...getState().artists.selectedArtist };\n  const activeUnit = { ...getState().artists.selectedUnit };\n\n  activeUnit.artistName = selectedArtist.name;\n  activeUnit.genre = selectedArtist.genre;\n\n  dispatch(actions.setActiveUnit(activeUnit));\n};\n\nconst prepareDistributionViewer = () => (dispatch, getState) => {\n  // Get activeDistribution and activeSong\n  const {\n    activeDistribution: { rates, relationships },\n    activeSong: { distribution },\n  } = getState().distribute;\n\n  // Build members totals from rates\n  const totals = Object.keys(rates).reduce((acc, key) => {\n    if (!['max', 'total'].includes(key)) {\n      acc[key] = 0;\n    }\n    return acc;\n  }, {});\n\n  class Timestamp {\n    constructor(tts = {}, actv = {}, iactv = {}) {\n      this.totals = { ...tts };\n      this.active = { ...actv };\n      this.content = [];\n      this.inactive = { ...iactv };\n      this.duration = 0;\n    }\n\n    addActive(newMembers = []) {\n      newMembers.forEach(member => {\n        if (this.active[member] === undefined) {\n          this.active[member] = 0;\n        }\n        this.active[member] += 1;\n      });\n    }\n\n    addInactive(newMembers = []) {\n      newMembers.forEach(member => {\n        if (this.inactive[member] === undefined) {\n          this.inactive[member] = 0;\n        }\n        this.inactive[member] += 1;\n      });\n    }\n\n    addContent(newContent = '') {\n      if (this.content.length < 2 && !this.content[0]) {\n        this.content = [newContent];\n      } else {\n        this.content.push(newContent);\n      }\n    }\n\n    addDuration(duration = 0) {\n      this.duration += duration;\n    }\n\n    addTotals(newMembers = [], duration = 0) {\n      newMembers.forEach(member => {\n        if (this.totals[member] === undefined) {\n          this.totals[member] = 0;\n        }\n        this.totals[member] += duration;\n      });\n    }\n\n    replaceTotals(newTotals = {}) {\n      this.totals = { ...newTotals };\n    }\n  }\n\n  const defaultTimestampEntry = {\n    0: new Timestamp(totals),\n  };\n\n  const lyricsStart = {};\n  const lyricsEnd = {};\n\n  // Loop through song.distribution and through every part\n  // Adding the startTime as an entry on the timestamp\n  const timestamps = distribution.reduce(\n    (acc, line) => {\n      const lyricLineStart = {\n        startTime: 0,\n        content: [],\n      };\n      const lyricLineEnd = {\n        endTime: 0,\n        content: [],\n      };\n\n      // Loop parts\n      line.forEach(part => {\n        const timestampOnKey = Math.floor(part.startTime * 10); // TO-DO: Convert to miliseconds\n        const timestampOffKey = Math.floor(part.endTime * 10); // TO-DO: Convert to miliseconds\n\n        const newMembers = relationships[part.id];\n\n        // Add timestamp object to acc based on startTime\n        if (acc[timestampOnKey] === undefined) {\n          acc[timestampOnKey] = new Timestamp();\n        }\n\n        acc[timestampOnKey].addActive(newMembers);\n\n        // Add timestamp object to acc based on endTime\n        if (acc[timestampOffKey] === undefined) {\n          acc[timestampOffKey] = new Timestamp();\n        }\n        // acc[timestampOffKey].replaceTotals(latestTotals);\n        acc[timestampOffKey].addInactive(newMembers);\n        acc[timestampOffKey].addDuration(part.duration);\n\n        // Build lyric line\n        if (\n          !lyricLineStart.startTime ||\n          lyricLineStart.startTime > timestampOnKey\n        ) {\n          lyricLineStart.startTime = timestampOnKey;\n        }\n        if (!lyricLineEnd.endTime || lyricLineEnd.endTime < timestampOffKey) {\n          lyricLineEnd.endTime = timestampOffKey;\n        }\n        lyricLineStart.content.push(part.content);\n        lyricLineEnd.content.push(part.content);\n      });\n\n      const trimmedContent = lyricLineStart.content\n        .join('')\n        .trim()\n        .replace(/  +/g, ' ');\n\n      lyricsStart[lyricLineStart.startTime] = trimmedContent;\n      lyricsEnd[lyricLineEnd.endTime] = trimmedContent;\n\n      return acc;\n    },\n    {\n      ...defaultTimestampEntry,\n    }\n  );\n\n  let latestTotals = { ...totals };\n\n  const currentLyrics = [];\n\n  // Addup totals and attatch lyrics\n  Object.entries(timestamps).forEach(([id, timestamp]) => {\n    timestamp.totals = { ...latestTotals };\n\n    // console.log(id);\n\n    if (timestamp.duration) {\n      Object.keys(timestamp.inactive).forEach(memberId => {\n        timestamp.totals[memberId] += timestamp.duration;\n      });\n    }\n\n    // Add lyrics to current\n    if (lyricsStart[id]) {\n      currentLyrics.push(lyricsStart[id]);\n    }\n\n    // Remove lyrics from current\n    if (lyricsEnd[id]) {\n      const index = currentLyrics.indexOf(lyricsEnd[id]);\n      if (index > -1) {\n        currentLyrics.splice(index, 1);\n      }\n    }\n\n    // Add current to content\n    timestamp.content = [...currentLyrics];\n\n    // Update latest totals\n    latestTotals = { ...timestamp.totals };\n  });\n\n  dispatch(actions.setTimestampsDict(timestamps));\n};\n\n// TO-DO: VERIFY USE FROM HERE\n\nconst activateSongDistribution = distribution => (dispatch, getState) => {\n  // Reset everything but Unit\n  dispatch(actions.resetDistributeSong({}));\n\n  // Set screen\n  dispatch(actions.setDistributeView('view'));\n\n  // Set active distribution\n  dispatch(actions.setActiveDistribution(distribution));\n\n  const { songId } = distribution;\n\n  const allSongs = [...getState().db.songs];\n  const activeSong = _.find(allSongs, { songId });\n  if (activeSong === undefined) {\n    dispatch({\n      type: 'REQUEST_SONG',\n      songId,\n      previouslyLoadedSongs: allSongs,\n    });\n  }\n};\n\nconst prepareSong = activeSongParam => (dispatch, getState) => {\n  const activeSong = activeSongParam || getState().distribute.activeSong;\n\n  if (activeSong.id) {\n    const distributionString = activeSong.distribution;\n\n    const buildPartData = data => {\n      const [id, startTime, duration] = data.split(':');\n      return {\n        id,\n        startTime: +startTime,\n        duration: +duration,\n        endTime: +startTime + +duration,\n      };\n    };\n\n    // Iterate through lines\n    const distributionLines = distributionString.split('\\n').map(line => {\n      if (line.length < 2) {\n        return [];\n      }\n      const parsedLine = [];\n      let insideBracket = false;\n      let id = '';\n      let content = '';\n\n      for (let i = 0; i < line.length; i++) {\n        const char = line[i];\n        if (char === '[' && i > 0) {\n          content = content[0] === ' ' ? content.substring(1) : content;\n          parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n        }\n\n        if (char === '[') {\n          insideBracket = true;\n          id = '';\n          content = content.trim();\n        } else if (char === ']') {\n          insideBracket = false;\n          content = '';\n        } else if (insideBracket) {\n          id += char;\n        } else {\n          content += char;\n        }\n      }\n      content = content[0] === ' ' ? content.substring(1) : content;\n      parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n\n      return parsedLine;\n    });\n\n    dispatch(actions.setDistributionLines(distributionLines));\n  }\n};\n\nconst activateMemberPill = id => (dispatch, getState) => {\n  const { activeMemberPill } = getState().distribute;\n\n  if (id === activeMemberPill) {\n    dispatch(actions.setActiveMemberPill(''));\n  } else {\n    dispatch(actions.setActiveMemberPill(id));\n  }\n};\n\nconst linkMemberToPart = id => (dispatch, getState) => {\n  const { activeMemberPill } = getState().distribute;\n\n  if (!activeMemberPill) return;\n\n  const distributionLines = [...getState().distribute.distributionLines];\n\n  for (let l = 0; l < distributionLines.length; l++) {\n    const line = distributionLines[l];\n    let found = false;\n    for (let p = 0; p < line.length; p++) {\n      const part = line[p];\n\n      if (part.id === id) {\n        // If it already has the member, remove it\n        if (part.memberId.includes(activeMemberPill)) {\n          part.memberId = part.memberId.filter(m => m !== activeMemberPill);\n        }\n        // If the active pill is NONE, replace it by NONE\n        else if (activeMemberPill === 'NONE') {\n          part.memberId = ['NONE'];\n        }\n        // If there was already a none, only add the new member\n        else if (part.memberId[0] === 'NONE') {\n          part.memberId = [activeMemberPill];\n        }\n        // Any other case, just push the member\n        else {\n          part.memberId.push(activeMemberPill);\n        }\n\n        found = true;\n        break;\n      }\n    }\n    if (found) break;\n  }\n  dispatch(actions.setDistributionLines(distributionLines));\n  dispatch(calculateRates(distributionLines));\n};\n\nconst calculateRates = distributionLines => dispatch => {\n  const rates = {\n    total: 0,\n    remaining: 0,\n    max: 0,\n  };\n\n  for (let l = 0; l < distributionLines.length; l++) {\n    const line = distributionLines[l];\n    for (let p = 0; p < line.length; p++) {\n      const part = line[p];\n      if (part.memberId.length) {\n        for (let m = 0; m < part.memberId.length; m++) {\n          rates.total += part.duration;\n          const mId = part.memberId[m];\n          if (rates[mId] === undefined) {\n            // [duration, absolute percentage, relative percentage]\n            rates[mId] = [0, 0, 0];\n          }\n          rates[mId][0] += part.duration;\n          // Replace max if greater than previous max\n          if (rates[mId][0] > rates.max) [rates.max] = rates[mId];\n        }\n      } else {\n        rates.remaining += part.duration;\n      }\n    }\n  }\n\n  // Calculate percentages\n  Object.keys(rates).forEach(key => {\n    if (key === 'max' || key === 'remaining' || key === 'total') return;\n    const rate = rates[key];\n    // Add absolute percentage\n    rate[1] = Number(((100 * rate[0]) / rates.total).toFixed(1));\n    // Add relative percentage (bar width)\n    rate[2] = Math.round((100 * rate[0]) / rates.max);\n  });\n\n  dispatch(actions.setRates(rates));\n  dispatch(calculateRemainder(rates));\n};\n\nconst calculateRemainder = rates => dispatch => {\n  let remainder = 0;\n\n  if (rates.remaining === 0 && rates.total === 0) {\n    remainder = 100;\n  } else if (rates.remaining > 0 && rates.total > 0) {\n    remainder = Math.round(\n      (100 * rates.remaining) / (rates.total + rates.remaining)\n    );\n  } else if (rates.remaining === 0 && rates.total > 0) {\n    remainder = 0;\n  }\n  dispatch(actions.setDistributionRemainder(remainder));\n};\n\nconst handleDistributionCategory = event => async dispatch => {\n  const { value } = event.target;\n  dispatch(actions.setDistributionCategory(value));\n};\n\nconst handleSaveDistribution = () => async (dispatch, getState) => {\n  const { rates } = getState().distribute;\n  const ratesToSave = {};\n  Object.entries(rates).forEach(entry => {\n    if (Array.isArray(entry[1])) {\n      ratesToSave[entry[0]] = entry[1][0]; // eslint-disable-line\n    } else {\n      ratesToSave[entry[0]] = entry[1]; // eslint-disable-line\n    }\n  });\n\n  const body = {\n    category: getState().distribute.category,\n    songId: getState().distribute.activeSong.id,\n    rates: ratesToSave,\n    relationships: '',\n    features: [],\n    unitId: getState().distribute.activeUnit.id,\n    distributionId: getState().distribute.activeDistribution.id || null,\n  };\n\n  // Build relationships\n  const relationships = {};\n  getState().distribute.distributionLines.forEach(line =>\n    line.forEach(part => {\n      relationships[part.id] = part.memberId;\n    })\n  );\n\n  body.relationships = JSON.stringify(relationships);\n\n  // TO-DO: add featuring artists\n\n  await dispatch({ type: 'SEND_DISTRIBUTION', body });\n};\n\nconst handleDistributeView = label => (dispatch, getState) => {\n  if (label !== getState().distribute.distributeView) {\n    dispatch(actions.setDistributeView(label));\n\n    if (label === 'view') {\n      // parse timestamps\n      dispatch(parseTimestamps());\n    }\n  }\n};\n\nconst mergeActiveDistribution = () => (dispatch, getState) => {\n  const distributionRelationships = getState().distribute.activeDistribution\n    .relationships;\n  const distributionLines = _.cloneDeep(\n    getState().distribute.distributionLines\n  );\n\n  distributionLines.forEach(distributionLine => {\n    distributionLine.forEach(distributionPart => {\n      distributionPart.memberId = [\n        ...distributionRelationships[distributionPart.id],\n      ];\n    });\n  });\n\n  dispatch(actions.setDistributionLines(distributionLines));\n\n  dispatch(calculateRates(distributionLines));\n\n  dispatch(parseTimestamps(distributionLines));\n};\n\nconst parseTimestamps = dLines => (dispatch, getState) => {\n  const distributionLines = dLines || getState().distribute.distributionLines;\n\n  const membersDict = {};\n  const timestampDict = {};\n\n  distributionLines.forEach(distributionLine => {\n    distributionLine.forEach(distributionPart => {\n      const startTime = Math.floor(distributionPart.startTime);\n      const endTime = Math.ceil(distributionPart.endTime);\n\n      // Define start objects if they don't exist\n      if (timestampDict[startTime] === undefined) {\n        timestampDict[startTime] = { start: {} };\n      } else if (timestampDict[startTime].start === undefined) {\n        timestampDict[startTime].start = {};\n      }\n\n      // Add members to start\n      distributionPart.memberId.forEach(memberId => {\n        timestampDict[startTime].start[memberId] = true;\n      });\n\n      // Define stop objects if they don't exist\n      if (timestampDict[endTime] === undefined) {\n        timestampDict[endTime] = { stop: {} };\n      } else if (timestampDict[endTime].stop === undefined) {\n        timestampDict[endTime].stop = {};\n      }\n\n      // Add members to stop\n      distributionPart.memberId.forEach(memberId => {\n        if (membersDict[memberId] === undefined) {\n          membersDict[memberId] = 0;\n        }\n        membersDict[memberId] += distributionPart.duration;\n        timestampDict[endTime].stop[memberId] = membersDict[memberId];\n      });\n    });\n  });\n\n  dispatch(actions.setTimestampsDict(timestampDict));\n};\n\nexport default {\n  activateMemberPill,\n  activateSong,\n  activateSongDistribution,\n  activateUnit,\n  handleDistributeView,\n  handleDistributionCategory,\n  handleSaveDistribution,\n  linkMemberToPart,\n  loadDistribution,\n  mergeActiveDistribution,\n  prepareDistributionViewer,\n  prepareSong,\n};\n","import distributeReducer from './reducers';\n\nexport { default as distributeOperations } from './operations';\nexport { default as distributeTypes } from './types';\nexport default distributeReducer;\n","const RESET_SYNC = 'RESET_SYNC';\nconst SET_ACTIVE_LINE = 'SET_ACTIVE_LINE';\nconst SET_ACTIVE_PILL = 'SET_ACTIVE_PILL';\nconst SET_ARE_LYRICS_LOCKED = 'SET_ARE_LYRICS_LOCKED';\nconst SET_FINAL_LYRICS = 'SET_FINAL_LYRICS';\nconst SET_INFO = 'SET_INFO';\nconst SET_IS_DISTRIBUTION_COMPLETE = 'SET_IS_DISTRIBUTION_COMPLETE';\nconst SET_LINK_SEQUENCE_MODE = 'SET_LINK_SEQUENCE_MODE';\nconst SET_LAST_ID_NUM = 'SET_LAST_ID_NUM';\nconst SET_LYRICS = 'SET_LYRICS';\nconst SET_PILLS = 'SET_PILLS';\nconst SET_QUEUE = 'SET_QUEUE';\nconst SET_STEP = 'SET_STEP';\nconst SET_STEPS = 'SET_STEPS';\nconst SET_SYNC_DISTRIBUTION_LINES = 'SET_SYNC_DISTRIBUTION_LINES';\nconst SET_SYNC_STATS = 'SET_SYNC_STATS';\nconst SET_TIMESTAMPS = 'SET_TIMESTAMPS';\nconst SET_VIDEO_ID = 'SET_VIDEO_ID';\n\nexport default {\n  RESET_SYNC,\n  SET_ACTIVE_LINE,\n  SET_ACTIVE_PILL,\n  SET_ARE_LYRICS_LOCKED,\n  SET_FINAL_LYRICS,\n  SET_INFO,\n  SET_IS_DISTRIBUTION_COMPLETE,\n  SET_LINK_SEQUENCE_MODE,\n  SET_LAST_ID_NUM,\n  SET_LYRICS,\n  SET_PILLS,\n  SET_QUEUE,\n  SET_STEP,\n  SET_STEPS,\n  SET_SYNC_DISTRIBUTION_LINES,\n  SET_SYNC_STATS,\n  SET_TIMESTAMPS,\n  SET_VIDEO_ID,\n};\n","import types from './types';\n\nconst initialState = {\n  activeLine: null,\n  activePill: null,\n  areLyricsLocked: false,\n  distributionLines: [],\n  finalLyrics: '',\n  info: {},\n  isDistributionComplete: false,\n  linkSequenceMode: false,\n  lastIdNum: 0,\n  lyrics: '',\n  pills: {},\n  queue: {},\n  step: 1,\n  steps: {\n    1: {\n      locked: false,\n      expanded: true,\n    },\n    2: {\n      locked: true,\n      expanded: false,\n    },\n    3: {\n      locked: true,\n      expanded: false,\n    },\n    4: {\n      locked: true,\n      expanded: false,\n    },\n    5: {\n      locked: true,\n      expanded: false,\n    },\n  },\n  stats: {\n    lines: 0,\n    pills: 0,\n    linked: 0,\n  },\n  timestamps: {},\n  videoId: '',\n};\n\nexport default function reducer(prevState = initialState, action) {\n  let newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_SYNC:\n      newState = Object.assign({}, initialState);\n      break;\n\n    case types.SET_ACTIVE_LINE:\n      newState.activeLine = action.payload;\n      break;\n\n    case types.SET_ACTIVE_PILL:\n      newState.activePill = action.payload;\n      break;\n\n    case types.SET_ARE_LYRICS_LOCKED:\n      newState.areLyricsLocked = action.payload;\n      break;\n\n    case types.SET_FINAL_LYRICS:\n      newState.finalLyrics = action.payload;\n      break;\n\n    case types.SET_INFO:\n      newState.info = action.payload;\n      break;\n\n    case types.SET_IS_DISTRIBUTION_COMPLETE:\n      newState.isDistributionComplete = action.payload;\n      break;\n\n    case types.SET_LINK_SEQUENCE_MODE:\n      newState.linkSequenceMode = action.payload;\n      break;\n\n    case types.SET_LAST_ID_NUM:\n      newState.lastIdNum = action.payload;\n      break;\n\n    case types.SET_LYRICS:\n      newState.lyrics = action.payload;\n      break;\n\n    case types.SET_PILLS:\n      newState.pills = action.payload;\n      break;\n\n    case types.SET_QUEUE:\n      newState.queue = action.payload;\n      break;\n\n    case types.SET_STEP:\n      newState.step = action.payload;\n      break;\n\n    case types.SET_STEPS:\n      newState.steps = action.payload;\n      break;\n\n    case types.SET_SYNC_DISTRIBUTION_LINES:\n      newState.distributionLines = action.payload;\n      break;\n\n    case types.SET_SYNC_STATS:\n      newState.stats = action.payload;\n      break;\n\n    case types.SET_TIMESTAMPS:\n      newState.timestamps = action.payload;\n      break;\n\n    case types.SET_VIDEO_ID:\n      newState.videoId = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetSync = payload => dispatch =>\n  dispatch({ type: types.RESET_SYNC, payload });\nconst setActiveLine = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_LINE, payload });\nconst setActivePill = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_PILL, payload });\nconst setAreLyricsLocked = payload => dispatch =>\n  dispatch({ type: types.SET_ARE_LYRICS_LOCKED, payload });\nconst setFinalLyrics = payload => dispatch =>\n  dispatch({ type: types.SET_FINAL_LYRICS, payload });\nconst setInfo = payload => dispatch =>\n  dispatch({ type: types.SET_INFO, payload });\nconst setIsDistributionComplete = payload => dispatch =>\n  dispatch({ type: types.SET_IS_DISTRIBUTION_COMPLETE, payload });\nconst setLinkSequenceMode = payload => dispatch =>\n  dispatch({ type: types.SET_LINK_SEQUENCE_MODE, payload });\nconst setLastIdNum = payload => dispatch =>\n  dispatch({ type: types.SET_LAST_ID_NUM, payload });\nconst setLyrics = payload => dispatch =>\n  dispatch({ type: types.SET_LYRICS, payload });\nconst setPills = payload => dispatch =>\n  dispatch({ type: types.SET_PILLS, payload });\nconst setQueue = payload => dispatch =>\n  dispatch({ type: types.SET_QUEUE, payload });\nconst setStep = payload => dispatch =>\n  dispatch({ type: types.SET_STEP, payload });\nconst setSteps = payload => dispatch =>\n  dispatch({ type: types.SET_STEPS, payload });\nconst setSyncDistributionLines = payload => dispatch =>\n  dispatch({ type: types.SET_SYNC_DISTRIBUTION_LINES, payload });\nconst setSyncStats = payload => dispatch =>\n  dispatch({ type: types.SET_SYNC_STATS, payload });\nconst setTimestamps = payload => dispatch =>\n  dispatch({ type: types.SET_TIMESTAMPS, payload });\nconst setVideoId = payload => dispatch =>\n  dispatch({ type: types.SET_VIDEO_ID, payload });\n\nexport default {\n  resetSync,\n  setActiveLine,\n  setActivePill,\n  setAreLyricsLocked,\n  setFinalLyrics,\n  setInfo,\n  setIsDistributionComplete,\n  setLinkSequenceMode,\n  setLastIdNum,\n  setLyrics,\n  setPills,\n  setQueue,\n  setStep,\n  setSteps,\n  setSyncDistributionLines,\n  setSyncStats,\n  setTimestamps,\n  setVideoId,\n};\n","import _ from 'lodash';\n\nimport actions from './actions';\n\nimport constants from '../../utils/constants';\n\nconst handleVideoId = e => dispatch => {\n  const { value } = e.target;\n\n  let videoId = '';\n  // TO-DO: Check if value is one of the placeholders and assign correct video id\n\n  // Parse youtube link\n  if (value.startsWith('https://youtu.be/')) {\n    videoId = value.substring(17);\n  } else if (value && !videoId) {\n    const youtubeLink = value.split('v=');\n    if (youtubeLink.length === 1) {\n      [videoId] = youtubeLink;\n    } else if (youtubeLink.length === 2) {\n      const youtubeLinkQuery = youtubeLink[1].split('&');\n      [videoId] = youtubeLinkQuery;\n    }\n  }\n\n  dispatch(actions.setVideoId(videoId));\n};\n\nconst handleFormInfo = (formState, originalArtist) => (dispatch, getState) => {\n  // Original Artist is required\n  if (!originalArtist) return;\n\n  const info = {};\n\n  const { artistsTypeaheadDict } = getState().db;\n  if (artistsTypeaheadDict[originalArtist]) {\n    info.artistId = artistsTypeaheadDict[originalArtist];\n    info.originalArtist = originalArtist;\n  } else {\n    info.originalArtist = originalArtist;\n  }\n\n  if (Object.values(formState.values)) {\n    info.album = formState.values.album;\n    info.gender = formState.values.gender || 'MIXED';\n    info.groupSize = formState.values.groupSize;\n    info.single = formState.values.single || false;\n    info.title = formState.values.title;\n    info.private = formState.values.private;\n  }\n\n  info.videoId = getState().sync.videoId;\n  dispatch(actions.setInfo(info));\n  dispatch(unlockNextStep());\n};\n\nconst unlockNextStep = () => (dispatch, getState) => {\n  let { step } = getState().sync;\n  const steps = _.cloneDeep(getState().sync.steps);\n\n  steps[step].locked = true;\n  steps[step].expanded = false;\n  steps[step + 1].locked = false;\n  steps[step + 1].expanded = true;\n\n  step++;\n\n  if (step === 5) {\n    dispatch(finalizeLyrics());\n  }\n  dispatch(actions.setStep(step));\n  dispatch(actions.setSteps(steps));\n};\n\nconst unlockSpecificStep = num => (dispatch, getState) => {\n  if (!num) return;\n\n  let { step } = getState().sync;\n  const steps = _.cloneDeep(getState().sync.steps);\n\n  Object.values(steps).forEach(st => {\n    st.locked = true;\n    st.expanded = false;\n  });\n\n  steps[+num].locked = false;\n  steps[+num].expanded = true;\n\n  step = +num;\n\n  dispatch(actions.setStep(step));\n  dispatch(actions.setSteps(steps));\n\n  if (+num === 3) {\n    dispatch(actions.setAreLyricsLocked(false));\n  }\n};\n\n// Adds []s in the beginning of every line and remove diplicated spaces\nconst prepareLines = (clearBrackets = false) => (dispatch, getState) => {\n  const { lyrics } = getState().sync;\n\n  let preparedLyrics = lyrics;\n\n  if (clearBrackets) {\n    preparedLyrics = preparedLyrics.replace(/\\[(.*?)\\]/g, '[]');\n  }\n\n  preparedLyrics = preparedLyrics\n    .split('\\n')\n    .map(line => {\n      if (line.length > 0 && !line.startsWith('[')) {\n        return `[] ${line}`;\n      }\n      return line;\n    })\n    .join('\\n')\n    .replace(/ +(?= )/g, '');\n\n  dispatch(actions.setLyrics(preparedLyrics));\n};\n\n// Verify lyrics and add ids to all []s\nconst prepareLyrics = () => (dispatch, getState) => {\n  // Add spaces between ending and opening braces\n  // Remove spaces between opening and ending braces\n  let lyrics = getState().sync.lyrics.replace(/\\]\\(|\\)\\[|\\[ \\]|\\( \\)/g, s => {\n    if (s === '](') return '] (';\n    if (s === ')[') return ') [';\n    if (s === '( )') return '()';\n    if (s === '[ ]') return '[]';\n    return s;\n  });\n  // Add spaces between characters and opening braces\n  // Add spaces between ending braces and characters\n  lyrics = lyrics.replace(\n    /[A-Za-z0-9][(]|[A-Za-z0-9][[]|[)][A-Za-z0-9]|[\\]][A-Za-z0-9]/g,\n    s => `${s[0]} ${s[1]}`\n  );\n  // Add brackets before any parentheses\n  lyrics = lyrics.replace(\n    /[A-Za-z0-9?!][ ][(]|[)][ ][(]|[)][ ][A-Za-z0-9]/g,\n    s => `${s[0]}${s[1]}[] ${s[2]}`\n  );\n  // Add a unique idNum inside each []\n  let idNum = getState().sync.lastIdNum;\n  lyrics = lyrics.replace(/\\[\\]/g, () => {\n    idNum++;\n    return `[${idNum}]`;\n  });\n  dispatch(actions.setLastIdNum(idNum));\n  dispatch(actions.setLyrics(lyrics));\n  dispatch(actions.setAreLyricsLocked(true));\n};\n\nconst lockLyrics = (locked = true) => (dispatch, getState) => {\n  dispatch(prepareLines());\n  dispatch(prepareLyrics());\n  dispatch(actions.setAreLyricsLocked(locked));\n  const { lyrics } = getState().sync;\n  dispatch(parseLyricsToObject(lyrics));\n};\n\nconst handleLyricsEdit = e => dispatch => {\n  let text = '';\n  if (typeof e === 'string') {\n    text = e;\n  } else {\n    text = e.target.value || '';\n  }\n  dispatch(actions.setLyrics(text.replace(/ +(?= )/g, '')));\n  dispatch(actions.setAreLyricsLocked(false));\n};\n\nconst parseLyricsToObject = lyrics => (dispatch, getState) => {\n  let lineCount = 0;\n  const lines = lyrics.split('\\n').map(line => {\n    if (line.length < 2) {\n      return [];\n    }\n    const parsedLine = [];\n    let insideBracket = false;\n    let id = '';\n    let content = '';\n\n    for (let i = 0; i < line.length; i++) {\n      const char = line[i];\n      if (char === '[' && i > 0) {\n        content = content[0] === ' ' ? content.substring(1) : content;\n        parsedLine.push({ id, content, link: null });\n      }\n\n      if (char === '[') {\n        insideBracket = true;\n        id = '';\n        content = content.trim();\n        lineCount++;\n      } else if (char === ']') {\n        insideBracket = false;\n        content = '';\n      } else if (insideBracket) {\n        id += char;\n      } else {\n        content += char;\n      }\n    }\n    content = content[0] === ' ' ? content.substring(1) : content;\n    parsedLine.push({ id, content, link: null, color: null });\n\n    return parsedLine;\n  });\n  dispatch(actions.setSyncDistributionLines(lines));\n\n  const stats = { ...getState().sync.stats };\n  stats.lines = lineCount;\n\n  dispatch(actions.setSyncStats(stats));\n\n  setTimeout(() => {\n    dispatch(unlockNextStep());\n  }, 1000);\n};\n\nconst handleSyncKeydown = (event, player) => dispatch => {\n  // Only trigger if it is an allowed key and the video is playing\n  const { key } = event;\n  if (constants.SYNC_KEY_LIST[key] && player && player.getPlayerState() === 1) {\n    const timestamp = player.getCurrentTime();\n    dispatch(enqueueCapture(key, timestamp));\n  }\n};\n\nconst handleSyncKeyup = (event, player) => dispatch => {\n  const { key } = event;\n  if (constants.SYNC_KEY_LIST[key]) {\n    const timestamp = player.getCurrentTime();\n    dispatch(\n      dequeueCapture(key, timestamp, constants.SYNC_KEY_COLOR_LIST[key])\n    );\n  }\n};\n\nconst handleSyncBoxMouseDown = (key, player) => dispatch => {\n  // Only trigger if it is an allowed key and the video is playing\n  if (constants.SYNC_KEY_LIST[key] && player && player.getPlayerState() === 1) {\n    const timestamp = player.getCurrentTime();\n    dispatch(enqueueCapture(key, timestamp));\n  }\n};\n\nconst handleSyncBoxMouseUp = (key, player, color) => dispatch => {\n  if (constants.SYNC_KEY_LIST[key]) {\n    const timestamp = player.getCurrentTime();\n    dispatch(dequeueCapture(key, timestamp, color));\n  }\n};\n\nconst enqueueCapture = (id, timestamp) => (dispatch, getState) => {\n  const queue = Object.assign({}, getState().sync.queue);\n  if (queue[id] === undefined) {\n    queue[id] = timestamp;\n    dispatch(actions.setQueue(queue));\n  }\n};\n\nlet newPillId = 0;\n\nconst dequeueCapture = (id, timestamp, color) => (dispatch, getState) => {\n  const queue = Object.assign({}, getState().sync.queue);\n\n  if (queue[id]) {\n    const pills = Object.assign({}, getState().sync.pills);\n    const startTime = queue[id];\n    const duration = timestamp - startTime;\n    delete queue[id];\n\n    newPillId++;\n    pills[newPillId] = {\n      pillId: newPillId,\n      timestamp: startTime,\n      duration,\n      link: null,\n      key: id,\n      color,\n    };\n\n    dispatch(actions.setQueue(queue));\n    dispatch(actions.setPills(pills));\n\n    const stats = { ...getState().sync.stats };\n    stats.pills = Object.keys(pills).length;\n    dispatch(actions.setSyncStats(stats));\n  }\n};\n\nconst connectSyncLine = id => (dispatch, getState) => {\n  const { activeLine, activePill } = getState().sync;\n  if (activeLine === id) {\n    dispatch(actions.setActiveLine(null));\n  } else if (activePill) {\n    dispatch(\n      connect(\n        id,\n        activePill\n      )\n    );\n  } else {\n    dispatch(actions.setActiveLine(id));\n  }\n};\n\nconst connectSyncPill = id => (dispatch, getState) => {\n  const { activeLine, activePill } = getState().sync;\n  if (activePill === id) {\n    dispatch(actions.setActivePill(null));\n  } else if (activeLine) {\n    dispatch(\n      connect(\n        activeLine,\n        id\n      )\n    );\n  } else {\n    dispatch(actions.setActivePill(id));\n  }\n};\n\nlet linksBackUp = {};\nconst connect = (lineId, pillId) => (dispatch, getState) => {\n  let lines = [...getState().sync.distributionLines];\n  let pills = Object.assign({}, getState().sync.pills);\n\n  // Nullify any line with pillId as a link\n  lines = nullifyLine(lines, pillId, lineId);\n  // Nullify any pill with lineId as a link\n  pills = nullifyPill(pills, lineId);\n  // Link each other\n  function modifyPart(collection, searchId, id, key, newValue, color) {\n    return collection.map(l =>\n      l.map(part => {\n        if (+part[searchId] === +id) {\n          part[key] = newValue;\n          part.color = color;\n        }\n        return part;\n      })\n    );\n  }\n\n  pills[pillId].link = lineId;\n  modifyPart(lines, 'id', lineId, 'link', pillId, pills[pillId].color);\n\n  // Add to the linksBackUp for when user needs to edit lyrics\n  linksBackUp[lineId] = pillId;\n\n  dispatch(actions.setActiveLine(null));\n  dispatch(actions.setActivePill(null));\n\n  dispatch(actions.setPills(pills));\n  dispatch(actions.setSyncDistributionLines(lines));\n\n  // Check if distribution is complete\n  function isDistributionComplete(collection) {\n    let isComplete = true;\n\n    collection.forEach(l =>\n      l.forEach(part => {\n        if (part.link === null) isComplete = false;\n      })\n    );\n    return isComplete;\n  }\n\n  const stats = { ...getState().sync.stats };\n  stats.linked = Object.keys(linksBackUp).length;\n  dispatch(actions.setSyncStats(stats));\n\n  dispatch(actions.setIsDistributionComplete(isDistributionComplete(lines)));\n};\n\nconst deleteSyncPill = () => (dispatch, getState) => {\n  const { activePill } = getState().sync;\n\n  if (activePill) {\n    const pills = Object.assign({}, getState().sync.pills);\n    let lines = [...getState().sync.distributionLines];\n\n    // Stop linkSequencer\n    clearInterval(intervalId);\n\n    // Nullify any line with activePill as a link\n    lines = nullifyLine(lines, activePill);\n\n    delete pills[activePill];\n\n    dispatch(actions.setActivePill(null));\n    dispatch(actions.setPills(pills));\n    dispatch(actions.setSyncDistributionLines(lines));\n    dispatch(actions.setLinkSequenceMode(false));\n\n    const stats = { ...getState().sync.stats };\n    stats.linked = Object.keys(linksBackUp).length;\n    dispatch(actions.setSyncStats(stats));\n  }\n};\n\nconst nullifyLine = (collection, item, partId = null) => {\n  collection.forEach(l =>\n    l.forEach(part => {\n      if (+part.link === +item) {\n        part.link = null;\n        part.color = null;\n      }\n      if (+linksBackUp[part.id] === +item) {\n        delete linksBackUp[part.id];\n      }\n    })\n  );\n\n  // Also remove from backup if part was provided\n  if (partId) {\n    delete linksBackUp[partId];\n  }\n\n  return collection;\n};\n\nconst nullifyPill = (collection, item) => {\n  Object.keys(collection).forEach(k => {\n    const pill = collection[k];\n    if (+pill.link === +item) pill.link = null;\n  });\n  return collection;\n};\n\nconst finalizeLyrics = () => (dispatch, getState) => {\n  const lines = [...getState().sync.distributionLines];\n  const pills = Object.assign({}, getState().sync.pills);\n\n  const newLines = lines.map(line =>\n    line.map(part => {\n      part.startTime = +pills[part.link].timestamp.toFixed(2);\n      part.duration = +pills[part.link].duration.toFixed(2);\n      part.endTime = part.startTime + part.duration;\n      return part;\n    })\n  );\n\n  // Build string\n  let finalId = 1;\n  let finalLyrics = '';\n  const timepstamps = {};\n\n  newLines.forEach(line => {\n    if (line.length > 0) {\n      line.forEach(part => {\n        // Join parts\n        const bracket = `[${finalId}:${part.startTime}:${part.duration}] `;\n        finalLyrics += `${bracket} ${part.content}`;\n        finalId++;\n        // Create karaoke-line object\n        const second = Math.round(part.startTime);\n        if (timepstamps[second] === undefined) timepstamps[second] = [];\n        timepstamps[second].push({\n          partId: `part-${part.id}`,\n          duration: part.duration,\n          endTime: part.endTime,\n          size: 0,\n          totalSize: part.content.length,\n          content: part.content,\n        });\n      });\n    }\n    finalLyrics += '\\n';\n  });\n  finalLyrics = finalLyrics.replace('  ', ' ');\n  dispatch(actions.setFinalLyrics(finalLyrics));\n  dispatch(actions.setTimestamps(timepstamps));\n};\n\nconst resetPillLinks = () => (dispatch, getState) => {\n  const pills = { ...getState().sync.pills };\n  const distributionLines = [...getState().sync.distributionLines];\n\n  // Stop linkSequencer\n  clearInterval(intervalId);\n\n  Object.keys(pills).forEach(k => {\n    const pill = pills[k];\n    pill.link = null;\n  });\n\n  distributionLines.forEach(line => line.forEach(part => (part.link = null)));\n\n  dispatch(actions.setPills(pills));\n};\n\nlet intervalId = null;\n\nconst linkPillsSequence = () => async (dispatch, getState) => {\n  let isOn = getState().sync.linkSequenceMode;\n\n  if (isOn) {\n    dispatch(actions.setLinkSequenceMode(false));\n    clearInterval(intervalId);\n    dispatch(actions.setActivePill(null));\n  } else {\n    dispatch(actions.setLinkSequenceMode(true));\n    let { pills } = getState().sync;\n    const pillList = Object.keys(pills);\n\n    const findNextPill = () => pillList.find(el => pills[el].link === null);\n\n    let nextActive = findNextPill();\n\n    // While is on mode is turned on, perform every one second\n    intervalId = setInterval(() => {\n      pills = getState().sync.pills; // eslint-disable-line\n      isOn = getState().sync.linkSequenceMode;\n\n      const { activePill } = getState().sync;\n      if (activePill === null) {\n        nextActive = findNextPill();\n        dispatch(actions.setActivePill(nextActive));\n      }\n      if (nextActive === undefined) {\n        clearInterval(intervalId);\n        dispatch(actions.setLinkSequenceMode(false));\n        dispatch(actions.setActivePill(null));\n      }\n    }, 250);\n  }\n};\n\nconst saveSync = () => async (dispatch, getState) => {\n  const { info, finalLyrics } = getState().sync;\n  const body = {\n    album: info.album || null,\n    distribution: finalLyrics,\n    gender: info.gender,\n    groupSize: info.groupSize,\n    originalArtist: info.originalArtist,\n    originalArtistId: info.artistId || null,\n    private: info.private || false,\n    single: info.single || false,\n    title: info.title,\n    videoId: info.videoId,\n  };\n\n  await dispatch({ type: 'SEND_SONG', body });\n\n  dispatch(actions.setStep(6));\n};\n\nconst handleResetSync = () => dispatch => {\n  newPillId = 0;\n  linksBackUp = {};\n  dispatch(actions.resetSync({}));\n};\n\nexport default {\n  connectSyncLine,\n  connectSyncPill,\n  deleteSyncPill,\n  handleFormInfo,\n  handleLyricsEdit,\n  handleResetSync,\n  handleSyncBoxMouseDown,\n  handleSyncBoxMouseUp,\n  handleSyncKeydown,\n  handleSyncKeyup,\n  handleVideoId,\n  linkPillsSequence,\n  lockLyrics,\n  prepareLines,\n  resetPillLinks,\n  saveSync,\n  unlockNextStep,\n  unlockSpecificStep,\n};\n","import syncReducer from './reducers';\n\nexport { default as syncOperations } from './operations';\nexport { default as syncTypes } from './types';\nexport default syncReducer;\n","const SET_TEST_1 = 'SET_TEST_1';\nconst SET_TEST_2 = 'SET_TEST_2';\nconst SET_TEST_3 = 'SET_TEST_3';\nconst SET_TEST_4 = 'SET_TEST_4';\nconst SET_TEST_5 = 'SET_TEST_5';\n\nexport default {\n  SET_TEST_1,\n  SET_TEST_2,\n  SET_TEST_3,\n  SET_TEST_4,\n  SET_TEST_5,\n};\n","import types from './types';\n\nconst initialState = {\n  test1: '',\n  test2: 0,\n  test3: true,\n  test4: [],\n  test5: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_TEST_1:\n      newState.test1 = action.payload;\n      break;\n\n    case types.SET_TEST_2:\n      newState.test2 = action.payload;\n      break;\n\n    case types.SET_TEST_3:\n      newState.test3 = action.payload;\n      break;\n\n    case types.SET_TEST_4:\n      newState.test4 = action.payload;\n      break;\n\n    case types.SET_TEST_5:\n      newState.test5 = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setTest1 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_1, payload });\nconst setTest2 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_2, payload });\nconst setTest3 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_3, payload });\nconst setTest4 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_4, payload });\nconst setTest5 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_5, payload });\n\nexport default {\n  setTest1,\n  setTest2,\n  setTest3,\n  setTest4,\n  setTest5,\n};\n","import tempReducer from './reducers';\n\nexport { default as tempOperations } from './operations';\nexport { default as tempTypes } from './types';\nexport default tempReducer;\n","import { combineReducers } from 'redux';\n\nimport { reducer as toastr } from 'react-redux-toastr';\n\nimport app, { appTypes } from './app';\nimport admin, { adminTypes } from './admin';\nimport artists, { artistsTypes } from './artists';\nimport auth, { authTypes } from './auth';\nimport db, { dbTypes } from './db';\nimport distribute, { distributeTypes } from './distribute';\nimport sync, { syncTypes } from './sync';\nimport temp, { tempTypes } from './temp';\n\nconst rootReducer = combineReducers({\n  app,\n  admin,\n  artists,\n  auth,\n  db,\n  distribute,\n  sync,\n  temp,\n  toastr,\n});\n\nexport const types = {\n  ...appTypes,\n  ...adminTypes,\n  ...artistsTypes,\n  ...authTypes,\n  ...dbTypes,\n  ...distributeTypes,\n  ...syncTypes,\n  ...tempTypes,\n};\n\nexport default rootReducer;\n","import firebase from 'firebase';\n\nimport { mockFirebase, mockGoogleAuthProvider } from './mock';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\n\nexport const fb =\n  process.env.NODE_ENV !== 'test'\n    ? firebase.initializeApp(config)\n    : mockFirebase;\nexport const googleProvider =\n  process.env.NODE_ENV !== 'test'\n    ? new firebase.auth.GoogleAuthProvider()\n    : mockGoogleAuthProvider;\nexport const userSession = { user: {} };\n\n// Verify user auth session presence\nif (process.env.NODE_ENV !== 'test') {\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      userSession.user = user;\n    }\n  });\n}\n\nexport default fb;\n","export const CATEGORY = {\n  OFFICIAL: 'OFFICIAL',\n  SHOULD: 'SHOULD',\n  WOULD: 'WOULD',\n};\n\nexport const GENDERS = {\n  FEMALE: 'FEMALE',\n  MALE: 'MALE',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const GENRES = {\n  CPOP: 'C-POP',\n  JPOP: 'J-POP',\n  KPOP: 'K-POP',\n  'C-POP': 'C-POP',\n  'J-POP': 'J-POP',\n  'K-POP': 'K-POP',\n  OTHER: 'OTHER',\n  POP: 'POP',\n};\n\nexport const NATIONALITIES = {\n  AMERICAN: 'AMERICAN',\n  BRAZILIAN: 'BRAZILIAN',\n  BRITISH: 'BrBRITISHitish',\n  CANADIAN: 'CANADIAN',\n  CHINESE: 'CHINESE',\n  INDIAN: 'INDIAN',\n  INDONESIAN: 'INDONESIAN',\n  FILIPINO: 'FILIPINO',\n  JAPANESE: 'JAPANESE',\n  KOREAN: 'KOREAN',\n  OTHER: 'OTHER',\n  TAIWANESE: 'TAIWANESE',\n  THAI: 'THAI',\n  VIETNAMISE: 'VIETNAMISE',\n};\n\nexport const POSITIONS = {\n  LEADER: 'LEADER',\n  MAIN_VOCALIST: 'MAIN_VOCALIST',\n  MAIN_RAPPER: 'MAIN_RAPPER',\n  MAIN_DANCER: 'MAIN_DANCER',\n  LEAD_VOCALIST: 'LEAD_VOCALIST',\n  LEAD_RAPPER: 'LEAD_RAPPER',\n  LEAD_DANCER: 'LEAD_DANCER',\n  VOCALIST: 'VOCALIST',\n  RAPPER: 'RAPPER',\n  DANCER: 'DANCER',\n  CENTER: 'CENTER',\n  FACE: 'FACE',\n  VISUAL: 'VISUAL',\n  MAKNAE: 'MAKNAE',\n};\n\nexport const UNKNOWN = 'UNKNOWN';\n\nconst getEnum = (value = '', library = '') => {\n  let result;\n\n  if (value === UNKNOWN) return UNKNOWN;\n\n  switch (library) {\n    case 'CATEGORY':\n      result = CATEGORY[value];\n      break;\n    case 'GENDER':\n      result = GENDERS[value];\n      break;\n    case 'GENRE':\n      result = GENRES[value];\n      break;\n    case 'NATIONALITY':\n      result = NATIONALITIES[value];\n      break;\n    case 'POSITIONS':\n      result = POSITIONS[value];\n      break;\n    default:\n      throw new Error(`Invalid enum library: ${library}`);\n  }\n\n  if (result) {\n    return result;\n  }\n  return UNKNOWN;\n};\n\nexport default getEnum;\n","import HttpStatus from 'http-status-codes';\n\nimport _ from 'lodash';\n\nimport { UNKNOWN } from './enums';\n\n/**\n * Parses the api path into an object\n * @param {string} path\n * @returns {object} with length of the path, root, referenceId, subPath, and queryParams\n */\nconst breadcrumble = path => {\n  if (!path) {\n    throw new Error(\n      `${HttpStatus.UNAUTHORIZED}: A path is required to make api requests`\n    );\n  }\n\n  if (typeof path !== 'string') {\n    throw new Error(\n      `${HttpStatus.BAD_REQUEST}: Breadcrumble path argument must be a string`\n    );\n  }\n\n  const urlSplit = path.split('?');\n  const fullPath = urlSplit[0].split('/');\n  const queryParams = urlSplit[1] || null;\n  const queryResult = {};\n\n  if (queryParams) {\n    const querySplit = queryParams.split('&');\n    for (let i = 0; i < querySplit.length; i++) {\n      const subQuery = querySplit[i].split('=');\n      if (subQuery.length === 2) {\n        const queryName = subQuery[0];\n        let queryValue = subQuery[1];\n        if (queryValue.includes(',')) {\n          queryValue = queryValue.split(',');\n        }\n        queryResult[queryName] = queryValue;\n      }\n    }\n  }\n\n  // Determine reference id is present\n  const hasSecondaryPath = fullPath[2];\n  const isReferenceId = hasSecondaryPath\n    ? fullPath[2][0] === '-' || fullPath[1] === 'users'\n    : false;\n\n  const referenceId = isReferenceId ? fullPath[2] : null;\n  // Determine subpath as third element if referenceId otherwise second element\n  const subPath = isReferenceId ? fullPath[3] : fullPath[2];\n\n  return {\n    length: fullPath.length - 1,\n    root: fullPath[1],\n    referenceId,\n    subPath: subPath || null,\n    queryParams: Object.keys(queryResult).length > 0 ? queryResult : null,\n  };\n};\n\n/**\n * Builds a string query to be used on search functions for artists\n * @param {object} data\n * @param {object} members\n * @returns {string} a lower cased string with name, otherNames, and members\n */\nconst buildArtistQuery = (data, membersData) => {\n  const { name } = data;\n  const otherNames = data.otherNames || '';\n  const agency = data.agency !== UNKNOWN ? data.agency : '';\n  const membersNames = membersData.map(m => m.name).join(' ');\n\n  return `${name} ${otherNames} ${membersNames} ${agency}`.toLowerCase();\n};\n\n/**\n * Build member initials based on their name\n * @param {string} name\n * @returns {string} a two-digit upper cased string\n */\nconst buildMemberInitials = name =>\n  `${name[0]}${name[Math.floor(name.length / 2)]}`.toUpperCase();\n\n/**\n * Calculates the age of a member based on their birthday (YYYYMMDD) keeping a cache\n * @param {number} birthday\n * @returns {number} the age of the member\n */\nconst TODAY = process.env.NODE_ENV === 'test' ? 1550000000000 : Date.now();\nconst ageDict = {};\nconst calculateAge = birthday => {\n  if (ageDict[birthday]) return ageDict[birthday];\n\n  const birthdateString = birthday.toString();\n  const birthDate = new Date(\n    +birthdateString.substring(0, 4),\n    +birthdateString.substring(4, 6),\n    +birthdateString.substring(6)\n  );\n\n  const ageDate = new Date(TODAY - birthDate.getTime());\n  ageDict[birthday] = Math.abs(ageDate.getUTCFullYear() - 1970);\n  return ageDict[birthday];\n};\n\n/**\n * Calculates the averages for each member in the unit\n * @param {array} members list of members\n * @param {array} distributions list of distributions\n * @returns {array} list of members with averages object\n */\nconst calculateUnitAverages = (members, distributions) => {\n  const averages = {};\n  const totals = {\n    official: 0,\n    custom: 0,\n    rework: 0,\n  };\n\n  function calculateAverage(distribution, type) {\n    Object.entries(distribution.rates).forEach(([memberId, duration]) => {\n      if (!['ALL', 'NONE', 'max', 'remaining', 'total'].includes(memberId)) {\n        if (averages[memberId] === undefined) {\n          averages[memberId] = {\n            official: 0,\n            custom: 0,\n            rework: 0,\n          };\n        }\n        averages[memberId][type] += duration;\n        totals[type] += duration;\n      }\n    });\n  }\n\n  Object.entries(distributions).forEach(([type, distributionsList]) => {\n    distributionsList.forEach(distribution => {\n      calculateAverage(distribution, type);\n    });\n  });\n\n  Object.entries(averages).forEach(([memberId, durations]) => {\n    averages[memberId].all = Number(\n      (\n        ((durations.official + durations.custom) * 100) /\n        (totals.official + totals.custom)\n      ).toFixed(1)\n    );\n    averages[memberId].official = Number(\n      ((durations.official * 100) / totals.official).toFixed(1)\n    );\n    averages[memberId].custom = Number(\n      ((durations.custom * 100) / totals.custom).toFixed(1)\n    );\n\n    averages[memberId].rework = Number(\n      ((durations.rework * 100) / totals.rework).toFixed(1)\n    );\n\n    averages[memberId].official =\n      averages[memberId].official > 1 ? averages[memberId].official : 0;\n    averages[memberId].custom =\n      averages[memberId].custom > 1 ? averages[memberId].custom : 0;\n    averages[memberId].rework =\n      averages[memberId].rework > 1 ? averages[memberId].rework : 0;\n  });\n\n  return members.map(member => {\n    member.averages = averages[member.id];\n    return member;\n  });\n};\n\n/**\n * Builds object separating distributions by category\n * @param {array} distributions collection of memberUnitUrns (memberId:memberName:memberPosition)\n * @returns {object} distributions grouped by official, custom, redistribution\n */\nconst categorizeDistributions = distributions => {\n  const sortedDistributions = _.sortBy(distributions, [\n    d => d.data.songTitle.toLowerCase(),\n  ]);\n\n  return sortedDistributions.reduce(\n    (res, distribution) => {\n      switch (distribution.data.category) {\n        case 'OFFICIAL':\n          res.official.push(distribution.data);\n          break;\n        case 'SHOULD':\n          res.rework.push(distribution.data);\n          break;\n        default:\n          res.custom.push(distribution.data);\n      }\n\n      return res;\n    },\n    {\n      official: [],\n      custom: [],\n      rework: [],\n    }\n  );\n};\n\n/**\n * Parses the object with members from a unit\n * @param {array} members collection of memberUnitUrns (memberId:memberName:memberPosition)\n * @returns {string} genre MALE, FEMALE, or MIXED\n */\nconst determineUnitGenre = members =>\n  members.reduce(\n    (res, member) => (member.data.attributes.gender !== res ? 'MIXED' : res),\n    members[0].data.attributes.gender\n  );\n\n/**\n * Parses the object with members from a unit\n * @param {object} membersObj collection of memberUnitUrns (memberId:memberName:memberPosition)\n * @returns {array} list of member ids\n */\nconst getMembersIdsFromUnit = membersObj =>\n  Object.keys(membersObj).reduce((arr, memberUnitUrn) => {\n    const memberId = memberUnitUrn.split(':')[0];\n    if (!arr.includes(memberId)) {\n      arr.push(memberId);\n    }\n    return arr;\n  }, []);\n\n/**\n * Transforms stringified relationships into an object with replaced legendId for memberIds\n * @param {string} relationshipsStr\n * @param {obect} legend\n * @returns {object} a collection of distributionKey: memberIds pairs\n */\nconst mergeDistributionRelationships = (relationshipsStr, legend) => {\n  const relationships = JSON.parse(relationshipsStr);\n\n  Object.entries(relationships).forEach(([key, legendIds]) => {\n    relationships[key] = legendIds.map(legendId =>\n      legend[legendId] ? legend[legendId] : legendId\n    );\n  });\n\n  return relationships;\n};\n\n/**\n * Merges serialized members from unit and parsed unit members positions\n * @param {array} members\n * @param {obect} positionsObj\n * @returns {object} a collection of memberIds and their list of positions\n */\nconst mergeUnitMembers = (members, positionsObj) =>\n  members.map(member => {\n    const { id } = member.data;\n    return {\n      ...member.data.attributes,\n      id,\n      positions: positionsObj[id],\n    };\n  });\n\n/**\n * Parses artistMemberUrn\n * @param {string} urn\n * @returns {object} with id, name, color\n */\nconst parseArtistMemberUrn = urn => {\n  const [, id, name, color] = urn.split(':');\n  return {\n    id,\n    name,\n    color,\n  };\n};\n\n/**\n * Parses color rgb\n * @param {string} rgb\n * @returns {object} with r, g, b\n */\nconst parseColorRGB = rgb => {\n  const [r, g, b] = rgb.split(',');\n  return {\n    r,\n    g,\n    b,\n  };\n};\n\n/**\n * Parses distribution string into an array of distribution data\n * @param {string} distributionString the distribution of a song\n * @returns {array} a list of distribution lines with part objects\n */\nconst parseSongDistribution = distributionString => {\n  const buildPartData = data => {\n    const [id, startTime, duration] = data.split(':');\n    return {\n      id,\n      startTime: +startTime,\n      duration: +duration,\n      endTime: +startTime + +duration,\n    };\n  };\n\n  // Iterate through lines\n  return distributionString.split('\\n').map(line => {\n    if (line.length < 2) {\n      return [];\n    }\n    const parsedLine = [];\n    let insideBracket = false;\n    let id = '';\n    let content = '';\n\n    for (let i = 0; i < line.length; i++) {\n      const char = line[i];\n      if (char === '[' && i > 0) {\n        content = content[0] === ' ' ? content.substring(1) : content;\n        parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n      }\n\n      if (char === '[') {\n        insideBracket = true;\n        id = '';\n        content = content.trim();\n      } else if (char === ']') {\n        insideBracket = false;\n        content = '';\n      } else if (insideBracket) {\n        id += char;\n      } else {\n        content += char;\n      }\n    }\n    content = content[0] === ' ' ? content.substring(1) : content;\n    parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n\n    return parsedLine;\n  });\n};\n\n/**\n * Parses unit members urns\n * @param {obect} members\n * @returns {object} a collection of memberIds and their list of positions\n */\nconst parseUnitMembersPositions = members =>\n  Object.keys(members).reduce((res, key) => {\n    const [id, , position] = key.split(':');\n    if (res[id] === undefined) {\n      res[id] = [];\n    }\n    res[id].push(position);\n    return res;\n  }, {});\n\n/**\n * Remove all falsy values from an object mutating the data object\n * @param {obect} data\n * @returns {undefined} the original object is mutated\n */\nconst removeFalsyValues = data => {\n  Object.entries(data).forEach(([key, value]) => {\n    if (!value) {\n      delete data[key];\n    }\n  });\n};\n\n/**\n * Asyncronous function that delays code when using with async/await\n * @param {number} ms time in miliseconds the fuction should wait\n * @returns {Promise}\n */\nconst wait = (ms = 1000) => new Promise((r, j) => setTimeout(r, ms)); // eslint-disable-line\n\nexport default {\n  breadcrumble,\n  buildArtistQuery,\n  buildMemberInitials,\n  calculateAge,\n  calculateUnitAverages,\n  categorizeDistributions,\n  determineUnitGenre,\n  getMembersIdsFromUnit,\n  mergeDistributionRelationships,\n  mergeUnitMembers,\n  parseArtistMemberUrn,\n  parseColorRGB,\n  parseSongDistribution,\n  parseUnitMembersPositions,\n  removeFalsyValues,\n  wait,\n};\n","/* eslint arrow-body-style: 0 */\nimport _ from 'lodash';\n\nimport utils from './utils';\n\nimport getEnum, { UNKNOWN } from './enums';\n\nconst serializers = {\n  artist: (data, id, unitsData) => {\n    data = _.cloneDeep(data);\n\n    const members = data.members.map(m => utils.parseArtistMemberUrn(m));\n    const query = utils.buildArtistQuery(data, members);\n\n    const result = {\n      id: data.id || id,\n      type: 'artist',\n      attributes: {\n        agency: data.agency || UNKNOWN,\n        createdBy: data.createdBy || null,\n        disbanded: Boolean(data.disbanded),\n        genre: getEnum(data.genre, 'GENRE'),\n        members,\n        name: data.name,\n        modifiedBy: data.modifiedBy || null,\n        otherNames: data.otherNames || '',\n        private: Boolean(data.private),\n        query,\n        unitIds: data.unitIds,\n      },\n    };\n\n    // Add basic units info if unitsData was received\n    if (unitsData) {\n      result.attributes.units = unitsData.map(unitData => {\n        return {\n          id: unitData.id,\n          name: unitData.name,\n          debutYear: unitData.debutYear,\n          official: Boolean(unitData.official),\n          subUnit: Boolean(unitData.subUnit),\n        };\n      });\n\n      // TO-DO: sort units officials > unnoficial, unit > subunits, by year\n    }\n\n    return result;\n  },\n\n  color: (data, id) => {\n    data = _.cloneDeep(data);\n\n    const number = Number(id.substring(3));\n\n    return {\n      id: number,\n      type: 'color',\n      attributes: {\n        count: data.count || 0,\n        hex: data.hex,\n        name: data.name,\n        rgb: utils.parseColorRGB(data.rgb),\n      },\n    };\n  },\n\n  distribution: (data, id, songData) => {\n    data = _.cloneDeep(data);\n\n    return {\n      id: data.id || id,\n      type: 'distribution',\n      attributes: {\n        createdBy: data.createdBy || null,\n        modifiedBy: data.modifiedBy || null,\n        private: Boolean(data.private),\n        category: getEnum(data.category, 'CATEGORY'),\n        rates: data.rates,\n        features: data.features || {},\n        songId: data.songId,\n        unitId: data.unitId,\n        relationships: utils.mergeDistributionRelationships(\n          data.relationships,\n          data.legend\n        ),\n        song: songData,\n      },\n    };\n  },\n\n  distributionSummary: (data, id) => {\n    data = _.cloneDeep(data);\n\n    return {\n      id: data.id || id,\n      createdBy: data.createdBy || null,\n      modifiedBy: data.modifiedBy || null,\n      category: getEnum(data.category, 'CATEGORY'),\n      rates: data.rates,\n      features: data.features || {},\n      private: Boolean(data.private),\n      sondId: data.songId,\n      songTitle: data.songInfo.title,\n      songArtist: data.songInfo.originalArtist,\n    };\n  },\n\n  member: (data, id) => {\n    data = _.cloneDeep(data);\n\n    const referenceArtists = data.referenceArtists || [];\n\n    return {\n      id: data.id || id,\n      type: 'member',\n      attributes: {\n        age: data.birthdate ? utils.calculateAge(data.birthdate) : 0,\n        birthdate: data.birthdate || 0,\n        color: data.color,\n        createdBy: data.createdBy || null,\n        gender: getEnum(data.gender, 'GENDER'),\n        hide: Boolean(data.hide),\n        initials: data.initials || utils.buildMemberInitials(data.name),\n        modifiedBy: data.modifiedBy || null,\n        name: data.name,\n        nationality: getEnum(data.nationality, 'NATIONALITY'),\n        positions: data.positions || [],\n        private: Boolean(data.private),\n        primaryGenre: getEnum(data.primaryGenre, 'GENRE'),\n        referenceArtists,\n        referenceArtistsQuery: referenceArtists\n          .reduce((raq, ra) => raq + ra.name, '')\n          .replace(/[{()}]/g, '')\n          .toLowerCase(),\n        tags: data.tags || [],\n      },\n    };\n  },\n\n  typeahead: (data, type) => {\n    let text = data.attributes.name;\n\n    if (type === 'member') {\n      const referenceArtistsName =\n        data.attributes.referenceArtists[0].name || UNKNOWN;\n      text = `${data.attributes.name} (${referenceArtistsName})`;\n    }\n\n    return {\n      text,\n      value: data.id,\n    };\n  },\n\n  song: (data, id) => {\n    data = _.cloneDeep(data);\n\n    return {\n      id: data.id || id,\n      type: 'song',\n      attributes: {\n        album: data.album || UNKNOWN,\n        createdBy: data.createdBy || null,\n        modifiedBy: data.modifiedBy || null,\n        private: Boolean(data.private),\n        distribution: utils.parseSongDistribution(data.distribution),\n        gender: data.gender || UNKNOWN,\n        groupSize: data.groupSize || 0,\n        originalArtistId: data.originalArtist.artistId || null,\n        originalArtistName: data.originalArtist.name,\n        query: `${data.title} ${data.originalArtist.name} ${data.album ||\n          ''}`.toLowerCase(),\n        single: Boolean(data.single),\n        title: data.title,\n        videoId: data.videoId,\n        hasMusicVideo: Boolean(!data.hasNoMusicVideo),\n        hasRap: Boolean(data.hasRap),\n        hasDanceBreak: Boolean(data.hasDance),\n      },\n    };\n  },\n\n  unit: (data, id, additionalData) => {\n    data = _.cloneDeep(data);\n\n    const result = {\n      id: data.id || id,\n      type: 'unit',\n      attributes: {\n        artistId: data.artistId || null,\n        createdBy: data.createdBy || null,\n        modifiedBy: data.modifiedBy || null,\n        debutYear: data.debutYear,\n        name: data.name,\n        official: Boolean(!data.unofficial),\n        subUnit: Boolean(data.subUnit),\n        private: Boolean(data.private),\n      },\n    };\n\n    // Add artist name\n    if (additionalData.artist) {\n      result.attributes.artistName = additionalData.artist.name;\n    } else {\n      result.attributes.artistName = UNKNOWN;\n    }\n\n    // Parse and add members, then determine genre\n    if (additionalData.members) {\n      const serializedMembers = additionalData.members.map(m =>\n        serialize(m, m.id, 'member')\n      );\n      const parsedUnitMembers = utils.parseUnitMembersPositions(data.members);\n\n      result.attributes.members = utils.mergeUnitMembers(\n        serializedMembers,\n        parsedUnitMembers\n      );\n\n      result.attributes.gender = utils.determineUnitGenre(serializedMembers);\n    } else {\n      result.attributes.members = [];\n      result.attributes.gender = UNKNOWN;\n    }\n\n    // Add distributions\n    if (additionalData.distributions) {\n      // do stuff\n      const serializedDistributions = additionalData.distributions.map(d =>\n        serialize(d, d.id, 'distributionSummary')\n      );\n\n      result.attributes.distributions = utils.categorizeDistributions(\n        serializedDistributions\n      );\n    } else {\n      result.attributes.distributions = {\n        official: [],\n        custom: [],\n        rework: [],\n      };\n    }\n\n    // Calculate averages\n    result.attributes.members = utils.calculateUnitAverages(\n      result.attributes.members,\n      result.attributes.distributions\n    );\n\n    return result;\n  },\n\n  user: (data, id, additionalData) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'user',\n      attributes: {\n        email: data.email,\n        favoriteArtists: data.favoriteArtists || {}, // Oject(Reference(Artist):Boolean)\n        favoriteMembers: data.favoriteMembers || {}, // Oject(Reference(Member):Boolean)\n        biases: data.biases || {}, // Object(Reference(Artist):Reference(Member))\n        isAdmin: Boolean(data.isAdmin),\n        latestUnits: data.latesUnits || [],\n        session: data.session || {},\n        displayName: additionalData.displayName || null, // merged from auth\n        photoURL: additionalData.photoURL || null, // merged from auth\n      },\n    };\n  },\n};\n\n/**\n * Serializes a single entry\n * @category Function\n * @param {object} entity the data entity from the database\n * @param {string} id the id of the entity\n * @param {string} type the serializer type\n * @returns {object} a serialized ]data object\n */\nexport const serialize = (entity, id, type, additionalData) => {\n  return {\n    data: serializers[type](entity, id, additionalData),\n  };\n};\n\n/**\n * Serializes a collection of entries\n * @category Function\n * @param {object} collection the data collection\n * @param {string} type the serializer type\n * @param {boolean} includeTypeahead\n * @param {string} sortBy\n * @returns {object} a serialized collection of data\n */\nexport const serializeCollection = (\n  collection,\n  type,\n  includeTypeahead = false,\n  sortBy = ''\n) => {\n  const result = {};\n\n  let collectionEntries = Object.entries(collection);\n\n  if (sortBy) {\n    collectionEntries = _.sortBy(collectionEntries, [\n      a => a[1][sortBy].toLowerCase(),\n    ]);\n  }\n\n  const serializedCollectionResult = collectionEntries.map(([id, value]) =>\n    serializers[type](value, id)\n  );\n\n  result.data = serializedCollectionResult;\n\n  if (includeTypeahead) {\n    const serializedTypeahead = serializedCollectionResult.map(value =>\n      serializers.typeahead(value, type)\n    );\n\n    result.meta = {\n      typeahead: serializedTypeahead,\n    };\n  }\n\n  return result;\n};\n","/* eslint arrow-body-style: 0 */\n\nimport utils from './utils';\n\nconst deserializers = {\n  member: {\n    put: (data, uid) => {\n      // Remove any falsy value\n      utils.removeFalsyValues(data);\n      // Add user\n      data.modifiedBy = uid;\n      // Remove id\n      delete data.id;\n      // Convert birthdate into number\n      const year = data.birthdate.substring(0, 4);\n      const mouth = data.birthdate.substring(5, 7);\n      const day = data.birthdate.substring(8, 10);\n      data.birthdate = Number(`${year}${mouth}${day}`);\n\n      return data;\n    },\n  },\n\n  user: {\n    put: (data, _, subRoute) => {\n      // Remove any falsy value\n      utils.removeFalsyValues(data);\n\n      if (subRoute) {\n        return {\n          [subRoute]: data,\n        };\n      }\n\n      return data;\n    },\n  },\n};\n\n/**\n * Deserializes a single entry\n * @category Function\n * @param {object} entity the data entity from the database\n * @param {string} type the deserializer type\n * @param {string} method the method being triggered (post or put)\n * @param {string} subRoute if present, result will be wrapped in this subroute as an object key\n * @returns {object} a deerialized data object\n */\nexport const deserialize = (\n  entity,\n  type,\n  method = 'post',\n  uid = null,\n  subRoute = null\n) => {\n  return deserializers[type][method](entity, uid, subRoute);\n};\n\nexport default deserialize;\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_authenticated\", \"_admin\", \"_loaded\", _uid, \"_user\", \"_db\", \"_reload\", \"_userAdditionalInfo\"] }] */\n/* eslint class-methods-use-this: 0 */\n\nimport firebase from 'firebase';\nimport { fb, googleProvider, userSession } from './firebase';\nimport utils from './utils';\nimport { serializeCollection, serialize } from './serializers';\nimport { deserialize } from './deserializers';\n\nconst WAIT_AUTH_TIME = 2000;\nconst WAIT_DB_TIME = 3500;\n\nlet dbRef = null;\n\nclass API {\n  constructor() {\n    this._authenticated = false;\n    this._admin = false;\n    this._loaded = false;\n    this._uid = null;\n    this._user = {};\n    this._db = {\n      artists: {},\n      colors: {},\n      distributions: {},\n      members: {},\n      relationships: {},\n      songs: {},\n      units: {},\n      users: {},\n      userAdditionalInfo: {\n        displayName: null,\n        photoURL: null,\n      },\n    };\n    this._reload = {\n      artists: true,\n      colors: true,\n      distributions: true,\n      members: true,\n      relationships: true,\n      songs: true,\n      units: true,\n      users: true,\n    };\n\n    // TO-DO: REMOVE?\n    // this.init();\n  }\n\n  /**\n   * Gets basic information about database\n   * @category Getter\n   * @returns {Object}\n   */\n  get state() {\n    return {\n      admin: this._authenticated ? this._admin : false,\n      authenticated: this._authenticated,\n      loaded: this._loaded,\n      user: this._authenticated ? this._user : {},\n    };\n  }\n\n  /**\n   * Creates a reference to the firebase database and updates api loaded status\n   * @category Method\n   * @returns {Boolean}\n   */\n  init() {\n    this.print('Initializing database...');\n\n    return new Promise(async (resolve, reject) => {\n      dbRef = await fb.database();\n\n      if (dbRef) {\n        this._loaded = true;\n\n        // Verify if there is an active previous session for the user\n        await this.auth();\n        return resolve(this.state);\n      }\n\n      const errorMessage = 'Failed to load firebase database';\n      this.printError(errorMessage);\n      return reject(Error(errorMessage));\n    });\n  }\n\n  /**\n   * Verifies if the users is still logged in from a previous session\n   * @category Method\n   * @returns {Object} user\n   */\n  auth() {\n    this.print('Running auth...');\n\n    return new Promise(async resolve => {\n      if (!this._loaded) {\n        await utils.wait(WAIT_AUTH_TIME);\n      }\n\n      const { user } = userSession;\n\n      if (user.emailVerified) {\n        this._authenticated = true;\n        this._uid = user.uid;\n        this._db.userAdditionalInfo = {\n          displayName: user.displayName,\n          photoURL: user.photoURL,\n        };\n\n        let userResponse = {};\n\n        try {\n          userResponse = await this.get(`/users/${user.uid}`);\n        } catch (_) {\n          userResponse = await this.post(`/users/${user.uid}`);\n        }\n\n        this._admin = userResponse.data.attributes.isAdmin;\n        this._user = userResponse;\n        return resolve(userResponse);\n      }\n      this._authenticated = false;\n      this._uid = null;\n      return resolve({});\n    });\n  }\n\n  async login() {\n    this.print('Running login...');\n\n    return new Promise(async (resolve, reject) => {\n      let result;\n\n      try {\n        await fb.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n        result = await fb.auth().signInWithPopup(googleProvider);\n      } catch (error) {\n        const errorMessage = `Failed to login: ${error.message}`;\n        this.printError(errorMessage);\n        return reject(Error(errorMessage));\n      }\n\n      try {\n        const { user } = result;\n        if (user.emailVerified) {\n          this._authenticated = true;\n          this._uid = user.uid;\n          this._db.userAdditionalInfo = {\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n          };\n\n          let userResponse;\n          try {\n            userResponse = await this.get(`/users/${user.uid}`);\n          } catch (_) {\n            userResponse = await this.post(`/users/${user.uid}`);\n          }\n\n          this._admin = userResponse.data.attributes.isAdmin;\n          result = userResponse;\n        }\n      } catch (error) {\n        const errorMessage = `Failed to login: ${error.message}`;\n        this.printError(errorMessage);\n        return reject(Error(errorMessage));\n      }\n      return resolve(result);\n    });\n  }\n\n  async logoff() {\n    this.print('Running logout...');\n\n    return new Promise(async (resolve, reject) => {\n      try {\n        await fb.auth().signOut();\n        this._authenticated = false;\n        this._uid = null;\n        this._admin = false;\n        this._user = {};\n      } catch (error) {\n        const errorMessage = `Failed to logout: ${error.message}`;\n        this.printError(errorMessage);\n        return reject(Error(errorMessage));\n      }\n\n      return resolve();\n    });\n  }\n\n  /**\n   * Prints warning message in the console\n   * @category Internal Method\n   * @param {String}message the message string\n   * @param {String} path the api path\n   * @returns undefined\n   */\n  print(message, path = '') {\n    if (process.env.NODE_ENV !== 'test') console.warn(message, path); // eslint-disable-line\n  }\n\n  /**\n   * Prints error message in the console\n   * @category Internal Method\n   * @param {String} errorMessage the error message string\n   * @returns undefined\n   */\n  printError(errorMessage) {\n    if (process.env.NODE_ENV !== 'test') console.error(errorMessage); // eslint-disable-line\n  }\n\n  /**\n   * Build error message depending on the API state\n   * @category Internal Method\n   * @param {String} action the request action type (GET, POST, PATCH, PUT, DELETE)\n   * @param {String} errorMessage the error message string\n   * @returns {String} error message\n   */\n  buildErrorMessage(action = '', errorMessage = '') {\n    let message = 'API failed with unkown error';\n\n    if (!this._loaded) {\n      message = `Unable to perform ${action} action, database is not ready`;\n    } else if (!this._authenticated) {\n      message = `Unable to perform ${action} action, you are not logged in`;\n    } else if (errorMessage) {\n      message = `Unable to perform ${action} action: ${errorMessage}`;\n    }\n    this.printError(message);\n    return message;\n  }\n\n  // TO-DO: Add resync database function\n\n  /**\n   * Gets data from the database based on a path\n   * @category Method\n   * @param {String} path the get request path\n   * @returns {Promise} response\n   */\n  async get(path) {\n    this.print('Fetching data:', path);\n\n    return new Promise(async (resolve, reject) => {\n      /*\n       * List of possible get calls:\n       * /artists\n       * /artists/<id>\n       * /colors\n       * /members\n       * /units/<id>\n       * /user/<id>\n       */\n      let result = null;\n\n      if (!this._loaded || !this._authenticated) {\n        await utils.wait(WAIT_DB_TIME);\n\n        if (!this._loaded || !this._authenticated) {\n          const errorMessage = this.buildErrorMessage('GET');\n          return reject(Error(errorMessage));\n        }\n      }\n\n      const route = utils.breadcrumble(path);\n\n      switch (route.root) {\n        // API/artists\n        case 'artists':\n          // API/artists/id\n          if (route.referenceId) {\n            result = await getFunctions.fetchArtist(\n              route.referenceId,\n              this._db,\n              this._reload\n            );\n          }\n          // API/artists\n          else {\n            result = await getFunctions.fetchArtists(this._db, this._reload);\n          }\n          break;\n        // API/colors\n        case 'colors':\n          result = await getFunctions.fetchColors(this._db, this._reload);\n          break;\n        // API/distributions\n        case 'distributions':\n          if (route.referenceId) {\n            result = await getFunctions.fetchDistribution(\n              route.referenceId,\n              this._db,\n              this._reload\n            );\n          }\n          break;\n        // API/members\n        case 'members':\n          result = await getFunctions.fetchMembers(this._db, this._reload);\n          break;\n        // API/membersongss\n        case 'songs':\n          result = await getFunctions.fetchSongs(this._db, this._reload);\n          break;\n        // API/units\n        case 'units':\n          // API/units/<id>\n          if (route.referenceId) {\n            result = await getFunctions.fetchUnit(\n              route.referenceId,\n              this._db,\n              this._reload\n            );\n          }\n          break;\n        // API/users\n        case 'users':\n          // API/users/<id>\n          if (route.referenceId) {\n            result = await getFunctions.fetchUser(\n              route.referenceId,\n              this._db,\n              this._reload\n            );\n          }\n          break;\n        default:\n          return reject(\n            Error(`Unable to perform GET action: path ${path} does not exist`)\n          );\n      }\n\n      if (!result) {\n        return reject(\n          Error(`Unable to perform GET action: an unkown error has occured`)\n        );\n      }\n\n      return resolve(result);\n    });\n  }\n\n  /**\n   * Updates data in the database based on a path\n   * @category Method\n   * @param {String} path the put request path\n   * @returns {Promise} response\n   */\n  async put(path, body) {\n    this.print('Updating data:', path);\n\n    return new Promise(async (resolve, reject) => {\n      /*\n       * List of possible get calls:\n       * /users/<id>/favorite-artists\n       * /users/<id>/favorite-members\n       * /users/<id>/biases\n       */\n      let result = {};\n\n      if (!this._loaded || !this._authenticated) {\n        await utils.wait(WAIT_DB_TIME);\n\n        if (!this._loaded || !this._authenticated) {\n          const errorMessage = this.buildErrorMessage('GET');\n          return reject(Error(errorMessage));\n        }\n      }\n\n      const route = utils.breadcrumble(path);\n\n      switch (route.root) {\n        // API/members\n        case 'members':\n          // API/members/<id>\n          if (route.referenceId) {\n            result = await putFunctions.updateMember(\n              route.referenceId,\n              body,\n              this._db,\n              this._uid\n            );\n          } else {\n            return reject(\n              Error(\n                `Unable to perform PUT action for member, path ${path} does not exist`\n              )\n            );\n          }\n          break;\n        // API/users\n        case 'users':\n          // API/users/<id>/favorite-artists\n          if (route.subPath === 'favorite-artists') {\n            result = await putFunctions.updateUserFavoriteArtists(\n              route.referenceId,\n              body,\n              this._db,\n              this._reload\n            );\n            // API/users/<id>/favorite-members\n          } else if (route.subPath === 'favorite-members') {\n            result = await putFunctions.updateUserFavoriteMembers(\n              route.referenceId,\n              body,\n              this._db,\n              this._reload\n            );\n            // API/users/<id>/biases\n          } else if (route.subPath === 'biases') {\n            result = await putFunctions.updateUserBiases(\n              route.referenceId,\n              body,\n              this._db,\n              this._reload\n            );\n          } else {\n            return reject(\n              Error(\n                `Unable to perform PUT action for user, path ${path} does not exist`\n              )\n            );\n          }\n          break;\n        default:\n          return reject(\n            Error(`Unable to perform PUT action, path ${path} does not exist`)\n          );\n      }\n\n      // TO-DO: Catch errors in result and reject\n\n      return resolve(result);\n    });\n  }\n}\n\nconst getFunctions = {\n  // Fetches list of artists\n  fetchArtists: async (db, reload) => {\n    if (reload.artists === true) {\n      let response = {};\n      await dbRef.ref(`/artists`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists = response;\n      reload.artists = false;\n    }\n    return serializeCollection(db.artists, 'artist', true, 'name');\n  },\n  // Fetches a single artist\n  fetchArtist: async (id, db, reload) => {\n    let response = {};\n    if (db.artists[id] === undefined || reload.artists === true) {\n      await dbRef.ref(`/artists/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists[id] = response;\n    }\n\n    const unitIds = response.unitIds || db.artists[id].unitIds || [];\n    let units;\n    if (unitIds.length > 0) {\n      units = await getFunctions.fetchUnitsSet(unitIds, db, reload);\n    }\n\n    return serialize(db.artists[id], id, 'artist', units);\n  },\n  // Fetches list of colors\n  fetchColors: async (db, reload) => {\n    if (reload.colors === true) {\n      let response = {};\n      await dbRef.ref(`/colors`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.colors = response;\n      reload.colors = false;\n    }\n    return serializeCollection(db.colors, 'color', true);\n  },\n  // Fetches a single distribution\n  fetchDistribution: async (id, db, reload) => {\n    let response = {};\n    if (db.distributions[id] === undefined || reload.distributions === true) {\n      await dbRef.ref(`/distributions/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.distributions[id] = response;\n    }\n\n    // Get song\n    const song = await getFunctions.fetchSong(response.songId, db, reload);\n\n    return serialize(db.distributions[id], id, 'distribution', song);\n  },\n  // Fetches set of distributions (used by /unit)\n  fetchDistributionsSet: async (ids, db, reload) => {\n    const responses = await ids.map(id => {\n      if (db.distributions[id] === undefined || reload.distributions === true) {\n        return new Promise(async (resolve, reject) => {\n          try {\n            await dbRef.ref(`/distributions/${id}`).once('value', snapshot => {\n              const response = snapshot.val();\n              db.distributions[id] = response;\n            });\n          } catch (error) {\n            return reject(error);\n          }\n          return resolve({ ...db.distributions[id], id });\n        });\n      }\n      return { ...db.distributions[id], id };\n    });\n\n    return Promise.all(responses);\n  },\n  // Fetches list of members\n  fetchMembers: async (db, reload) => {\n    if (reload.members === true) {\n      let response = {};\n      await dbRef.ref(`/members`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.members = response;\n      reload.members = false;\n    }\n    return serializeCollection(db.members, 'member', true, 'name');\n  },\n  // Fetches set of members (used by /unit)\n  fetchMembersSet: async (ids, db, reload) => {\n    const responses = await ids.map(id => {\n      if (db.members[id] === undefined || reload.members === true) {\n        return new Promise(async (resolve, reject) => {\n          try {\n            await dbRef.ref(`/members/${id}`).once('value', snapshot => {\n              const response = snapshot.val();\n              db.members[id] = response;\n            });\n          } catch (error) {\n            return reject(error);\n          }\n          return resolve({ ...db.members[id], id });\n        });\n      }\n      return { ...db.members[id], id };\n    });\n\n    return Promise.all(responses);\n  },\n  // Fetches a single song\n  fetchSong: async (id, db, reload) => {\n    if (db.songs[id] === undefined || reload.songs === true) {\n      let response = {};\n      await dbRef.ref(`/songs/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs[id] = response;\n    }\n\n    return serialize(db.songs[id], id, 'song');\n  },\n  // Fetches list of songs\n  fetchSongs: async (db, reload) => {\n    if (reload.songs === true) {\n      let response = {};\n      await dbRef.ref(`/songs`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs = response;\n      reload.songs = false;\n    }\n    return serializeCollection(db.songs, 'song', true, 'title');\n  },\n  // Fetches set of units (used by /artist)\n  fetchUnitsSet: async (ids, db, reload) => {\n    const responses = await ids.map(id => {\n      if (db.units[id] === undefined || reload.units === true) {\n        return new Promise(async (resolve, reject) => {\n          try {\n            await dbRef.ref(`/units/${id}`).once('value', snapshot => {\n              const response = snapshot.val();\n              db.units[id] = response;\n            });\n          } catch (error) {\n            return reject(error);\n          }\n          return resolve({ ...db.units[id], id });\n        });\n      }\n      return { ...db.units[id], id };\n    });\n\n    return Promise.all(responses);\n  },\n  // Fetches a single unit\n  fetchUnit: async (id, db, reload) => {\n    if (db.units[id] === undefined || reload.units === true) {\n      let response;\n      await dbRef.ref(`/units/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.units[id] = response;\n    }\n\n    const unit = db.units[id];\n\n    const additionalInformation = {};\n\n    const { artistId, members, distributionIds } = unit;\n\n    // Get artist name\n    if (artistId) {\n      let artistResponse;\n      if (db.artists[artistId] === undefined || reload.artists === true) {\n        await dbRef.ref(`/artists/${artistId}`).once('value', snapshot => {\n          artistResponse = snapshot.val();\n        });\n        db.artists[artistId] = artistResponse;\n      }\n      additionalInformation.artist = db.artists[artistId];\n    }\n\n    // Get members\n    if (members) {\n      const membersIds = utils.getMembersIdsFromUnit(members);\n      if (membersIds.length > 0) {\n        additionalInformation.members = await getFunctions.fetchMembersSet(\n          membersIds,\n          db,\n          reload\n        );\n      }\n    }\n\n    // Get distriutions\n    if (distributionIds && distributionIds.length > 0) {\n      additionalInformation.distributions = await getFunctions.fetchDistributionsSet(\n        distributionIds,\n        db,\n        reload\n      );\n    }\n\n    return serialize(db.units[id], id, 'unit', additionalInformation);\n  },\n  // Fetches a single user\n  fetchUser: async (id, db, reload) => {\n    if (db.users[id] === undefined || reload.users === true) {\n      let response = {};\n      await dbRef.ref(`/users/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.users[id] = response;\n      reload.users = false;\n    }\n    return serialize(db.users[id], id, 'user', db.userAdditionalInfo);\n  },\n};\n\nconst putFunctions = {\n  // Update Member\n  updateMember: async (id, body, db, uid) => {\n    const key = id;\n    const deserializedBody = deserialize(body, 'member', 'put', uid);\n    await dbRef.ref(`/members/${key}`).set(deserializedBody, error => {\n      if (error) {\n        const message = `Failed to update Member ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    // // Replace member in the DB\n    db.members[id] = deserializedBody;\n    return getFunctions.fetchMembers(db, false);\n  },\n  // Update user biases\n  updateUserBiases: async (id, body, db, reload) => {\n    const key = id;\n    const deserializedBody = deserialize(body, 'user', 'put', 'biases');\n    await dbRef.ref(`/users/${key}/biases`).set(deserializedBody, error => {\n      reload.users = true;\n      if (error) {\n        const message = `Failed to update User's Biases ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return getFunctions.fetchUser(id, db, reload);\n  },\n  // Update user favorite artists\n  updateUserFavoriteArtists: async (id, body, db, reload) => {\n    const key = id;\n    const extendedBody = { ...db.users[id].favoriteArtists, ...body };\n    const deserializedBody = deserialize(\n      extendedBody,\n      'user',\n      'put',\n      'favoriteArtists'\n    );\n    await dbRef\n      .ref(`/users/${key}/favoriteArtists`)\n      .set(deserializedBody, error => {\n        reload.users = true;\n        if (error) {\n          const message = `Failed to update User's Favorite Artists ${key}: ${JSON.stringify(\n            body\n          )}`;\n          throw new Error(`${message}: ${error}`);\n        }\n      });\n    return getFunctions.fetchUser(id, db, reload);\n  },\n  // Update user favorite members\n  updateUserFavoriteMembers: async (id, body, db, reload) => {\n    const key = id;\n    const extendedBody = { ...db.users[id].favoriteMembers, ...body };\n    const deserializedBody = deserialize(\n      extendedBody,\n      'user',\n      'put',\n      'favoriteMembers'\n    );\n    await dbRef\n      .ref(`/users/${key}/favoriteMembers`)\n      .set(deserializedBody, error => {\n        reload.users = true;\n        if (error) {\n          const message = `Failed to update User's Favorite Members ${key}: ${JSON.stringify(\n            body\n          )}`;\n          throw new Error(`${message}: ${error}`);\n        }\n      });\n    return getFunctions.fetchUser(id, db, reload);\n  },\n};\n\nexport default new API();\n","/* eslint wrap-iife: 0 */\n/* eslint func-names: 0 */\n\nimport _ from 'lodash';\n\n/**\n * Parsers bem classes accepting two or more arguments\n * @param {String} block\n * @param {String} modifiers\n * @param {String} element\n * @param {extra} extras\n * @returns {string} bem-class\n */\nconst bem = (...args) => {\n  const block = args[0];\n  let modifiers = args[1] || '';\n  let element = args[2];\n  let extras = args[3] || [];\n\n  const hasBlock = block !== undefined && block !== null && block !== '';\n  const hasModifiers =\n    modifiers !== undefined &&\n    modifiers !== null &&\n    modifiers !== '' &&\n    modifiers.length > 0;\n  const hasElement =\n    element !== undefined && element !== null && element !== '';\n  const hasExtras =\n    extras !== undefined &&\n    extras !== null &&\n    extras !== '' &&\n    extras.length > 0;\n\n  // Prepare modifiers\n  if (hasModifiers) {\n    if (typeof modifiers === 'string') {\n      modifiers = [modifiers];\n    }\n    modifiers = modifiers.map(m => `--${m}`);\n  }\n  // Prepare element\n  if (hasElement) {\n    element = `__${element}`;\n  }\n  // Prepare Extras\n  if (hasExtras) {\n    if (typeof extras === 'string') {\n      extras = [extras];\n    }\n  }\n\n  // No Block\n  if (!hasBlock) {\n    throw new Error('Block string missing');\n  }\n\n  let classes = block;\n\n  // Only Modifiers\n  if (hasModifiers && !hasElement) {\n    modifiers.forEach(m => {\n      classes += ` ${block}${m}`;\n    });\n  }\n\n  // Only Element\n  if (hasElement && !hasModifiers) {\n    classes = ` ${block}${element}`;\n  }\n\n  // Modifiers and Element\n  if (hasElement && hasModifiers) {\n    classes += `${element}`;\n    modifiers.forEach(m => {\n      classes += ` ${block}${element}${m}`;\n    });\n  }\n\n  return `${classes} ${extras.join(' ')}`.trim();\n};\n\n/**\n * Loops through members and reassign colors if they are duplicated\n * @param {Array} members\n * @returns {Array} members with unique colors\n */\nconst ensureColorUniqueness = members => {\n  const membersList = _.cloneDeep(members);\n  const dict = {};\n  const refactoredMembers = [];\n  // Loop through members and make color dict\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    if (dict[colorId] === undefined) {\n      dict[colorId] = 1;\n    } else {\n      dict[colorId] += 1;\n    }\n  });\n\n  // Loop again and check for uniqueness, unique stays\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    const altColorId = member.altColor.id;\n    if (dict[colorId] > 1) {\n      if (dict[altColorId] === undefined) {\n        const oldColor = member.color;\n        member.color = member.altColor;\n        member.altColor = oldColor;\n      } else {\n        console.warn(`Duplicated color for member ${member.id}`);\n      }\n    }\n    refactoredMembers.push(member);\n  });\n  return refactoredMembers;\n};\n\nconst capitalizeWord = (str, separator = ' ') =>\n  str\n    .toString()\n    .split(separator)\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(separator);\n\nconst spinalCaseWord = str =>\n  str\n    .toLowerCase()\n    .split(' ')\n    .join('-');\n\nconst parseBirthDate = d => {\n  const date = `${d}`;\n  if (date.length < 5) {\n    return date;\n  }\n  if (date.length === 8) {\n    const year = date.substring(0, 4);\n    const month = date.substring(4, 6);\n    const day = date.substring(6, 8);\n    return `${month}/${day}/${year}`;\n  }\n  return '?';\n};\n\nconst parseBirthdateToInput = (d = 20000101) => {\n  const bd = `${d}`;\n  return `${bd.substring(0, 4)}-${bd.substring(4, 6)}-${bd.substring(6, 8)}`;\n};\n\nconst parseResponse = response => {\n  function responseParser(obj) {\n    return {\n      id: obj.id,\n      ...obj.attributes,\n    };\n  }\n\n  // Response has a single object instance without the \"data\" object\n  if (response && response.id && response.attributes) {\n    return responseParser(response);\n  }\n\n  // Response has a \"data\" object\n  if (response && response.data) {\n    response = response.data;\n\n    // If response.data is not an array\n    if (response && response.id && response.attributes) {\n      return responseParser(response);\n    }\n\n    if (Array.isArray(response)) {\n      const result = [];\n      for (let i = 0; i < response.length; i++) {\n        result.push(responseParser(response[i]));\n      }\n      return result;\n    }\n  }\n\n  throw new Error('parserResponse failed. Object is not a response');\n};\n\nconst parseResponseToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = {\n          id: instance.id,\n          ...instance.attributes,\n        };\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseArrayToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = instance;\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseQueryParams = query => {\n  if (!query) return null;\n\n  if (query[0] === '?') {\n    query = query.substring(1);\n  }\n\n  const params = {};\n  query.split('&').forEach(item => {\n    const pair = item.split('=');\n    const key = pair[0];\n    if (key) {\n      params[key] = pair[1] || null;\n    }\n  });\n\n  return params;\n};\n\nconst humanize = (string, option = 'Sentence') => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or -\n  string = string.replace(/([\\-|\\_])/g, ' '); // eslint-disable-line\n\n  function captalizeFirstLetter(word) {\n    return word[0].toUpperCase() + word.substring(1);\n  }\n\n  switch (option) {\n    case 'Sentence':\n      return captalizeFirstLetter(string);\n    case 'Capital':\n      return string\n        .split(' ')\n        .map(word => captalizeFirstLetter(word))\n        .join(' ');\n    default:\n      return string;\n  }\n};\n\nconst camelCase = string => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or -\n  string = string.replace(/([\\-|\\_])/g, ' '); // eslint-disable-line\n\n  return string\n    .split(' ')\n    .map((word, index) => {\n      if (index === 0) return word;\n      return word[0].toUpperCase() + word.substring(1);\n    })\n    .join('');\n};\n\nconst spiralCase = string => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or ' ' or :\n  return string.replace(/([\\-\\_\\ \\:])/g, '-'); // eslint-disable-line\n};\n\nconst generateAdminCode = (numDigits = 4) => {\n  const CHARACTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let code = '';\n  for (let i = 0; i < numDigits; i++) {\n    code += CHARACTERS.charAt(Math.floor(Math.random() * CHARACTERS.length));\n  }\n  return code;\n};\n\nconst getColorNumber = (colorId = 'col000000') => Number(colorId.substring(7));\n\nconst spiralBirthdate = date => {\n  const dateStr = date.toString();\n  return `${dateStr.substring(0, 4)}-${dateStr.substring(\n    4,\n    6\n  )}-${dateStr.substring(6)}`;\n};\n\nconst makePositionsEditable = positions => {\n  const result = {};\n  positions.forEach(position => {\n    const pos = spiralCase(position);\n    result[pos] = pos;\n  });\n  return result;\n};\n\nconst insertAtCursor = (field, valueToInsert) => {\n  if (\n    (field.selectionStart || field.selectionStart === 0) &&\n    field.selectionStart === field.selectionEnd\n  ) {\n    const startPos = field.selectionStart;\n    const endPos = field.selectionEnd;\n    field.value =\n      field.value.substring(0, startPos) +\n      valueToInsert +\n      field.value.substring(endPos, field.value.length);\n  }\n  return field.value;\n};\n\nconst getMostImportantPosition = positions => {\n  const POSITIONS_IMPORTANT_ORDER = [\n    'ALL',\n    'NONE',\n    'MAIN_VOCALIST',\n    'MAIN_RAPPER',\n    'MAIN_DANCER',\n    'LEAD_VOCALIST',\n    'LEAD_RAPPER',\n    'LEAD_DANCER',\n    'VOCALIST',\n    'RAPPER',\n    'DANCER',\n  ];\n\n  for (let i = 0; i < POSITIONS_IMPORTANT_ORDER.length; i++) {\n    if (positions.includes(POSITIONS_IMPORTANT_ORDER[i])) {\n      return POSITIONS_IMPORTANT_ORDER[i];\n    }\n  }\n\n  return 'VOCALIST';\n};\n\nconst removeSpecialCharacters = str =>\n  str.replace(/(\\*|★|&| |-|\\(|\\)|%|\\.|')+/g, '');\n\nexport default {\n  bem,\n  camelCase,\n  capitalizeWord,\n  ensureColorUniqueness,\n  generateAdminCode,\n  getColorNumber,\n  getMostImportantPosition,\n  humanize,\n  insertAtCursor,\n  makePositionsEditable,\n  parseBirthDate,\n  parseBirthdateToInput,\n  parseQueryParams,\n  parseArrayToObject,\n  parseResponse,\n  parseResponseToObject,\n  removeSpecialCharacters,\n  spiralBirthdate,\n  spiralCase,\n  spinalCaseWord,\n};\n","import { all, call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport _ from 'lodash';\nimport { toastr } from 'react-redux-toastr';\n\n// import API from '../api';\nimport API from '../api2';\n\nimport { types } from '../reducers';\nimport utils from '../utils';\n\n// Delay helper to make API look more realistic\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nconst DELAY_DURATION = process.env.NODE_ENV === 'development' ? 500 : 0;\n\n// API Workers\n\n/**\n * Initializes database, check for existing auth session\n * @param {object} action\n */\nfunction* initializer(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.init();\n\n    if (response.loaded) {\n      yield put({ type: types.SET_DATABASE_READY, payload: response.loaded });\n    }\n\n    if (response.user.data && response.user.data.id) {\n      const user = utils.parseResponse(response.user);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Welcome back!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    } else {\n      yield delay(2000 + DELAY_DURATION);\n      yield call(runAuth, { action: 'RUN_AUTH' });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: error,\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* runAuth(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  try {\n    const response = yield API.auth();\n\n    if (response.data && response.data.id) {\n      const user = utils.parseResponse(response);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Welcome back!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: error,\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestArtists(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/artists');\n\n    const parsedArtists = utils.parseResponse(response);\n    yield put({ type: types.SET_ARTISTS, payload: parsedArtists });\n\n    const { typeahead } = response.meta;\n    yield put({ type: types.SET_ARTISTS_TYPEAHEAD, payload: typeahead });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load artists database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestArtist(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { artistId } = action;\n  try {\n    const response = yield API.get(`/artists/${artistId}`);\n    const selectedArtist = utils.parseResponse(response);\n    yield put({ type: types.SET_SELECTED_ARTIST, payload: selectedArtist });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load artist ${artistId} from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestColors(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/colors');\n    const colorsList = utils.parseResponseToObject(response);\n    yield put({ type: types.SET_COLORS, payload: colorsList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load colors database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\n// TODO: REFACTOR\nfunction* requestDistribution(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { distributionId } = action;\n\n  let selectedDistribution = {};\n\n  // Fetch Distribution\n  try {\n    const response = yield API.get(`/distributions/${distributionId}`);\n    selectedDistribution = utils.parseResponse(response);\n\n    yield put({\n      type: types.SET_ACTIVE_SONG,\n      payload: utils.parseResponse(selectedDistribution.song),\n    });\n    const selectedDistributionWithoutSong = Object.assign(\n      {},\n      selectedDistribution\n    );\n    delete selectedDistributionWithoutSong.song;\n    yield put({\n      type: types.SET_ACTIVE_DISTRIBUTION,\n      payload: selectedDistributionWithoutSong,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load distribution ${distributionId} from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n\n  return selectedDistribution;\n}\n\nfunction* requestMembers(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/members');\n    const membersList = utils.parseResponse(response);\n    yield put({ type: types.SET_MEMBERS, payload: membersList });\n\n    const { typeahead } = response.meta;\n    yield put({ type: types.SET_MEMBERS_TYPEAHEAD, payload: typeahead });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load members database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\n// TODO: REFACTOR\nfunction* requestSong(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { songId, previouslyLoadedSongs } = action;\n\n  let selectedSong = {};\n\n  // Fetch Artist\n  try {\n    const response = yield API.get(`/songs/${songId}`);\n    selectedSong = utils.parseResponse(response);\n\n    // Activate Song\n    yield put({ type: types.SET_ACTIVE_SONG, payload: selectedSong });\n\n    // Add selected song to previously fetched songs\n    const sortedSongsList = _.orderBy(\n      [selectedSong, ...previouslyLoadedSongs],\n      [s => s.title.toLowerCase()]\n    );\n    yield put({ type: types.SET_SONGS, payload: sortedSongsList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load song ${songId} from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestSongs(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/songs');\n    const songsList = utils.parseResponse(response);\n    yield put({ type: types.SET_SONGS, payload: songsList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load songs database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestUnit(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { unitId } = action;\n  try {\n    const response = yield API.get(`/units/${unitId}`);\n    const selectedUnit = utils.parseResponse(response);\n    yield put({ type: types.SET_SELECTED_UNIT, payload: selectedUnit });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestUnitMembers({ type, unitId, panels }) {\n  yield put({ type: 'PENDING', actionType: type });\n  yield delay(DELAY_DURATION);\n\n  let members = [];\n  if (unitId) {\n    try {\n      const response = yield API.get(`/units/${unitId}/members`);\n      members = response.data;\n    } catch (error) {\n      yield put({\n        type: 'ERROR',\n        message: [\n          `Unable to load members from unit ${unitId} from database`,\n          error.toString(),\n        ],\n        actionType: type,\n      });\n    }\n  }\n\n  // Make colors in use dict\n  const colorsInUse = {};\n  members.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n\n  yield put({ type: types.SET_COLORS_IN_USE, payload: colorsInUse });\n  yield put({ type: types.SET_EDITING_MEMBERS, payload: members });\n  yield put({ type: types.SET_PANELS, payload: panels });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: type });\n  return members;\n}\n\nfunction* resyncDatabase(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.resyncDatabase();\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [`Unable to resync database`, error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  // When done, re-request artists, colors, and members\n  yield put({ type: 'REQUEST_ARTISTS' });\n  yield put({ type: 'REQUEST_COLORS' });\n  yield put({ type: 'REQUEST_MEMBERS' });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* runLogin(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    let loggedUser = yield API.login();\n    loggedUser = loggedUser.data.attributes ? loggedUser.data : null;\n\n    if (loggedUser) {\n      const user = utils.parseResponse(loggedUser);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Hello!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\nfunction* runLogout(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    yield API.logoff();\n\n    yield put({ type: types.SET_USER, payload: {} });\n    yield put({ type: types.SET_AUTHENTICATED, payload: false });\n    yield put({ type: types.SET_ADMIN, payload: false });\n\n    yield put({\n      type: 'WARNING_TOAST',\n      message: 'You are logged out',\n      actionType: action.type,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\nfunction* sendDistribution(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  let receivedSong;\n  if (action.body.distributionId) {\n    // Update song\n    try {\n      receivedSong = yield API.pyt(\n        `/distributions/${action.body.distributionId}`,\n        action.body\n      );\n    } catch (error) {\n      yield put({\n        type: 'ERROR_TOAST',\n        message: `Failed updating distribution ${\n          action.body.distributionId\n        }: ${error.toString()}`,\n        actionType: action.type,\n      });\n    }\n  } else {\n    // Save song\n    try {\n      receivedSong = yield API.post('/distributions', action.body);\n    } catch (error) {\n      yield put({\n        type: 'ERROR_TOAST',\n        message: `Failed writing distribution: ${error.toString()}`,\n        actionType: action.type,\n      });\n    }\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedSong;\n}\n\nfunction* sendLog(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const logType = action.body.type === 'error' ? 'errors' : 'general';\n\n  // Save song\n  try {\n    yield API.post(`/log/${logType}`, action.body);\n  } catch (e) {\n    // do nothing\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* sendSong(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  // Save song\n  let receivedSong;\n  try {\n    receivedSong = yield API.post('/songs', action.body);\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing song: ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedSong;\n}\n\nfunction* updateCompleteArtist(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { artist, members, unit } = action;\n\n  // Save Members\n  const receivedMembers = yield all(\n    members.map((member, index) =>\n      call(updateMember, {\n        type: `UPDATE_MEMBER_${index}`,\n        member,\n        referenceArtist: artist.name,\n        artistGenre: artist.genre,\n      })\n    )\n  );\n\n  // Prepare Unit Members Data\n  let unitMembers = {};\n  receivedMembers.forEach(member => {\n    unitMembers = {\n      ...unitMembers,\n      ...member.positions,\n    };\n  });\n\n  yield delay(DELAY_DURATION);\n\n  // Save Artist\n  let receivedArtist;\n  try {\n    if (artist.id) {\n      // Update member if it has an id\n      receivedArtist = yield API.put(`/artists/${artist.id}`, artist);\n    } else {\n      // Create member if it does not have an id\n      receivedArtist = yield API.post('/artists', artist);\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing artist ${\n        artist.id ? artist.id : artist.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  // Save unit\n  unit.members = unitMembers;\n  unit.artistId = receivedArtist.data.id;\n  let receivedUnit;\n\n  try {\n    if (unit.id) {\n      // Update member if it has an id\n      receivedUnit = yield API.put(`/units/${unit.id}`, unit);\n    } else {\n      // Create member if it does not have an id\n      receivedUnit = yield API.post('/units', unit);\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing unit ${\n        unit.id ? unit.id : artist.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'SET_MANAGE_RESULT', payload: 'SUCCESS' });\n\n  toastr.success('Complete Artist saved successfully');\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedUnit;\n}\n\nfunction* updateMember(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { member } = action;\n\n  let response;\n  try {\n    if (member.id) {\n      // Update member if it has an id\n      response = yield API.put(`/members/${member.id}`, member);\n    } else {\n      // Create member if it does not have an id\n      response = yield API.post('/members', member);\n    }\n\n    if (response) {\n      const membersList = utils.parseResponse(response);\n      yield put({ type: types.SET_MEMBERS, payload: membersList });\n\n      const { typeahead } = response.meta;\n      yield put({ type: types.SET_MEMBERS_TYPEAHEAD, payload: typeahead });\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: 'Member updaded Successfully',\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing member ${\n        member.id ? member.id : member.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return response.data;\n}\n\nfunction* updateUserBiases(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.put(\n      `/users/${action.userId}/biases`,\n      action.biases\n    );\n    const user = utils.parseResponse(response);\n    yield put({ type: types.SET_USER, payload: user });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* updateUserFavoriteArtists(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.put(\n      `/users/${action.userId}/favorite-artists`,\n      action.userFavoriteArtists\n    );\n\n    const user = utils.parseResponse(response);\n    yield put({ type: types.SET_USER, payload: user });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* updateUserFavoriteMembers(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.put(\n      `/users/${action.userId}/favorite-members`,\n      action.userFavoriteMembers\n    );\n\n    const user = utils.parseResponse(response);\n    yield put({ type: types.SET_USER, payload: user });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* apiSaga() {\n  yield takeLatest('INITIALIZER', initializer);\n  yield takeLatest('REQUEST_ARTISTS', requestArtists);\n  yield takeLatest('REQUEST_ARTIST', requestArtist);\n  yield takeLatest('REQUEST_COLORS', requestColors);\n  yield takeLatest('REQUEST_DISTRIBUTION', requestDistribution);\n  yield takeLatest('REQUEST_MEMBERS', requestMembers);\n  yield takeLatest('REQUEST_SONG', requestSong);\n  yield takeLatest('REQUEST_SONGS', requestSongs);\n  yield takeLatest('REQUEST_UNIT', requestUnit);\n  yield takeLatest('REQUEST_UNIT_MEMBERS', requestUnitMembers);\n  yield takeLatest('RESYNC_DATABASE', resyncDatabase);\n  yield takeLatest('RUN_LOGIN', runLogin);\n  yield takeLatest('RUN_LOGOUT', runLogout);\n  yield takeLatest('SEND_DISTRIBUTION', sendDistribution);\n  yield takeLatest('SEND_LOG', sendLog);\n  yield takeLatest('SEND_SONG', sendSong);\n  yield takeLatest('UPDATE_COMPLETE_ARTIST', updateCompleteArtist);\n  yield takeLatest('UPDATE_MEMBER', updateMember);\n  yield takeLatest('UPDATE_USER_BIASES', updateUserBiases);\n  yield takeLatest('UPDATE_USER_FAVORITE_ARTISTS', updateUserFavoriteArtists);\n  yield takeLatest('UPDATE_USER_FAVORITE_MEMBERS', updateUserFavoriteMembers);\n\n  yield takeEvery('TEST', test);\n}\n\nexport default apiSaga;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { toastr } from 'react-redux-toastr';\n\nimport { types } from '../reducers';\n\n// PENDING WORKERS\nconst localPendingCache = {};\n\n/**\n * Removes action type from pendingCache and updates pending if pendingCache is empty\n * @param {string} actionType\n */\nfunction* clearPending(actionType) {\n  if (typeof actionType === 'object') {\n    actionType = actionType.actionType; // eslint-disable-line\n  }\n  if (localPendingCache[actionType]) {\n    delete localPendingCache[actionType];\n  }\n\n  if (Object.keys(localPendingCache).length === 0) {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: false });\n  }\n}\n\n/**\n * Adds action type to pendingInlineCache and updates pending based on pendingInlineCache values\n * @param {string} actionType\n */\nfunction* pending({ actionType }) {\n  if (localPendingCache[actionType] === undefined) {\n    localPendingCache[actionType] = true;\n  }\n\n  if (Object.keys(localPendingCache).length > 0) {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: true });\n  } else {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: false });\n  }\n}\n\n// ERROR WORKERS\n\n/**\n * Dispatches an error message and an error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* error({ message, actionType }) {\n  const errorMessage = typeof err === 'string' ? message : message.join(': ');\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield toastr.error(errorMessage);\n  yield call(clearPending, actionType);\n}\n\n/**\n * Dispatches an error message and and an inline error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* errorInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR_INLINE, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops an error toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* errorToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.error(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.error(message);\n  }\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n// SUCCESS WORKERS\n\n/**\n * Dispatches a success message and and an inline sucess flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* successInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_SUCCESS_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_SUCCESS_INLINE, payload: true });\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops a sucess toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* successToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.success(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.success(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// WARNING WORKERS\n\n/**\n * Pops a warning toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* warningToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.warning(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.warning(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* statusHandlingSaga() {\n  yield takeEvery('CLEAR_PENDING', clearPending);\n  yield takeEvery('ERROR', error);\n  yield takeEvery('ERROR_INLINE', errorInline);\n  yield takeEvery('ERROR_TOAST', errorToast);\n  yield takeEvery('PENDING', pending);\n  yield takeEvery('SUCCESS_INLINE', successInline);\n  yield takeEvery('SUCCESS_TOAST', successToast);\n  yield takeEvery('WARNING_TOAST', warningToast);\n  yield takeEvery('TEST', test);\n}\n\nexport default statusHandlingSaga;\n","import { all, fork } from 'redux-saga/effects';\nimport apiSaga from './api-saga';\nimport statusHandlingSaga from './status-handling';\n\nexport default function* rootSaga() {\n  yield all([fork(apiSaga), fork(statusHandlingSaga)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, thunkMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger({ collapsed: true }));\n}\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    Created for fun by{' '}\n    <a\n      href=\"https://www.kavispires.com/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Kavis Pires\n    </a>\n  </footer>\n);\n\nexport default Footer;\n","import FooterContainer from './containers/FooterContainer';\n\nexport default FooterContainer;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Footer from '../components/Footer';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Footer)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '..';\n\nconst ActiveSongWidget = ({ activeSong, inline, ...props }) => {\n  // Return nothing if currentUnit is not available\n  if (!activeSong.id) {\n    return null;\n  }\n\n  const inlineClass = inline ? 'inline' : '';\n\n  const goToDistribution = () => {\n    props.history.push(`/distribute`);\n  };\n\n  return (\n    <section className={`active-widget active-widget--quarter ${inlineClass}`}>\n      <h3>Active Song:</h3>\n      <button\n        className=\"active-widget__go-to-button\"\n        onClick={() => goToDistribution()}\n      >\n        <Icon type=\"go-to\" />\n      </button>\n      <div className=\"active-widget__content\">\n        <h1>\n          {activeSong.title.toUpperCase()}{' '}\n          <span className=\"active-widget__unit\">\n            (by {activeSong.originalArtistName})\n          </span>\n        </h1>\n      </div>\n    </section>\n  );\n};\n\nActiveSongWidget.propTypes = {\n  activeSong: PropTypes.object,\n  history: PropTypes.object.isRequired,\n  inline: PropTypes.bool,\n};\n\nActiveSongWidget.defaultProps = {\n  activeSong: {},\n  inline: false,\n};\n\nexport default ActiveSongWidget;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ActiveSongWidget from '../components/ActiveSongWidget';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribution: state.distribution,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ActiveSongWidget)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '..';\n// Import utility functions\nimport utils from '../../../utils';\n\nconst ActiveUnitWidget = ({ activeUnit, showMembers, inline, ...props }) => {\n  // Return nothing if currentUnit is not available\n  if (!activeUnit.id) {\n    return null;\n  }\n\n  const inlineClass = inline ? 'inline' : '';\n\n  const goToUnit = () => {\n    props.history.push(`/artists/${activeUnit.artistId}`);\n  };\n\n  return (\n    <section className={`active-widget ${inlineClass}`}>\n      <h3>Active Unit:</h3>\n      <button\n        className=\"active-widget__go-to-button\"\n        onClick={() => goToUnit()}\n      >\n        <Icon type=\"go-to\" />\n      </button>\n      <div className=\"active-widget__content\">\n        <h1>\n          {activeUnit.artistName.toUpperCase()}{' '}\n          <span className=\"active-widget__unit\">({activeUnit.name})</span>\n          <span className=\"active-widget__genre\">\n            {activeUnit.genre} - {Object.values(activeUnit.members).length}{' '}\n            members\n          </span>\n        </h1>\n        {showMembers ? (\n          <ul className=\"active-widget__members\">\n            {activeUnit.members.map(member => (\n              <li\n                key={member.id}\n                className={`pill background-color-${member.color}`}\n              >\n                {member.name}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className=\"active-widget__members-count\">\n            {activeUnit.members.length || 0}\n          </p>\n        )}\n      </div>\n    </section>\n  );\n};\n\nActiveUnitWidget.propTypes = {\n  activeUnit: PropTypes.object,\n  history: PropTypes.object.isRequired,\n  inline: PropTypes.bool,\n  showMembers: PropTypes.bool,\n};\n\nActiveUnitWidget.defaultProps = {\n  activeUnit: {},\n  inline: false,\n  showMembers: false,\n};\n\nexport default ActiveUnitWidget;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ActiveUnitWidget from '../components/ActiveUnitWidget';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribution: state.distribution,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ActiveUnitWidget)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport YouTube from 'react-youtube';\n\n// Import common components\nimport { Icon } from '../../common';\n\nclass ActiveVideoWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 0,\n    };\n\n    this.setDimentions = this.setDimentions.bind(this);\n  }\n\n  componentDidUpdate() {\n    // Determine player height\n    if (!this.state.height && document.getElementById('video-container')) {\n      this.setDimentions();\n    }\n  }\n\n  setDimentions() {\n    let width = document.getElementById('video-container').clientWidth;\n    let height = document.getElementById('video-container').clientHeight;\n    if (width > height) {\n      width = (16 * height) / 9;\n    } else {\n      height = (9 * width) / 16;\n    }\n\n    this.setState(() => ({ width, height }));\n  }\n\n  render() {\n    const opts = {\n      height: this.state.height,\n      width: this.state.width,\n    };\n\n    const hasVideoClass = this.props.videoId\n      ? ''\n      : 'active-widget__video--placeholder';\n\n    return (\n      <section\n        className={`active-widget active-widget--quarter active-widget__video ${hasVideoClass}`}\n        id=\"video-container\"\n      >\n        {this.props.videoId ? (\n          <YouTube videoId={this.props.videoId} opts={opts} />\n        ) : (\n          <Icon type=\"youtube\" color=\"white\" size=\"72\" />\n        )}\n      </section>\n    );\n  }\n}\n\nActiveVideoWidget.propTypes = {\n  videoId: PropTypes.string.isRequired,\n};\n\nActiveVideoWidget.defaultProps = {};\n\nexport default ActiveVideoWidget;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon } from '../../common';\n\nclass Collapsible extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n\n    this.collapse = this.collapse.bind(this);\n    this.enforceProperties = this.enforceProperties.bind(this);\n    this.expand = this.expand.bind(this);\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  componentDidMount() {\n    this.enforceProperties();\n  }\n\n  componentDidUpdate(nextProps) {\n    if (\n      this.props.synced &&\n      (nextProps.expanded !== this.props.expanded ||\n        nextProps.collapsed !== this.props.collapsed)\n    ) {\n      this.enforceProperties();\n    }\n  }\n\n  enforceProperties() {\n    if (this.props.expanded) {\n      this.expand();\n    }\n    if (this.props.collapsed) {\n      this.collapse();\n    }\n  }\n\n  togglePanel() {\n    if (!this.props.locked) {\n      this.setState({\n        expanded: !this.state.expanded,\n      });\n    }\n  }\n\n  expand() {\n    this.setState({\n      expanded: true,\n    });\n  }\n\n  collapse() {\n    this.setState({\n      expanded: false,\n    });\n  }\n\n  render() {\n    const { title, locked } = this.props;\n\n    let iconComponent = null;\n    if (locked) {\n      iconComponent = <Icon type=\"lock\" color=\"gray\" />;\n    } else if (this.state.expanded) {\n      iconComponent = <Icon type=\"chevron-up\" color=\"gray\" />;\n    } else {\n      iconComponent = <Icon type=\"chevron-down\" color=\"gray\" />;\n    }\n\n    return (\n      <section className=\"collapsible\">\n        <button\n          className={`collapsible__header ${locked ? 'locked' : ''}`}\n          disabled={locked}\n          onClick={this.togglePanel}\n        >\n          <h3 className=\"collapsible__title\">{title}</h3>\n          <span className=\"collapsible__icon\">{iconComponent}</span>\n        </button>\n        <div\n          className={`collapsible__content ${\n            this.state.expanded ? 'expanded' : 'collapsed'\n          }`}\n        >\n          {this.state.expanded && this.props.children}\n        </div>\n      </section>\n    );\n  }\n}\n\nCollapsible.propTypes = {\n  children: PropTypes.any.isRequired,\n  collapsed: PropTypes.bool,\n  expanded: PropTypes.bool,\n  locked: PropTypes.bool,\n  synced: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n};\n\nCollapsible.defaultProps = {\n  collapsed: false,\n  expanded: false,\n  locked: false,\n  synced: false,\n};\n\nexport default Collapsible;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon } from '../../common';\n\nconst FavoriteIcon = ({ action, className, id, size, state }) => (\n  <button\n    className={`btn btn-transparent ${className}`}\n    onClick={() => action(id)}\n  >\n    {state ? (\n      <Icon type=\"heart\" color=\"red\" size={size} />\n    ) : (\n      <Icon type=\"heart-hollow\" color=\"gray\" size={size} />\n    )}\n  </button>\n);\n\nFavoriteIcon.propTypes = {\n  action: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  state: PropTypes.bool,\n};\n\nFavoriteIcon.defaultProps = {\n  className: '',\n  size: 12,\n  state: false,\n};\n\nexport default FavoriteIcon;\n","// When pasting SVG from illustrator, use helper to convert svg string into a inline string: https://repl.it/@kavispires/ConvertSVGtoInlineString\n\nexport default {\n  alert:\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M57,78c0,1.2-1,2.2-2.2,2.2h-9.6 c-1.2,0-2.2-1-2.2-2.2v-9.6c0-1.2,1-2.2,2.2-2.2h9.6c1.2,0,2.2,1,2.2,2.2V78z M56.6,57.8c-0.2,1.1-1.5,2-3.2,2h-6.9 c-1.6,0-3-0.9-3.2-2L38,22.2c-0.1-0.6,0.2-1.2,0.8-1.7c0.6-0.5,1.5-0.7,2.4-0.7h17.6c0.9,0,1.8,0.3,2.4,0.7c0.6,0.5,0.9,1.1,0.8,1.7 L56.6,57.8z',\n  'back-arrow':\n    'M87.4,37.1C76.6,28,63.8,23.3,50.2,20.5c-3.9-0.8-7.9-1.3-12-2c0-3.7,0-7.2,0-10.8c0-1.9-0.5-3.4-2.3-4.3 c-1.8-0.9-3.4-0.3-4.9,1c-9.7,8.5-19.4,17-29.1,25.6c-2.5,2.2-2.5,4.5,0,6.8c9.7,8.5,19.4,17,29.1,25.6c1.5,1.3,3.1,1.8,4.9,1 c1.8-0.8,2.2-2.4,2.2-4.3c-0.1-3.7,0-7.4,0-11.9c6.4,1.3,12.4,2.2,18.3,3.8c7,1.8,13.4,4.9,18.6,10.1c3.6,3.7,5.8,8,5.1,13.3 c-0.6,4.4-2.8,8.1-6.1,10.9c-3.1,2.6-6.6,4.6-10,6.8c-1.2,0.8-2.4,1.6-1.7,3.2c0.7,1.8,2.2,1.6,3.6,1.1c1.7-0.7,3.3-1.3,5-2 c9.1-4.1,17.4-9.2,23.4-17.4c5-6.8,7-14.4,4.8-22.7C97.3,47.3,93,41.7,87.4,37.1z',\n  'back-arrow-circle':\n    'M50,0c27.7,0,50,22.4,50,50c0,27.6-22.5,50-50.1,50C22.3,100-0.1,77.5,0,49.9C0.1,22.3,22.5,0,50,0z M41.9,49.6 c4.3,0.9,8.4,1.5,12.4,2.5c4.7,1.2,9.1,3.3,12.6,6.9c2.5,2.5,3.9,5.4,3.5,9c-0.4,3-1.9,5.5-4.1,7.4c-2.1,1.7-4.5,3.1-6.8,4.6 c-0.8,0.5-1.6,1.1-1.2,2.2c0.5,1.2,1.5,1.1,2.5,0.7c1.1-0.4,2.3-0.9,3.4-1.4c6.1-2.8,11.8-6.2,15.8-11.8c3.4-4.6,4.7-9.7,3.2-15.4 c-1.3-4.8-4.2-8.6-7.9-11.7c-7.3-6.2-16-9.3-25.2-11.2c-2.7-0.5-5.4-0.9-8.1-1.3c0-2.5,0-4.9,0-7.3c0-1.3-0.3-2.3-1.5-2.9 c-1.2-0.6-2.3-0.2-3.3,0.7C30.5,26.5,23.9,32.2,17.3,38c-1.7,1.5-1.7,3.1,0,4.6c6.6,5.8,13.1,11.5,19.7,17.3c1,0.9,2.1,1.2,3.3,0.7 c1.2-0.6,1.5-1.6,1.5-2.9C41.8,55.2,41.9,52.7,41.9,49.6z',\n  check:\n    'M50,0C22.5,0,0,22.5,0,50s22.5,50,50,50s50-22.5,50-50S77.5,0,50,0z M75.6,41.2L47.5,73.1 c-1.2,1.2-3.1,1.2-4.4,0.6L23.1,60c-1.9-1.3-1.9-3.1-0.6-4.4l6.2-8.8c0.6-1.9,2.5-1.9,4.4-1.2l6.9,5c1.2,1.2,3.1,0.6,4.4-0.6 l18.1-20c1.2-1.2,3.1-1.2,4.4,0l8.1,6.9C76.2,38.1,76.2,40,75.6,41.2z',\n  'chevron-down':\n    'M49.8,75c-1.6,0-3.1-0.6-4.4-1.8L6.8,35.7c-2.5-2.4-2.5-6.4-0.1-8.8c2.4-2.5,6.4-2.5,8.8-0.1l34.3,33.3l34.7-33.3 c2.5-2.4,6.4-2.3,8.8,0.2c2.4,2.5,2.3,6.4-0.2,8.8L54.1,73.3C52.9,74.4,51.4,75,49.8,75z',\n  'chevron-left':\n    'M25,49.8c0-1.6,0.6-3.1,1.8-4.4L64.3,6.8c2.4-2.5,6.4-2.5,8.8-0.1c2.5,2.4,2.5,6.4,0.1,8.8L39.9,49.8l33.3,34.7 c2.4,2.5,2.3,6.4-0.2,8.8c-2.5,2.4-6.4,2.3-8.8-0.2L26.7,54.1C25.6,52.9,25,51.4,25,49.8z',\n  'chevron-right':\n    'M75,50.2c0,1.6-0.6,3.1-1.8,4.4L35.7,93.2c-2.4,2.5-6.4,2.5-8.8,0.1c-2.5-2.4-2.5-6.4-0.1-8.8l33.3-34.3L26.7,15.5 C24.4,13,24.4,9,26.9,6.6c2.5-2.4,6.4-2.3,8.8,0.2l37.5,39.1C74.4,47.1,75,48.6,75,50.2z',\n  'chevron-up':\n    'M50.2,25c1.6,0,3.1,0.6,4.4,1.8l38.7,37.5c2.5,2.4,2.5,6.4,0.1,8.8c-2.4,2.5-6.4,2.5-8.8,0.1L50.2,39.9L15.5,73.3 C13,75.6,9,75.6,6.6,73.1c-2.4-2.5-2.3-6.4,0.2-8.8l39.1-37.5C47.1,25.6,48.6,25,50.2,25z',\n  clock:\n    'M100,50c0,9.4-2.2,17.8-6.6,25.1c-4.6,7.6-10.7,13.7-18.3,18.3C67.8,97.8,59.4,100,50,100s-17.8-2.2-25.1-6.6 c-7.6-4.6-13.7-10.7-18.3-18.3C2.2,67.8,0,59.4,0,50s2.2-17.8,6.6-25.1c4.6-7.6,10.7-13.7,18.3-18.3C32.2,2.2,40.6,0,50,0 s17.8,2.2,25.1,6.6c7.6,4.6,13.7,10.7,18.3,18.3C97.8,32.2,100,40.6,100,50z M85.4,50c0-6.2-1.5-12.2-4.6-17.8 c-3.2-5.5-7.5-9.8-13-13c-5.6-3-11.6-4.6-17.8-4.6s-12.2,1.5-17.8,4.6c-5.5,3.2-9.8,7.5-13,13c-3,5.6-4.6,11.6-4.6,17.8 s1.5,12.2,4.6,17.8c3.2,5.5,7.5,9.8,13,13c5.6,3,11.6,4.6,17.8,4.6s12.2-1.5,17.8-4.6c5.5-3.2,9.8-7.5,13-13 C83.9,62.2,85.4,56.2,85.4,50z M58.4,26.9v29.2c0,0.6-0.2,1.1-0.7,1.6c-0.5,0.5-1,0.7-1.6,0.7H35.4c-0.6,0-1.1-0.2-1.6-0.7 c-0.3-0.6-0.5-1.1-0.5-1.6v-4.1c0-0.6,0.2-1.1,0.5-1.4c0.5-0.5,1-0.7,1.6-0.7H50V26.9c0-0.5,0.2-0.9,0.7-1.4 c0.2-0.5,0.6-0.7,1.4-0.7h4.1c0.6,0,1.1,0.2,1.6,0.7C58.2,26,58.4,26.5,58.4,26.9z',\n  default:\n    'M81.2,12.5c3.8,0,6.2,2.5,6.2,6.2v62.5c0,3.8-2.5,6.2-6.2,6.2H18.8c-3.7,0-6.2-2.5-6.2-6.2V18.8 c0-3.7,2.5-6.2,6.2-6.2H81.2 M81.2,0H18.8C8.1,0,0,8.1,0,18.8v62.5C0,91.9,8.1,100,18.8,100h62.5c10.6,0,18.8-8.1,18.8-18.8V18.8 C100,8.1,91.9,0,81.2,0L81.2,0z M35.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,35.7,35.3,33.6,35.3,31.1z M58.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,35.7,58.3,33.6,58.3,31.1z M81.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,35.7,81.3,33.6,81.3,31.1z M35.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,58.3,35.3,56.3,35.3,53.8z M58.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,58.3,58.3,56.3,58.3,53.8z M81.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,58.3,81.3,56.3,81.3,53.8z M35.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,81,35.3,79,35.3,76.5z M58.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,81,58.3,79,58.3,76.5z M81.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,81,81.3,79,81.3,76.5z',\n  edit:\n    'M69.97,25.32l15.68,15.68c0.66,0.66,0.66,1.74,0,2.4L47.69,81.35l-16.13,1.79 c-1.86,0.21-3.53-1.13-3.74-2.98c-0.03-0.25-0.03-0.5,0-0.75l1.79-16.13l37.96-37.96C68.23,24.66,69.31,24.66,69.97,25.32z  M98.12,21.34l-8.48-8.48c-2.65-2.64-6.94-2.64-9.59,0l-6.15,6.15c-0.66,0.66-0.66,1.74,0,2.4l15.68,15.68 c0.66,0.66,1.74,0.66,2.4,0l6.15-6.15C100.77,28.28,100.77,23.99,98.12,21.34L98.12,21.34z M66.74,71.03v17.69H11.12V33.1h39.94 c0.55,0,1.08-0.22,1.48-0.61l6.95-6.95c0.82-0.81,0.82-2.13,0-2.95c-0.39-0.39-0.93-0.61-1.48-0.61H8.34 C3.74,21.98,0,25.72,0,30.32V91.5c0,4.61,3.74,8.34,8.34,8.34h61.18c4.61,0,8.34-3.74,8.34-8.34V64.07c0-1.15-0.94-2.09-2.09-2.09 c-0.55,0-1.08,0.22-1.47,0.61l-6.95,6.95C66.96,69.94,66.74,70.47,66.74,71.03z',\n  'edit-box':\n    'M100,18.72v62.56c0,5.18-1.83,9.59-5.48,13.24c-3.65,3.65-8.07,5.48-13.24,5.48H18.72c-5.18,0-9.59-1.83-13.24-5.48 C1.83,90.87,0,86.46,0,81.28V18.72c0-5.18,1.83-9.59,5.48-13.24S13.55,0,18.72,0h62.56c5.18,0,9.59,1.83,13.24,5.48 S100,13.55,100,18.72z M35.39,83.34l35.39-35.39L52.06,29.23L16.67,64.61v18.72H35.39z M26.26,63.93l9.82,9.82l-3.2,3.42h-3.65 v-6.39h-6.39v-3.65L26.26,63.93z M53.2,38.36c0.61,0.61,0.53,1.29-0.23,2.05L34.02,59.36c-0.61,0.76-1.22,0.84-1.83,0.23 c-0.76-0.76-0.68-1.45,0.23-2.05l18.95-18.95C52.13,37.83,52.74,37.75,53.2,38.36z M75.12,43.84l5.93-6.16 c1.22-1.22,1.83-2.66,1.83-4.34c0-1.52-0.61-3.04-1.83-4.57l-9.81-9.82c-1.52-1.22-3.04-1.83-4.57-1.83c-1.67,0-3.12,0.61-4.34,1.83 l-6.16,5.94L75.12,43.84z',\n  error:\n    'M70.7,0H29.3L0,29.3v41.4L29.3,100h41.4L100,70.7V29.3L70.7,0z M45.1,69.6v-6.7c0-0.8,0.7-1.5,1.5-1.5h6.7 c0.8,0,1.5,0.7,1.5,1.5v6.7c0,0.8-0.7,1.5-1.5,1.5h-6.7C45.8,71.2,45.1,70.5,45.1,69.6z M54.6,55.5c-0.1,0.8-1.1,1.4-2.2,1.4h-4.8 c-1.2,0-2.1-0.6-2.2-1.4l-3.7-24.9c-0.1-0.4,0.1-0.9,0.6-1.2c0.4-0.3,1-0.5,1.7-0.5h12.3c0.6,0,1.2,0.2,1.7,0.5 c0.4,0.3,0.6,0.8,0.6,1.2L54.6,55.5z',\n  'fast-forward':\n    'M97.13,17.65h-6.02c-1.59,0-2.87,1.29-2.87,2.87v19.47l-4.81-2.78c-5.22-3.02-13.77-7.95-18.99-10.96l-12.66-7.31 c-5.22-3.02-9.5-0.55-9.5,5.48v13.44l-1.13-0.65c-5.22-3.02-13.77-7.95-18.99-10.96L9.5,18.93C4.27,15.92,0,18.39,0,24.42v14.62 c0,6.03,0,15.9,0,21.93v14.62c0,6.03,4.27,8.5,9.5,5.48l12.66-7.31c5.22-3.02,13.77-7.95,18.99-10.96l1.13-0.65v13.44 c0,6.03,4.27,8.5,9.5,5.48l12.66-7.31c5.22-3.02,13.77-7.95,18.99-10.96l4.81-2.78v19.47c0,1.59,1.29,2.87,2.87,2.87h6.02 c1.59,0,2.87-1.29,2.87-2.87V20.52C100,18.93,98.71,17.65,97.13,17.65z',\n  filter:\n    'M50.05,0.01c12.29,0,24.59,0,36.88,0c2.48,0,4.91,0.29,7.21,1.26c5.2,2.19,7.33,7.39,4.8,12.42 c-1.04,2.08-2.56,4.04-4.25,5.65c-9.57,9.08-19.25,18.04-28.91,27.02c-0.56,0.52-0.79,1.04-0.79,1.81c0.02,8.98,0,17.95,0.03,26.93 c0.01,1.71-0.53,3.03-1.8,4.23c-6.66,6.25-13.24,12.58-19.9,18.82c-0.81,0.76-1.92,1.44-3,1.65c-3.08,0.61-5.26-1.36-5.28-4.64 c-0.04-4.8-0.01-9.6-0.01-14.4c0-10.89,0.01-21.78-0.03-32.66c0-0.57-0.33-1.28-0.74-1.67C24.68,37.45,15.09,28.51,5.5,19.56 c-2.01-1.88-3.78-3.94-4.79-6.56C-1.01,8.52,0.66,4,4.9,1.74c2.18-1.16,4.54-1.68,6.98-1.69C20.19,0.01,28.51,0.01,36.82,0 C41.23,0,45.64,0,50.05,0.01C50.05,0,50.05,0.01,50.05,0.01z M89.73,10.81c-0.14-0.2-0.29-0.4-0.43-0.6 c-0.33-0.05-0.67-0.14-1-0.14c-3.67-0.04-7.34-0.1-11-0.1c-21.27-0.01-42.55-0.01-63.82,0c-0.93,0-1.87,0.14-2.8,0.21 c-0.13,0.21-0.26,0.42-0.39,0.63c0.7,0.5,1.47,0.93,2.09,1.52c9.98,9.45,19.92,18.93,29.92,28.36c1.53,1.45,2.22,3.05,2.21,5.16 c-0.05,11.98-0.02,23.97-0.02,35.95c0,0.4,0,0.79,0,1.5c3.6-3.42,6.92-6.61,10.28-9.75c0.6-0.56,0.81-1.13,0.81-1.94 c-0.03-8.63,0.01-17.25-0.04-25.88c-0.01-2.02,0.65-3.57,2.12-4.96c10.02-9.46,19.99-18.97,29.99-28.45 C88.27,11.74,89.03,11.31,89.73,10.81z',\n  grave:\n    'M84.9,78h-4.4V30.5C80.5,13.72,66.78,0,50,0S19.5,13.72,19.5,30.5V78h-4.4c-1.71,0-3.1,1.4-3.1,3.1V96.9 c0,1.71,1.4,3.1,3.1,3.1h4.4h61h4.4c1.71,0,3.1-1.4,3.1-3.1V81.1C88,79.4,86.6,78,84.9,78z M36.97,37.96 c0-1.11,0.91-2.03,2.03-2.03h6.5v-6.47c0-1.35,1.11-2.46,2.46-2.46h4.08c1.35,0,2.46,1.11,2.46,2.46v6.47H61 c1.11,0,2.03,0.91,2.03,2.03v4.14c0,1.11-0.91,2.03-2.03,2.03h-6.5v15.41c0,1.35-1.11,2.46-2.46,2.46h-4.08 c-1.35,0-2.46-1.11-2.46-2.46V44.13H39c-1.11,0-2.03-0.91-2.03-2.03V37.96z',\n  'gender-female':\n    'M50,0C22.39,0,0,22.39,0,50c0,27.61,22.39,50,50,50s50-22.39,50-50C100,22.39,77.61,0,50,0z M50.02,15 c6.07,0,10.99,4.92,10.99,10.99s-4.92,10.99-10.99,10.99c-6.07,0-10.99-4.92-10.99-10.99S43.95,15,50.02,15z M67.69,72.35h-7.14 c-1.83,0-3.46,1.49-3.61,3.32l-0.5,6.01C56.29,83.51,54.66,85,52.83,85h-5.61c-1.83,0-3.46-1.49-3.61-3.32l-0.5-6.01 c-0.15-1.83-1.78-3.32-3.61-3.32h-7.14c-1.83,0-2.88-1.43-2.32-3.17l7.8-24.33c0.56-1.75,2.52-3.17,4.35-3.17H57.2 c1.83,0,3.82,1.42,4.41,3.15l8.33,24.37C70.53,70.93,69.52,72.35,67.69,72.35z',\n  'gender-male':\n    'M50,0C22.39,0,0,22.39,0,50c0,27.61,22.39,50,50,50s50-22.39,50-50C100,22.39,77.61,0,50,0z M50,15 c6.07,0,10.99,4.92,10.99,10.99S56.07,36.97,50,36.97c-6.07,0-10.99-4.92-10.99-10.99S43.93,15,50,15z M67.45,63.33 c0,1.83-1.5,3.33-3.33,3.33H61c-1.83,0-3.46,1.49-3.61,3.32l-0.97,11.69C56.26,83.51,54.64,85,52.81,85h-5.61 c-1.83,0-3.46-1.49-3.61-3.32l-0.97-11.69c-0.15-1.83-1.78-3.32-3.61-3.32h-3.12c-1.83,0-3.33-1.5-3.33-3.33V45 c0-1.83,1.5-3.33,3.33-3.33h28.23c1.83,0,3.33,1.5,3.33,3.33V63.33z',\n  'gender-mixed':\n    'M50,0C22.39,0,0,22.39,0,50c0,27.61,22.39,50,50,50s50-22.39,50-50C100,22.39,77.61,0,50,0z M31.84,23.29 c4.63,0,8.38,3.75,8.38,8.38c0,4.63-3.75,8.39-8.38,8.39c-4.63,0-8.39-3.75-8.39-8.39C23.45,27.04,27.21,23.29,31.84,23.29z  M45.32,67.06h-5.45c-1.4,0-2.64,1.14-2.76,2.54l-0.38,4.59c-0.12,1.39-1.36,2.54-2.76,2.54h-4.28c-1.4,0-2.64-1.14-2.76-2.54 l-0.38-4.59c-0.12-1.39-1.36-2.54-2.76-2.54h-5.45c-1.4,0-2.19-1.09-1.77-2.42l5.95-18.57c0.43-1.33,1.92-2.42,3.32-2.42h11.46 c1.4,0,2.91,1.08,3.37,2.41l6.36,18.6C47.49,65.97,46.72,67.06,45.32,67.06z M70.21,23.29c4.63,0,8.39,3.75,8.39,8.38 c0,4.63-3.75,8.39-8.39,8.39c-4.63,0-8.38-3.75-8.38-8.39C61.83,27.04,65.58,23.29,70.21,23.29z M83.53,60.18 c0,1.4-1.14,2.54-2.54,2.54h-2.38c-1.4,0-2.64,1.14-2.76,2.54l-0.74,8.92c-0.12,1.39-1.36,2.54-2.76,2.54h-4.28 c-1.4,0-2.64-1.14-2.76-2.54l-0.74-8.92c-0.12-1.39-1.36-2.54-2.76-2.54h-2.38c-1.4,0-2.54-1.14-2.54-2.54V46.18 c0-1.4,1.14-2.54,2.54-2.54h21.55c1.4,0,2.54,1.14,2.54,2.54V60.18z',\n  'go-to':\n    'M59.45,49.53c0.01,0.02-0.02,0.06-0.07,0.09s-0.61,0.79-1.25,1.69L45.17,69.38C44.52,70.27,43.1,71,42,71H29 c-1.1,0-1.48-0.73-0.84-1.63l7.62-10.74c0.64-0.9,0.26-1.63-0.84-1.63H13c-1.1,0-2-0.9-2-2V45c0-1.1,0.9-2,2-2h22.65 c1.1,0,1.48-0.73,0.84-1.63l-8.33-11.74C27.52,28.73,27.9,28,29,28h13c1.1,0,2.52,0.73,3.17,1.62l12.97,18.07 c0.64,0.89,1.21,1.65,1.25,1.69s0.08,0.08,0.07,0.09S59.44,49.51,59.45,49.53z M42,0c-1.65,0-3,1.35-3,3v16c0,1.65,1.35,3,3,3h22 c1.65,0,3,1.35,3,3v50c0,1.65-1.35,3-3,3H42c-1.65,0-3,1.35-3,3v16c0,1.65,1.35,3,3,3h44c1.65,0,3-1.35,3-3V85c0-1.65,0-3.9,0-5 s0-3.35,0-5V25c0-1.65,0-4.35,0-6v-1c0-1.65,0-4.35,0-6V3c0-1.65-1.35-3-3-3H42z',\n  'go-up':\n    'M97,78H75H50h-1.61c-1.65,0-3-1.35-3-3v-2.12c0-0.05,0.01-0.09,0.01-0.14V38.39c0-1.72,1.15-2.32,2.55-1.32L50,38.52 l14.77,10.49c1.4,1,2.55,0.4,2.55-1.32V27.33c0-1.72-1.14-3.95-2.54-4.96L50,11.76L36.49,2.07c-1.4-1-2.59-1.89-2.64-1.96 S33.73-0.01,33.71,0c-0.03,0.02-0.07,0.02-0.09,0c-0.03-0.02-0.09,0.03-0.14,0.1c-0.05,0.08-1.24,0.96-2.64,1.96L2.54,22.37 c-1.4,1-2.54,3.24-2.54,4.96v20.36c0,1.72,1.15,2.32,2.55,1.32l18.38-13.05c1.4-1,2.55-0.4,2.55,1.32v15.01 c-0.06,0.23-0.09,0.46-0.09,0.71v44c0,1.65,1.35,3,3,3h12c1.65,0,3.9,0,5,0c1.1,0,3.35,0,5,0H53h44c1.65,0,3-1.35,3-3V81 C100,79.35,98.65,78,97,78z',\n  'hand-negative':\n    'M61.01,72.06c1.49,3.99,3.22,7.93,4.26,12.03c2.28,8.94-4.49,16.89-13.28,15.8c-4.59-0.57-7.71-3.45-10.01-7.24 c-2.28-3.76-4.65-7.49-6.54-11.44c-3.42-7.17-8.8-12.32-15.49-16.34c-2.88-1.73-5.66-3.62-8.43-5.54c-1.76-1.22-2.96-2.81-2.95-5.15 c0.04-11.38-0.03-22.77,0.07-34.15c0.03-3.54,1.91-5.75,5.29-6.81c1.1-0.34,2.26-0.51,3.4-0.67c5.24-0.76,10.34-1.71,14.98-4.7 c6.03-3.88,12.82-6.16,19.88-7.33c5.4-0.9,10.84-0.75,16.06,1.23c5.36,2.03,9.32,5.37,10.85,11.21c0.4,1.52,1.41,3,2.49,4.19 c2.96,3.27,4.18,6.97,3.83,11.36c-0.1,1.29,0.28,2.8,0.94,3.92c1.67,2.87,2.89,5.87,2.52,9.18c-0.24,2.16,0.13,3.95,1.05,5.9 c2.78,5.9,1.6,12.48-2.61,16.48c-2.75,2.6-6.16,3.15-9.68,3.21c-6.06,0.09-12.13,0.03-18.81,0.03 C59.75,69.26,60.48,70.63,61.01,72.06z M14.52,54.03c0.67,0.54,1.43,1.22,2.27,1.79c2.24,1.54,4.43,3.18,6.79,4.51 c7.95,4.5,13.46,11.14,17.52,19.2c1.63,3.23,3.52,6.33,5.39,9.43c0.73,1.21,1.61,2.36,2.62,3.34c1.92,1.85,4.24,2.56,6.76,1.4 c2.56-1.18,4.03-3.25,3.99-6.13c-0.02-1.27-0.26-2.59-0.7-3.78c-1.47-4-3.06-7.95-4.63-11.91c-0.28-0.72-0.67-1.4-0.96-2.12 c-1.77-4.49,0.54-8.2,5.33-8.3c5.56-0.12,11.13-0.03,16.7-0.05c1.16,0,2.34,0.03,3.49-0.14c4.83-0.68,7.08-3.47,6.37-8.31 c-0.25-1.72-1.35-3.29-1.94-4.98c-0.45-1.29-1.25-2.82-0.91-3.96c1.32-4.45-0.14-7.83-3.32-10.78c-0.18-0.17-0.25-0.45-0.5-0.91 c0.93-5.11,2.08-10.58-4.55-13.12c-0.18-0.9-0.35-1.52-0.43-2.15c-0.76-6.1-3.64-9.05-9.69-10.43C56.85,4.97,50,6.5,43.25,8.97 c-2.42,0.89-4.93,1.82-7.01,3.28c-5.48,3.84-11.59,5.48-18.12,6.09c-1.12,0.1-2.21,0.45-3.6,0.75 C14.52,31.05,14.52,42.42,14.52,54.03z',\n  'hand-positive':\n    'M46.01,6c-2.12,3.51-4.26,7.02-6.1,10.68c-4.59,9.12-10.84,16.63-19.83,21.73c-2.67,1.51-5.15,3.37-7.68,5.11 c-0.95,0.65-1.81,1.42-2.57,2.03c0,13.14,0,26.02,0,39.56c1.58,0.34,2.82,0.73,4.08,0.85c7.38,0.69,14.3,2.55,20.51,6.9 c2.36,1.65,5.2,2.71,7.94,3.71c7.64,2.8,15.4,4.53,23.63,2.65c6.84-1.57,10.11-4.9,10.97-11.81c0.09-0.71,0.28-1.41,0.49-2.44 c7.51-2.88,6.2-9.07,5.15-14.85c0.28-0.53,0.36-0.85,0.56-1.04c3.6-3.35,5.26-7.17,3.76-12.21c-0.38-1.28,0.53-3.02,1.03-4.48 c0.66-1.91,1.91-3.69,2.19-5.64c0.8-5.48-1.74-8.64-7.21-9.41c-1.3-0.18-2.63-0.15-3.95-0.15c-6.3-0.02-12.6,0.08-18.9-0.05 c-5.42-0.12-8.04-4.31-6.04-9.4c0.32-0.82,0.76-1.59,1.08-2.4c1.77-4.49,3.57-8.96,5.24-13.49c0.49-1.35,0.77-2.84,0.79-4.27 c0.04-3.25-1.62-5.6-4.52-6.93c-2.86-1.31-5.49-0.51-7.66,1.58C47.84,3.33,46.84,4.64,46.01,6z',\n  heart:\n    'M50,85.5c-1,0-1.9-0.3-2.5-1L12.7,51c-0.1,0-0.4-0.2-0.7-0.6s-0.6-0.7-0.9-0.8c-0.7-0.8-1.7-2-3.1-3.7 c-1.3-1.6-2.5-3.4-3.7-5.5c-1-1.7-2-3.9-2.9-6.6C0.5,31.2,0,28.6,0,26c0-8.1,2.3-14.5,7-19.1C11.6,2.3,18.2,0,26.8,0 c2.2,0,4.6,0.4,7,1.2s4.7,1.8,6.6,3.1c1.8,1.2,3.6,2.5,5.3,3.9c1.6,1.2,3,2.4,4.3,3.7c1.3-1.3,2.7-2.5,4.3-3.7 c1.7-1.4,3.5-2.7,5.3-3.9c2-1.3,4.2-2.3,6.6-3.1C68.7,0.4,71,0,73.2,0C81.8,0,88.4,2.3,93,6.8c4.7,4.7,7,11.1,7,19.1 s-4.2,16.5-12.7,25.2L52.5,84.6C51.9,85.2,51,85.5,50,85.5z',\n  'heart-hollow':\n    'M73.2,8c6.4,0,11,1.5,14.1,4.5C90.5,15.6,92,20.1,92,26c0,5.9-3.5,12.4-10.3,19.5L50,75.9L18.3,45.2 c-0.2-0.2-0.4-0.4-0.6-0.5c-0.3-0.3-0.7-0.7-1-1c-0.6-0.8-1.5-1.7-2.5-3c-1-1.2-1.9-2.6-2.9-4.2c-0.1-0.1-0.1-0.2-0.2-0.3 c-0.5-0.8-1.3-2.3-2.2-5c0,0,0-0.1,0-0.1C8.3,29.4,8,27.7,8,26c0-5.9,1.5-10.3,4.7-13.5c3-3,7.6-4.5,14.1-4.5 c1.4,0,2.9,0.3,4.6,0.8c1.7,0.6,3.3,1.3,4.6,2.2c0,0,0.1,0,0.1,0.1c1.5,1,3,2.1,4.4,3.3c0.1,0.1,0.2,0.2,0.4,0.3 c1.3,0.9,2.4,1.9,3.4,3c1.5,1.5,3.5,2.3,5.7,2.3s4.2-0.8,5.7-2.3c1-1,2.2-2,3.4-3c0.1-0.1,0.2-0.2,0.4-0.3c1.4-1.2,2.9-2.3,4.4-3.3 c0,0,0.1,0,0.1-0.1c1.3-0.9,2.9-1.6,4.6-2.2C70.3,8.3,71.9,8,73.2,8 M73.2,0c-2.2,0-4.6,0.4-7,1.2C63.7,2,61.5,3,59.6,4.3 c-1.8,1.2-3.6,2.5-5.3,3.9c-1.6,1.2-3,2.4-4.3,3.7c-1.3-1.3-2.7-2.5-4.3-3.7c-1.7-1.4-3.5-2.7-5.3-3.9c-2-1.3-4.2-2.3-6.6-3.1 C31.3,0.4,29,0,26.8,0C18.2,0,11.6,2.3,7,6.8C2.3,11.5,0,17.9,0,26c0,2.6,0.5,5.2,1.4,7.8c0.9,2.7,1.9,4.9,2.9,6.6 c1.2,2.1,2.4,3.9,3.7,5.5c1.4,1.7,2.5,2.9,3.1,3.7c0.3,0.1,0.6,0.4,0.9,0.8c0.3,0.4,0.6,0.6,0.7,0.6l34.8,33.6c0.7,0.7,1.5,1,2.5,1 s1.9-0.3,2.5-1l34.8-33.4C95.8,42.4,100,34,100,26c0-8.1-2.3-14.5-7-19.1C88.4,2.3,81.8,0,73.2,0L73.2,0z',\n  info:\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M57.9,78.3c0,1.7-1.3,3-3,3h-9.9 c-1.7,0-3-1.3-3-3V43.6c0-1.7,1.3-3,3-3h9.9c1.7,0,3,1.3,3,3V78.3z M57.9,30.6c0,1.7-1.3,3-3,3h-9.9c-1.7,0-3-1.3-3-3v-9.9 c0-1.7,1.3-3,3-3h9.9c1.7,0,3,1.3,3,3V30.6z',\n  lock:\n    'M20.2,100h59.6c3.5,0,6.4-2.9,6.4-6.4V44.7c0-3.5-2.9-6.4-6.4-6.4h-3.2V26.6C76.6,11.9,64.7,0,50,0S23.4,11.9,23.4,26.6 v11.7h-3.2c-3.5,0-6.4,2.9-6.4,6.4v48.9C13.8,97.1,16.7,100,20.2,100z M50,77.7c-4.7,0-8.5-3.8-8.5-8.5c0-4.7,3.8-8.5,8.5-8.5 s8.5,3.8,8.5,8.5C58.5,73.8,54.7,77.7,50,77.7z M40.4,26.6c0-5.3,4.3-9.6,9.6-9.6s9.6,4.3,9.6,9.6v11.7H40.4V26.6z',\n  login:\n    'M77.2,50c0,1.1-0.5,2.1-1.4,3L40.4,88.4c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H4.1 c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3 c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L75.8,47C76.7,47.9,77.2,48.9,77.2,50z M82,8H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20 c1.7,0,10,0.7,10,11v21v4v21c0,10.3-8.4,11-10,11H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20c0.5,0,4.6-0.1,8.9-2.3C95,87.4,100,82.7,100,73 V52v-4V27C100,11.4,87,8,82,8z',\n  logout:\n    'M0,27l0,21l0,4l0,21c0,9.7,5,14.4,9.1,16.7c4.3,2.3,8.4,2.3,8.9,2.3h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18c-1.6,0-10-0.7-10-11 V52v-4V27c0-10.3,8.4-11,10-11h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18C13,8,0,11.4,0,27z M100.2,50c0,1.1-0.5,2.1-1.4,3L63.4,88.4 c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H27.1c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4 c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L98.8,47 C99.7,47.9,100.2,48.9,100.2,50z',\n  no:\n    '    M50,0C22.5,0,0,22.5,0,50s22.5,50,50,50s50-22.5,50-50S77.5,0,50,0z M72.5,65.6L65,73.1c-1.2,1.2-3.1,1.2-4.4,0L52.5,65 c-1.2-1.2-3.1-1.2-4.4,0L40,73.1c-1.2,1.2-3.1,1.2-4.4,0l-7.5-7.5c-1.2-1.2-1.2-3.1,0-4.4l8.1-8.1c1.2-1.2,1.2-3.1,0-4.4L26.9,40 c-1.2-1.2-1.2-3.1,0-4.4l7.5-7.5c1.2-1.2,3.1-1.2,4.4,0l8.1,8.1c1.9,1.2,3.8,1.2,5,0l8.1-8.1c1.2-1.2,3.1-1.2,4.4,0l7.5,7.5 c1.2,1.2,1.2,3.1,0,4.4l-8.1,8.1c-1.2,1.2-1.2,3.1,0,4.4l8.1,8.1C73.8,62.5,73.8,64.4,72.5,65.6z',\n  pause:\n    'M36.11,100h-9.3c-2.45,0-4.44-1.99-4.44-4.44V4.44C22.36,1.99,24.35,0,26.8,0h9.3c2.45,0,4.44,1.99,4.44,4.44v91.12 C40.55,98.01,38.56,100,36.11,100z M77.64,95.56V4.44C77.64,1.99,75.65,0,73.2,0h-9.3c-2.45,0-4.44,1.99-4.44,4.44v91.12 c0,2.45,1.99,4.44,4.44,4.44h9.3C75.65,100,77.64,98.01,77.64,95.56z',\n  play:\n    'M88.55,41.53c8.07,4.66,8.07,12.29,0,16.95l-19.57,11.3c-8.07,4.66-21.28,12.29-29.35,16.95l-19.57,11.3 C12,102.67,5.39,98.86,5.39,89.54V66.95c0-9.32,0-24.57,0-33.89V10.46c0-9.32,6.6-13.13,14.67-8.47l19.57,11.3 c8.07,4.66,21.28,12.29,29.35,16.95L88.55,41.53z',\n  plug:\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,90.5 C27.6,90.5,9.5,72.4,9.5,50C9.5,27.6,27.6,9.5,50,9.5S90.5,27.6,90.5,50C90.5,72.4,72.4,90.5,50,90.5z M34,66H33 c-2.5,0-4.5-2-4.5-4.5V38.5c0-2.5,2-4.5,4.5-4.5H34c2.5,0,4.5,2,4.5,4.5v23.1C38.5,64,36.5,66,34,66z M70,66H69 c-2.5,0-4.5-2-4.5-4.5V38.5c0-2.5,2-4.5,4.5-4.5H70c2.5,0,4.5,2,4.5,4.5v23.1C74.5,64,72.5,66,70,66z',\n  'plug-available':\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,90.5 c-10.3,0-19.7-3.8-26.8-10.1c1.4,0,3.3,0.4,5.6,1.2c0.9,0.3,1.8,0.7,2.7,1.1c2.5,1,5.2,2.1,8.1,2.6c0.6,0.1,1.3,0.2,2.2,0.2 c0.9,0,1.8-0.1,2.8-0.4c3.3-1,5.1-3.7,4.8-7c-0.2-1.8-1-3.6-2.4-5.4c-2.5-3-6.2-5.1-10.2-5.7c-1.6-0.2-3.1-0.1-4.4,0 c-1.7,0.1-2.8,0.2-3.7-0.2c-1.2-0.6-2.1-2.4-2.2-4.6c-0.1-1.5,0.1-2.7,0.6-3.4c0.2-0.2,0.3-0.4,0.4-0.5c1,0.4,2.9,2.8,3.8,3.8 c0.7,0.8,1.3,1.6,1.9,2.2c1.6,1.7,3.3,2,4.4,2c1,0,2.7-0.3,4.2-1.9l1.3-1.3l0.3,0.3c6.3,6.3,16.7,6.3,23.1,0l9.8-9.8 c1.8-1.8,1.8-4.7,0-6.5l-2.9-2.9l6.8-6.8c1.1-1.1,1.1-3,0-4.1h0c-1.1-1.1-3-1.1-4.1,0l-6.8,6.8l-6.8-6.8l6.8-6.8 c1.1-1.1,1.1-3,0-4.1c-1.1-1.1-3-1.1-4.1,0l-6.8,6.8l-2.9-2.9c-1.8-1.8-4.7-1.8-6.5,0L39.1,36c-6,6-6.3,15.7-0.9,22.1 c-0.2,0.2-0.4,0.4-0.6,0.6c-0.3-0.3-0.6-0.7-0.9-1.1c-2.2-2.7-5.2-6.5-9.3-6.5c0,0,0,0-0.1,0c-1.5,0-3.8,0.6-5.8,3.2 c-1.6,2.1-2.3,4.8-2,8.2c0.4,4.8,2.7,8.7,6.2,10.4c2.6,1.2,5.2,1.1,7.2,0.9c1-0.1,2-0.1,2.8,0c2.3,0.3,4.4,1.5,5.8,3.2 c0.5,0.6,0.7,1,0.8,1.3c-0.4,0.1-1,0.1-1.7,0c-2.1-0.3-4.3-1.2-6.6-2.2c-1-0.4-2-0.8-3-1.2c-5.6-2.1-10.1-2.2-13.3-0.4 C12.6,67.8,9.5,59.3,9.5,50C9.5,27.6,27.6,9.5,50,9.5S90.5,27.6,90.5,50C90.5,72.4,72.4,90.5,50,90.5z',\n  'plug-connected':\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,9.5c10.1,0,19.4,3.7,26.4,9.8 l-7,7c-5.2-4.1-12.9-3.8-17.7,1l-8,8c-1.5,1.5-1.5,3.9,0,5.3l2,2l-3,3l-2.4-2.4c-1.5-1.5-3.9-1.5-5.3,0l-8,8 c-4.8,4.8-5.2,12.4-1,17.7l-7,7c-5.9-7-9.5-16.1-9.5-26C9.5,27.6,27.6,9.5,50,9.5z M46.3,49.3l3-3l5,5l-3,3L46.3,49.3z M50,90.5 c-10.1,0-19.3-3.7-26.4-9.8l7-7c5.2,5.2,13.7,5.2,18.8,0l8-8c1.5-1.5,1.5-3.9,0-5.3l-2.6-2.6l3-3l3,3c1.5,1.5,3.9,1.5,5.3,0l8-8 c5.2-5.2,5.2-13.6,0-18.8L81,24c5.9,7,9.5,16.1,9.5,26C90.5,72.4,72.4,90.5,50,90.5z',\n  private:\n    'M41,0C18.4,0,0,18.4,0,41s18.4,41,41,41s41-18.4,41-41S63.6,0,41,0z M58,59.5c0,1.6-1.3,3-3,3H27c-1.7,0-3-1.4-3-3v-23 c0-1.7,1.3-3,3-3h1.5V28c0-6.9,5.6-12.5,12.5-12.5S53.5,21.1,53.5,28v5.5H55c1.7,0,3,1.3,3,3V59.5z M45.5,28v5.5h-9V28 c0-2.5,2-4.5,4.5-4.5S45.5,25.5,45.5,28z M45,48c0,2.2-1.8,4-4,4s-4-1.8-4-4c0-2.2,1.8-4,4-4S45,45.8,45,48z',\n  restart:\n    'M84.34,32.28C77.4,21.32,66.05,14,53.19,12.2c-0.33-0.05-0.65-0.06-0.97-0.05V3.98c0-3.55-2.52-5-5.59-3.23l-8.34,4.82 c-3.07,1.77-8.1,4.68-11.18,6.45l-8.34,4.82c-3.07,1.77-3.07,4.68,0,6.45l8.34,4.82c3.07,1.77,8.1,4.68,11.18,6.45l8.34,4.82 c3.07,1.77,5.59,0.32,5.59-3.23v-9.64c0-0.44,0-0.91,0-1.41c8.75,1.47,16.45,6.55,21.21,14.06c9.21,14.53,4.87,33.84-9.66,43.05 c-7.04,4.46-15.39,5.91-23.52,4.09c-8.13-1.83-15.06-6.71-19.52-13.75c-1.91-3.01-5.89-3.9-8.91-2c-3.01,1.91-3.91,5.9-2,8.91 c6.3,9.95,16.11,16.85,27.6,19.43c4.68,1.05,9.42,1.33,14.06,0.87c6.75-0.67,13.3-2.91,19.2-6.65 C91.23,80.12,97.36,52.82,84.34,32.28z',\n  rewind:\n    'M2.87,82.35h6.02c1.59,0,2.87-1.29,2.87-2.87V60.01l4.81,2.78c5.22,3.02,13.77,7.95,18.99,10.96l12.66,7.31 c5.22,3.02,9.5,0.55,9.5-5.48V62.14l1.13,0.65c5.22,3.02,13.77,7.95,18.99,10.96l12.66,7.31c5.22,3.02,9.5,0.55,9.5-5.48V60.96 c0-6.03,0-15.9,0-21.93V24.42c0-6.03-4.27-8.5-9.5-5.48l-12.66,7.31c-5.22,3.02-13.77,7.95-18.99,10.96l-1.13,0.65V24.42 c0-6.03-4.27-8.5-9.5-5.48l-12.66,7.31c-5.22,3.02-13.77,7.95-18.99,10.96l-4.81,2.78V20.52c0-1.59-1.29-2.87-2.87-2.87H2.87 C1.29,17.65,0,18.93,0,20.52v58.96C0,81.07,1.29,82.35,2.87,82.35z',\n  'question-mark':\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M56.5,76.4c0,1-0.8,1.8-1.8,1.8h-9.5 c-1,0-1.8-0.8-1.8-1.8v-9.5c0-1,0.8-1.8,1.8-1.8h9.5c1,0,1.8,0.8,1.8,1.8V76.4z M66,38.3c0,0.9-0.1,1.6-0.3,2.3 c-0.2,0.7-0.3,1.3-0.6,1.8c-0.3,0.6-0.6,1.1-1,1.6l-6.4,7.7c-0.4,0.4-0.7,0.9-0.9,1.3c-0.2,0.3-0.2,0.5-0.2,0.8v5.2 c0,1-0.8,1.8-1.8,1.8h-9.5c-1,0-1.8-0.8-1.8-1.8v-6.1c0-1.2,0.3-2.4,0.8-3.6c0.5-1,1.1-2,1.9-2.9l6-6.9c0.3-0.3,0.5-0.7,0.6-1.1 c0.1-0.5,0.2-1,0.2-1.6v-3.5c0-0.1,0-0.5-0.6-0.9c-0.6-0.4-1.3-0.6-2.2-0.6c-0.8,0-1.6,0.2-2.4,0.6c-0.6,0.3-0.6,0.6-0.6,0.9v3.8 c0,1-0.8,1.8-1.8,1.8h-9.5c-1,0-1.8-0.8-1.8-1.8v-3.9c0-1.7,0.5-3.3,1.4-4.8c0.9-1.4,2.1-2.7,3.6-3.8c1.5-1,3.2-1.8,5.1-2.4 c1.9-0.6,3.9-0.9,6.1-0.9c2.5,0,4.8,0.4,6.9,1.1c2.1,0.7,3.9,1.8,5.3,3.2c0.7,0.7,1.2,1.3,1.7,1.9c0.5,0.6,0.9,1.4,1.2,2.1 c0.5,1.3,0.8,3.1,0.8,5.3C66,36.5,66,37.5,66,38.3z',\n  save:\n    'M100,90c0,1.5-0.5,2.8-1.5,3.8s-2.2,1.5-3.8,1.5H5.2H5c-1.3,0-2.5-0.5-3.5-1.5S0,91.5,0,90V28.2V28c0-1.5,0.3-2.7,1-3.5 l10.5-18c0.8-1.2,1.8-1.8,3-1.8h70.8h0.2c1.8,0,2.9,0.8,3.2,2.5l10,17.2v0.2c0.8,0.8,1.2,1.9,1.2,3.2v0.2V90z M90.5,22.8L83.8,11 H16.2L9.5,22.8H90.5z M67.2,58c-0.2-0.5-0.6-0.8-1.2-0.8h-7.5V37c0-1-0.5-1.5-1.5-1.5H43c-1,0-1.5,0.5-1.5,1.5v20.2H34 c-0.7,0-1.1,0.2-1.2,0.8s-0.2,1,0,1.5l16,22.5c0.3,0.3,0.8,0.5,1.2,0.5s0.9-0.2,1.2-0.5l16-22.5C67.4,59,67.4,58.5,67.2,58z',\n  'sorting-arrows':\n    'M16.48,42.15c-1.85-1.92-1.79-4.98,0.14-6.83L46.81,6.35C47.74,5.45,48.95,5,50.15,5c1.21,0,2.43,0.45,3.36,1.36 L83.4,35.34c1.91,1.86,1.96,4.91,0.11,6.83c-1.86,1.92-4.91,1.96-6.83,0.11L50.13,16.54L23.31,42.29 C21.39,44.14,18.33,44.08,16.48,42.15z M76.69,56.71L49.87,82.46L23.33,56.73c-1.91-1.86-4.97-1.81-6.83,0.11 c-1.86,1.91-1.81,4.97,0.11,6.83l29.88,28.98c0.94,0.91,2.15,1.36,3.36,1.36c1.21,0,2.41-0.45,3.34-1.35l30.18-28.98 c1.92-1.85,1.99-4.9,0.14-6.83C81.67,54.92,78.61,54.86,76.69,56.71z',\n  stop:\n    'M68.3,90.5H31.7c-4.4,0-9.5-3-11.7-6.8L1.6,52c-2.2-3.8-2.2-9.7,0-13.5L20,6.8C22.2,3,27.3,0,31.7,0h36.6 c4.4,0,9.5,3,11.7,6.8l18.3,31.7c2.2,3.8,2.2,9.7,0,13.5L80,83.8C77.9,87.6,72.7,90.5,68.3,90.5z M31.7,5.9c-2.3,0-5.5,1.8-6.6,3.8\tL6.7,41.4c-1.2,2-1.2,5.6,0,7.6l18.3,31.7c1.2,2,4.3,3.8,6.6,3.8h36.6c2.3,0,5.5-1.8,6.6-3.8l18.3-31.7c1.1-2,1.1-5.6,0-7.6 L74.9,9.7c-1.1-2-4.3-3.8-6.6-3.8H31.7z M70.9,30.5c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.8-3.6,4.6c0,4.8,0,9.6,0,14.3 c0,0.7-0.4,1.3-0.7,2c-0.3-0.7-0.9-1.3-0.9-2c-0.1-6,0-11.9-0.1-17.9c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.7-3.6,4.6 c0,6,0,11.9,0,17.9c0,0.6-0.5,1.3-0.8,1.9c-0.3-0.6-0.7-1.2-0.9-1.9c-0.1-0.5,0-1.1,0-1.6c0-7.8,0-15.5,0-23.3 c0-2.1-0.5-3.8-2.8-4.3c-2.5-0.6-4.4,1.1-4.4,4c0,8,0,16,0,24c0,1-0.5,2-0.8,3c-0.3-1-0.8-2-0.8-3.1c-0.1-5.8,0.1-11.6-0.1-17.4 c0-1.2-1.1-2.8-2.1-3.4c-0.8-0.5-2.8-0.2-3.6,0.5c-0.9,0.8-1.3,2.4-1.3,3.7c-0.1,10.6,0,21.2-0.1,31.8c0,0.7-0.5,1.3-0.7,2 c-0.5-0.4-1.1-0.8-1.5-1.3c-2.3-3.6-4.4-7.2-6.7-10.8c-1.5-2.5-3.5-3.2-5.4-2c-2,1.2-2.3,3.2-0.8,5.7c3.2,5.3,6.5,10.5,9.7,15.8 c2.6,4.3,6.4,6.3,11.4,6.3c4.9,0,9.9,0,14.8,0c8.1,0,13.2-5.1,13.3-13.2c0-5,0-10,0-15.1C70.9,41.2,70.9,35.8,70.9,30.5z',\n  'sub-unit':\n    'M81.23,55.11c0,0.98-0.29,1.69-0.87,2.12c-0.58,0.43-1.54,0.65-2.89,0.65h-5.49v-5.53h5.49c1.35,0,2.32,0.22,2.89,0.65 C80.94,53.42,81.23,54.12,81.23,55.11z M79.61,46.63c0.59-0.39,0.88-1.02,0.88-1.88c0-0.91-0.29-1.57-0.88-1.99 c-0.59-0.42-1.52-0.63-2.8-0.63h-4.83v5.09h4.83C78.08,47.22,79.02,47.02,79.61,46.63z M100,34.03v31.94 C100,71.49,95.49,76,89.97,76H10.03C4.51,76,0,71.49,0,65.97V34.03C0,28.51,4.51,24,10.03,24h79.94C95.49,24,100,28.51,100,34.03z  M34.07,55.18c0-1.33-0.28-2.47-0.85-3.43c-0.57-0.96-1.52-1.8-2.88-2.53c-1.35-0.72-3.21-1.35-5.57-1.86 c-1.45-0.29-2.54-0.58-3.28-0.87c-0.74-0.28-1.24-0.57-1.51-0.87s-0.41-0.68-0.41-1.14c0-0.79,0.38-1.42,1.14-1.9 c0.76-0.48,1.77-0.72,3.02-0.72c2.6,0,5.09,0.81,7.45,2.43l2.06-4.79c-0.98-0.84-2.35-1.52-4.11-2.05 c-1.76-0.53-3.57-0.79-5.44-0.79c-2.11,0-3.99,0.36-5.62,1.09c-1.63,0.73-2.9,1.72-3.8,2.99c-0.9,1.27-1.35,2.7-1.35,4.3 c0,1.4,0.28,2.58,0.83,3.54s1.52,1.79,2.89,2.51s3.28,1.33,5.71,1.84c1.97,0.42,3.3,0.84,4,1.25c0.7,0.42,1.05,0.96,1.05,1.62 c0,0.74-0.39,1.31-1.16,1.71c-0.77,0.41-1.9,0.61-3.37,0.61c-1.45,0-2.89-0.21-4.31-0.63c-1.43-0.42-2.77-1.02-4.02-1.81l-2.1,4.79 c1.18,0.86,2.72,1.55,4.61,2.06c1.89,0.52,3.81,0.77,5.75,0.77c3.56,0,6.33-0.72,8.3-2.16C33.09,59.73,34.07,57.74,34.07,55.18z  M60.8,37h-6.67v15.3c0,1.87-0.42,3.31-1.25,4.31c-0.84,1.01-2.04,1.51-3.61,1.51c-1.57,0-2.78-0.5-3.61-1.51 c-0.84-1.01-1.25-2.44-1.25-4.31V37h-6.64v15.04c0,3.69,0.98,6.49,2.93,8.41c1.95,1.92,4.81,2.88,8.57,2.88 c3.74,0,6.59-0.96,8.57-2.89c1.98-1.93,2.97-4.73,2.97-8.39V37z M87.53,55.88c0-1.6-0.41-2.94-1.22-4.04 c-0.81-1.09-1.98-1.87-3.5-2.34c1.28-0.47,2.27-1.21,2.99-2.23c0.71-1.02,1.07-2.19,1.07-3.52c0-2.06-0.81-3.71-2.42-4.92 C82.84,37.61,80.67,37,77.95,37H65.37V63h12.94c1.87,0,3.5-0.29,4.89-0.88c1.39-0.59,2.46-1.42,3.21-2.49 C87.16,58.55,87.53,57.31,87.53,55.88z',\n  'title-song':\n    'M90.12,24H9.88C4.45,24,0,28.45,0,33.88v32.24C0,71.55,4.45,76,9.88,76h80.24c5.43,0,9.88-4.45,9.88-9.88V33.88 C100,28.45,95.55,24,90.12,24z M26.1,43.45h-6.79v17.89h-5.99V43.45H6.54v-4.8H26.1V43.45z M34.47,61.34h-5.92V38.66h5.92V61.34z  M56.48,43.45h-6.79v17.89h-5.99V43.45h-6.79v-4.8h19.57V43.45z M74.51,61.34H58.93V38.66h5.92v17.89h9.66V61.34z M93.46,43.23 H83.1v4.31h9.72v4.54H83.1v4.7h10.36v4.57H77.34V38.66h16.12V43.23z',\n  trash:\n    'M91.8,18.7v4.1c0,0.5-0.2,1-0.5,1.6c-0.6,0.3-1.1,0.5-1.6,0.5h-6.2v61.9c0,3.7-1.1,6.8-3.2,9.4c-2,2.6-4.4,3.9-7.3,3.9 H18.7c-2.9,0-5.3-1.2-7.3-3.7c-2.1-2.6-3.2-5.7-3.2-9.4V24.9H2.1c-0.5,0-1-0.2-1.6-0.5C0.2,23.8,0,23.3,0,22.8v-4.1 c0-0.5,0.2-1,0.5-1.6c0.6-0.3,1.1-0.5,1.6-0.5h20.1l4.6-11c0.8-1.7,2-3,3.7-4.1c1.5-1.1,3.2-1.6,5-1.6h21c1.8,0,3.5,0.5,5,1.6 c1.7,1.1,2.9,2.4,3.7,4.1l4.6,11h20.1c0.5,0,1,0.2,1.6,0.5C91.6,17.7,91.8,18.3,91.8,18.7z M33.3,81.3V35.4c0-0.5-0.2-1-0.5-1.6 c-0.6-0.3-1.1-0.5-1.6-0.5h-4.1c-0.5,0-1,0.2-1.6,0.5c-0.3,0.3-0.5,0.8-0.5,1.6v45.9c0,0.8,0.2,1.3,0.5,1.6 c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5C33.2,82.3,33.3,81.7,33.3,81.3z M31.3,16.7h29.2l-3.2-7.8 c-0.2-0.2-0.5-0.4-1.1-0.7H35.6c-0.6,0.3-1,0.5-1.1,0.7L31.3,16.7z M50,81.3V35.4c0-0.5-0.2-1-0.5-1.6c-0.6-0.3-1.1-0.5-1.6-0.5 h-4.1c-0.5,0-1,0.2-1.6,0.5c-0.3,0.6-0.5,1.1-0.5,1.6v45.9c0,0.5,0.2,1,0.5,1.6c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5 C49.8,82.3,50,81.7,50,81.3z M66.7,81.3V35.4c0-0.8-0.2-1.3-0.5-1.6c-0.6-0.3-1.1-0.5-1.6-0.5h-4.1c-0.5,0-1,0.2-1.6,0.5 c-0.3,0.6-0.5,1.1-0.5,1.6v45.9c0,0.5,0.2,1,0.5,1.6c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5C66.5,82.6,66.7,82,66.7,81.3 z',\n  trophy:\n    'M18.16,15.89c-0.28-3.2-0.55-6.28-0.84-9.49c-1.25,0-2.47,0-3.68,0c-2.27-0.01-3.59-1.19-3.6-3.22 c-0.02-2.06,1.21-3.18,3.59-3.18C32.83,0,52.04,0,71.25,0c5.11,0,10.22-0.01,15.33,0.01c1.92,0.01,3.15,1.01,3.35,2.65 c0.27,2.12-0.97,3.65-3.06,3.73C85.66,6.44,84.44,6.4,83.1,6.4c-0.27,3.19-0.54,6.26-0.82,9.55c0.6,0,1.07,0,1.55,0 c4.5,0,8.99-0.01,13.49,0.01c1.96,0.01,2.91,1.1,2.65,3.05c-0.75,5.62-1.97,11.12-4.16,16.35c-4.65,11.09-12.55,18.15-23.9,20.91 c-1.17,0.28-1.91,0.83-2.55,1.87c-3.31,5.32-7.28,10.06-12.03,14.05c-0.36,0.3-0.69,0.87-0.7,1.33c-0.07,2.09-0.07,4.18,0,6.26 c0.01,0.36,0.41,0.97,0.7,1.03c4,0.8,6.22,3.31,6.8,7.47c0.03,0.21,0.08,0.41,0.16,0.76c0.48,0,0.96,0,1.44,0 c5.56,0,11.12,0,16.68,0c1.7,0,2.07,0.39,2.09,2.17c0.04,4.07,0.04,4.07-3.86,4.07c-0.6,0-1.21,0-1.96,0c0,0.97,0.01,1.77,0,2.56 c-0.01,1.61-0.52,2.15-2.04,2.16c-3.02,0.01-6.05,0-9.07,0c-14.55,0-29.1,0-43.65,0c-2.06,0-2.48-0.44-2.49-2.64 c0-0.63,0-1.26,0-2.09c-1.13,0-2.14,0.02-3.14,0c-1.45-0.03-1.82-0.43-1.84-1.91c-0.01-0.81-0.01-1.62,0-2.43 c0.02-1.48,0.39-1.89,1.83-1.89c5.35-0.01,10.71-0.04,16.06,0.02c1.11,0.01,1.55-0.26,1.71-1.46c0.48-3.46,3.01-6.1,6.36-6.69 c0.85-0.15,1.05-0.51,1.04-1.33c-0.04-2.04,0.04-4.09-0.05-6.13c-0.03-0.59-0.34-1.32-0.76-1.7c-4.43-4.04-8.29-8.57-11.53-13.69 c-0.31-0.49-0.97-0.9-1.53-1.02c-8.53-1.8-15.89-5.65-21.27-13.01C4.09,38.3,1.92,31.7,0.74,24.7c-0.3-1.76-0.53-3.53-0.71-5.31 c-0.23-2.36,0.72-3.43,2.98-3.43c4.66-0.01,9.32,0,13.98-0.01C17.32,15.95,17.64,15.92,18.16,15.89z M5.61,20.85 c1.1,8.93,3.47,17.16,9.79,23.59c3.3,3.36,7.23,5.62,11.97,6.94c-0.71-1.62-1.32-2.91-1.86-4.23c-3.35-8.05-5.44-16.47-6.64-25.13 c-0.13-0.91-0.41-1.3-1.38-1.28c-3.55,0.06-7.11,0.02-10.66,0.03C6.47,20.77,6.11,20.82,5.61,20.85z M94.37,20.86 c-0.64-0.05-1-0.09-1.36-0.09c-3.39-0.01-6.78,0.02-10.18-0.02c-0.86-0.01-1.18,0.24-1.32,1.18c-1.43,9.71-3.74,19.16-7.79,28.09 c-0.06,0.13-0.06,0.28-0.09,0.47c2.17-0.47,5.68-2.35,8.01-4.22c5.57-4.46,8.83-10.51,10.8-17.39 C93.19,26.28,93.72,23.63,94.37,20.86z M27.68,17.96c0.05,0.41,0.13,0.87,0.17,1.33c0.79,10.28,3.28,20.09,7.45,29.43 c1,2.23,2.19,4.37,3.33,6.53c0.55,1.04,1.46,1.35,2.52,0.99c0.92-0.31,1.46-1.06,1.31-2.05c-0.09-0.57-0.6-1.06-0.88-1.6 c-4.75-8.95-7.85-18.47-9.19-28.61c-0.27-2.06-0.43-4.14-0.7-6.21c-0.15-1.13-1.23-1.94-2.29-1.85 C28.37,16.02,27.67,16.84,27.68,17.96z',\n  youtube:\n    'M16.1,83.3c-2.8-0.2-5.8-1.1-8.3-2.4c-5-2.5-6.4-7.3-6.9-12.5c-1.2-11.2-1.1-22.4-0.3-33.5c0.2-2.7,0.6-5.3,1.2-7.9 c1.2-5.4,6-9.6,12.1-10c10.7-0.7,21.4-1.4,32-1.5C56.9,15.4,68,15.9,79,16.2c2.8,0.1,5.7,0.4,8.5,0.9c6.2,1.1,9.7,4.8,10.8,11 c1.4,7.9,1.8,16,1.5,24c-0.2,6.5-0.7,13-1.6,19.5c-0.8,6.4-5.5,10.9-12,11.3c-11,0.8-22.1,1.1-33.2,1.6c-2,0.1-4,0-6,0 C47.2,84.6,26.4,84,16.1,83.3z M40.6,34.6c0,10.3,0,20.4,0,30.6c8.4-5.2,16.5-10.2,24.9-15.3C57.1,44.8,48.9,39.8,40.6,34.6z',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport constants from '../../../utils/constants';\nimport ICONS from '../../../utils/icons';\n\nconst Icon = ({ type, size, color, inline, title }) => {\n  const margin = inline ? '0 3px' : 0;\n\n  if (!title) title = type;\n\n  const styles = {\n    svg: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      margin,\n      transform: 'translateY(-1px)',\n    },\n    path: {\n      fill: constants.DEFAULT_COLORS[color],\n    },\n  };\n\n  return (\n    <svg\n      title={title}\n      style={styles.svg}\n      width={`${size}px`}\n      height={`${size}px`}\n      viewBox=\"0 0 100 100\"\n    >\n      <path style={styles.path} d={ICONS[type]} className={`icon-${type}`}>\n        <title>{title}</title>\n      </path>\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  color: PropTypes.string,\n  inline: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  type: 'default',\n  size: 12,\n  color: 'default',\n  inline: false,\n  title: null,\n};\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst Loading = ({ message = '' }) => (\n  <main className=\"container container--flex container--center container--requirement-wrapper\">\n    <div className=\"requirement-wrapper__container\">\n      <img\n        className=\"requirement-wrapper__loading-icon\"\n        src={loading}\n        alt=\"Loading Icon\"\n      />\n      <p>{message}</p>\n    </div>\n  </main>\n);\n\nLoading.propTypes = {\n  message: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  message: '',\n};\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst LoadingIcon = ({ size, inline }) => (\n  <span\n    className={`loading-icon loading-icon--${size} ${inline ? 'inline' : ''}`}\n  >\n    <img className=\"loading-icon__image\" src={loading} alt=\"Loading Icon\" />\n  </span>\n);\n\nLoadingIcon.propTypes = {\n  size: PropTypes.string,\n  inline: PropTypes.bool,\n};\n\nLoadingIcon.defaultProps = {\n  size: 'medium',\n  inline: false,\n};\n\nexport default LoadingIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst LoadingWrapper = ({ pending, children, size }) =>\n  pending ? (\n    <span className={`loading-icon loading-icon--${size}`}>\n      <img className=\"loading-icon__image\" src={loading} alt=\"Loading Icon\" />\n    </span>\n  ) : (\n    children\n  );\n\nLoadingWrapper.propTypes = {\n  children: PropTypes.object.isRequired,\n  pending: PropTypes.bool,\n  size: PropTypes.string,\n};\n\nLoadingWrapper.defaultProps = {\n  pending: false,\n  size: 'medium',\n};\n\nexport default LoadingWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport constants from '../../../../utils/constants';\n\nconst MemberNationaltyFlag = ({ nationality }) => {\n  const flag = constants.FLAGS_LIST[nationality];\n\n  let flagUrl = `${process.env.PUBLIC_URL}${constants.NATIONALITY_FLAG_URL}unknown.jpg`;\n\n  if (flag) {\n    flagUrl = `${process.env.PUBLIC_URL}${constants.NATIONALITY_FLAG_URL}${flag}.jpg`;\n  }\n\n  return (\n    <img\n      className=\"card__flag\"\n      src={flagUrl}\n      alt={nationality}\n      title={nationality}\n    />\n  );\n};\n\nMemberNationaltyFlag.propTypes = {\n  nationality: PropTypes.string,\n};\n\nMemberNationaltyFlag.defaultProps = {\n  nationality: 'unknown',\n};\n\nexport default MemberNationaltyFlag;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Import contants\nimport constants from '../../../../utils/constants';\n\nconst loggedMissingPictures = {};\n\nclass MemberPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.fallback = () => {\n      this.setState({ failed: true });\n    };\n  }\n\n  render() {\n    const { className, color, gender, memberId, name } = this.props;\n\n    const pictureUrl = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }${name.toLowerCase()}${memberId}.jpg`;\n\n    const genderSuffix = gender === 'FEMALE' ? 'f' : 'm';\n\n    const profilePlaceholderCode = (color % 5) + 1;\n\n    const pictureFallback = `${process.env.PUBLIC_URL}${constants.PROFILE_PICTURE_URL}profile-${genderSuffix}-${profilePlaceholderCode}.png`;\n\n    if (this.state.failed) {\n      if (loggedMissingPictures[memberId] === undefined) {\n        console.log(`Missing Member Picture: ${name.toLowerCase()}${memberId}`); // eslint-disable-line\n        loggedMissingPictures[memberId] = true;\n      }\n\n      return (\n        <img\n          className={`${className} background-color-${color}`}\n          src={pictureFallback}\n          alt=\"Member\"\n        />\n      );\n    }\n    return (\n      <LazyLoadImage\n        className={className}\n        src={pictureUrl}\n        onError={this.fallback}\n        alt={`Member: ${name}`}\n      />\n    );\n  }\n}\n\nMemberPicture.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.number.isRequired,\n  gender: PropTypes.string.isRequired,\n  memberId: PropTypes.string.isRequired,\n  name: PropTypes.string,\n};\n\nMemberPicture.defaultProps = {\n  className: 'card__profile-image',\n  name: 'Unkown',\n};\n\nexport default MemberPicture;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import position icons\nimport iconLeader from '../../../../images/icon-leader.svg';\nimport iconMainVocalist from '../../../../images/icon-main-vocalist.svg';\nimport iconMainRapper from '../../../../images/icon-main-rapper.svg';\nimport iconMainDancer from '../../../../images/icon-main-dancer.svg';\nimport iconLeadVocalist from '../../../../images/icon-lead-vocalist.svg';\nimport iconLeadRapper from '../../../../images/icon-lead-rapper.svg';\nimport iconLeadDancer from '../../../../images/icon-lead-dancer.svg';\nimport iconVocalist from '../../../../images/icon-vocalist.svg';\nimport iconDancer from '../../../../images/icon-dancer.svg';\nimport iconRapper from '../../../../images/icon-rapper.svg';\nimport iconCenter from '../../../../images/icon-center.svg';\nimport iconVisual from '../../../../images/icon-visual.svg';\nimport iconMaknae from '../../../../images/icon-maknae.svg';\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst MemberPositions = ({ memberId, positions }) => {\n  // Sort positions by importance\n  const sortedPositions = [];\n\n  const positionPriority = {\n    LEADER: 0,\n    MAIN_VOCALIST: 1,\n    MAIN_RAPPER: 2,\n    MAIN_DANCER: 3,\n    LEAD_VOCALIST: 4,\n    LEAD_RAPPER: 5,\n    LEAD_DANCER: 6,\n    VOCALIST: 7,\n    RAPPER: 8,\n    DANCER: 9,\n    CENTER: 10,\n    VISUAL: 11,\n    MAKNAE: 12,\n  };\n\n  positions.forEach(position => {\n    sortedPositions[positionPriority[position]] = position;\n  });\n\n  const iconBank = {\n    LEADER: iconLeader,\n    MAIN_VOCALIST: iconMainVocalist,\n    MAIN_RAPPER: iconMainRapper,\n    MAIN_DANCER: iconMainDancer,\n    LEAD_VOCALIST: iconLeadVocalist,\n    LEAD_RAPPER: iconLeadRapper,\n    LEAD_DANCER: iconLeadDancer,\n    VOCALIST: iconVocalist,\n    RAPPER: iconDancer,\n    DANCER: iconRapper,\n    CENTER: iconCenter,\n    VISUAL: iconVisual,\n    MAKNAE: iconMaknae,\n  };\n\n  return (\n    <ul className=\"card__positions\">\n      {sortedPositions.map(position => {\n        const positionName = utils.humanize(position, 'Capital');\n        return (\n          <li key={`${memberId}-${position}`} className=\"card__position\">\n            <img\n              className=\"card__position-icon\"\n              src={iconBank[position]}\n              alt={`Position: ${positionName}`}\n              title={position}\n            />\n            {positionName}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMemberPositions.propTypes = {\n  memberId: PropTypes.string.isRequired,\n  positions: PropTypes.array.isRequired,\n};\n\nexport default MemberPositions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport enums from '../../../../utils/readable-enums';\n\nconst MemberTags = ({ tags, memberId, color }) => (\n  <div className=\"card__tags-group\">\n    <span>TAGS:</span>\n    <ul className=\"card__tags-list\">\n      {tags.length ? (\n        tags.map(tag => (\n          <li\n            key={`tag${memberId}-${tag}`}\n            className={`pill pill--mini background-color-${color}`}\n          >\n            {enums.TAGS[tag]}\n          </li>\n        ))\n      ) : (\n        <li className=\"pill pill--mini background-color-31\">None</li>\n      )}\n    </ul>\n  </div>\n);\n\nMemberTags.propTypes = {\n  color: PropTypes.number.isRequired,\n  memberId: PropTypes.string.isRequired,\n  tags: PropTypes.array,\n};\n\nMemberTags.defaultProps = {\n  tags: [],\n};\n\nexport default MemberTags;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import Member components\nimport MemberNationaltyFlag from './member/MemberNationalityFlag';\nimport MemberPicture from './member/MemberPicture';\nimport MemberPositions from './member/MemberPositions';\nimport MemberTags from './member/MemberTags';\n// Import utility functions\nimport utils from '../../../utils';\nimport { FavoriteIcon, Icon } from '..';\n\nconst MemberCard = ({\n  favoriteState,\n  member,\n  updateFavoriteMembers,\n  averages,\n  showId,\n  showReferenceArtist,\n  editMember,\n}) => (\n  <div className=\"card\">\n    {showId && (\n      <p className=\"member-id\">\n        {member.name.toLowerCase()}\n        {member.id}\n      </p>\n    )}\n    <div className=\"position-relative\">\n      <MemberPicture\n        className={`card__profile-image ${\n          !showReferenceArtist ? 'card__profile-image--crop' : ''\n        }`}\n        color={member.color}\n        gender={member.gender}\n        memberId={member.id}\n        name={member.name}\n      />\n      {Boolean(editMember) && (\n        <button\n          className=\"btn-invisible card__edit-member-button\"\n          onClick={() => editMember(member)}\n        >\n          <Icon type=\"edit-box\" />\n        </button>\n      )}\n    </div>\n\n    <span className={`card__color-bar background-color-${member.color}`} />\n    <h3 className=\"card__name\">\n      {member.name}\n      <FavoriteIcon\n        action={updateFavoriteMembers}\n        id={member.id}\n        size=\"20\"\n        state={favoriteState}\n      />\n    </h3>\n    {showReferenceArtist && (\n      <p>\n        {member.private && (\n          <Icon type=\"private\" color=\"red\" inline title=\"private\" size=\"18\" />\n        )}\n        <b>From </b> {member.referenceArtists.map(ra => ra.name).join(', ')}\n      </p>\n    )}\n\n    <p>\n      <b>Date of Birth:</b> {utils.parseBirthDate(member.birthdate)} (\n      {member.age}yo)\n    </p>\n    <p>\n      <b>Nationality: </b>\n      <MemberNationaltyFlag nationality={member.nationality} />\n    </p>\n    {averages && (\n      <Fragment>\n        <p className=\"card__average\">\n          <b>Avg Official Songs: </b>\n          {averages.official}%\n        </p>\n        <p className=\"card__average\">\n          <b>Avg Custom Songs: </b>\n          {averages.custom}%\n        </p>\n        <p className=\"card__average\">\n          <b>Avg All Songs: </b>\n          {averages.all}%\n        </p>\n      </Fragment>\n    )}\n    <p>\n      <b>Positions:</b>\n    </p>\n    <MemberPositions memberId={member.id} positions={member.positions} />\n    <MemberTags tags={member.tags} memberId={member.id} color={member.color} />\n  </div>\n);\n\nMemberCard.propTypes = {\n  averages: PropTypes.oneOfType([PropTypes.object]),\n  showId: PropTypes.bool,\n  showReferenceArtist: PropTypes.bool,\n  favoriteState: PropTypes.bool,\n  member: PropTypes.object.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n  editMember: PropTypes.func,\n};\n\nMemberCard.defaultProps = {\n  averages: null,\n  showId: false,\n  showReferenceArtist: false,\n  favoriteState: false,\n  editMember: null,\n};\n\nexport default MemberCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ModeWidget = ({ labels, action, disabled, active }) => (\n  <div className=\"mode-widget\">\n    {labels.map(label => {\n      const activeClass = label === active ? 'mode-widget__label--active' : '';\n      const isDisabled = disabled.includes(label)\n        ? 'mode-widget__label--disabled'\n        : '';\n      return (\n        <button\n          key={label}\n          className={`mode-widget__label ${activeClass} ${isDisabled}`}\n          onClick={() => action(label)}\n          disabled={isDisabled}\n        >\n          {label}\n        </button>\n      );\n    })}\n  </div>\n);\n\nModeWidget.propTypes = {\n  action: PropTypes.func.isRequired,\n  active: PropTypes.string.isRequired,\n  disabled: PropTypes.array,\n  labels: PropTypes.array.isRequired,\n};\n\nModeWidget.defaultProps = {\n  disabled: [],\n};\n\nexport default ModeWidget;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import position icons\nimport iconLeader from '../../../images/icon-leader.svg';\nimport iconMainVocalist from '../../../images/icon-main-vocalist.svg';\nimport iconMainRapper from '../../../images/icon-main-rapper.svg';\nimport iconMainDancer from '../../../images/icon-main-dancer.svg';\nimport iconLeadVocalist from '../../../images/icon-lead-vocalist.svg';\nimport iconLeadRapper from '../../../images/icon-lead-rapper.svg';\nimport iconLeadDancer from '../../../images/icon-lead-dancer.svg';\nimport iconVocalist from '../../../images/icon-vocalist.svg';\nimport iconDancer from '../../../images/icon-dancer.svg';\nimport iconRapper from '../../../images/icon-rapper.svg';\nimport iconCenter from '../../../images/icon-center.svg';\nimport iconVisual from '../../../images/icon-visual.svg';\nimport iconMaknae from '../../../images/icon-maknae.svg';\nimport iconAll from '../../../images/icon-all.svg';\nimport iconNone from '../../../images/icon-none.svg';\n\nconst PositionIcon = ({ className, position }) => {\n  const iconBank = {\n    LEADER: iconLeader,\n    MAIN_VOCALIST: iconMainVocalist,\n    MAIN_RAPPER: iconMainRapper,\n    MAIN_DANCER: iconMainDancer,\n    LEAD_VOCALIST: iconLeadVocalist,\n    LEAD_RAPPER: iconLeadRapper,\n    LEAD_DANCER: iconLeadDancer,\n    VOCALIST: iconVocalist,\n    RAPPER: iconDancer,\n    DANCER: iconRapper,\n    CENTER: iconCenter,\n    VISUAL: iconVisual,\n    MAKNAE: iconMaknae,\n    ALL: iconAll,\n    NONE: iconNone,\n  };\n\n  return (\n    <span className={className}>\n      <img\n        className=\"position-icon\"\n        src={iconBank[position]}\n        alt={`Position: ${position}`}\n        title={position}\n      />\n    </span>\n  );\n};\n\nPositionIcon.propTypes = {\n  className: PropTypes.string,\n  position: PropTypes.string.isRequired,\n};\n\nPositionIcon.defaultProps = {\n  className: 'position-icon-container--inline',\n};\n\nexport default PositionIcon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon, Loading } from '..';\n// Import images\nimport logo from '../../../images/logo-neg.svg';\n\nclass RequirementWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: true,\n      authentication: true,\n      admin: false,\n      activeArtist: false,\n      ready: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.ready) {\n      this.parseRequirements();\n    }\n  }\n\n  parseRequirements() {\n    this.props.requirements.forEach(requirement => {\n      this.setState({ [requirement]: true });\n    });\n    this.setState({ ready: true });\n  }\n\n  render() {\n    if (!this.state.ready) {\n      return <Loading message=\"Loading...\" />;\n    }\n\n    // Verify Database\n    if (this.state.database && !this.props.app.databaseReady) {\n      return <Loading message=\"Fecthing database...\" />;\n    }\n\n    // Verify Authentication\n    if (\n      !this.props.app.loading &&\n      this.state.authentication &&\n      !this.props.auth.isAuthenticated\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <img className=\"login-logo\" src={logo} alt=\"Line Distribution\" />\n            <p>You must be logged in to access this page.</p>\n            <button className=\"btn btn-simple\" onClick={this.props.login}>\n              Sign-in now <Icon type=\"login\" color=\"black\" inline />\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Admin\n    if (\n      !this.props.app.loading &&\n      this.state.admin &&\n      !this.props.auth.isAdmin\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <div className=\"requirement-wrapper__big-icon\">\n              <Icon type=\"stop\" color=\"red\" size={120} />\n            </div>\n            <p>You must be an administrator to access this page.</p>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Selected Artist\n    if (\n      !this.props.app.loading &&\n      this.state.selectedArtist &&\n      (!this.props.artists.selectedArtist ||\n        !this.props.artists.selectedArtist.id)\n    ) {\n      if (this.props.app.loading) {\n        return <Loading message=\"Fecthing artist...\" />;\n      }\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group.\n          </p>\n        </main>\n      );\n    }\n\n    // Verify Active Artist\n    if (\n      !this.props.app.loading &&\n      this.state.activeArtist &&\n      this.props.artists.activeArtist &&\n      !this.props.artists.activeArtist.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Required</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group and then\n            a unit.\n          </p>\n        </main>\n      );\n    }\n\n    // Verify Active Active\n    if (\n      !this.props.app.loading &&\n      this.state.activeUnit &&\n      this.props.distribute.activeUnit &&\n      !this.props.distribute.activeUnit.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Active Unit Required</h1>\n          <p>\n            No unit has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group and then\n            a unit.\n          </p>\n        </main>\n      );\n    }\n\n    if (\n      !this.props.app.loading &&\n      this.state.activeSong &&\n      this.props.distribute.activeSong &&\n      !this.props.distribute.activeSong.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Active Song Required</h1>\n          <p>\n            No song has been selected. Go to the{' '}\n            <Link to=\"/songs\">Songs Page</Link> and select a song.\n          </p>\n        </main>\n      );\n    }\n\n    return <div className=\"wrapper\">{this.props.children}</div>;\n  }\n}\n\nRequirementWrapper.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  children: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  requirements: PropTypes.array,\n};\n\nRequirementWrapper.defaultProps = {\n  requirements: [],\n};\n\nexport default RequirementWrapper;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport RequirementWrapper from '../components/RequirementWrapper';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RequirementWrapper)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nlet selectKey = 0;\n\n/**\n * Select\n * @param {action} action onChange action\n * @param {string} label label for the select\n * @param {array|object} options arrays or objects of objects\n * @param {string} optionValue key on values to be used as an option value\n * @param {string} optionName key on values to be used as an option name\n * @param {string} optionPrefix string to come before optionName\n * @param {string} placeholder string for the first placeholder option name\n * @param {bool} disablePlaceholder makes label unselectable\n * @param {string} type 'normal' or 'slim'\n */\nconst Select = ({\n  action,\n  options,\n  optionValue,\n  optionName,\n  optionPrefix,\n  label,\n  placeholder,\n  disablePlaceholder,\n  type,\n}) => {\n  // Transform options object into array\n  if (!Array.isArray(options)) {\n    options = Object.values(options);\n  }\n\n  const classNameModifier = type === 'slim' ? '--slim' : '';\n\n  return (\n    <div className=\"ld-select-group\">\n      {label ? <label className=\"ld-select__label\">{label}</label> : null}\n      <div className={`ld-select${classNameModifier}`}>\n        <select onChange={action}>\n          {placeholder && (\n            <option value=\"\" disabled={disablePlaceholder}>\n              {placeholder}\n            </option>\n          )}\n          {options.map(option => {\n            const key = `select-${selectKey++}`;\n            return (\n              <option key={key} value={option[optionValue]}>\n                {optionPrefix}\n                {option[optionName]}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nSelect.propTypes = {\n  action: PropTypes.func.isRequired,\n  options: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  optionValue: PropTypes.string,\n  optionName: PropTypes.string,\n  optionPrefix: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disablePlaceholder: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nSelect.defaultProps = {\n  options: [],\n  optionValue: '',\n  optionName: '',\n  optionPrefix: '',\n  label: '',\n  placeholder: '',\n  disablePlaceholder: false,\n  type: '',\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '..';\n\nconst SortingButton = ({ action, active }) => {\n  return (\n    <button className=\"sorting-button\" onClick={action}>\n      <Icon type=\"sorting-arrows\" color={active ? 'black' : 'gray'} />\n    </button>\n  );\n};\n\nSortingButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  active: PropTypes.bool.isRequired,\n};\n\nexport default SortingButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SwitchToggle = ({ action, labels, checked }) => {\n  if (!labels) {\n    labels = { left: '', right: '' };\n  } else if (Array.isArray(labels)) {\n    labels = { left: labels[0], right: labels[1] };\n  } else if (typeof labels !== 'object') {\n    labels = { left: 'A', right: 'B' };\n  }\n\n  return (\n    <span>\n      <span className=\"slide-text-left\">{labels.left}</span>\n      <label className=\"switch\">\n        <input type=\"checkbox\" onChange={action} checked={checked} />\n        <span className=\"slider\" />\n      </label>\n      <span className=\"slide-text-right\">{labels.right}</span>\n    </span>\n  );\n};\n\nSwitchToggle.propTypes = {\n  action: PropTypes.func.isRequired,\n  labels: PropTypes.object, // eslint-disable-line\n  checked: PropTypes.bool,\n};\n\nSwitchToggle.defaultProps = {\n  checked: false,\n};\n\nexport default SwitchToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../utils';\n\nconst Tabs = ({ tabs, active, action, icons, ...props }) => {\n  // Check for names and ids\n  tabs = tabs.map((tab, index) => {\n    const tabObj = {\n      name: tab.name || tab,\n      id: tab.id || tab,\n    };\n    if (tab.id !== undefined && tab.name === undefined) {\n      tabObj.name = utils.capitalizeWord(tab.id);\n    }\n    if (tab.id === undefined && tab.name !== undefined) {\n      tabObj.id = utils.spinalCaseWord(tab.name);\n    }\n\n    tabObj.key = `${tab.id}-${index}`;\n    tabObj.isActive = active === tab.id || active === tab ? 'selected' : '';\n    tabObj.icons = Object.entries(icons).map(([condition, icon]) =>\n      tab[condition] ? icon : null\n    );\n    return tabObj;\n  });\n\n  return (\n    <section className=\"tabs-container\">\n      <ul className=\"tabs\" onClick={action}>\n        {tabs.map(tab => (\n          <li\n            key={tab.key}\n            className={utils.bem('tabs', tab.isActive, 'tab')}\n            id={tab.id}\n          >\n            {tab.name} {tab.icons.map(icon => icon)}\n          </li>\n        ))}\n      </ul>\n      <div className=\"tabs-content\">{props.children}</div>\n    </section>\n  );\n};\n\nTabs.propTypes = {\n  action: PropTypes.func.isRequired,\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any.isRequired,\n  icons: PropTypes.objectOf(PropTypes.element),\n  tabs: PropTypes.array.isRequired,\n};\n\nTabs.defaultProps = {\n  active: null,\n  icons: [],\n};\n\nexport default Tabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Typeahead = ({ action, className, name, placeholder, suggestions }) => (\n  <div className={`typeahead ${className}`}>\n    <input\n      className=\"typeahead-input\"\n      list={`list-${name}`}\n      onChange={action}\n      placeholder={placeholder}\n    />\n    <datalist className=\"typeahead-datalist\" id={`list-${name}`}>\n      {suggestions.map(suggestion => (\n        <option\n          key={suggestion}\n          className=\"typeahead-option\"\n          value={suggestion}\n        />\n      ))}\n    </datalist>\n  </div>\n);\n\nTypeahead.propTypes = {\n  action: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  suggestions: PropTypes.array,\n};\n\nTypeahead.defaultProps = {\n  className: '',\n  placeholder: 'Search...',\n  suggestions: [],\n};\n\nexport default Typeahead;\n","/* eslint react/require-default-props: 0 */\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon, LoadingIcon } from '../../../common';\n// Import images\nimport logo from '../../../../images/logo.svg';\nimport userPlaceholder from '../../../../images/user-placeholder.svg';\n\nconst Menu = ({\n  activeUnit,\n  auth,\n  history,\n  location,\n  login,\n  logout,\n  pending,\n}) => {\n  const handleLogoClick = () => {\n    history.push('/');\n  };\n\n  const { pathname } = location;\n\n  // Hide parts of the menu if user is not authenticaded\n  const authHideClass = auth.isAuthenticated ? '' : 'hidden';\n\n  // Hide parts of the menu if user is not an administrator\n  const adminHideClass = auth.isAdmin ? '' : 'hidden';\n\n  // Hide parts of the menu if user hasn't selected an active unit\n  const activeUnitHideClass = activeUnit.id ? '' : 'hidden';\n\n  // Sign-in pending\n  const isPending =\n    pending.INITIALIZER || pending.RUN_LOGIN || pending.RUN_AUTH;\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-nav\">\n        <img\n          className=\"header-nav__logo\"\n          src={logo}\n          alt=\"Logo\"\n          onClick={() => handleLogoClick()}\n        />\n        <nav className={`header-nav__links ${authHideClass}`}>\n          <Link\n            to=\"/artists\"\n            className={pathname === '/artists' ? 'active' : ''}\n          >\n            Artists\n          </Link>\n          <Link\n            to=\"/distribute\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/distribute' ? 'active' : ''\n            }`}\n          >\n            Distribute\n          </Link>\n          <Link\n            to=\"/lyrics\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/lyrics' ? 'active' : ''\n            }`}\n          >\n            Lyrics\n          </Link>\n          <Link\n            to=\"/songs\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/songs' ? 'active' : ''\n            }`}\n          >\n            Songs\n          </Link>\n          <Link to=\"/idols\" className={pathname === '/idols' ? 'active' : ''}>\n            Idols\n          </Link>\n          <Link to=\"/lab\" className={pathname === '/lab' ? 'active' : ''}>\n            Lab\n          </Link>\n          <div className={`header-admin ${adminHideClass}`}>\n            <button\n              className={\n                pathname.includes('/admin')\n                  ? 'header-admin__nav active'\n                  : 'header-admin__nav'\n              }\n            >\n              Admin Tools\n            </button>\n            <div className=\"header-admin__dropdown\">\n              <Link to=\"/admin/actions\">Actions</Link>\n              <Link to=\"/admin/manage\">Manage</Link>\n              <Link to=\"/admin/sync\">Sync</Link>\n              <Link to=\"/admin/temp\">Test/Temp</Link>\n              <Link to=\"/admin/ui-reference\">UI Reference</Link>\n            </div>\n          </div>\n        </nav>\n      </div>\n      {auth.isAuthenticated ? (\n        <div className=\"header-user\">\n          <button className=\"header-user__nav\">\n            <img\n              className=\"header-user__photo\"\n              src={auth.user.photoURL || userPlaceholder}\n              alt=\"user\"\n            />\n            {auth.user.displayName}\n          </button>\n          <div className=\"header-user__dropdown\">\n            <Link to=\"/user?tab=1\">My Artists</Link>\n            <Link to=\"/user?tab=2\">My Distributions</Link>\n            <hr />\n            <a href=\"/\" onClick={logout}>\n              Sign out <Icon type=\"logout\" inline />\n            </a>\n          </div>\n        </div>\n      ) : (\n        <div className=\"header-user\">\n          <button\n            className=\"btn btn-hollow header-user__btn\"\n            onClick={login}\n            disabled={isPending}\n          >\n            {isPending ? (\n              <LoadingIcon size=\"tiny\" inline />\n            ) : (\n              <Fragment>\n                Sign-in <Icon type=\"logout\" color=\"white\" inline />\n              </Fragment>\n            )}\n          </button>\n        </div>\n      )}\n    </header>\n  );\n};\n\nMenu.propTypes = {\n  activeUnit: PropTypes.object,\n  auth: PropTypes.object,\n  history: PropTypes.object,\n  location: PropTypes.object,\n  login: PropTypes.func,\n  logout: PropTypes.func,\n  pending: PropTypes.object.isRequired,\n};\n\nMenu.defaultProps = {\n  activeUnit: {},\n  auth: {},\n  history: {},\n  location: {},\n  login: () => {},\n  logout: () => {},\n};\n\nexport default Menu;\n","import React from 'react';\n\nconst LoadingBar = () => (\n  <div className=\"loading-bar\">\n    <div className=\"bar-container\">\n      <span className=\"bar bar-0\" />\n      <span className=\"bar bar-1\" />\n      <span className=\"bar bar-2\" />\n      <span className=\"bar bar-3\" />\n      <span className=\"bar bar-4\" />\n      <span className=\"bar bar-5\" />\n      <span className=\"bar bar-6\" />\n      <span className=\"bar bar-7\" />\n      <span className=\"bar bar-8\" />\n    </div>\n  </div>\n);\n\nexport default LoadingBar;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport Menu from './Menu';\nimport LoadingBar from './LoadingBar';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.init();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Menu\n          activeUnit={this.props.distribute.activeUnit}\n          auth={this.props.auth}\n          history={this.props.history}\n          location={this.props.location}\n          login={this.props.login}\n          logout={this.props.logout}\n          pending={this.props.app.pending}\n        />\n        {this.props.app.loading && <LoadingBar />}\n      </Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  distribute: PropTypes.object,\n  history: PropTypes.object.isRequired,\n  init: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nApp.defaultProps = {\n  distribute: { activeUnit: {} },\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Header from '../components/Header';\n\nimport { appOperations } from '../../../../reducers/app';\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...appOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Header)\n);\n","import HeaderContainer from './containers/HeaderContainer';\n\nexport default HeaderContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common/index';\n\nconst ErrorModal = ({ app, handleCloseErrorModal, handleSendBugReport }) => {\n  if (app.error) {\n    return (\n      <div className=\"modal-error\">\n        <main className=\"modal-error__content\">\n          <button className=\"close\" onClick={handleCloseErrorModal}>\n            ×\n          </button>\n          <Icon type=\"error\" color=\"red\" size=\"96\" />\n          <h1>AN ERROR HAS OCURRED</h1>\n          <h3 className=\"modal-error__error-message\">{app.errorMessage}</h3>\n          <h4>\n            You may close this modal, but the website might not work as\n            expected.\n          </h4>\n          <button className=\"btn\" onClick={handleSendBugReport}>\n            Send Bug Report\n          </button>\n        </main>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nErrorModal.propTypes = {\n  app: PropTypes.object.isRequired,\n  handleCloseErrorModal: PropTypes.func.isRequired,\n  handleSendBugReport: PropTypes.func.isRequired,\n};\n\nexport default ErrorModal;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ErrorModal from '../components/ErrorModal';\n\nimport { appOperations } from '../../../../reducers/app';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n});\n\nconst mapDispatchToProps = {\n  ...appOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ErrorModal)\n);\n","import ErrorModalContainer from './containers/ErrorModalContainer';\n\nexport default ErrorModalContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { LoadingIcon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass AdminAction extends Component {\n  constructor() {\n    super();\n    this.state = {\n      code: '',\n      isDisabled: true,\n    };\n\n    this.generateCode = this.generateCode.bind(this);\n    this.performAction = this.performAction.bind(this);\n    this.verifyCode = this.verifyCode.bind(this);\n  }\n\n  componentDidMount() {\n    this.generateCode();\n  }\n\n  generateCode() {\n    const code = utils.generateAdminCode();\n    const isDisabled = true;\n    this.setState({ code, isDisabled });\n  }\n\n  verifyCode(e) {\n    const { value } = e.target;\n    if (this.state.code === value) {\n      this.setState({\n        isDisabled: false,\n      });\n    }\n  }\n\n  performAction() {\n    if (!this.state.isDisabled) {\n      this.props.action();\n      this.generateCode();\n    }\n  }\n\n  render() {\n    const { pending, title, children, actionName } = this.props;\n\n    return (\n      <div className=\"actions-item\">\n        <h3>{title}</h3>\n        {children}\n        <div className=\"actions-code\">\n          {pending ? <LoadingIcon size=\"tiny\" /> : this.state.code}\n        </div>\n        <input\n          type=\"text\"\n          className=\"actions-code-input\"\n          maxLength=\"4\"\n          onChange={this.verifyCode}\n        />\n\n        <button\n          className=\"btn\"\n          disabled={this.state.isDisabled}\n          onClick={this.performAction}\n        >\n          {pending ? <LoadingIcon size=\"small\" /> : actionName}\n        </button>\n      </div>\n    );\n  }\n}\n\nAdminAction.propTypes = {\n  pending: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any.isRequired,\n  action: PropTypes.func.isRequired,\n  actionName: PropTypes.string.isRequired,\n};\n\nAdminAction.defaultProps = {\n  pending: false,\n};\n\nexport default AdminAction;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport AdminAction from './AdminAction';\n// Import common components\nimport { RequirementWrapper } from '../../../common';\n\nconst NOOP = () => {};\n\nclass AdminActions extends Component {\n  componentDidMount() {\n    //\n  }\n\n  render() {\n    const {\n      app: { pending },\n      handleResyncDB,\n    } = this.props;\n\n    return (\n      <RequirementWrapper requirements={['admin']}>\n        <main className=\"container container--admin-actions\">\n          <h1>Administrator Actions</h1>\n          <p>\n            Here you can manipulate the database by performing preset actions.<br />\n            You must type the for letter code to enable the button.\n          </p>\n\n          <div className=\"actions-group\">\n            <AdminAction\n              pending={pending.RESYNC_DATABASE}\n              title=\"Resync Database\"\n              action={handleResyncDB}\n              actionName=\"Resync Database\"\n            >\n              <Fragment>\n                <p className=\"description\">\n                  Performs resync of non-critical data in the database.\n                </p>\n                <ul className=\"description-list\">\n                  <li className=\"description-item\">\n                    Adds artistsId to artists from Units\n                  </li>\n                  <li className=\"description-item\">\n                    Adds member ids and names to artists\n                  </li>\n                  <li className=\"description-item\">Recounts colors usage</li>\n                  <li className=\"description-item\">\n                    Adds positions to members\n                  </li>\n                  <li className=\"description-item\">\n                    Keeps only unique positions for each members\n                  </li>\n                  <li className=\"description-item\">\n                    Resyncs unitIds for artists sorted by debut year\n                  </li>\n                </ul>\n              </Fragment>\n            </AdminAction>\n\n            <AdminAction\n              pending={false}\n              title=\"Random Users\"\n              action={NOOP}\n              actionName=\"Generate Random Users\"\n            >\n              <Fragment>\n                <p className=\"description\">Not implelemented yet.</p>\n              </Fragment>\n            </AdminAction>\n\n            <AdminAction\n              pending={false}\n              title=\"Another Action\"\n              action={NOOP}\n              actionName=\"Perform Action\"\n            >\n              <Fragment>\n                <p className=\"description\">Not implelemented yet.</p>\n              </Fragment>\n            </AdminAction>\n          </div>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nAdminActions.propTypes = {\n  app: PropTypes.object.isRequired,\n  handleResyncDB: PropTypes.func.isRequired,\n};\n\nAdminActions.defaultProps = {};\n\nexport default AdminActions;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport AdminActions from '../components/AdminActions';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AdminActions)\n);\n","import AdminActionsContainer from './containers/AdminActionsContainer';\n\nexport default AdminActionsContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import shared components\nimport { FavoriteIcon, LoadingIcon, Icon } from '../../../common';\n// Import utils\nimport enums from '../../../../utils/readable-enums';\n\nconst NUMBER_OF_COLUMNS = '7';\n\nconst ArtistsTable = ({\n  artists,\n  favoriteAction,\n  pending,\n  rowAction,\n  searchQuery,\n  showFavoriteArtistsOnly,\n  user,\n}) => {\n  // Filter artists\n  let filteredArtists = artists;\n  if ((searchQuery && filteredArtists[0]) || showFavoriteArtistsOnly) {\n    filteredArtists = _.filter(artists, o => {\n      let include = false;\n      // If displaying only favorite artists\n      if (showFavoriteArtistsOnly) {\n        include = user.favoriteArtists[o.id] !== undefined;\n      }\n      // If displaying only matching queries\n      if (searchQuery && filteredArtists[0]) {\n        include = o.query.includes(searchQuery);\n      }\n\n      return include;\n    });\n  }\n\n  // Message to be display when table has no rows\n  const emptyTableMessage =\n    searchQuery.length > 0\n      ? 'No artists available within your search'\n      : 'No artists available';\n\n  // Row Fallback when loading or no results\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan={NUMBER_OF_COLUMNS}>\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan={NUMBER_OF_COLUMNS}>{emptyTableMessage}</td>\n      </tr>\n    );\n  };\n\n  const hasActiveFilters = searchQuery.length > 0 || showFavoriteArtistsOnly;\n\n  return (\n    <Fragment>\n      {pending ? (\n        <p className=\"italic\">Loading...</p>\n      ) : (\n        <p className=\"italic\">\n          Displaying {filteredArtists.length} artists\n          {hasActiveFilters ? ' within search' : ''}\n          ...\n        </p>\n      )}\n\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th className=\"artists-table__favorite-col\">Favorite</th>\n            <th>Name</th>\n            <th>Agency</th>\n            <th>Genre</th>\n            <th>Units</th>\n            <th>Members</th>\n            <th>Disbanded</th>\n          </tr>\n        </thead>\n        <tbody onClick={rowAction}>\n          {filteredArtists.length > 0\n            ? filteredArtists.map(entry => {\n                const key = `all-artists-${entry.id}`;\n                const id = `${entry.id}:::${entry.unitIds[0]}`;\n                return (\n                  <tr key={key} id={id}>\n                    <td\n                      className=\"artists-cell-favorite\"\n                      onClick={() => favoriteAction(entry.id)}\n                    >\n                      <FavoriteIcon\n                        action={() => {}}\n                        id={entry.id}\n                        size=\"12\"\n                        state={\n                          user.favoriteArtists && user.favoriteArtists[entry.id]\n                        }\n                      />\n                    </td>\n                    <td>\n                      {entry.name}{' '}\n                      {entry.private ? (\n                        <Icon\n                          type=\"private\"\n                          color=\"red\"\n                          title=\"Private\"\n                          inline\n                        />\n                      ) : null}\n                    </td>\n                    <td>{entry.agency}</td>\n                    <td>{enums.GENRES[entry.genre]}</td>\n                    <td>{entry.unitIds.length}</td>\n                    <td>\n                      {entry.members.map(member => member.name).join(', ')} (\n                      {entry.members.length})\n                    </td>\n                    <td>\n                      {entry.disbanded ? (\n                        <Icon\n                          type=\"grave\"\n                          color=\"purple\"\n                          title=\"Disbanded\"\n                          inline\n                        />\n                      ) : null}\n                    </td>\n                  </tr>\n                );\n              })\n            : rowFallback()}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nArtistsTable.propTypes = {\n  artists: PropTypes.array.isRequired,\n  favoriteAction: PropTypes.func.isRequired,\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string,\n  showFavoriteArtistsOnly: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n};\n\nArtistsTable.defaultProps = {\n  pending: false,\n  searchQuery: '',\n  showFavoriteArtistsOnly: false,\n};\n\nexport default ArtistsTable;\n","class LocalStorage {\n  constructor() {\n    this.store = {};\n    this.notLoaded = true;\n\n    this.init();\n  }\n\n  init() {\n    this.load();\n    return this.get();\n  }\n\n  get(key) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    if (key) {\n      return this.store[key] || null;\n    }\n    return this.store;\n  }\n\n  load() {\n    const localStorage = JSON.parse(\n      window.localStorage.getItem('line-distribution')\n    );\n    if (localStorage) {\n      this.store = localStorage;\n      this.notLoaded = false;\n    }\n  }\n\n  // To Remove a property, you can use the set method, but passing an object with the key and value\n  // null, the property will be removed from local storage\n  set(value) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    const type = typeof value;\n    if (type !== 'string' && type !== 'object') {\n      console.error(\n        'localStorage set value must be a string or a key-value object'\n      );\n      return;\n    }\n\n    // When value is a string, use as a property toggle\n    if (typeof value === 'string') {\n      this.store[value] = !this.store[value];\n    } else {\n      // Remove any null or undefined property\n      Object.entries(value).forEach(([key, item]) => {\n        if (item === null || item === undefined) {\n          delete value[key];\n        }\n      });\n\n      this.store = {\n        ...this.store,\n        ...value,\n      };\n    }\n\n    this.save();\n  }\n\n  save() {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    window.localStorage.setItem(\n      'line-distribution',\n      JSON.stringify(this.store)\n    );\n    this.load();\n  }\n}\n\nexport default new LocalStorage();\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport {\n  ActiveUnit,\n  Switch,\n  RequirementWrapper,\n  ActiveSong,\n} from '../../../common';\n// Import components\nimport ArtistsTable from './ArtistsTable';\n// Import utils\nimport localStorage from '../../../../utils/local-storage';\n\nclass Artists extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artistsFavoritesOnly: false,\n      artistSearchQuery: '',\n    };\n\n    this.handleTableClick = this.handleTableClick.bind(this);\n    this.updateSearchQuery = this.updateSearchQuery.bind(this);\n    this.toggleShowFavoriteArtistsOnly = this.toggleShowFavoriteArtistsOnly.bind(\n      this\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.loadArtists();\n    }\n\n    this.localStorage();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.auth.isAuthenticated && this.props.auth.isAuthenticated) {\n      this.props.loadArtists();\n    }\n  }\n\n  localStorage() {\n    this.setState({\n      artistsFavoritesOnly: localStorage.get('artistsFavoritesOnly') || false,\n    });\n  }\n\n  updateSearchQuery(value) {\n    if (value === '' || value.length > 2) {\n      this.setState({\n        artistSearchQuery: value.toLowerCase(),\n      });\n    }\n  }\n\n  toggleShowFavoriteArtistsOnly() {\n    const toggleValue = !this.state.artistsFavoritesOnly;\n\n    this.setState({\n      artistsFavoritesOnly: toggleValue,\n    });\n\n    localStorage.set({ artistsFavoritesOnly: toggleValue });\n  }\n\n  // Redirects user to the selected Artists page\n  handleTableClick(e) {\n    const { id } = e.target.parentNode;\n    const { className } = e.target;\n    if (id && className !== 'artists-cell-favorite') {\n      const [artistId, unitId] = id.split(':::');\n\n      // If artist has units, add first one to route\n      const unitSubRoute = unitId.startsWith('-') ? `/${unitId}` : '';\n\n      this.props.history.push(`/artists/${artistId}${unitSubRoute}`);\n    }\n  }\n\n  render() {\n    const {\n      app: { pending },\n      auth: { user },\n      db,\n      distribute: { activeSong, activeUnit },\n    } = this.props;\n\n    const isArtistPending =\n      pending.REQUEST_ARTISTS || pending.INITIALIZER || pending.RUN_AUTH;\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--artists\">\n          <h1>Artists</h1>\n\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n\n          <section className=\"artists__section\">\n            <h2>All Artists</h2>\n            <input\n              className=\"artists__search-bar\"\n              type=\"text\"\n              placeholder=\"Filter...\"\n              onChange={e => this.updateSearchQuery(e.target.value)}\n            />{' '}\n            Show Favorite Artists Only:{' '}\n            <Switch\n              action={this.toggleShowFavoriteArtistsOnly}\n              checked={this.state.artistsFavoritesOnly}\n            />\n            <ArtistsTable\n              artists={db.artists}\n              searchQuery={this.state.artistSearchQuery}\n              pending={isArtistPending}\n              rowAction={this.handleTableClick}\n              favoriteAction={this.props.updateFavoriteArtists}\n              showFavoriteArtistsOnly={this.state.artistsFavoritesOnly}\n              user={user}\n            />\n          </section>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtists.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtists.defaultProps = {};\n\nexport default Artists;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artists from '../components/Artists';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artists)\n);\n","import ArtistsContainer from './containers/ArtistsContainer';\n\nexport default ArtistsContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utils\nimport constants from '../../../../utils/constants';\nimport utils from '../../../../utils';\n\nconst picturePlaceholder = `${process.env.PUBLIC_URL}${constants.GROUPS_PICTURE_URL}placeholder.jpg`;\n\nclass ArtistPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.fallback = () => {\n      this.setState({ fetchPictureFailed: true });\n    };\n  }\n\n  render() {\n    const { artistName } = this.props;\n\n    const parsedName = utils.removeSpecialCharacters(artistName.toLowerCase());\n\n    // If picture is not found\n    if (!artistName || this.state.fetchPictureFailed) {\n      console.log(`Missing Artist Picture: ${parsedName}`); // eslint-disable-line\n      return (\n        <img\n          className=\"artist-page-profile\"\n          src={picturePlaceholder}\n          alt=\"No Artist\"\n        />\n      );\n    }\n\n    const pictureUrl = `${process.env.PUBLIC_URL}${constants.GROUPS_PICTURE_URL}${parsedName}.jpg`;\n\n    return (\n      <img\n        className=\"artist-page-profile\"\n        src={pictureUrl}\n        onError={this.fallback}\n        alt=\"Artist Profile\"\n      />\n    );\n  }\n}\n\nArtistPicture.propTypes = {\n  artistName: PropTypes.string,\n};\n\nArtistPicture.defaultProps = {\n  artistName: '',\n};\n\nexport default ArtistPicture;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import constants\nimport constants from '../../../../utils/constants';\n// Import images\nimport biasChoose from '../../../../images/bias-choose.svg';\nimport loading from '../../../../images/loading.svg';\n\nclass Bias extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isHovering: false,\n      bias: null,\n      fetchPictureFailed: false,\n    };\n    this.fallback = () => {\n      this.setState({ fetchPictureFailed: true });\n    };\n    this.handleMouseOver = this.handleMouseOver.bind(this);\n  }\n\n  componentDidMount() {\n    this.setBiasId();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.userBiases[this.props.artistId] !==\n      this.props.userBiases[this.props.artistId]\n    ) {\n      this.setBiasId();\n    }\n  }\n\n  setBiasId() {\n    const biasId = this.props.userBiases[this.props.artistId];\n    if (biasId) {\n      const bias = _.find(this.props.members, { id: biasId });\n\n      this.setState({\n        bias,\n        biasPictureUrl: `${process.env.PUBLIC_URL}${\n          constants.PROFILE_PICTURE_URL\n        }${bias.name.toLowerCase()}${bias.id}.jpg`,\n      });\n    }\n  }\n\n  handleMouseOver() {\n    this.setState({\n      isHovering: !this.state.isHovering,\n    });\n  }\n\n  render() {\n    const { artistId, members, isPending, updateBias } = this.props;\n\n    if (isPending) {\n      return (\n        <div className=\"artist-page-bias\">\n          <img\n            className=\"bias-icon-picture__loading-icon\"\n            src={loading}\n            alt=\"Loading Icon\"\n          />\n        </div>\n      );\n    }\n\n    const placeholderComponent = (\n      <img\n        className={`bias-icon-placeholder ${\n          this.state.isHovering ? 'bias-icon-placeholder--hover' : ''\n        }`}\n        src={biasChoose}\n        alt=\"Choose your bias\"\n      />\n    );\n\n    const biasColor = this.state.bias ? this.state.bias.color : '31';\n\n    const pictureComponent =\n      // If picture is not found\n      this.state.fetchPictureFailed ? (\n        <div\n          className={`bias-icon-picture__no-image background-color-${biasColor}`}\n        >\n          <span>{this.state.bias.name}</span>\n        </div>\n      ) : (\n        <img\n          className={`bias-icon-picture__image border-color-${biasColor}`}\n          src={this.state.biasPictureUrl}\n          onError={this.fallback}\n          alt=\"Bias\"\n        />\n      );\n\n    return (\n      <div\n        className=\"artist-page-bias\"\n        onMouseEnter={this.handleMouseOver}\n        onMouseLeave={this.handleMouseOver}\n      >\n        {this.state.bias ? (\n          <div className=\"bias-icon-picture\">{pictureComponent}</div>\n        ) : (\n          placeholderComponent\n        )}\n\n        {/* Select members as bias on hover */\n        this.state.isHovering ? (\n          <div className=\"bias-hover\">\n            Choose your bias for this artist:\n            <br />\n            <div className=\"bias-hover-buttons\">\n              {members.map(member => (\n                <button\n                  key={`b-h-b-${member.id}`}\n                  className={`bias-hover-button background-color-${member.color}`}\n                  onClick={() => updateBias(member.id, artistId)}\n                >\n                  {member.name}\n                </button>\n              ))}\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nBias.propTypes = {\n  artistId: PropTypes.string,\n  isPending: PropTypes.bool,\n  members: PropTypes.array,\n  updateBias: PropTypes.func.isRequired,\n  userBiases: PropTypes.object,\n};\n\nBias.defaultProps = {\n  artistId: '',\n  isPending: false,\n  members: [],\n  userBiases: {},\n};\n\nexport default Bias;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DistributedSongPreview = ({ rates, members }) => (\n  <div className=\"distribution-rates-preview__container\">\n    {members.map(member => {\n      const allRate = rates.ALL || 0;\n      const noneRate = rates.NONE || 0;\n      const percentage =\n        (100 * rates[member.id]) / (rates.total - allRate - noneRate);\n\n      const spanWidth = {\n        width: `${percentage}%`,\n      };\n\n      return (\n        <span\n          key={`bar-${member.id}-${percentage}`}\n          className={`distribution-rates-preview__bar background-color-${member.color}`}\n          style={spanWidth}\n        >\n          {percentage.toFixed(1)}%\n        </span>\n      );\n    })}\n  </div>\n);\n\nDistributedSongPreview.propTypes = {\n  rates: PropTypes.object.isRequired,\n  members: PropTypes.array.isRequired,\n};\n\nDistributedSongPreview.defaultProps = {};\n\nexport default DistributedSongPreview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { LoadingIcon } from '../../../common';\nimport DistributedSongPreview from './DistributedSongPreview';\n\nconst DistributedSongsTable = ({\n  distributions,\n  pending,\n  members,\n  rowAction,\n}) => {\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"7\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"3\">This artist have no distributions yet</td>\n      </tr>\n    );\n  };\n\n  const humanizeCategory = (category, originalArtist) => {\n    switch (category) {\n      case 'WOULD':\n        return `How they would sing ${originalArtist}`;\n      case 'SHOULD':\n        return 'How they should sing it';\n      default:\n        return 'Official';\n    }\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Type</th>\n          <th>Distribution Preview</th>\n        </tr>\n      </thead>\n      <tbody>\n        {distributions.length > 0\n          ? distributions.map(entry => {\n              const key = `artist-distribution-${entry.id}`;\n              return (\n                <tr\n                  key={key}\n                  id={`a-${entry.id}`}\n                  className=\"artist-distributed-songs-row\"\n                  onClick={() => rowAction(entry.id)}\n                >\n                  <td className=\"artist-distributed-songs-row__title\">\n                    {entry.songTitle}\n                  </td>\n                  <td className=\"artist-distributed-songs-row__original-artist\">\n                    {humanizeCategory(entry.category, entry.songArtist)}\n                  </td>\n                  <td className=\"artist-distributed-songs-row__distribution-preview\">\n                    <DistributedSongPreview\n                      rates={entry.rates}\n                      members={members}\n                    />\n                  </td>\n                </tr>\n              );\n            })\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nDistributedSongsTable.propTypes = {\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func,\n  distributions: PropTypes.array.isRequired,\n  members: PropTypes.array.isRequired,\n};\n\nDistributedSongsTable.defaultProps = {\n  pending: false,\n  rowAction: () => {},\n};\n\nexport default DistributedSongsTable;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import components\nimport DistributedSongsTable from './DistributedSongsTable';\n// Import common components\nimport { Tabs, Icon, LoadingWrapper, MemberCard } from '../../../common';\n\nclass Units extends Component {\n  constructor(props) {\n    super(props);\n\n    this.redirectToUnit = this.redirectToUnit.bind(this);\n    this.goToDistribution = this.goToDistribution.bind(this);\n  }\n\n  componentDidMount() {\n    const { unitId } = this.props.match.params;\n    if (unitId && this.props.auth.isAuthenticated) {\n      this.props.loadUnit(unitId);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevUnitId = prevProps.match.params.unitId;\n    const { unitId } = this.props.match.params;\n    if (\n      this.props.auth.isAuthenticated &&\n      (this.props.artists.selectedUnit.id !==\n        prevProps.artists.selectedUnit.id ||\n        prevUnitId !== unitId)\n    ) {\n      this.props.loadUnit(unitId);\n    }\n  }\n\n  redirectToUnit(e) {\n    const unitId = e.target.id;\n    const artistId = this.props.artists.selectedArtist.id;\n    if (artistId && unitId && this.props.match.params.unitId !== unitId) {\n      this.props.history.push(`/artists/${artistId}/${unitId}`);\n    }\n  }\n\n  goToPage(page) {\n    // Activate Unit\n    if (\n      this.props.artists.selectedUnit.id !== this.props.distribute.activeUnit.id\n    ) {\n      this.props.activateUnit();\n    }\n\n    // Then Redirect: songs, lyrics, distribute\n    this.props.history.push(`/${page}`);\n  }\n\n  goToDistribution(id) {\n    this.props.loadDistribution(id);\n\n    // Then Active Unit and go to page\n    this.goToPage('distribute');\n  }\n\n  render() {\n    const {\n      app: { pending },\n      artists: { selectedArtist, selectedUnit },\n      auth: {\n        user: { favoriteMembers },\n      },\n      match,\n      updateFavoriteMembers,\n    } = this.props;\n\n    const isUnitPending = pending.REQUEST_UNIT;\n\n    return (\n      <section className=\"artist__section\">\n        <Tabs\n          tabs={selectedArtist.units || []}\n          action={this.redirectToUnit}\n          active={match.params.unitId}\n          icons={{\n            official: <Icon type=\"check\" color=\"blue\" inline key=\"official\" />,\n            subUnit: <Icon type=\"sub-unit\" color=\"orange\" key=\"subUnit\" />,\n          }}\n        >\n          {selectedUnit.id ? (\n            <div className=\"unit-section\">\n              <div className=\"unit-section__info\">\n                <div className=\"unit-section__summary\">\n                  <LoadingWrapper pending={isUnitPending}>\n                    <Fragment>\n                      <p>\n                        <b>\n                          {selectedUnit.subUnit ? 'Sub-unit' : ''} Debut Year:\n                        </b>{' '}\n                        {selectedUnit.debutYear || '?'}\n                      </p>\n                      <p>\n                        <b>Official Distributions:</b>{' '}\n                        {selectedUnit.distributions.official.length || 0}\n                      </p>\n                      <p>\n                        <b>Custom Distributions:</b>{' '}\n                        {selectedUnit.distributions.custom.length || 0}\n                      </p>\n                      <p>\n                        <b>Rework Distributions:</b>{' '}\n                        {selectedUnit.distributions.rework.length || 0}\n                      </p>\n                      <div className=\"unit-section__actions\">\n                        <button\n                          className=\"btn\"\n                          onClick={() => this.goToPage('songs')}\n                        >\n                          Distribute\n                        </button>\n                        <button\n                          className=\"btn\"\n                          onClick={() => this.goToPage('lyrics')}\n                        >\n                          Play with Lyrics{' '}\n                          <span className=\"restriction\">*</span>\n                        </button>\n                        <button className=\"btn\" disabled>\n                          Random Song\n                        </button>\n                        <p>\n                          <small>* You won&apos;t be able to save this.</small>\n                        </p>\n                      </div>\n                    </Fragment>\n                  </LoadingWrapper>\n                </div>\n              </div>\n              <hr className=\"unit-section__ruler\" />\n              <h2>Members:</h2>\n              <LoadingWrapper pending={isUnitPending}>\n                <div className=\"unit-section__members\">\n                  {_.sortBy(\n                    Object.values(selectedUnit.members),\n                    'birthdate'\n                  ).map(member => (\n                    <MemberCard\n                      key={member.id}\n                      member={member}\n                      favoriteState={\n                        favoriteMembers && favoriteMembers[member.id]\n                      }\n                      updateFavoriteMembers={updateFavoriteMembers}\n                      averages={member.averages}\n                    />\n                  ))}\n                </div>\n              </LoadingWrapper>\n              <hr className=\"unit-section__ruler\" />\n              <h2>Official Songs Distributions</h2>\n              <LoadingWrapper pending={isUnitPending}>\n                <DistributedSongsTable\n                  distributions={selectedUnit.distributions.official}\n                  members={selectedUnit.members}\n                  rowAction={this.goToDistribution}\n                />\n              </LoadingWrapper>\n              <h2>Custom Distributions</h2>\n              <LoadingWrapper pending={isUnitPending}>\n                <DistributedSongsTable\n                  distributions={selectedUnit.distributions.custom}\n                  members={selectedUnit.members}\n                  rowAction={this.goToDistribution}\n                />\n              </LoadingWrapper>\n              <h2>Re-Distributions</h2>\n              <LoadingWrapper pending={isUnitPending}>\n                <DistributedSongsTable\n                  distributions={selectedUnit.distributions.rework}\n                  members={selectedUnit.members}\n                  rowAction={this.goToDistribution}\n                />\n              </LoadingWrapper>\n            </div>\n          ) : (\n            <p>\n              <Icon type=\"go-up\" color=\"gray\" inline /> Select one of the tabs\n              to see the unit information and options.\n            </p>\n          )}\n        </Tabs>\n      </section>\n    );\n  }\n}\n\nUnits.propTypes = {\n  activateUnit: PropTypes.func.isRequired,\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadUnit: PropTypes.func.isRequired,\n  loadDistribution: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n};\n\nexport default Units;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Units from '../components/Units';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Units)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport ArtistPicture from './ArtistPicture';\nimport Bias from './Bias';\nimport UnitsContainer from '../containers/UnitsContainer';\n// Import common components\nimport {\n  FavoriteIcon,\n  LoadingWrapper,\n  RequirementWrapper,\n  Icon,\n} from '../../../common';\n\nclass Artist extends Component {\n  componentDidMount() {\n    const { artistId } = this.props.match.params;\n    if (\n      this.props.artists.selectedArtist &&\n      this.props.artists.selectedArtist.id !== artistId\n    ) {\n      this.props.loadArtist(artistId, this.props.location.search);\n    }\n  }\n\n  render() {\n    const {\n      app,\n      artists: { selectedArtist },\n      auth,\n      updateBias,\n    } = this.props;\n\n    const isArtistPending = app.pending.REQUEST_ARTIST;\n\n    const hasNoUnits =\n      !selectedArtist.units || selectedArtist.units.length === 0;\n\n    const isArtistFavoritedByUser =\n      selectedArtist &&\n      selectedArtist.id &&\n      auth.user &&\n      auth.user.favoriteArtists[selectedArtist.id];\n\n    return (\n      <RequirementWrapper requirements={['selectedArtist']}>\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          <LoadingWrapper pending={isArtistPending}>\n            <section className=\"artist-section\">\n              <div className=\"artist-section-wrapper\">\n                <ArtistPicture artistName={selectedArtist.name} />\n                <div className=\"artist-page-info\">\n                  <h2 className=\"artist-page-info__name\">\n                    {selectedArtist.name}\n                    <FavoriteIcon\n                      action={this.props.updateFavoriteArtists}\n                      id={selectedArtist.id || ''}\n                      className=\"artist-page-info__name--fav-icon\"\n                      size=\"20\"\n                      state={isArtistFavoritedByUser}\n                    />\n                  </h2>\n                  <p className=\"artist-page-info__genre\">\n                    {selectedArtist.agency} • {selectedArtist.genre}{' '}\n                    {selectedArtist.disbanded ? (\n                      <span>\n                        • <Icon type=\"grave\" inline color=\"purple\" /> Disbanded\n                      </span>\n                    ) : null}\n                  </p>\n                  <ul className=\"artist-page-info__members-list\">\n                    {selectedArtist.members &&\n                      selectedArtist.members.map(member => (\n                        <li\n                          className={`artist-page-info__member-pill background-color-${member.color}`}\n                          key={`mp-${member.id}`}\n                        >\n                          {member.name}\n                        </li>\n                      ))}\n                  </ul>\n                </div>\n                <Bias\n                  artistId={selectedArtist.id}\n                  isPending={app.pending.UPDATE_USER_BIASES}\n                  members={selectedArtist.members}\n                  updateBias={updateBias}\n                  userBiases={auth.user.biases}\n                />\n              </div>\n              {/* Artist has no units */\n              hasNoUnits ? (\n                <div className=\"no-units-container\">\n                  The selected artist has no units available.\n                </div>\n              ) : (\n                /* Artist has units */\n                <UnitsContainer />\n              )}\n            </section>\n          </LoadingWrapper>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtist.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  loadArtist: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n  updateBias: PropTypes.func.isRequired,\n};\n\nArtist.defaultProps = {};\n\nexport default Artist;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artist from '../components/Artist';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artist)\n);\n","import ArtistContainer from './containers/ArtistContainer';\n\nexport default ArtistContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon, PositionIcon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst DistributeConnect = ({\n  activeMemberPill,\n  activateMemberPill,\n  distributionLines,\n  linkMemberToPart,\n  members,\n  rates,\n  remainder,\n}) => (\n  <section className=\"distribute__section distribute__section--connect\">\n    <div className=\"distribute__section-left\">\n      <div className=\"distribute__content\">\n        <h3>Instructions</h3>\n        <p>\n          Assign members to every single part in the lyrics. You can instantly\n          see the overall percentage. You can overwrite a member by assigning a\n          new one to that part.\n        </p>\n      </div>\n      <div className=\"distribute__content\">\n        <h3>Members &amp; Live Distribution Rates</h3>\n        <p>\n          Click on the member pill then in a lyric connection icon on the right.\n        </p>\n        <ul\n          className={`distribute__rates ${\n            Object.values(members).length > 10 ? 'distribute__rates--half' : ''\n          }`}\n        >\n          {Object.values(members).map(member => {\n            const colorNumber = utils.getColorNumber(member.colorId);\n            const activeClass = activeMemberPill === member.id ? 'active' : '';\n            const percentage = rates[member.id] ? rates[member.id][1] : 0;\n            const percentageWidth = rates[member.id] ? rates[member.id][2] : 0;\n\n            const spanWidth = {\n              width: `${percentageWidth}%`,\n            };\n\n            return (\n              <li className=\"distribute__pill-group\" key={member.id}>\n                <div\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`pill distribute__member-pill background-color-${colorNumber} border-color-${colorNumber} ${activeClass}`}\n                  onClick={() => activateMemberPill(member.id)}\n                >\n                  <PositionIcon\n                    position={utils.getMostImportantPosition(member.positions)}\n                  />{' '}\n                  {member.name}\n                </div>\n                <div className=\"pill distribute__rates__percentage-bar-group\">\n                  <span className=\"distribute__rates__percentage-value\">\n                    {percentage}%\n                  </span>\n                  <span\n                    style={spanWidth}\n                    className={`distribute__rates__percentage-bar background-color-${utils.getColorNumber(\n                      member.colorId\n                    )}`}\n                  />\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n\n        <p>Remaining: {remainder}%</p>\n      </div>\n    </div>\n    <div className=\"distribute__section-right\">\n      <div className=\"distribute__content--lyrics\">\n        {distributionLines.map((line, index) => {\n          const key = `line-${index}`;\n          return line.length > 0 ? (\n            <div className=\"distribution__lyrics__line\" key={key}>\n              {line.map((part, partIndex) => {\n                const partKey = `${key}-${partIndex}`;\n\n                const colors = part.memberId.map(mId => members[mId].color.hex);\n\n                const lineColors = {};\n                if (colors.length === 1) {\n                  [lineColors.background] = colors;\n                  if (colors[0] === '#ebebf2') {\n                    lineColors.fontStyle = 'italic';\n                    lineColors.color = '#7e7e82';\n                  }\n                } else if (colors.length > 1) {\n                  lineColors.background = `linear-gradient(${colors.join(\n                    ', '\n                  )})`;\n                }\n\n                return (\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"distribution__lyrics__line--part\"\n                    style={lineColors}\n                    key={`${partKey}-new`}\n                    onClick={() => linkMemberToPart(part.id)}\n                  >\n                    {part.memberId.map(m => {\n                      const mKey = `${partKey}-${m}`;\n                      return (\n                        <span\n                          key={mKey}\n                          className=\"distribution__lyrics__line--icon\"\n                        >\n                          <Icon type=\"plug-connected\" size=\"12\" color=\"black\" />\n                        </span>\n                      );\n                    })}\n                    <span className=\"distribution__lyrics__line--icon\">\n                      <Icon type=\"plug-available\" size=\"12\" color=\"gray\" />\n                    </span>\n                    <span className=\"distribution__lyrics__line--content\">\n                      {part.content}\n                    </span>\n                  </span>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"distribution__lyrics\" key={key}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  </section>\n);\n\nDistributeConnect.propTypes = {\n  activeMemberPill: PropTypes.string,\n  activateMemberPill: PropTypes.func.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  members: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n  remainder: PropTypes.number,\n};\n\nDistributeConnect.defaultProps = {\n  activeMemberPill: '',\n  remainder: 0,\n};\n\nexport default DistributeConnect;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import page components\nimport DistributeConnect from './DistributeConnect';\n// Import shared components\nimport { ActiveSong, ActiveUnit, ActiveVideoWidget } from '../../../common';\n\nconst DistributeEdit = ({\n  activeDistribution,\n  activateMemberPill,\n  activeMemberPill,\n  activeSong,\n  activeUnit,\n  distributionLines,\n  handleDistributionCategory,\n  handleSaveDistribution,\n  linkMemberToPart,\n  members,\n  rates,\n  remainder,\n}) => (\n  <Fragment>\n    <section className=\"active-widget__group\">\n      <ActiveUnit activeUnit={activeUnit} showMembers />\n      <ActiveSong activeSong={activeSong} />\n      <ActiveVideoWidget videoId={activeSong.videoId} />\n    </section>\n\n    <div className=\"distribute__content-container\">\n      <DistributeConnect\n        activateMemberPill={activateMemberPill}\n        activeMemberPill={activeMemberPill}\n        distributionLines={distributionLines}\n        linkMemberToPart={linkMemberToPart}\n        members={members}\n        rates={rates}\n        remainder={remainder}\n      />\n      <div className=\"distribute__save-section\">\n        <p>\n          <label className=\"distribute__distribution-category\">\n            Category*\n            <select\n              onChange={handleDistributionCategory}\n              defaultValue={activeDistribution.category}\n            >\n              <option value=\"\" disabled>\n                Select a type...\n              </option>\n              <option value=\"OFFICIAL\">Official</option>\n              <option value=\"WOULD\">How they would sing</option>\n              <option value=\"SHOULD\">How they should sing</option>\n            </select>\n          </label>\n        </p>\n        <p>\n          <button\n            className=\"btn\"\n            onClick={handleSaveDistribution}\n            disabled={remainder}\n          >\n            {activeDistribution.id ? 'Update' : 'Save'}\n          </button>\n        </p>\n      </div>\n    </div>\n  </Fragment>\n);\n\nDistributeEdit.propTypes = {\n  activeDistribution: PropTypes.object,\n  activateMemberPill: PropTypes.func.isRequired,\n  activeMemberPill: PropTypes.string,\n  activeSong: PropTypes.object,\n  activeUnit: PropTypes.object,\n  distributionLines: PropTypes.array.isRequired,\n  handleDistributionCategory: PropTypes.func.isRequired,\n  handleSaveDistribution: PropTypes.func.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  members: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n  remainder: PropTypes.number,\n};\n\nDistributeEdit.defaultProps = {\n  activeDistribution: {},\n  activeMemberPill: '',\n  activeSong: {},\n  activeUnit: {},\n  remainder: 0,\n};\n\nexport default DistributeEdit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DistributeProgressBar = ({\n  active,\n  color,\n  duration,\n  name,\n  percentage,\n}) => {\n  const widthStyle = {\n    width: `${percentage}%`,\n    transition: '0.1s',\n  };\n\n  return (\n    <div className=\"distribute-progress-bar\">\n      <div\n        className={`distribute-progress-bar__name foreground-color-${color}`}\n      >\n        {name}\n      </div>\n      <div className=\"distribute-progress-bar__progress\">\n        <span\n          className={`distribute-progress-bar__bar background-color-${color}`}\n          style={widthStyle}\n        />\n      </div>\n      {active ? (\n        <div\n          className={`distribute-progress-bar__active-icon background-color-${color}`}\n        />\n      ) : (\n        <div className=\"distribute-progress-bar__duration\">\n          {duration.toFixed(1)}s\n        </div>\n      )}\n    </div>\n  );\n};\n\nDistributeProgressBar.propTypes = {\n  active: PropTypes.bool,\n  name: PropTypes.string,\n  color: PropTypes.number,\n  duration: PropTypes.number,\n  percentage: PropTypes.number,\n};\n\nDistributeProgressBar.defaultProps = {\n  active: false,\n  name: 'Bob',\n  color: 1,\n  duration: 15.4,\n  percentage: 40,\n};\n\nexport default DistributeProgressBar;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport YouTube from 'react-youtube';\n\n// Import shared components\nimport { ActiveSong, ActiveUnit, Icon, LoadingIcon } from '../../../common';\n// Import utility functions\nimport constants from '../../../../utils/constants';\nimport DistributeProgressBar from './DistributeProgressBar';\n// Import images\nimport optionBasic from './../../../../images/distribute-basic.svg';\nimport optionVertical from './../../../../images/distribute-vertical.svg';\nimport optionDiscs from './../../../../images/distribute-discs.svg';\nimport optionReport from './../../../../images/distribute-report.svg';\nimport optionRank from './../../../../images/distribute-rank.svg';\nimport vplaceholder from './../../../../images/16x9.svg';\n\nlet player = null;\nlet animationInterval;\n\nconst INTERVAL = 100;\n\nclass DistributeView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimensions: {\n        height: 0,\n        width: 0,\n      },\n      isVideoAreaReady: false,\n      lyrics: [],\n      currentTime: 0,\n      isPlaying: false,\n      isReady: false,\n      membersProgress: {},\n      membersGroups: [],\n    };\n\n    this.setDimentions = this.setDimentions.bind(this);\n    this.onStateChange = this.onStateChange.bind(this);\n    this.onReady = this.onReady.bind(this);\n    this.onPlay = this.onPlay.bind(this);\n    this.onPause = this.onPause.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n    this.restartVideo = this.restartVideo.bind(this);\n    this.calculateBars = this.calculateBars.bind(this);\n  }\n\n  componentDidMount() {\n    player = null;\n    // Determine player height\n    if (\n      !this.state.dimensions.height &&\n      document.getElementById('video-container-view')\n    ) {\n      this.setDimentions();\n    }\n\n    this.setMembers();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      Object.keys(prevProps.rates).join('') !==\n      Object.keys(this.props.rates).join('')\n    ) {\n      this.setMembers();\n    }\n  }\n\n  onReady(e) {\n    player = e.target;\n    this.setState({ isReady: true });\n  }\n\n  onPlay() {\n    this.setState({ isPlaying: true });\n  }\n\n  onPause() {\n    this.setState({ isPlaying: false });\n  }\n\n  onEnd() {\n    this.setState({ isPlaying: false });\n  }\n\n  onStateChange(e) {\n    // If video is playing\n    if (e.data === 1) {\n      // Lyric Review Animation Interval\n      animationInterval = setInterval(() => {\n        const currentTime = Math.floor(e.target.getCurrentTime() * 10);\n        // this.setState({ currentTime });\n        this.calculateBars(currentTime);\n      }, INTERVAL);\n    } else {\n      // Kill interval\n      clearInterval(animationInterval);\n    }\n  }\n\n  setDimentions() {\n    let width =\n      document.getElementById('video-container-view').clientWidth || 16;\n    let height =\n      document.getElementById('video-container-view').clientHeight || 9;\n    if (width > height) {\n      width = (16 * height) / 9;\n    } else {\n      height = (9 * width) / 16;\n    }\n\n    this.setState(\n      () => ({\n        dimensions: {\n          height,\n          width,\n        },\n      }),\n      () => {\n        this.setState(() => ({ isVideoAreaReady: true }));\n      }\n    );\n  }\n\n  setMembers() {\n    const { members, rates } = this.props;\n\n    const membersProgress = Object.values(members).reduce((acc, member) => {\n      acc[member.id] = {\n        id: member.id,\n        name: member.name,\n        color: member.color || 0,\n        percentage: 0,\n        duration: 0,\n        active: false,\n        picUrl: `${process.env.PUBLIC_URL}${\n          constants.PROFILE_PICTURE_URL\n        }${member.name.toLowerCase()}${member.id}.jpg`,\n      };\n\n      return acc;\n    }, {});\n\n    const membersLength = Object.values(members).length - 2;\n    const numberOfColumns = Math.ceil(membersLength / 10);\n    const membersPerColumn = Math.ceil(membersLength / numberOfColumns);\n    const membersGroups = Object.values(members).reduce(\n      (acc, member) => {\n        if (member.id === 'ALL' || member.id === 'NONE') return acc;\n\n        const lastGroup = acc[acc.length - 1];\n        if (lastGroup.length < membersPerColumn) {\n          lastGroup.push(member.id);\n        } else {\n          acc.push([member.id]);\n        }\n        return acc;\n      },\n      [[]]\n    );\n\n    // Detemine max based on members only\n    const arrayOfTotals = Object.entries(rates).reduce((acc, [key, val]) => {\n      if (!['ALL', 'NONE', 'max', 'total'].includes(key)) acc.push(val);\n      return acc;\n    }, []);\n    const max = Math.max(...arrayOfTotals);\n\n    this.setState({\n      membersProgress,\n      membersGroups,\n      max,\n      lyrics: [],\n    });\n  }\n\n  calculateBars(timestamp) {\n    const currentTimestamp = this.props.timestampsDict[timestamp];\n    const { max } = this.state;\n\n    const newState = {};\n\n    const membersProgress = { ...this.state.membersProgress };\n\n    if (currentTimestamp) {\n      // Determine lyrics\n      newState.lyrics = currentTimestamp.content;\n\n      // Deactive inactive members\n      Object.keys(currentTimestamp.inactive).forEach(memberId => {\n        const duration = currentTimestamp.totals[memberId];\n        const percentage = (100 * duration) / max;\n\n        membersProgress[memberId].active = false;\n        membersProgress[memberId].duration = duration;\n\n        membersProgress[memberId].percentage =\n          percentage < 100 ? percentage : 100;\n      });\n\n      // Active active members\n      Object.keys(currentTimestamp.active).forEach(memberId => {\n        membersProgress[memberId].active = true;\n      });\n    }\n\n    // Add second to every active member\n    Object.values(membersProgress).forEach(member => {\n      if (member.active) {\n        member.duration += 0.1;\n        const percentage = (100 * member.duration) / max;\n        member.percentage = percentage < 100 ? percentage : 100;\n      }\n    });\n\n    newState.membersProgress = membersProgress;\n\n    this.setState({\n      ...newState,\n    });\n  }\n\n  togglePlayPause() {\n    if (this.state.isPlaying) {\n      player.pauseVideo();\n    } else {\n      player.playVideo();\n    }\n  }\n\n  restartVideo() {\n    this.setMembers();\n\n    player.seekTo(0);\n    player.playVideo();\n  }\n\n  rewindFastforward(direction) {\n    // TO-DO: Update UI bars accordingly\n\n    if (direction === '+') {\n      player.seekTo(player.getCurrentTime() + 10);\n    } else {\n      player.seekTo(player.getCurrentTime() - 10);\n    }\n  }\n\n  render() {\n    const { activeSong, activeUnit } = this.props;\n\n    return (\n      <Fragment>\n        <section className=\"active-widget__group\">\n          <ActiveUnit activeUnit={activeUnit} showMembers />\n          <ActiveSong activeSong={activeSong} />\n        </section>\n        <section className=\"distribute-viewer-grid\">\n          <ul className=\"distribute-viewer-grid__aside\">\n            <li className=\"distribute-viewer-modes-title\">Style</li>\n            <li className=\"distribute-viewer-mode\">\n              <img src={optionBasic} alt=\"Basic\" />\n            </li>\n            <li className=\"distribute-viewer-mode\">\n              <img src={optionVertical} alt=\"Vertical\" />\n            </li>\n            <li className=\"distribute-viewer-mode\">\n              <img src={optionDiscs} alt=\"Discs\" />\n            </li>\n          </ul>\n          <div className=\"distribute-viewer-video\" id=\"video-container-view\">\n            {!this.state.isVideoAreaReady ? (\n              <img src={vplaceholder} alt=\"Video Placeholder\" />\n            ) : null}\n            {this.state.isVideoAreaReady ? (\n              <Fragment>\n                <div className=\"distribute-viewer-video__youtube\">\n                  <YouTube\n                    videoId={activeSong.videoId}\n                    opts={this.state.dimensions}\n                    onReady={this.onReady}\n                    onPlay={this.onPlay}\n                    onPause={this.onPause}\n                    onEnd={this.onEnd}\n                    onStateChange={this.onStateChange}\n                  />\n                  <div className=\"distribute-viewer-overlay\">\n                    <div className=\"distribute-viewer-overlay__active-members\">\n                      {Object.values(this.state.membersProgress).map(member => {\n                        if (\n                          member.active === false ||\n                          member.name === 'ALL' ||\n                          member.name === 'NONE'\n                        ) {\n                          return null;\n                        }\n\n                        return (\n                          <img\n                            key={`pic-${member.id}`}\n                            className={`distribute-viewer-overlay__active-member border-color-${member.color}`}\n                            src={member.picUrl}\n                            alt={member.name}\n                          />\n                        );\n                      })}\n                    </div>\n                    <div className=\"distribute-viewer-overlay__lyrics\">\n                      {this.state.lyrics.map(line => (\n                        <p key={line} className=\"line\">\n                          {line}\n                        </p>\n                      ))}\n                    </div>\n                    <div className=\"distribute-viewer-overlay__bars\">\n                      {this.state.membersGroups.map((group, index) => {\n                        const key = `group-${index}`;\n                        return (\n                          <div\n                            key={key}\n                            className={`distribute-viewer-overlay__bars-group distribute-viewer-overlay__bars-group--${this.state.membersGroups.length}`}\n                          >\n                            {group.map(memberId => {\n                              const member = this.state.membersProgress[\n                                memberId\n                              ];\n\n                              return (\n                                <DistributeProgressBar\n                                  key={`bar-${member.id}`}\n                                  active={member.active}\n                                  color={member.color}\n                                  duration={member.duration}\n                                  name={member.name}\n                                  percentage={member.percentage}\n                                />\n                              );\n                            })}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"distribute-viewer-controls\">\n                  <button\n                    className=\"distribute-viewer-controls__button\"\n                    onClick={() => this.togglePlayPause()}\n                  >\n                    {this.state.isPlaying ? (\n                      <Icon type=\"pause\" />\n                    ) : (\n                      <Icon type=\"play\" />\n                    )}\n                  </button>\n                  <button\n                    className=\"distribute-viewer-controls__button\"\n                    onClick={() => this.restartVideo()}\n                  >\n                    <Icon type=\"restart\" />\n                  </button>\n                  <button\n                    className=\"distribute-viewer-controls__button\"\n                    onClick={() => this.rewindFastforward('-')}\n                    disabled\n                  >\n                    <Icon type=\"rewind\" color=\"gray\" />\n                  </button>\n                  <button\n                    className=\"distribute-viewer-controls__button\"\n                    onClick={() => this.rewindFastforward('+')}\n                    disabled\n                  >\n                    <Icon type=\"fast-forward\" color=\"gray\" />\n                  </button>\n                </div>\n              </Fragment>\n            ) : (\n              <LoadingIcon size=\"small\" />\n            )}\n          </div>\n          <ul className=\"distribute-viewer-grid__aside\">\n            <li className=\"distribute-viewer-modes-title\">Options</li>\n            <li className=\"distribute-viewer-mode\">\n              <img src={optionRank} alt=\"Rank/Results\" />\n            </li>\n            <li className=\"distribute-viewer-mode\">\n              <img src={optionReport} alt=\"Report Broken Distribution\" />\n            </li>\n          </ul>\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nDistributeView.propTypes = {\n  members: PropTypes.object,\n  rates: PropTypes.object,\n  timestampsDict: PropTypes.object.isRequired,\n  activeSong: PropTypes.object.isRequired,\n  activeUnit: PropTypes.object.isRequired,\n};\n\nDistributeView.defaultProps = {\n  members: {},\n  rates: {},\n};\n\nexport default DistributeView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import page components\nimport DistributeEdit from './DistributeEdit';\nimport DistributeView from './DistributeView';\n// Import common components\nimport { ModeWidget, RequirementWrapper } from '../../../common';\n\nlet flag = true;\n\nclass Distribute extends Component {\n  componentDidMount() {\n    // this.props.prepareSong(); // not necessary, song comes prepared from api\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log('COMPONENT DID UPDATE');\n    const hasActiveSong = Boolean(this.props.distribute.activeSong.id);\n    const hasActiveDistribution = Boolean(\n      this.props.distribute.activeDistribution.id\n    );\n\n    const isNewActiveSong =\n      prevProps.distribute.activeSong !== this.props.distribute.activeSong;\n    const isNewActiveDistribution =\n      prevProps.distribute.activeDistribution !==\n      this.props.distribute.activeDistribution;\n    const isNewActivation = isNewActiveSong || isNewActiveDistribution;\n    // const isNewActivation = flag;\n    // flag = false;\n\n    // console.log({ hasActiveSong });\n    // console.log({ hasActiveDistribution });\n    // console.log({ isNewActiveSong });\n    // console.log({ isNewActiveDistribution });\n    // console.log({ isNewActivation });\n\n    if (hasActiveSong && hasActiveDistribution && isNewActivation) {\n      // this.props.prepareSong(this.props.distribute.activeSong);\n      // this.props.mergeActiveDistribution();\n      // console.log('PREPARE DISTRIBUTION VIEWER');\n      this.props.prepareDistributionViewer();\n    }\n  }\n\n  getMembers() {\n    const members = { ...this.props.distribute.activeUnit.members };\n    members.ALL = {\n      id: 'ALL',\n      name: 'ALL',\n      colorId: 'col000000',\n      color: { number: 0, hex: '#b5b5ba' },\n      positions: ['ALL'],\n    };\n    members.NONE = {\n      id: 'NONE',\n      name: 'NONE',\n      colorId: 'col000031',\n      color: { number: 0, hex: '#ebebf2' },\n      positions: ['NONE'],\n    };\n    return members;\n  }\n\n  render() {\n    const {\n      distribute: {\n        activeMemberPill,\n        activeDistribution,\n        activeSong,\n        activeUnit,\n        distributeView,\n        distributionLines,\n        rates,\n        remainder,\n        timestampsDict,\n      },\n      activateMemberPill,\n      handleDistributeView,\n      handleDistributionCategory,\n      handleSaveDistribution,\n      linkMemberToPart,\n    } = this.props;\n\n    const members = this.getMembers();\n    // console.log(members);\n\n    return (\n      <RequirementWrapper requirements={['activeUnit', 'activeSong']}>\n        <main className=\"container container--distribute\">\n          <div className=\"distribute__header\">\n            <h1>Distribute</h1>\n            <ModeWidget\n              labels={['view', 'edit']}\n              active={distributeView}\n              action={handleDistributeView}\n            />\n          </div>\n\n          <DistributeView\n            activeSong={activeSong}\n            activeUnit={activeUnit}\n            members={members}\n            distributionLines={distributionLines}\n            timestampsDict={timestampsDict}\n            rates={activeDistribution.rates}\n          />\n          {/* {distributeView === 'view' ? (\n          ) : (\n            <DistributeEdit\n              activeDistribution={activeDistribution}\n              activateMemberPill={activateMemberPill}\n              activeMemberPill={activeMemberPill}\n              activeSong={activeSong}\n              activeUnit={activeUnit}\n              distributionLines={distributionLines}\n              handleDistributionCategory={handleDistributionCategory}\n              handleSaveDistribution={handleSaveDistribution}\n              linkMemberToPart={linkMemberToPart}\n              members={members}\n              rates={rates}\n              remainder={remainder}\n            />\n          )} */}\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nDistribute.propTypes = {\n  activeDistribution: PropTypes.object,\n  activateMemberPill: PropTypes.func.isRequired,\n  distribute: PropTypes.object.isRequired,\n  handleDistributeView: PropTypes.func.isRequired,\n  handleDistributionCategory: PropTypes.func.isRequired,\n  handleSaveDistribution: PropTypes.func.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  mergeActiveDistribution: PropTypes.func.isRequired,\n  prepareSong: PropTypes.func.isRequired,\n};\n\nDistribute.defaultProps = {\n  activeDistribution: {},\n};\n\nexport default Distribute;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Distribute from '../components/Distribute';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Distribute)\n);\n","import DistributeContainer from './containers/DistributeContainer';\n\nexport default DistributeContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport logo from '../../../../images/logo-alt.svg';\n\nimport constants from '../../../../utils/constants';\n\n// Import common components\nimport { Icon, LoadingIcon } from '../../../common';\n\nconst Home = props => {\n  // Randomly choose one video in the playlist\n  const youtubeUrl =\n    constants.YOUTUBE_URLS[\n      Math.floor(Math.random() * constants.YOUTUBE_URLS.length)\n    ];\n\n  const handleLearnMoreClick = () => {\n    props.history.push('/learn-more');\n  };\n\n  const isPending =\n    props.app.pending.INITIALIZER ||\n    props.app.pending.RUN_LOGIN ||\n    props.app.pending.RUN_AUTH;\n\n  return (\n    <main className=\"container container--no-padding\">\n      <div className=\"home__video\">\n        <iframe\n          className=\"home__iframe\"\n          title=\"home__video\"\n          src={`https://www.youtube.com/embed/${youtubeUrl}?controls=0&showinfo=0&rel=0&autoplay=1&loop=1&mute=1&playlist=${youtubeUrl}`}\n          frameBorder=\"0\"\n          allowFullScreen\n        />\n      </div>\n      <div className=\"home__content\">\n        <img className=\"home__logo\" src={logo} alt=\"Line Distribution\" />\n        <div className=\"home__buttons\">\n          {!props.auth.isAuthenticated && (\n            <button\n              className=\"btn-home\"\n              onClick={props.login}\n              disabled={isPending}\n            >\n              {isPending ? (\n                <LoadingIcon size=\"tiny\" inline />\n              ) : (\n                <Fragment>\n                  Sign-in <Icon type=\"logout\" color=\"white\" inline />\n                </Fragment>\n              )}\n            </button>\n          )}\n          <button className=\"btn-home\" onClick={() => handleLearnMoreClick()}>\n            Learm more\n          </button>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nHome.propTypes = {\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default Home;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Home from '../components/Home';\n\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = {\n  login: authOperations.login,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Home)\n);\n","import HomeContainer from './containers/HomeContainer';\n\nexport default HomeContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Form components\nimport { Checkbox, Form, Option, Select, Text } from 'informed';\n\n// Import utils\nimport constants from '../../../../utils/constants';\nimport enums from '../../../../utils/readable-enums';\nimport utils from '../../../../utils';\n\nconst IdolsFilters = ({\n  isExpanded,\n  filters,\n  isAdmin,\n  updateFilters,\n  openPanel,\n}) => (\n  <aside className={`side-panel ${isExpanded ? 'side-panel--active' : ''}`}>\n    <h3>Filters</h3>\n    <Form onChange={formState => updateFilters(formState)} autoComplete=\"off\">\n      <label className=\"input-label\">Name (first 3 letters)</label>\n      <Text\n        className=\"input-text\"\n        field=\"name\"\n        initialValue={filters.name}\n        maxLength=\"3\"\n      />\n\n      <label className=\"input-label\">Gender</label>\n      <Select\n        className=\"input-select\"\n        field=\"gender\"\n        initialValue={filters.gender}\n      >\n        <Option value=\"\">Any</Option>\n        {Object.entries(enums.GENDERS).map(gender => (\n          <Option key={gender[0]} value={gender[0]}>\n            {gender[1]}\n          </Option>\n        ))}\n      </Select>\n\n      <label className=\"input-label\">Age Range</label>\n      <Select className=\"input-select\" field=\"age\" initialValue={filters.age}>\n        <Option value=\"\">Any</Option>\n        <Option value=\"<18\">&lt;18</Option>\n        <Option value=\"18-28\">18-28</Option>\n        <Option value=\"28+\">28+</Option>\n      </Select>\n\n      <label className=\"input-label\">Nationality</label>\n      <Select\n        className=\"input-select\"\n        field=\"nationality\"\n        initialValue={filters.nationality}\n      >\n        <Option value=\"\">Any</Option>\n        {Object.entries(enums.NATIONALITIES).map(([value, text]) => (\n          <Option key={value} value={value}>\n            {text}\n          </Option>\n        ))}\n      </Select>\n\n      <label className=\"input-label\">Position</label>\n      <Select\n        className=\"input-select\"\n        field=\"position\"\n        initialValue={filters.position}\n      >\n        <Option value=\"\">Any</Option>\n        {Object.entries(enums.POSITIONS).map(([value, text]) => (\n          <Option key={value} value={value}>\n            {text}\n          </Option>\n        ))}\n      </Select>\n\n      <label className=\"input-label\">Color</label>\n      <Select\n        className=\"input-select\"\n        field=\"color\"\n        initialValue={filters.color}\n      >\n        <Option value=\"\">Any</Option>\n        {Object.entries(constants.COLORS).map(color => (\n          <Option key={color[0]} value={color[0]}>\n            {utils.humanize(color[1], 'Capital')}\n          </Option>\n        ))}\n      </Select>\n\n      <label className=\"input-label\">Favorite</label>\n      <Select\n        className=\"input-select\"\n        field=\"favorite\"\n        initialValue={filters.favorite}\n      >\n        <Option value=\"\">Any</Option>\n        <Option value=\"favorite\">Favorite</Option>\n        <Option value=\"nonfavorite\">Non-favorite</Option>\n      </Select>\n\n      <label className=\"input-label\">Privacy</label>\n      <Select\n        className=\"input-select\"\n        field=\"privacy\"\n        initialValue={filters.privacy}\n      >\n        <Option value=\"\">Any</Option>\n        <Option value=\"private\">Private</Option>\n        <Option value=\"public\">Public</Option>\n      </Select>\n\n      {isAdmin && (\n        <>\n          <hr className=\"side-panel-hr\" />\n          <label className=\"input-label input-label--inline\">Show Ids</label>\n          <Checkbox field=\"showIds\" initialValue={filters.showIds} />\n        </>\n      )}\n\n      <hr className=\"side-panel-hr\" />\n\n      <label className=\"input-label\">Sort by</label>\n      <Select className=\"input-select\" field=\"sort\" initialValue={filters.sort}>\n        <Option value=\"age\">Age</Option>\n        <Option value=\"color\">Color</Option>\n        <Option value=\"gender\">Gender</Option>\n        <Option value=\"referenceArtistsQuery\">Group</Option>\n        <Option value=\"name\">Name</Option>\n        <Option value=\"nationality\">Nationality</Option>\n      </Select>\n\n      <label className=\"input-label\">Order by</label>\n      <Select\n        className=\"input-select\"\n        field=\"order\"\n        initialValue={filters.order}\n      >\n        <Option value=\"asc\">Ascending</Option>\n        <Option value=\"desc\">Descending</Option>\n      </Select>\n    </Form>\n\n    <button className=\"btn side-panel-button\" onClick={() => openPanel(null)}>\n      Close\n    </button>\n  </aside>\n);\n\nIdolsFilters.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  isExpanded: PropTypes.bool.isRequired,\n  filters: PropTypes.shape({\n    age: PropTypes.string,\n    color: PropTypes.string,\n    favorite: PropTypes.string,\n    gender: PropTypes.string,\n    name: PropTypes.string,\n    nationality: PropTypes.string,\n    position: PropTypes.string,\n    privacy: PropTypes.string,\n    sort: PropTypes.string,\n    order: PropTypes.string,\n    showIds: PropTypes.bool,\n  }).isRequired,\n  updateFilters: PropTypes.func.isRequired,\n  openPanel: PropTypes.func.isRequired,\n};\n\nIdolsFilters.defaultProps = {};\n\nexport default IdolsFilters;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Form components\nimport { Checkbox, Form, Option, Select, Text } from 'informed';\n\n// Import utils\nimport enums from '../../../../utils/readable-enums';\n\nconst IdolsEdit = ({ isExpanded, editingMember, openPanel, updateMember }) => (\n  <aside className={`side-panel ${isExpanded ? 'side-panel--active' : ''}`}>\n    <h3>Edit Member</h3>\n\n    {isExpanded && editingMember.id ? (\n      <Form autoComplete=\"off\" onSubmit={updateMember}>\n        {({ formState, formApi }) => (\n          <Fragment>\n            <div\n              className={`side-panel-color-bar background-color-${editingMember.color}`}\n            >\n              {editingMember.id}\n            </div>\n            <label className=\"input-label required\">Name</label>\n            <Text\n              className=\"input-text\"\n              field=\"name\"\n              initialValue={editingMember.name}\n              disabled\n            />\n            <label className=\"input-label\">\n              Initials{' '}\n              <span className=\"small\">\n                (created automatically if left blank)\n              </span>\n            </label>\n            <Text\n              className=\"input-text\"\n              field=\"initials\"\n              initialValue={editingMember.initials}\n              maxLength=\"2\"\n            />\n            <label className=\"input-label required\">Birthdate</label>\n            <Text\n              className=\"input-text\"\n              field=\"birthdate\"\n              type=\"date\"\n              initialValue={editingMember.birthdate}\n            />\n            <label className=\"input-label required\">Gender</label>\n            <Select\n              className=\"input-select\"\n              field=\"gender\"\n              initialValue={editingMember.gender}\n            >\n              {Object.entries(enums.GENDERS).map(gender => (\n                <Option key={gender[0]} value={gender[0]}>\n                  {gender[1]}\n                </Option>\n              ))}\n            </Select>\n            <label className=\"input-label required\">Nationality</label>\n            <Select\n              className=\"input-select\"\n              field=\"nationality\"\n              initialValue={editingMember.nationality}\n            >\n              {Object.entries(enums.NATIONALITIES).map(([value, text]) => (\n                <Option key={value} value={value}>\n                  {text}\n                </Option>\n              ))}\n            </Select>\n            <label className=\"input-label\">Tags</label>\n            <Select\n              className=\"input-select\"\n              field=\"tags\"\n              initialValue={editingMember.tags}\n              multiple\n            >\n              {Object.entries(enums.TAGS).map(([value, text]) => (\n                <Option key={value} value={value}>\n                  {text}\n                </Option>\n              ))}\n            </Select>\n            {/* Add Colors */}\n            <hr className=\"side-panel-hr\" />\n            <label className=\"input-label input-label--inline\">Private</label>\n            <Checkbox field=\"private\" initialValue={editingMember.private} />\n            <br />\n            <label className=\"input-label input-label--inline\">\n              Hide from Listing\n            </label>\n            <Checkbox field=\"hide\" initialValue={editingMember.hide} />\n            <hr className=\"side-panel-hr\" />\n\n            <b>Units and Positions</b>\n            <p>\n              Units and Positions can&apos;t be edited here. You must select the\n              unit and edit there as positions and unit ids are compilled\n              automatically.\n            </p>\n            <p className=\"warn\">\n              Clicling on a Artist link below will take you to the Artist page\n              and you lose any unsaved editing to this Idol.\n            </p>\n            <ul className=\"side-panel-list\">\n              {editingMember.referenceArtists &&\n                editingMember.referenceArtists.map(ra => (\n                  <li key={ra.name}>\n                    <Link to={`/artists/${ra.id}`}>{ra.name}</Link>\n                  </li>\n                ))}\n            </ul>\n            <button\n              className=\"btn side-panel-button\"\n              disabled={Object.keys(formState.touched).length === 0}\n              onClick={() => formApi.submitForm()}\n            >\n              Update Member\n            </button>\n            <button\n              className=\"btn side-panel-button\"\n              onClick={() => {\n                formApi.reset();\n                openPanel(null);\n              }}\n            >\n              Cancel\n            </button>\n          </Fragment>\n        )}\n      </Form>\n    ) : (\n      <Fragment>\n        <p>\n          Select a member you want to edit by clicing on the Edit icon on the\n          top right corner of their picture\n        </p>\n        <button\n          className=\"btn side-panel-button\"\n          onClick={() => openPanel(null)}\n        >\n          Cancel\n        </button>\n      </Fragment>\n    )}\n  </aside>\n);\n\nIdolsEdit.propTypes = {\n  isExpanded: PropTypes.bool.isRequired,\n  editingMember: PropTypes.shape({\n    birthdate: PropTypes.string,\n    color: PropTypes.number,\n    gender: PropTypes.string,\n    hide: PropTypes.bool,\n    id: PropTypes.string,\n    initials: PropTypes.string,\n    name: PropTypes.string,\n    nationality: PropTypes.string,\n    primaryGenre: PropTypes.string,\n    private: PropTypes.bool,\n    referenceArtists: PropTypes.array,\n    tags: PropTypes.array,\n  }),\n  updateMember: PropTypes.func.isRequired,\n  openPanel: PropTypes.func.isRequired,\n};\n\nIdolsEdit.defaultProps = {\n  editingMember: {\n    birthdate: null,\n    color: 0,\n    gender: 'UNKOWN',\n    hide: false,\n    id: null,\n    initials: '',\n    name: '',\n    nationality: 'OTHER',\n    primaryGenre: 'OTHER',\n    private: false,\n    referenceArtists: ['ArtistId'],\n    tags: [],\n  },\n};\n\nexport default IdolsEdit;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import components\nimport IdolsFilters from './IdolsFilters';\nimport IdolsEdit from './IdolsEdit';\n// Import common components\nimport { Icon, Loading, MemberCard, RequirementWrapper } from '../../../common';\n// Import utils\nimport localStorage from '../../../../utils/local-storage';\nimport utils from '../../../../utils';\n\nclass Idols extends Component {\n  static filterIdols(members = [], user, filters) {\n    const filteredMembers = _.filter(members, member => {\n      const evaluation = [!member.hide];\n\n      if (filters.favorite) {\n        if (filters.favorite === 'favorite') {\n          evaluation.push(user.favoriteMembers[member.id]);\n        } else {\n          evaluation.push(!user.favoriteMembers[member.id]);\n        }\n      }\n\n      if (filters.privacy) {\n        if (filters.privacy === 'private') {\n          evaluation.push(member.private);\n        } else {\n          evaluation.push(!member.private);\n        }\n      }\n\n      if (filters.color) evaluation.push(member.color === filters.color);\n      if (filters.gender) evaluation.push(member.gender === filters.gender);\n      if (filters.nationality)\n        evaluation.push(member.nationality === filters.nationality);\n      if (filters.position)\n        evaluation.push(member.positions.includes(filters.position));\n      if (filters.name)\n        evaluation.push(\n          member.name.toLowerCase().startsWith(filters.name.toLowerCase())\n        );\n      if (filters.age) {\n        if (filters.age === '<18') {\n          evaluation.push(member.age < 18);\n        } else if (filters.age === '18-28') {\n          evaluation.push(member.age > 17 && member.age < 28);\n        } else {\n          evaluation.push(member.age > 28);\n        }\n      }\n      return evaluation.every(e => e);\n    });\n\n    return _.orderBy(filteredMembers, [filters.sort], [filters.order]);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: {\n        age: '',\n        color: '',\n        favorite: '',\n        gender: '',\n        name: '',\n        nationality: '',\n        position: '',\n        privacy: '',\n        sort: 'name',\n        order: 'asc',\n        showIds: false,\n      },\n      members: [],\n      sidePanel: null,\n      editingMember: {},\n    };\n\n    this.openPanel = this.openPanel.bind(this);\n    this.toggleMemberEditing = this.toggleMemberEditing.bind(this);\n    this.updateFilters = this.updateFilters.bind(this);\n    this.updateMember = this.updateMember.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.loadMembers();\n    }\n\n    this.localStorage();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.auth.isAuthenticated && this.props.auth.isAuthenticated) {\n      this.props.loadMembers();\n    }\n    // Run members filters as soon as the api return the list of members\n    if (\n      prevProps.db.members.length !== this.props.db.members.length ||\n      (prevProps.app.loading === true && this.props.app.loading === false)\n    ) {\n      this.updateFilters({ values: {} }, true);\n    }\n  }\n\n  localStorage() {\n    this.setState({\n      showIds: this.props.auth.isAdmin\n        ? localStorage.get('idolsShowIds')\n        : false,\n      sort: localStorage.get('idolsSort') || 'name',\n      order: localStorage.get('idolsOrder') || 'asc',\n    });\n  }\n\n  updateFilters(formState, forceUpdateFilters = false) {\n    const filters = {\n      age: formState.values.age || this.state.filters.age,\n      color: formState.values.color || this.state.filters.color,\n      favorite: formState.values.favorite || this.state.filters.favorite,\n      gender: formState.values.gender || this.state.filters.gender,\n      name: formState.values.name || this.state.filters.name,\n      nationality:\n        formState.values.nationality || this.state.filters.nationality,\n      position: formState.values.position || this.state.filters.position,\n      privacy: formState.values.privacy || this.state.filters.privacy,\n      sort: formState.values.sort || this.state.filters.sort,\n      order: formState.values.order || this.state.filters.order,\n      showIds: formState.values.showIds || this.state.filters.showIds,\n    };\n\n    // Prevent filters to be run if filters were not modified\n    const hasNoNewFiltres = _.isEqual({ ...filters, members: [] }, this.state);\n    if (hasNoNewFiltres && !forceUpdateFilters) {\n      return;\n    }\n\n    const filteredMembers = this.constructor.filterIdols(\n      this.props.db.members,\n      this.props.auth.user,\n      filters\n    );\n\n    this.setState({\n      members: filteredMembers,\n      filters,\n    });\n\n    localStorage.set({\n      idolsShowIds: this.props.auth.isAdmin\n        ? filters.showIds || this.state.filters.showIds\n        : null,\n      idolsSort: filters.sort || null,\n      idolsOrder: filters.order || null,\n    });\n  }\n\n  openPanel(panelName) {\n    let sidePanel = null;\n    if (panelName && panelName !== this.state.sidePanel) {\n      sidePanel = panelName;\n    }\n    this.setState({\n      sidePanel,\n    });\n  }\n\n  toggleMemberEditing(member) {\n    const editingMember = { ...member };\n    editingMember.birthdate = utils.parseBirthdateToInput(member.birthdate);\n\n    this.setState(\n      {\n        editingMember,\n        sidePanel: null,\n      },\n      () => {\n        if (this.state.sidePanel !== 'edit') {\n          this.setState({ sidePanel: 'edit' });\n        }\n      }\n    );\n  }\n\n  updateMember(formValues) {\n    const member = { ...this.state.editingMember, ...formValues };\n\n    this.props.updateMember(member);\n\n    this.setState({\n      editingMember: {},\n      sidePanel: null,\n    });\n  }\n\n  render() {\n    const {\n      app: { pending },\n      auth: { isAdmin, user },\n      updateFavoriteMembers,\n    } = this.props;\n\n    const { editingMember, filters, members, sidePanel } = this.state;\n\n    if (pending.REQUEST_MEMBERS || pending.INITIALIZER || pending.RUN_AUTH) {\n      return <Loading message=\"Fecthing Idols...\" />;\n    }\n\n    return (\n      <RequirementWrapper>\n        <div className=\"container container--with-filters container--idols\">\n          <IdolsFilters\n            isExpanded={sidePanel === 'filters'}\n            filters={filters}\n            isAdmin={isAdmin}\n            updateFilters={this.updateFilters}\n            openPanel={this.openPanel}\n          />\n          <IdolsEdit\n            isExpanded={sidePanel === 'edit'}\n            editingMember={editingMember}\n            openPanel={this.openPanel}\n            updateMember={this.updateMember}\n          />\n          <aside className=\"side-panel-vertical-buttons\">\n            <button\n              className=\"side-panel-vertical-buttons__button\"\n              onClick={() => this.openPanel('filters')}\n            >\n              <Icon type=\"filter\" />\n            </button>\n            {isAdmin && (\n              <button\n                className=\"side-panel-vertical-buttons__button\"\n                onClick={() => this.openPanel('edit')}\n              >\n                <Icon type=\"edit\" />\n              </button>\n            )}\n          </aside>\n          <main className=\"container__main-content\">\n            <h1>Idols</h1>\n            <p className=\"filter-count-text italic\">\n              Displaying {members.length} members...\n            </p>\n            <div className=\"idols__list\">\n              {members.map(member => (\n                <MemberCard\n                  key={member.id}\n                  member={member}\n                  showId={filters.showIds}\n                  showReferenceArtist\n                  favoriteState={\n                    user.favoriteMembers && user.favoriteMembers[member.id]\n                  }\n                  updateFavoriteMembers={updateFavoriteMembers}\n                  editMember={this.toggleMemberEditing}\n                />\n              ))}\n            </div>\n          </main>\n        </div>\n      </RequirementWrapper>\n    );\n  }\n}\n\nIdols.propTypes = {\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadMembers: PropTypes.func.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n  updateMember: PropTypes.func.isRequired,\n};\n\nexport default Idols;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Idols from '../components/Idols';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...dbOperations,\n  ...artistsOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Idols)\n);\n","import IdolsContainer from './containers/IdolsContainer';\n\nexport default IdolsContainer;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst Lab = () => (\n  <main className=\"container container--lab\">\n    <h1>Lab</h1>\n  </main>\n);\n\nLab.propTypes = {};\n\nLab.defaultProps = {};\n\nexport default Lab;\n","import LabContainer from './containers/LabContainer';\n\nexport default LabContainer;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Lab from '../components/Lab';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Lab)\n);\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst LearnMore = () => (\n  <main className=\"container container--learn-more\">\n    <h1>Learn More</h1>\n  </main>\n);\n\nLearnMore.propTypes = {};\n\nLearnMore.defaultProps = {};\n\nexport default LearnMore;\n","import LearnMoreContainer from './containers/LearnMoreContainer';\n\nexport default LearnMoreContainer;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport LearnMore from '../components/LearnMore';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LearnMore)\n);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nlet colorDict = null;\nlet keyNumber = 0;\n\nconst LyricsOutput = ({ lyrics, colorsDB }) => {\n  if (!colorDict || !Object.keys(colorDict).length) {\n    colorDict = colorsDB;\n    colorDict.col000000 = {\n      number: 0,\n      hex: '#b1b1b1',\n    };\n  }\n\n  return (\n    <div className=\"lyrics__output\">\n      {lyrics.map(verse => {\n        keyNumber++;\n        return <Verse key={`verse-${keyNumber}`} verse={verse} />;\n      })}\n    </div>\n  );\n};\n\nLyricsOutput.propTypes = {\n  lyrics: PropTypes.array.isRequired,\n  colorsDB: PropTypes.object.isRequired,\n};\n\nconst Verse = ({ verse }) => (\n  <p className=\"lyrics__verse\">\n    {verse.map(line => {\n      keyNumber++;\n      return (\n        <Fragment key={`line-${keyNumber}`}>\n          <Line line={line} />\n          <br />\n        </Fragment>\n      );\n    })}\n  </p>\n);\n\nVerse.propTypes = {\n  verse: PropTypes.array.isRequired,\n};\n\nconst Line = ({ line }) => (\n  <span className=\"lyrics__line\">\n    {line.map(part => {\n      keyNumber++;\n      if (!part.line || !part.line[0] || !part.adlib) return null;\n\n      return (\n        <Fragment key={`part-${keyNumber}`}>\n          <Bracket part={part} />\n          <Part part={part} />\n        </Fragment>\n      );\n    })}\n  </span>\n);\n\nLine.propTypes = {\n  line: PropTypes.array.isRequired,\n};\n\nconst Part = ({ part }) => (\n  <Fragment>\n    {part.adlib.map((type, index) => {\n      keyNumber++;\n\n      const bitStyle = getBitStyle(part, type, index);\n\n      switch (type) {\n        case 0:\n          // colored line (colors)\n          return (\n            <span\n              key={`bit-${keyNumber}`}\n              className=\"lyrics__bit-normal\"\n              style={bitStyle}\n            >\n              {part.line[index]}\n            </span>\n          );\n        case 1:\n          // colored line with parentheses (subColors)\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              (\n              <span className=\"lyrics__bit-sub\" style={bitStyle}>\n                {part.line[index]}\n              </span>\n              )\n            </Fragment>\n          );\n        case 2:\n          // greyed italic line with parentheses\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              <i>(</i>\n              <span className=\"lyrics__bit-grey\">{part.line[index]}</span>\n              <i>)</i>\n            </Fragment>\n          );\n        case 3:\n          // greyed italitc line\n          return (\n            <span key={`bit-${keyNumber}`} className=\"lyrics__bit-all\">\n              {part.line[index]}\n            </span>\n          );\n        case 4:\n          // colored line with parentheses (choirColors)\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              <i>(</i>\n              <span className=\"lyrics__bit-choir\" style={bitStyle}>\n                {part.line[index]}\n              </span>\n              <i>)</i>\n            </Fragment>\n          );\n        default:\n          return (\n            <span\n              key={`bit-${keyNumber}`}\n              className=\"lyrics__bit-normal\"\n              style={bitStyle}\n            >\n              {part.line[index]}\n            </span>\n          );\n      }\n    })}\n  </Fragment>\n);\n\nPart.propTypes = {\n  part: PropTypes.object.isRequired,\n};\n\nconst Bracket = ({ part }) => {\n  if (part.omit) return null;\n\n  const hasSingers = part.singers && !part.omit;\n  const hasSubSingers = part.subSingers && !part.omitSub;\n  const hasChoirSingers = part.choirSingers && !part.omitChoir;\n\n  if (!hasSingers && !hasSubSingers && !hasChoirSingers) return null;\n\n  return (\n    <span className=\"lyrics__bracket\">\n      {' ['}\n      {hasSingers && part.singers.join('/')}\n      {hasSubSingers && (\n        <span className=\"lyrics__parenthesis\">\n          {' ('}\n          {part.subSingers.join('/')}\n          {')'}\n        </span>\n      )}\n      {hasChoirSingers && (\n        <span className=\"lyrics__braces\">\n          {' {'}\n          {part.choirSingers.join('/')}\n          {'}'}\n        </span>\n      )}\n      {'] '}\n    </span>\n  );\n};\n\nBracket.propTypes = {\n  part: PropTypes.object.isRequired,\n};\n\nconst getBitStyle = (part, type) => {\n  const BASE_COLOR = '#b5b5ba';\n  const styles = {\n    background: '#b1b1b1',\n  };\n\n  if (type === 0 && part.colors && part.colors.length) {\n    if (part.colors.length > 1) {\n      const colorHexes = part.colors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.colors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  if (type === 1 && part.subColors && part.subColors.length) {\n    if (part.subColors.length > 1) {\n      const colorHexes = part.subColors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.subColors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  if (type === 4 && part.choirColors && part.choirColors.length) {\n    if (part.choirColors.length > 1) {\n      const colorHexes = part.choirColors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.choirColors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  return styles;\n};\n\nexport default LyricsOutput;\n","// Global variables\nconst COLOR_BANK = {\n  ALL: 'col000000',\n};\nlet latestUnitId = null;\nlet errors = [];\n\nlet lastSingers = [];\nlet lastColors = [];\nlet lastSubsingers = [];\nlet lastSubColors = [];\nlet lastChoirSingers = [];\nlet lastChoirColors = [];\nlet wasLastLineEmpty = false;\nlet lastLineHadSubSingers = false;\nlet lastLineHadChoirSings = false;\n\nlet uses = {};\n\nconst updateUses = entry => {\n  function addEntry(name) {\n    if (uses[name]) {\n      uses[name]++;\n    } else {\n      uses[name] = 1;\n    }\n  }\n\n  if (typeof entry === 'string') {\n    addEntry(entry.trim().toUpperCase());\n  } else if (Array.isArray(entry)) {\n    entry.forEach(n => addEntry(n.trim().toUpperCase()));\n  }\n};\n\nclass Part {\n  constructor() {\n    this.singers = null; // type: array\n    this.subSingers = null; // type: array\n    this.line = []; // type: array\n    this.adlib = []; // type: array\n    /**\n     * adlib code reference\n     * 0: regular line colored\n     * 1: surrounded by parenthesis colored\n     * 2: italic greyed surrouneded by parenthesis\n     * 3: italic greyed\n     * 4: italic colored\n     */\n    this.colors = null; // type: array\n    this.subColors = null; // type: array\n    this.omit = false; // type: bool\n    this.omitSub = false; // type: bool\n  }\n}\n\nconst cleanUpPart = part => {\n  if (lastSubsingers.length) lastLineHadSubSingers = true;\n  if (lastChoirSingers.length) lastLineHadChoirSings = true;\n\n  // Keep singer state when not preceeded by an empty line\n  if (part.adlib.includes(0)) {\n    if (!part.singers && wasLastLineEmpty) {\n      part.adlib = part.adlib.map(() => 3);\n    } else if (!part.singers) {\n      updateUses(lastSingers);\n      part.singers = [...lastSingers];\n      part.colors = [...lastColors];\n      part.omit = true;\n    }\n  }\n\n  // Keep subSinger state when not preceeded by an empty line\n  if (part.adlib.includes(1)) {\n    if (!part.subSingers && (wasLastLineEmpty || !lastLineHadSubSingers)) {\n      part.adlib = part.adlib.map(a => (a === 1 ? 2 : a));\n    } else if (!part.subSingers) {\n      updateUses(lastSubsingers);\n      part.subSingers = [...lastSubsingers];\n      part.subColors = [...lastSubColors];\n      part.omitSub = true;\n      lastLineHadSubSingers = true;\n    }\n  }\n\n  if (part.adlib.includes(1)) {\n    lastLineHadSubSingers = true;\n  }\n\n  // Keep choirSinger state when not preceeded by an empty line\n  if (part.adlib.includes(4)) {\n    if (!part.choirSingers && (wasLastLineEmpty || !lastLineHadChoirSings)) {\n      part.adlib = part.adlib.map(a => (a === 4 ? 2 : a));\n    } else if (!part.choirSingers && lastChoirSingers.length) {\n      updateUses(lastChoirSingers);\n      part.choirSingers = [...lastChoirSingers];\n      part.choirColors = [...lastChoirColors];\n      part.omitChoir = true;\n      lastLineHadChoirSings = true;\n    }\n  }\n\n  if (part.adlib.includes(4)) {\n    lastLineHadChoirSings = true;\n  }\n\n  // Clean up unused keys\n  if (!part.singers) delete part.singers;\n  if (Array.isArray(part.singers) && !part.singers.length) delete part.singers;\n  if (!part.subSingers) delete part.subSingers;\n  if (Array.isArray(part.subSingers) && !part.subSingers.length)\n    delete part.subSingers;\n  if (!part.line) delete part.line;\n  if (Array.isArray(part.line) && !part.line.length) delete part.line;\n  if (!part.adlib) delete part.adlib;\n  if (Array.isArray(part.adlib) && !part.adlib.length) delete part.adlib;\n  if (!part.colors) delete part.colors;\n  if (Array.isArray(part.colors) && !part.colors.length) delete part.colors;\n  if (!part.subColors) delete part.subColors;\n  if (Array.isArray(part.subColors) && !part.subColors.length)\n    delete part.subColors;\n  if (!part.omit) delete part.omit;\n  if (!part.omitSub) delete part.omitSub;\n\n  if (Object.keys(part).length) {\n    wasLastLineEmpty = false;\n  } else {\n    part.empty = true;\n    wasLastLineEmpty = true;\n    lastLineHadSubSingers = false;\n    lastLineHadChoirSings = false;\n  }\n\n  // Save last\n  if (!part.empty) {\n    if (part.singers) lastSingers = [...part.singers];\n    if (part.colors) lastColors = [...part.colors];\n    if (part.subSingers) lastSubsingers = [...part.subSingers];\n    if (part.subColors) lastSubColors = [...part.subColors];\n    if (part.choirSingers) lastChoirSingers = [...part.choirSingers];\n    if (part.choirColors) lastChoirColors = [...part.choirColors];\n  } else {\n    lastSingers = [];\n    lastColors = [];\n    lastSubsingers = [];\n    lastSubColors = [];\n    lastChoirSingers = [];\n    lastChoirSingers = [];\n    lastLineHadSubSingers = false;\n    lastLineHadChoirSings = false;\n  }\n  return part;\n};\n\nconst parseLine = line => {\n  const result = [];\n  let insideBracket = false;\n  let insideParentheses = false;\n  let insideCurly = false;\n\n  let names = [];\n  let colors = [];\n\n  let currentString = '';\n  let lastCharacter = '';\n  let currentPart = new Part();\n  for (let i = 0; i < line.length; i++) {\n    const char = line[i];\n\n    // Analyse each character\n    switch (char) {\n      case '[':\n        if (insideBracket) {\n          errors.push(\n            'You should not place an opening square bracket inside another square bracket'\n          );\n        }\n        insideBracket = true;\n        // Push Part and reset variabes\n        if (i !== 0) {\n          if (currentString.trim()) {\n            currentPart.line.push(currentString.trim());\n            currentPart.adlib.push(0);\n          }\n          result.push(cleanUpPart(currentPart));\n          insideParentheses = false;\n          names = [];\n          colors = [];\n          currentString = '';\n          lastCharacter = '';\n        }\n        // Start new Part\n        currentPart = new Part();\n        break;\n\n      case ']':\n        if (!insideBracket) {\n          errors.push(\n            'You should not place an closing square bracket inside another square bracket'\n          );\n        }\n        if (insideBracket && lastCharacter !== ')' && lastCharacter !== '}') {\n          const entry = currentString.trim().toUpperCase();\n          names.push(entry);\n          colors.push(COLOR_BANK[entry] || 'col000000');\n          updateUses(names);\n          currentPart.singers = names;\n          currentPart.colors = colors;\n          names = [];\n          colors = [];\n          currentString = '';\n        }\n        insideBracket = false;\n        break;\n\n      case '(':\n        if (insideParentheses) {\n          errors.push(\n            'You should not place a opening parenthesis inside another parenthesis'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.singers = names;\n            currentPart.colors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(0);\n          currentString = '';\n        }\n        insideParentheses = true;\n        break;\n\n      case ')':\n        if (!insideParentheses) {\n          errors.push(\n            'You should not place a closing parenthesis inside another parenthesis'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.subSingers = names;\n            currentPart.subColors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(1);\n          currentString = '';\n        }\n        insideParentheses = false;\n        break;\n\n      case '{':\n        if (insideCurly) {\n          errors.push(\n            'You should not place a opening curly braces inside another curly braces'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.singers = names;\n            currentPart.colors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(0);\n          currentString = '';\n        }\n        insideCurly = true;\n        break;\n\n      case '}':\n        if (!insideCurly) {\n          errors.push(\n            'You should not place a closing curly braces inside another curly braces'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.choirSingers = names;\n            currentPart.choirColors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(4);\n          currentString = '';\n        }\n        insideCurly = false;\n        break;\n\n      case '/':\n        // TO-DO\n        if (insideBracket) {\n          const entry = currentString.trim().toUpperCase();\n          names.push(entry);\n          colors.push(COLOR_BANK[entry] || 'col000000');\n          currentString = '';\n        } else {\n          currentString += char;\n        }\n        break;\n      default:\n        currentString += char;\n      // do nothing\n    }\n    lastCharacter = char;\n  }\n  // Push the last part to the result\n  if (currentString) {\n    currentPart.line.push(currentString.trim());\n    currentPart.adlib.push(0);\n  }\n  result.push(cleanUpPart(currentPart));\n\n  if (result.length === 1 && result[0].empty) {\n    return null;\n  }\n  return result;\n};\n\nconst parseLyrics = (input, members, unitId) => {\n  const result = [];\n\n  // Build member color bank if it's a new unitId\n  if (unitId !== latestUnitId) {\n    Object.values(members).forEach(member => {\n      COLOR_BANK[member.name.toUpperCase()] = member.colorId || 'col000000';\n    });\n    latestUnitId = unitId;\n  }\n\n  // Split in linebreaks\n  const lines = input.split('\\n').map(l => l.trim());\n  // Keep track of previous information\n\n  // Iterate through lines\n  for (let i = 0; i < lines.length; i++) {\n    result.push(parseLine(lines[i]));\n  }\n\n  // Reset all variabes\n  lastSingers = [];\n  lastColors = [];\n  lastSubsingers = [];\n  lastSubColors = [];\n  lastChoirSingers = [];\n  lastChoirSingers = [];\n  wasLastLineEmpty = false;\n  lastLineHadSubSingers = false;\n  lastLineHadChoirSings = false;\n\n  // Group lyrics in paragraphs\n  const paragraphedResult = [[]];\n  let paragraphIndex = 0;\n  result.forEach(currentLine => {\n    if (!currentLine) {\n      paragraphedResult.push([]);\n      paragraphIndex++;\n    } else {\n      paragraphedResult[paragraphIndex].push(currentLine);\n    }\n  });\n\n  const response = {\n    result: paragraphedResult,\n    uses: { ...uses },\n  };\n\n  // Add any errors\n  if (errors.length) {\n    response.errors = [...errors];\n  }\n\n  errors = [];\n  uses = [];\n\n  return response;\n};\n\nexport default parseLyrics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\n\n// Import lyrics components\nimport LyricsOutput from './LyricsOutput';\n// Import common components\nimport { Loading, RequirementWrapper } from '../../../common';\n// Import lyric parser\nimport parseLyrics from '../parser';\n\nclass Lyrics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lyrics: {\n        result: [],\n        uses: {},\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadColors();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { colors },\n      distribute: { activeUnit },\n    } = this.props;\n\n    if (pending.REQUEST_COLORS) {\n      return <Loading message=\"Fecthing Colors...\" />;\n    }\n\n    const handleLyricsInput = event => {\n      const { value } = event.target;\n\n      this.setState({\n        lyrics: parseLyrics(value, activeUnit.members || [], activeUnit.id),\n      });\n    };\n\n    return (\n      <RequirementWrapper requirements={['activeUnit']}>\n        <main className=\"container container--lyrics\">\n          <h1>Lyrics</h1>\n          {activeUnit.members ? (\n            <ul className=\"lyrics__members-list\">\n              {Object.values(activeUnit.members).map(member => (\n                <li\n                  className={`pill background-color-${member.color.number ||\n                    0}`}\n                  key={member.id}\n                >\n                  {member.name.toUpperCase()}{' '}\n                  {this.state.lyrics.uses[member.name.toUpperCase()] &&\n                    `(${this.state.lyrics.uses[member.name.toUpperCase()]})`}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <section className=\"lyrics__members-list--empty\">\n              There is no Active Unit Selected.\n            </section>\n          )}\n          <ScrollSync>\n            <section className=\"lyrics__group\">\n              <ScrollSyncPane>\n                <textarea\n                  name=\"lyrics\"\n                  id=\"\"\n                  cols=\"30\"\n                  rows=\"10\"\n                  className=\"lyrics__input\"\n                  onChange={handleLyricsInput}\n                />\n              </ScrollSyncPane>\n              <ScrollSyncPane>\n                <LyricsOutput\n                  lyrics={this.state.lyrics.result}\n                  colorsDB={colors}\n                />\n              </ScrollSyncPane>\n            </section>\n          </ScrollSync>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nLyrics.propTypes = {\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  loadColors: PropTypes.func.isRequired,\n};\n\nexport default Lyrics;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Lyrics from '../components/Lyrics';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Lyrics)\n);\n","import LyricsContainer from './containers/LyricsContainer';\n\nexport default LyricsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ColorReferenceBar = ({ colors, colorsInUse }) => (\n  <ul className=\"color-reference-bar\">\n    {Object.values(colors).map(color => {\n      const isInUse = colorsInUse[color.id]\n        ? 'color-reference-item--in-use'\n        : '';\n      return (\n        <li\n          className={`color-reference-item background-color-${\n            color.number\n          } ${isInUse}`}\n          key={color.id}\n        >\n          {color.name}\n          <br />\n          {color.count}\n        </li>\n      );\n    })}\n  </ul>\n);\n\nColorReferenceBar.propTypes = {\n  colors: PropTypes.object,\n  colorsInUse: PropTypes.object,\n};\n\nColorReferenceBar.defaultProps = {\n  colors: {},\n  colorsInUse: PropTypes.object,\n};\n\nexport default ColorReferenceBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Select, Option, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n// Import utils\nimport enums from '../../../../utils/readable-enums';\n\nconst ManageArtist = ({\n  formState,\n  props,\n  validateTypeahead,\n  isValid,\n  artistId,\n  defaultValues,\n  next,\n}) => {\n  const {\n    admin: { panels },\n    db: { artistsTypeahead },\n    handleEditArtist,\n  } = props;\n\n  // Locked Panel\n  if (panels.artist === 'locked') {\n    return (\n      <section className=\"manage-form__artist\">\n        <h3 className=\"manage-form__button-title\">Artist</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Lock Artist\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Open Panel\n  if (panels.artist === 'open') {\n    return (\n      <section className=\"manage-form__artist\">\n        <h3 className=\"manage-form__button-title\">Artist</h3>\n        <button\n          className=\"manage-form__button-add\"\n          onClick={() => handleEditArtist(artistId)}\n        >\n          <img\n            className=\"manage-form__button-add-image\"\n            src={managePlus}\n            alt=\"Add Artist\"\n          />\n        </button>\n        <Typeahead\n          action={e => validateTypeahead(e)}\n          name=\"artists\"\n          placeholder=\"Search existing artist...\"\n          suggestions={artistsTypeahead}\n        />\n        {isValid && (\n          <p className=\"manage-form__valid\">\n            <Icon type=\"check\" color=\"green\" inline />\n            Selected Artist is valid. Click on the plus button to add it.\n          </p>\n        )}\n      </section>\n    );\n  }\n\n  // Validation classes\n  const isRequired = value => (!value ? 'This field is required' : undefined);\n\n  const isValidName =\n    formState.errors.artist && formState.errors.artist.name\n      ? 'manage-form__input--invalid'\n      : '';\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__artist manage-form__artist-edit\">\n      <div className=\"manage-form__form-group\">\n        <Scope scope=\"artist\">\n          <h3>Artist</h3>\n          <label className=\"manage-form__label\">\n            Name*\n            <Text\n              className={`manage-form__input ${isValidName}`}\n              field=\"name\"\n              validateOnBlur\n              validate={isRequired}\n              required\n              initialValue={defaultValues.name}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Other Names\n            <Text\n              className=\"manage-form__input\"\n              field=\"otherNames\"\n              initialValue={defaultValues.otherNames}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Genre*\n            <Select\n              className=\"manage-form__input\"\n              field=\"genre\"\n              validate={isRequired}\n              initialValue={defaultValues.genre}\n              required\n            >\n              <Option value=\"\" disabled>\n                Select One...\n              </Option>\n              {Object.entries(enums.GENRES).map(([text, value]) => (\n                <Option key={value} value={value}>\n                  {text}\n                </Option>\n              ))}\n            </Select>\n          </label>\n          <label className=\"manage-form__label\">\n            Private{' '}\n            <Checkbox field=\"private\" initialValue={defaultValues.private} />\n          </label>\n        </Scope>\n      </div>\n      <div className=\"manage-form__navigation\">\n        <button className=\"btn\" onClick={() => next(formState)}>\n          Unlock Unit\n        </button>\n      </div>\n    </section>\n  );\n};\n\nManageArtist.propTypes = {\n  admin: PropTypes.object,\n  artistId: PropTypes.string,\n  db: PropTypes.object,\n  defaultValues: PropTypes.object.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditArtist: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n  props: PropTypes.object.isRequired,\n  validateTypeahead: PropTypes.func.isRequired,\n};\n\nManageArtist.defaultProps = {\n  admin: {},\n  db: {},\n  artistId: null,\n  handleEditArtist: () => {},\n};\n\nexport default ManageArtist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n\nconst ManageUnit = ({\n  formState,\n  props,\n  validateTypeahead,\n  isValid,\n  unitId,\n  defaultValues,\n  next,\n}) => {\n  const {\n    admin: { unitsTypeahead, panels },\n    handleEditUnit,\n  } = props;\n\n  // Locked Panel\n  if (panels.unit === 'locked') {\n    return (\n      <section className=\"manage-form__unit\">\n        <h3 className=\"manage-form__button-title\">Unit</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Locked Unit\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Open Panel\n  if (panels.unit === 'open') {\n    return (\n      <section className=\"manage-form__unit\">\n        <h3 className=\"manage-form__button-title\">Unit</h3>\n        <button\n          className=\"manage-form__button-add\"\n          onClick={() => handleEditUnit(unitId)}\n        >\n          <img\n            className=\"manage-form__button-add-image\"\n            src={managePlus}\n            alt=\"Add Unit\"\n          />\n        </button>\n        {unitsTypeahead.length > 0 && (\n          <Typeahead\n            action={e => validateTypeahead(e)}\n            name=\"units\"\n            placeholder=\"Search existing unit...\"\n            suggestions={unitsTypeahead}\n          />\n        )}\n        {isValid && (\n          <p className=\"manage-form__valid\">\n            <Icon type=\"check\" color=\"green\" inline />\n            Selected Unit is valid. Click on the plus button to add it.\n          </p>\n        )}\n      </section>\n    );\n  }\n\n  // Validation classes\n  const isRequired = value => (!value ? 'This field is required' : undefined);\n  const isYear = value =>\n    value < 1900 || value > new Date().getFullYear()\n      ? 'Value must be a four digit year'\n      : undefined;\n\n  const isValidName =\n    formState.errors.unit && formState.errors.unit.name\n      ? 'manage-form__input--invalid'\n      : '';\n\n  const isValidDebutYear =\n    formState.errors.unit && formState.errors.unit.debutYear\n      ? 'manage-form__input--invalid'\n      : '';\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__unit manage-form__unit-edit\">\n      <div className=\"manage-form__form-group\">\n        <Scope scope=\"unit\">\n          <h3>Unit</h3>\n          <label className=\"manage-form__label\">\n            Unit Name* (e.g. OT4)<Text\n              className={`manage-form__input ${isValidName}`}\n              field=\"name\"\n              validateOnBlur\n              validate={isRequired}\n              required\n              initialValue={defaultValues.name}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Debut Year*<Text\n              className={`manage-form__input ${isValidDebutYear}`}\n              field=\"debutYear\"\n              validateOnBlur\n              validate={isYear}\n              required\n              initialValue={defaultValues.debutYear}\n              type=\"number\"\n              max=\"9999\"\n              min=\"1950\"\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Official{' '}\n            <Checkbox field=\"official\" initialValue={defaultValues.official} />\n          </label>\n          <label className=\"manage-form__label\">\n            Sub-unit{' '}\n            <Checkbox field=\"subUnit\" initialValue={defaultValues.subUnit} />\n          </label>\n          <label className=\"manage-form__label\">\n            Private{' '}\n            <Checkbox field=\"private\" initialValue={defaultValues.private} />\n          </label>\n        </Scope>\n      </div>\n      <div className=\"manage-form__navigation\">\n        <button className=\"btn\" onClick={() => next(formState)}>\n          Unlock Members\n        </button>\n      </div>\n    </section>\n  );\n};\n\nManageUnit.propTypes = {\n  admin: PropTypes.object,\n  defaultValues: PropTypes.object.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditUnit: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n  props: PropTypes.object.isRequired,\n  validateTypeahead: PropTypes.func.isRequired,\n  unitId: PropTypes.string,\n};\n\nManageUnit.defaultProps = {\n  admin: {},\n  handleEditUnit: () => {},\n  unitId: null,\n};\n\nexport default ManageUnit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Select, Option, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n// Import utils\nimport utils from '../../../../utils';\n// Import constants\nimport constants from '../../../../utils/constants';\nimport enums from '../../../../utils/readable-enums';\n\nconst ManageMembers = ({\n  formState,\n  props,\n  colorsInUse,\n  defaultValues,\n  handleEditMember,\n  isValid,\n  memberId,\n  validateTypeahead,\n}) => {\n  const {\n    admin: { panels },\n    db: { membersTypeahead },\n    removeMember,\n    updateMemberColor,\n    // updateMemberPositions,\n  } = props;\n\n  // Locked Panel\n  if (panels.members === 'locked') {\n    return (\n      <section className=\"manage-form__members\">\n        <h3 className=\"manage-form__button-title\">Members</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Locked Members\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__members manage-form__members-edit\">\n      <div className=\"manage-form__form-group-member\">\n        {defaultValues.map((member, index) => {\n          const key = index;\n\n          // Validation classes\n          const isRequired = value =>\n            !value ? 'This field is required' : undefined;\n          const isName = value => {\n            // isRequired\n            if (!value) return 'This field is required';\n            // Cannot have spaces\n            if (value.match(/(\\.|:| |,|;|\\?)/g))\n              return 'Name cannot contain spaces, commas, ., :, ;, or ?';\n            // Max 12 characters\n            if (value.length > 12)\n              return 'Name cannot be longer than 12 characters';\n            return undefined;\n          };\n\n          const isValidName =\n            formState.errors.members &&\n            formState.errors.members[index] &&\n            formState.errors.members[index].name\n              ? 'manage-form__input--invalid'\n              : '';\n\n          if (member) {\n            return (\n              <Scope scope={`members[${index}]`} key={`member-${key}`}>\n                <div className=\"manage-form__form-member manage-member\">\n                  <span\n                    className={`manage-member__title background-color-${utils.getColorNumber(\n                      member.colorId\n                    )}`}\n                  >\n                    Member {index + 1}{' '}\n                    <button\n                      className=\"btn-remove-user\"\n                      onClick={() => removeMember(index)}\n                    >\n                      ×\n                    </button>\n                  </span>\n                  <div className=\"manage-form__inline\">\n                    <label\n                      className=\"manage-form__label\"\n                      title=\"Member names must be less than 12 characters without spaces, commas, colors, semicolons, questions marks or periods\"\n                    >\n                      Name*{' '}\n                      <Text\n                        className={`manage-form__input ${isValidName}`}\n                        field=\"name\"\n                        validateOnBlur\n                        validate={isName}\n                        required\n                        initialValue={member.name}\n                      />\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--30\">\n                      Initials{' '}\n                      <Text\n                        className=\"manage-form__input\"\n                        field=\"initials\"\n                        initialValue={member.initials}\n                        maxLength=\"2\"\n                      />\n                    </label>\n                  </div>\n                  <div className=\"manage-form__inline\">\n                    <label className=\"manage-form__label manage-form__label--70\">\n                      Birthdate*{' '}\n                      <Text\n                        className=\"manage-form__input\"\n                        field=\"birthdate\"\n                        validate={isRequired}\n                        required\n                        initialValue={member.birthdate}\n                        type=\"date\"\n                      />\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--30\">\n                      Color*\n                      <Select\n                        className={`manage-form__input background-color-${utils.getColorNumber(\n                          member.colorId\n                        )}`}\n                        field=\"colorId\"\n                        validate={isRequired}\n                        initialValue={member.colorId}\n                        required\n                        onChange={e => updateMemberColor(e.target.value, index)}\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.COLORS).map(color => (\n                          <Option\n                            key={`${key}-${color[0]}`}\n                            value={color[0]}\n                            disabled={colorsInUse[color[0]]}\n                          >\n                            {color[1]}\n                          </Option>\n                        ))}\n                      </Select>\n                    </label>\n                  </div>\n                  <div className=\"manage-form__inline\">\n                    <label className=\"manage-form__label manage-form__label--50\">\n                      Gender*\n                      <Select\n                        className=\"manage-form__input\"\n                        field=\"gender\"\n                        validate={isRequired}\n                        initialValue={member.gender}\n                        required\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(enums.GENDERS).map(([value, text]) => (\n                          <Option key={`${key}-${value}`} value={value}>\n                            {text}\n                          </Option>\n                        ))}\n                      </Select>\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--50\">\n                      Nationality*\n                      <Select\n                        className=\"manage-form__input\"\n                        field=\"nationality\"\n                        validate={isRequired}\n                        initialValue={member.nationality}\n                        required\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(enums.NATIONALITIES).map(\n                          ([value, text]) => (\n                            <Option key={`${key}-${value}`} value={value}>\n                              {text}\n                            </Option>\n                          )\n                        )}\n                      </Select>\n                    </label>\n                  </div>\n                  <label className=\"manage-form__label\">Positions* </label>\n                  <div className=\"position-buttons\">\n                    {constants.POSITIONS_LIST.map(position => (\n                      <Checkbox\n                        key={`${key}-${position}`}\n                        field={position}\n                        initialValue={member[utils.spiralCase(position)]}\n                        className={`position-checkbox position-checkbox-${utils.spiralCase(\n                          position\n                        )}`}\n                        title={position}\n                        // onChange={e =>\n                        //   updateMemberPositions(\n                        //     e.target.checked,\n                        //     position,\n                        //     index\n                        //   )\n                        // }\n                      />\n                    ))}\n                  </div>\n                  <label className=\"manage-form__label\">\n                    Private{' '}\n                    <Checkbox field=\"private\" initialValue={member.private} />\n                  </label>\n                </div>\n              </Scope>\n            );\n          }\n          return null;\n        })}\n        <div className=\"manage-form__form-member manage-member-new\">\n          <h3 className=\"manage-form__button-title\">Add new member</h3>\n          <button\n            className=\"manage-form__button-add\"\n            onClick={() => handleEditMember(memberId, formState)}\n          >\n            <img\n              className=\"manage-form__button-add-image\"\n              src={managePlus}\n              alt=\"Add Unit\"\n            />\n          </button>\n          <Typeahead\n            action={e => validateTypeahead(e)}\n            name=\"members\"\n            placeholder=\"Search existing members...\"\n            suggestions={membersTypeahead}\n          />\n          {isValid && (\n            <p className=\"manage-form__valid\">\n              <Icon type=\"check\" color=\"green\" inline />\n              Selected Member is valid. Click on the plus button to add it.\n            </p>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nManageMembers.propTypes = {\n  admin: PropTypes.object,\n  colorsInUse: PropTypes.object,\n  db: PropTypes.object,\n  defaultValues: PropTypes.array.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditMember: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  memberId: PropTypes.string,\n  props: PropTypes.object.isRequired,\n  removeMember: PropTypes.func,\n  updateMemberColor: PropTypes.func,\n  // updateMemberPositions: PropTypes.func,\n  validateTypeahead: PropTypes.func.isRequired,\n};\n\nManageMembers.defaultProps = {\n  admin: {},\n  db: {},\n  colorsInUse: {},\n  handleEditMember: () => {},\n  memberId: null,\n  removeMember: () => {},\n  updateMemberColor: () => {},\n  // updateMemberPositions: () => {},\n};\n\nexport default ManageMembers;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'informed';\n\n// Import components\nimport ColorReferenceBar from './ColorReferenceBar';\nimport ManageArtist from './ManageArtist';\nimport ManageUnit from './ManageUnit';\nimport ManageMembers from './ManageMembers';\n// Import common components\nimport { RequirementWrapper, Loading, Icon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Manage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artistId: null,\n      validArtist: false,\n      unitId: null,\n      validUnit: false,\n      memberId: null,\n      validMember: false,\n    };\n\n    this.handleEditMemberAndState = this.handleEditMemberAndState.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n    this.validateArtist = this.validateArtist.bind(this);\n    this.validateUnit = this.validateUnit.bind(this);\n    this.validateMembers = this.validateMembers.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.loadArtists();\n    this.props.loadColors();\n    this.props.loadMembers();\n  }\n\n  validateArtist(event) {\n    const { value } = event.target;\n    const dict = this.props.db.artistsTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ artistId: dict[value], validArtist: true });\n    } else {\n      this.setState({ artistId: null, validArtist: false });\n    }\n  }\n\n  validateUnit(event) {\n    const { value } = event.target;\n    const dict = this.props.admin.unitsTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ unitId: dict[value], validUnit: true });\n    } else {\n      this.setState({ unitId: null, validUnit: false });\n    }\n  }\n\n  validateMembers(event) {\n    const { value } = event.target;\n    const dict = this.props.db.membersTypeaheadDict;\n\n    if (dict[value]) {\n      this.setState({ memberId: dict[value], validMember: true });\n    } else {\n      this.setState({ memberId: null, validMember: false });\n    }\n  }\n\n  handleEditMemberAndState(memberId, formState) {\n    if (memberId) {\n      this.setState({ memberId: null, validMember: false });\n    }\n    this.props.handleEditMember(memberId, formState);\n  }\n\n  resetAll() {\n    this.setState({\n      artistId: null,\n      validArtist: false,\n      unitId: null,\n      validUnit: false,\n      memberId: null,\n      validMember: false,\n    });\n    this.props.resetManage();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      admin: {\n        colorsInUse,\n        editingArtist,\n        editingMembers,\n        editingUnit,\n        manageResult,\n      },\n      db: { colors },\n      handleResyncDB,\n      saveManage,\n      updateManageForm,\n      unlockUnit,\n      unlockMembers,\n    } = this.props;\n\n    const isSaveable =\n      Object.keys(editingArtist).length &&\n      Object.keys(editingUnit).length &&\n      editingMembers.length > 1;\n\n    // Build default values for form\n    const defaultValues = {\n      artist: {\n        name: undefined,\n        otherNames: undefined,\n        genre: undefined,\n        private: undefined,\n      },\n      unit: {\n        debutYear: undefined,\n        name: undefined,\n        official: undefined,\n        private: undefined,\n        subUnit: undefined,\n      },\n      members: [],\n    };\n\n    if (editingArtist && editingArtist.id) {\n      defaultValues.artist = {\n        name: editingArtist.name,\n        otherNames: editingArtist.otherNames,\n        genre: editingArtist.genre,\n        private: editingArtist.private,\n      };\n    }\n\n    if (editingUnit && editingUnit.id) {\n      defaultValues.unit = {\n        debutYear: editingUnit.debutYear,\n        name: editingUnit.name,\n        official: editingUnit.official,\n        private: editingUnit.private,\n        subUnit: editingUnit.subUnit,\n      };\n    }\n\n    if (editingMembers.length) {\n      editingMembers.forEach(member => {\n        if (member) {\n          defaultValues.members.push({\n            colorId: member.colorId || undefined,\n            gender: member.gender || undefined,\n            initials: member.initials || undefined,\n            name: member.name || undefined,\n            nationality: member.nationality || undefined,\n            private: member.private || undefined,\n            referenceArtist: member.referenceArtist || undefined,\n            birthdate: member.birthdate\n              ? utils.spiralBirthdate(member.birthdate)\n              : undefined,\n            ...utils.makePositionsEditable(member.positions || []),\n          });\n        } else {\n          defaultValues.members.push(null);\n        }\n      });\n    }\n\n    // If database is still loading\n    if (\n      pending.REQUEST_ARTISTS ||\n      pending.REQUEST_COLORS ||\n      pending.REQUEST_MEMBERS\n    ) {\n      return <Loading message=\"Preparing manage...\" />;\n    }\n\n    // If database is being resynced\n    if (pending.RESYNC_DATABASE) {\n      return <Loading message=\"Resyncing database...\" />;\n    }\n\n    // If save is in progress\n    if (pending.UPDATE_COMPLETE_ARTIST) {\n      return <Loading message=\"Saving...\" />;\n    }\n\n    // If save is in progress\n    if (manageResult === 'SUCCESS') {\n      return (\n        <main className=\"container container--manage\">\n          <h1>Manage</h1>\n          <div className=\"manage-section--manage-success\">\n            <Icon type=\"check\" color=\"green\" size={96} />\n            <p>Complete Artists Successfully Created/Updated</p>\n            <button className=\"btn\" onClick={this.resetAll}>\n              Create New Artist\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    return (\n      <RequirementWrapper requirements={['admin']}>\n        <main className=\"container container--manage\">\n          <div className=\"manage-header\">\n            <h1>Manage</h1>\n            <button className=\"btn btn-resync-db\" onClick={handleResyncDB}>\n              Resync Database\n            </button>\n            <p>\n              A complete group is required to save with ONE Artist, ONE Unit,\n              and at least TWO members (no solo artists)\n            </p>\n          </div>\n\n          <ColorReferenceBar colors={colors} colorsInUse={colorsInUse} />\n\n          <Form\n            onChange={formState => updateManageForm(formState)}\n            autoComplete=\"off\"\n            className=\"manage-section\"\n          >\n            {({ formState }) => (\n              <Fragment>\n                <div className=\"manage-form\">\n                  <ManageArtist\n                    formState={formState}\n                    props={this.props}\n                    validateTypeahead={this.validateArtist}\n                    isValid={this.state.validArtist}\n                    artistId={this.state.artistId}\n                    defaultValues={defaultValues.artist}\n                    next={unlockUnit}\n                  />\n                  <ManageUnit\n                    formState={formState}\n                    props={this.props}\n                    validateTypeahead={this.validateUnit}\n                    isValid={this.state.validUnit}\n                    unitId={this.state.unitId}\n                    defaultValues={defaultValues.unit}\n                    next={unlockMembers}\n                  />\n                  <ManageMembers\n                    formState={formState}\n                    props={this.props}\n                    defaultValues={defaultValues.members}\n                    validateTypeahead={this.validateMembers}\n                    isValid={this.state.validMember}\n                    memberId={this.state.memberId}\n                    colorsInUse={colorsInUse}\n                    handleEditMember={this.handleEditMemberAndState}\n                  />\n                </div>\n                <div className=\"manage-form-nav\">\n                  <button className=\"btn\" onClick={() => this.resetAll()}>\n                    Reset\n                  </button>\n                  <button\n                    className=\"btn\"\n                    onClick={() => saveManage(formState)}\n                    disabled={!isSaveable}\n                  >\n                    Save\n                  </button>\n                </div>\n              </Fragment>\n            )}\n          </Form>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nManage.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  loadColors: PropTypes.func.isRequired,\n  loadMembers: PropTypes.func.isRequired,\n  handleEditMember: PropTypes.func.isRequired,\n  handleResyncDB: PropTypes.func.isRequired,\n  resetManage: PropTypes.func.isRequired,\n  saveManage: PropTypes.func.isRequired,\n  updateManageForm: PropTypes.func.isRequired,\n  unlockMembers: PropTypes.func.isRequired,\n  unlockUnit: PropTypes.func.isRequired,\n};\n\nManage.defaultProps = {};\n\nexport default Manage;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Manage from '../components/Manage';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Manage)\n);\n","import ManageContainer from './containers/ManageContainer';\n\nexport default ManageContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { LoadingIcon, Icon, SortingButton } from '../../../common';\n\nconst MEANT_FOR_TEXT = {\n  FEMALE: 'Girl Group',\n  MALE: 'Boy Group',\n  MIXED: 'Mixed Group',\n  UNKNOWN: 'Unknown',\n};\n\nconst MEANT_FOR_ICON = {\n  FEMALE: 'gender-female',\n  MALE: 'gender-male',\n  MIXED: 'gender-mixed',\n  UNKNOWN: 'question-mark',\n};\n\nconst MEANT_FOR_COLOR = {\n  FEMALE: 'pink',\n  MALE: 'blue',\n  MIXED: 'orange',\n  UNKNOWN: 'grey',\n};\n\nconst SongsTable = ({\n  filteredSongs,\n  hasActiveFilters,\n  pending,\n  rowAction,\n  previouslyDistributedSongsDict,\n  sortBy,\n  sortedBy,\n}) => {\n  // Message to be display when table has no rows\n  const emptyTableMessage = hasActiveFilters\n    ? 'No songs available within your search'\n    : 'No songs available';\n\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"9\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"9\">{emptyTableMessage}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Distributed</th>\n          <th>\n            Title{' '}\n            <SortingButton\n              active={sortedBy === 'title'}\n              action={() => sortBy('title')}\n            />\n          </th>\n          <th>\n            Artist{' '}\n            <SortingButton\n              active={sortedBy === 'originalArtistName'}\n              action={() => sortBy('originalArtistName')}\n            />\n          </th>\n          <th>\n            Album{' '}\n            <SortingButton\n              active={sortedBy === 'album'}\n              action={() => sortBy('album')}\n            />\n          </th>\n          <th>Meant For</th>\n          <th>Group Size</th>\n          <th>Video</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {filteredSongs.length > 0\n          ? filteredSongs.map(entry => {\n              const previouslyDistributed = previouslyDistributedSongsDict[\n                entry.id\n              ]\n                ? 'previously-distributed-row'\n                : '';\n\n              return (\n                <tr\n                  key={`all-artists-${entry.id}`}\n                  id={`a-${entry.id}`}\n                  className={previouslyDistributed}\n                >\n                  <td>\n                    {previouslyDistributed ? (\n                      <Icon\n                        type=\"hand-positive\"\n                        color=\"green\"\n                        title=\"Previously Distributed\"\n                        inline\n                      />\n                    ) : (\n                      ''\n                    )}\n                  </td>\n                  <td>\n                    {entry.title}{' '}\n                    {entry.single ? (\n                      <Icon\n                        type=\"title-song\"\n                        color=\"orange\"\n                        title=\"Title Song\"\n                        inline\n                      />\n                    ) : null}\n                  </td>\n                  <td>\n                    {entry.originalArtistName}{' '}\n                    {entry.originalArtistId && (\n                      <Icon\n                        type=\"check\"\n                        color=\"yellow\"\n                        title=\"Artist in LD\"\n                        inline\n                      />\n                    )}\n                  </td>\n                  <td>\n                    {entry.album !== 'UNKNOWN' ? (\n                      entry.album\n                    ) : (\n                      <Icon\n                        type=\"question-mark\"\n                        color=\"blue\"\n                        title=\"Unkown Album Title\"\n                        inline\n                      />\n                    )}\n                  </td>\n                  <td>\n                    <Icon\n                      type={MEANT_FOR_ICON[entry.gender]}\n                      color={MEANT_FOR_COLOR[entry.gender]}\n                      title={MEANT_FOR_TEXT[entry.gender]}\n                      inline\n                    />{' '}\n                    {MEANT_FOR_TEXT[entry.gender]}\n                  </td>\n                  <td>{entry.groupSize}</td>\n                  <td>\n                    {entry.videoId ? (\n                      <Icon\n                        type=\"youtube\"\n                        color=\"red\"\n                        title={entry.videoId}\n                        size=\"18\"\n                        inline\n                      />\n                    ) : (\n                      'Unavailable'\n                    )}\n                  </td>\n                  <td>\n                    {entry.private ? (\n                      <Icon type=\"private\" color=\"red\" title=\"Private\" inline />\n                    ) : (\n                      ''\n                    )}\n                  </td>\n                </tr>\n              );\n            })\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nSongsTable.propTypes = {\n  filteredSongs: PropTypes.array.isRequired,\n  hasActiveFilters: PropTypes.bool,\n  pending: PropTypes.bool,\n  previouslyDistributedSongsDict: PropTypes.object,\n  rowAction: PropTypes.func.isRequired,\n  sortBy: PropTypes.func.isRequired,\n  sortedBy: PropTypes.string.isRequired,\n};\n\nSongsTable.defaultProps = {\n  hasActiveFilters: false,\n  pending: false,\n  previouslyDistributedSongsDict: {},\n};\n\nexport default SongsTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { Checkbox, Form, Text } from 'informed';\n\n// Import components\nimport SongsTable from './SongsTable';\n// Import common components\nimport { ActiveSong, ActiveUnit, RequirementWrapper } from '../../../common';\n// Import utils\nimport localStorage from '../../../../utils/local-storage';\n\nclass Songs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      undone: true,\n      matchGender: false,\n      sortedBy: 'title',\n      order: 'asc',\n    };\n\n    this.handleTableClick = this.handleTableClick.bind(this);\n    this.filterSongs = this.filterSongs.bind(this);\n    this.setSort = this.setSort.bind(this);\n    this.sortSongs = this.sortSongs.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.loadSongs();\n    }\n\n    this.localStorage();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.auth.isAuthenticated && this.props.auth.isAuthenticated) {\n      this.props.loadSongs();\n    }\n  }\n\n  setSort(type) {\n    let order = 'asc';\n    if (this.state.sortedBy === type) {\n      order = this.state.order === 'asc' ? 'desc' : 'asc';\n    }\n\n    this.setState({\n      order,\n      sortedBy: type,\n    });\n\n    localStorage.set({\n      songsSort: type,\n      songsOrder: order === 'desc' ? 'desc' : null,\n    });\n  }\n\n  localStorage() {\n    this.setState({\n      undone: localStorage.get('songsUndone') || true,\n      matchGender: localStorage.get('songsMatchGender') || true,\n      sortedBy: localStorage.get('songsSort') || 'title',\n      order: localStorage.get('songsOrder') || 'asc',\n    });\n  }\n\n  updateFilters(formState) {\n    this.setState({\n      query: formState.values.query,\n      undone: formState.values.undone,\n      matchGender: formState.values.matchGender,\n    });\n\n    localStorage.set({\n      songsUndone: formState.values.undone || null,\n      songsMatchGender: formState.values.matchGender || null,\n    });\n  }\n\n  handleTableClick(e) {\n    const { id } = e.target.parentNode;\n    if (id) {\n      const songId = id.substring(2);\n      this.props.activateSong(songId);\n      this.props.history.push(`/distribute`);\n    }\n  }\n\n  filterSongs(songs) {\n    const { activeUnit } = this.props.distribute;\n\n    return _.filter(songs, song => {\n      const evaluation = [];\n\n      if (this.state.undone) {\n        const songDict = activeUnit.songsDict || {};\n        if (songDict[song.id]) {\n          evaluation.push(!song);\n        } else {\n          evaluation.push(song);\n        }\n      }\n\n      if (this.state.matchGender) {\n        if (activeUnit.gender === song.gender) {\n          evaluation.push(song);\n        } else {\n          evaluation.push(!song);\n        }\n      }\n\n      if (this.state.query) {\n        const query = this.state.query.toLowerCase();\n\n        if (song.query.includes(query)) {\n          evaluation.push(song);\n        } else {\n          evaluation.push(!song);\n        }\n      }\n\n      return evaluation.every(e => e);\n    });\n  }\n\n  sortSongs(songs) {\n    const { sortedBy, order } = this.state;\n    return _.orderBy(songs, [song => song[sortedBy].toLowerCase()], [order]);\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { songs },\n      distribute: { activeSong, activeUnit },\n    } = this.props;\n\n    const filteredSongs = this.sortSongs(this.filterSongs(songs));\n\n    return (\n      <RequirementWrapper requirements={['activeUnit']}>\n        <main className=\"container container--songs\">\n          <h1>Songs</h1>\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n          <h2>Filters</h2>\n          <Form\n            onChange={formState => this.updateFilters(formState)}\n            autoComplete=\"off\"\n            className=\"songs-filters-group\"\n          >\n            <div className=\"songs-filter-group\">\n              <label className=\"songs-filter-label\">\n                Title or Artist contains...\n              </label>\n              <Text\n                className=\"songs-filter-input-text\"\n                field=\"query\"\n                initialValue={this.state.query}\n              />\n            </div>\n            <div className=\"songs-filter-group\">\n              <label className=\"songs-filter-label\">Match Gender</label>\n              <Checkbox\n                field=\"matchGender\"\n                initialValue={this.state.matchGender}\n              />\n            </div>\n            <div className=\"songs-filter-group\">\n              <label className=\"songs-filter-label\">\n                Display only not previously distributed\n              </label>\n              <Checkbox field=\"undone\" initialValue={this.state.undone} />\n            </div>\n          </Form>\n\n          <p>To start a distribution, select a song by clicking on its row.</p>\n          <SongsTable\n            filteredSongs={filteredSongs}\n            hasActiveFilters={Boolean(\n              this.state.query || this.state.undone || this.state.matchGender\n            )}\n            pending={pending.REQUEST_SONGS}\n            rowAction={this.handleTableClick}\n            previouslyDistributedSongsDict={activeUnit.songsDict}\n            sortBy={this.setSort}\n            sortedBy={this.state.sortedBy}\n          />\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nSongs.propTypes = {\n  activateSong: PropTypes.func.isRequired,\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadSongs: PropTypes.func.isRequired,\n};\n\nexport default Songs;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Songs from '../components/Songs';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Songs)\n);\n","import SongsContainer from './containers/SongsContainer';\n\nexport default SongsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SyncStep1VideoId = ({ handleVideoId, loadYoutubeVideo, videoId }) => (\n  <div className=\"sync__step sync__step--1\">\n    <p>Add a youtube link/video id here</p>\n    <input type=\"text\" onChange={handleVideoId} />\n    <p>OR choose a metronome placeholder</p>\n    <select onChange={handleVideoId} disabled>\n      <option value=\"\">Select a btm placeholder</option>\n      <option value=\"90bpm\">90 bpm</option>\n      <option value=\"100bpm\">100 bpm</option>\n      <option value=\"110bpm\">110 bpm</option>\n      <option value=\"120bpm\">120 bpm</option>\n      <option value=\"130bpm\">130 bpm</option>\n    </select>\n\n    <button\n      className=\"btn btn-block\"\n      disabled={!videoId}\n      onClick={() => loadYoutubeVideo()}\n    >\n      Load Video for {videoId}\n    </button>\n  </div>\n);\n\nSyncStep1VideoId.propTypes = {\n  handleVideoId: PropTypes.func.isRequired,\n  loadYoutubeVideo: PropTypes.func.isRequired,\n  videoId: PropTypes.string,\n};\n\nSyncStep1VideoId.defaultProps = {\n  videoId: '',\n};\n\nexport default SyncStep1VideoId;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Form, Option, Select, Text } from 'informed';\n\n// Import common components\nimport { Typeahead } from '../../../common';\n// Import contants\nimport enums from '../../../../utils/readable-enums';\n\nclass SyncStep2Info extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalArtist: '',\n    };\n  }\n\n  addToOriginalArtistForm(event) {\n    const { value } = event.target;\n    this.setState({\n      originalArtist: value,\n    });\n  }\n\n  render() {\n    return (\n      <Form autoComplete=\"off\" className=\"sync__step sync__step--2\">\n        {({ formState }) => (\n          <Fragment>\n            <div className=\"sync__step--2__container\">\n              <div className=\"sync__step--2__group\">\n                <label className=\"sync__form__label\">\n                  Song Title*\n                  <Text\n                    className=\"sync__form__input-text\"\n                    field=\"title\"\n                    required\n                  />\n                </label>\n\n                <label className=\"sync__form__label\">\n                  Original Artist*{' '}\n                  <Typeahead\n                    action={e => this.addToOriginalArtistForm(e)}\n                    name=\"artists\"\n                    placeholder=\"Search existing artist...\"\n                    suggestions={this.props.artistsTypeahead}\n                    className=\"sync__form__typeahead\"\n                  />\n                </label>\n\n                <label className=\"sync__form__label\">\n                  Album{' '}\n                  <Text className=\"sync__form__input-text\" field=\"album\" />\n                </label>\n              </div>\n\n              <div className=\"sync__step--2__group\">\n                <label className=\"sync__form__label\">\n                  Original Group Gender*\n                  <Select\n                    className=\"sync__form__input-text\"\n                    field=\"gender\"\n                    required\n                  >\n                    <Option value=\"\" disabled>\n                      Select One...\n                    </Option>\n                    {Object.entries(enums.GEND).map(genre => (\n                      <Option key={genre[0]} value={genre[0]}>\n                        {genre[1]}\n                      </Option>\n                    ))}\n                  </Select>\n                </label>\n\n                <label className=\"sync__form__label\">\n                  Original Group Size*\n                  <Text\n                    className=\"sync__form__input-number\"\n                    field=\"groupSize\"\n                    required\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"50\"\n                    step=\"1\"\n                  />\n                </label>\n\n                <label className=\"sync__form__label\">\n                  Single (Title song){' '}\n                  <Checkbox className=\"sync__form__checkbox\" field=\"single\" />\n                </label>\n\n                <label className=\"sync__form__label\">\n                  Private{' '}\n                  <Checkbox className=\"sync__form__checkbox\" field=\"private\" />\n                </label>\n              </div>\n\n              <button\n                className=\"btn btn-block\"\n                onClick={() =>\n                  this.props.handleFormInfo(\n                    formState,\n                    this.state.originalArtist\n                  )\n                }\n              >\n                Unlock Next Step\n              </button>\n            </div>\n          </Fragment>\n        )}\n      </Form>\n    );\n  }\n}\n\nSyncStep2Info.propTypes = {\n  artistsTypeahead: PropTypes.array.isRequired,\n  handleFormInfo: PropTypes.func.isRequired,\n};\n\nexport default SyncStep2Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst SyncStep3Lyrics = ({\n  handleLyricsEdit,\n  lockLyrics,\n  lyrics,\n  prepareLines,\n}) => {\n  const insertBrackers = () => {\n    const el = document.getElementById('lyrics-editor');\n    const newEl = utils.insertAtCursor(el, ' [] ');\n    handleLyricsEdit(newEl);\n  };\n\n  return (\n    <div className=\"sync__step sync__step--1\">\n      <div className=\"sync__lyrics__controls\">\n        <button className=\"btn btn-50\" onClick={() => prepareLines(true)}>\n          Prepare Lines *\n        </button>{' '}\n        <button className=\"btn btn-50\" onClick={insertBrackers}>\n          Add []\n        </button>\n      </div>\n      <textarea\n        id=\"lyrics-editor\"\n        className=\"sync__lyrics__textarea\"\n        onChange={e => handleLyricsEdit(e)}\n        placeholder=\"Add Lyrics here and press Prepare Lines\"\n        value={lyrics || ''}\n      />\n      <p>\n        <small>\n          * Prepare Lines adds square brackets before each line erasing any\n          numbered id previously created. If you are editing, this will erase\n          any previously linked pill.\n        </small>\n      </p>\n      <button className=\"btn btn-block\" onClick={() => lockLyrics()}>\n        Lock Lyrics &amp; Next Step\n      </button>\n    </div>\n  );\n};\n\nSyncStep3Lyrics.propTypes = {\n  handleLyricsEdit: PropTypes.func.isRequired,\n  lockLyrics: PropTypes.func.isRequired,\n  lyrics: PropTypes.string.isRequired,\n  prepareLines: PropTypes.func.isRequired,\n};\n\nexport default SyncStep3Lyrics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nclass SyncStep4Buttons extends Component {\n  componentDidMount() {\n    if (this.props.location.pathname === '/admin/sync') {\n      window.addEventListener('keydown', event =>\n        this.props.handleSyncKeydown(event, this.props.player)\n      );\n      window.addEventListener('keyup', event =>\n        this.props.handleSyncKeyup(event, this.props.player)\n      );\n    }\n  }\n\n  render() {\n    const boxes = [\n      { color: '1', name: 'Vocal', boxId: '1' },\n      { color: '8', name: 'Sub', boxId: '2' },\n      { color: '12', name: 'Rap', boxId: '3' },\n      { color: '20', name: 'AdLibs', boxId: '4' },\n      { color: '26', name: 'All', boxId: '5' },\n    ];\n\n    const pillColors = {\n      1: '1',\n      2: '8',\n      3: '12',\n      4: '20',\n      5: '26',\n    };\n\n    return (\n      <div className=\"sync__step sync__step--4b\">\n        <p>\n          You can only record distributions when the video is playing, so hit\n          play!\n        </p>\n        <div className=\"sync__distribution__buttons\">\n          {boxes.map((box, index) => (\n            <button\n              key={box.name}\n              className={`box box-25 background-color-${box.color}`}\n              onMouseDown={() =>\n                this.props.handleSyncBoxMouseDown(box.boxId, this.props.player)\n              }\n              onMouseUp={() =>\n                this.props.handleSyncBoxMouseUp(\n                  box.boxId,\n                  this.props.player,\n                  box.color\n                )\n              }\n            >\n              <span className=\"key\">{index + 1}</span>\n              <span className=\"member-name\">{box.name}</span>\n            </button>\n          ))}\n        </div>\n        <div className=\"sync__distribution__pills\">\n          <h3>\n            Log\n            <span\n              role=\"button\"\n              tabIndex={0}\n              className=\"sync__log-trash\"\n              onClick={() => this.props.deleteSyncPill()}\n            >\n              <Icon type=\"trash\" size=\"24\" inline />\n            </span>\n          </h3>\n          <p>\n            When you have enough pills in the log, you can connect them with the\n            lyrics. You will need a pill for each unconnected plug in the\n            lyrics.\n          </p>\n          <div className=\"sync__log\">\n            {Object.keys(this.props.pills).map(key => {\n              const item = this.props.pills[key];\n              const isActive =\n                +this.props.activePill === +item.pillId ? 'active' : '';\n\n              return (\n                <span\n                  key={item.pillId}\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`background-color-${\n                    pillColors[item.key]\n                  } sync__log__pill sync__log__pill--${isActive}`}\n                  onClick={() => this.props.connectSyncPill(item.pillId)}\n                >\n                  <Icon\n                    type={item.link ? 'plug-connected' : 'plug'}\n                    size=\"12\"\n                    inline\n                  />\n                  <span className=\"sync__log__num\">\n                    :{item.timestamp.toFixed(2)}\n                  </span>\n                  <span className=\"sync__log__num\">\n                    :{item.duration.toFixed(2)}\n                  </span>\n                </span>\n              );\n            })}\n          </div>\n          <div className=\"sync__log__controls\">\n            <button className=\"btn btn-50\" onClick={this.props.resetPillLinks}>\n              Reset Links\n            </button>\n            <button\n              className={`btn btn-50 sync__sequence--${\n                this.props.linkSequenceMode\n              }`}\n              onClick={this.props.linkPillsSequence}\n            >\n              Link in Sequence\n            </button>\n          </div>\n          <p className=\"sync__log__stats\">\n            <span>Pills: {this.props.stats.pills} </span>\n            <span>Lines: {this.props.stats.lines} </span>\n            <span>\n              Linked:{' '}\n              {Math.round(\n                (100 * this.props.stats.linked) / this.props.stats.lines\n              )}%{' '}\n            </span>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nSyncStep4Buttons.propTypes = {\n  activePill: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  connectSyncPill: PropTypes.func.isRequired,\n  deleteSyncPill: PropTypes.func.isRequired,\n  handleSyncBoxMouseDown: PropTypes.func.isRequired,\n  handleSyncBoxMouseUp: PropTypes.func.isRequired,\n  handleSyncKeydown: PropTypes.func.isRequired,\n  handleSyncKeyup: PropTypes.func.isRequired,\n  linkPillsSequence: PropTypes.func.isRequired,\n  linkSequenceMode: PropTypes.bool.isRequired,\n  location: PropTypes.object.isRequired,\n  pills: PropTypes.object.isRequired,\n  player: PropTypes.any,\n  resetPillLinks: PropTypes.func.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nSyncStep4Buttons.defaultProps = {\n  activePill: null,\n  player: null,\n};\n\nexport default SyncStep4Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nconst ICON_COLOR_CODE_HASH = {\n  '1': 'red',\n  '8': 'yellow',\n  '12': 'green',\n  '20': 'blue',\n  '26': 'pink',\n};\n\nconst SyncStep4Distributions = ({\n  activeLine,\n  connectSyncLine,\n  distributionLines,\n  isDistributionComplete,\n  unlockSpecificStep,\n  unlockNextStep,\n}) => (\n  <div className=\"sync__step sync__step--4\">\n    <p>\n      This step begins in the left side of this page. You will create\n      syncronizations, then link the pills with each plug in the lyrics here.\n    </p>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(3)}>\n      <Icon type=\"back-arrow\" inline /> Go Back To Lyrics\n    </button>\n    <section className=\"sync__distribution__lyrics\">\n      {distributionLines.map((line, index) => {\n        const key = `line-${index}`;\n        return line.length > 0 ? (\n          <div className=\"sync__distribution__line\" key={key}>\n            {line.map((part, partIndex) => {\n              const partKey = `${key}-${partIndex}`;\n              const isActive = +activeLine === +part.id ? 'active' : '';\n              return (\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`sync__distribution__line--part sync__distribution__line--part-${isActive}`}\n                  key={partKey}\n                  onClick={() => connectSyncLine(part.id)}\n                >\n                  <span className=\"sync__distribution__line--icon\">\n                    <Icon\n                      type={part.link ? 'plug-connected' : 'plug-available'}\n                      size=\"12\"\n                      color={\n                        part.color ? ICON_COLOR_CODE_HASH[part.color] : 'gray'\n                      }\n                    />\n                  </span>\n                  <span className=\"sync__distribution__line--content\">\n                    {part.content}\n                  </span>\n                </span>\n              );\n            })}\n          </div>\n        ) : (\n          <div className=\"sync__distribution__line\" key={key}>\n            &nbsp;\n          </div>\n        );\n      })}\n    </section>\n    <button\n      className=\"btn btn-block\"\n      disabled={!isDistributionComplete}\n      onClick={() => unlockNextStep()}\n    >\n      Next Step\n    </button>\n  </div>\n);\n\nSyncStep4Distributions.propTypes = {\n  activeLine: PropTypes.object,\n  connectSyncLine: PropTypes.func.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  isDistributionComplete: PropTypes.bool,\n  unlockSpecificStep: PropTypes.func.isRequired,\n  unlockNextStep: PropTypes.func.isRequired,\n};\n\nSyncStep4Distributions.defaultProps = {\n  activeLine: null,\n  isDistributionComplete: false,\n};\n\nexport default SyncStep4Distributions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst linesOn = {};\n\nconst SyncStep5Verify = ({ currentTime, distributionLines, timestamps }) => {\n  const timestampsList = Object.keys(timestamps);\n  for (let i = 0; i < timestampsList.length; i++) {\n    const key = timestampsList[i];\n\n    // If current time is smaller than the key, stop loop;\n    if (currentTime < key) {\n      i = timestampsList.length;\n    } else if (currentTime >= key) {\n      const tsArray = timestamps[key];\n      tsArray.forEach(tsObj => {\n        if (tsObj.endTime < currentTime) {\n          linesOn[tsObj.partId.substring(5)] = false;\n        } else {\n          linesOn[tsObj.partId.substring(5)] = true;\n        }\n      });\n    }\n  }\n\n  return (\n    <div className=\"sync__step sync__step--5\">\n      <div className=\"sync__distribution__lyrics\">\n        {distributionLines.map((line, index) => {\n          const key = `line-${index}`;\n          return line.length > 0 ? (\n            <div className=\"sync-lyrics-done__line\" key={key}>\n              {line.map((part, partIndex) => {\n                const partKey = `${key}-${partIndex}`;\n                const isActive = linesOn[part.id]\n                  ? 'sync__distribution__line--part-active'\n                  : '';\n                return (\n                  <span\n                    className={`sync__distribution__line--part ${isActive}`}\n                    key={partKey}\n                  >\n                    <span className=\"sync__distribution__line--content\">\n                      {part.content}\n                    </span>\n                  </span>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"sync__distribution__line\" key={key}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nSyncStep5Verify.propTypes = {\n  currentTime: PropTypes.number.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  timestamps: PropTypes.object.isRequired,\n};\n\nSyncStep5Verify.defaultProps = {};\n\nexport default SyncStep5Verify;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon, LoadingWrapper } from '../../../common';\n// Import constants\nimport enums from '../../../../utils/readable-enums';\n\nconst SyncStep5Save = ({ info, pending, saveSync, unlockSpecificStep }) => (\n  <div className=\"sync__step sync__step--5\">\n    <h3>Info</h3>\n    <ul className=\"sync__verify__info\">\n      <li className=\"sync__verify__info-item\">Title: {info.title}</li>\n      <li className=\"sync__verify__info-item\">Artist: {info.originalArtist}</li>\n      <li className=\"sync__verify__info-item\">\n        ArtistId: {info.artistId ? info.artistId : 'Unavailable'}\n      </li>\n      <li className=\"sync__verify__info-item\">\n        Album: {info.album ? info.album : 'Unknown'}\n      </li>\n      <li className=\"sync__verify__info-item\">\n        Single: {info.single ? 'Yes' : 'No'}\n      </li>\n      <li className=\"sync__verify__info-item\">Group Size: {info.groupSize}</li>\n      <li className=\"sync__verify__info-item\">\n        Group Gender: {enums.GENDERS[info.gender]}\n      </li>\n      <li className=\"sync__verify__info-item\">Video Id: {info.videoId}</li>\n      <li className=\"sync__verify__info-item\">\n        Private: {info.private ? 'Yes' : 'No'}\n      </li>\n    </ul>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(2)}>\n      <Icon type=\"back-arrow\" inline /> Info is wrong. Let me fix it!\n    </button>\n    <p>\n      Play the video and see your distribution in action to see if anything is\n      wrong.\n    </p>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(3)}>\n      <Icon type=\"back-arrow\" inline /> Lyrics or distribution are wrong. Let me\n      fix it!\n    </button>\n    <p>\n      After everything is good. You can save by clicking on the button below:\n    </p>\n\n    <button className=\"btn btn-block\" onClick={() => saveSync()}>\n      <LoadingWrapper pending={pending} size=\"tiny\">\n        <Icon type=\"save\" color=\"red\" inline /> Save\n      </LoadingWrapper>\n    </button>\n  </div>\n);\n\nSyncStep5Save.propTypes = {\n  info: PropTypes.object.isRequired,\n  pending: PropTypes.bool,\n  saveSync: PropTypes.func.isRequired,\n  unlockSpecificStep: PropTypes.func.isRequired,\n};\n\nSyncStep5Save.defaultProps = {\n  pending: false,\n};\n\nexport default SyncStep5Save;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport SyncStep1VideoId from './SyncStep1VideoId';\nimport SyncStep2Info from './SyncStep2Info';\nimport SyncStep3Lyrics from './SyncStep3Lyrics';\nimport SyncStep4Buttons from './SyncStep4Buttons';\nimport SyncStep4Distributions from './SyncStep4Distribution';\nimport SyncStep5Verify from './SyncStep5Verify';\nimport SyncStep5Save from './SyncStep5Save';\n// Import common components\nimport {\n  Collapsible,\n  Loading,\n  RequirementWrapper,\n  Icon,\n} from '../../../common';\n\nlet loadYT;\nlet player;\nlet animationInterval;\n\nclass Sync extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 0,\n      currentTime: 0,\n    };\n\n    this.loadYoutubeVideo = this.loadYoutubeVideo.bind(this);\n    this.onPlayerStateChange = this.onPlayerStateChange.bind(this);\n    this.setHeight = this.setHeight.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.db.artists.length < 10) {\n      this.props.loadArtists();\n    }\n  }\n\n  componentDidUpdate() {\n    // Determine player height\n    if (!this.state.height && document.getElementById('video-container')) {\n      this.setHeight();\n    }\n  }\n\n  onPlayerStateChange(e) {\n    // If video is playing\n    if (e.data === 1 && this.props.sync.step === 5) {\n      // Lyric Review Animation Interval\n      animationInterval = setInterval(() => {\n        const currentTime = Math.round(player.getCurrentTime());\n        this.setState(() => ({ currentTime }));\n      }, 500);\n    } else {\n      // Kill interval\n      clearInterval(animationInterval);\n    }\n  }\n\n  setHeight() {\n    const width = document.getElementById('video-container').clientWidth;\n    const height = (9 * width) / 16;\n    this.setState(() => ({ width, height }));\n  }\n\n  loadYoutubeVideo() {\n    if (!loadYT && this.props.sync.videoId) {\n      loadYT = new Promise(resolve => {\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => resolve(window.YT);\n      });\n\n      loadYT.then(YT => {\n        player = new YT.Player(this.youtubePlayerAnchor, {\n          height: this.state.height || 390,\n          width: this.state.width || 640,\n          videoId: this.props.sync.videoId,\n          events: {\n            onStateChange: e => this.onPlayerStateChange(e),\n          },\n        });\n        this.props.unlockNextStep();\n      });\n    }\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { artistsTypeahead },\n      sync: {\n        activeLine,\n        activePill,\n        distributionLines,\n        info,\n        isDistributionComplete,\n        linkSequenceMode,\n        lyrics,\n        pills,\n        step,\n        steps,\n        stats,\n        timestamps,\n        videoId,\n      },\n      connectSyncLine,\n      connectSyncPill,\n      deleteSyncPill,\n      handleFormInfo,\n      handleLyricsEdit,\n      handleSyncBoxMouseDown,\n      handleSyncBoxMouseUp,\n      handleSyncKeydown,\n      handleSyncKeyup,\n      handleResetSync,\n      handleVideoId,\n      linkPillsSequence,\n      location,\n      lockLyrics,\n      prepareLines,\n      resetPillLinks,\n      saveSync,\n      unlockNextStep,\n      unlockSpecificStep,\n    } = this.props;\n\n    if (pending.REQUEST_ARTISTS) {\n      return <Loading message=\"Preparing Sync...\" />;\n    }\n\n    // If save is in progress\n    if (step === 6) {\n      return (\n        <main className=\"container container--sync\">\n          <h1>Manage</h1>\n          <div className=\"manage-section--manage-success\">\n            <Icon type=\"check\" color=\"green\" size={96} />\n            <p>Song Successfully Created</p>\n            <button className=\"btn\" onClick={handleResetSync}>\n              Create New Song Distribution\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    return (\n      <RequirementWrapper requirements={['admin']}>\n        <main className=\"container container--sync\">\n          <h1>Sync</h1>\n          <section className=\"sync__container\">\n            <div className=\"sync__group sync__group--left\">\n              <section\n                className=\"sync__video\"\n                id=\"video-container\"\n                ref={r => {\n                  this.youtubePlayerAnchor = r;\n                }}\n              >\n                <Icon type=\"youtube\" color=\"white\" size=\"72\" />\n              </section>\n              <Collapsible\n                title=\"4. Distribution Buttons\"\n                locked={steps[4].locked}\n                expanded={steps[4].expanded}\n                collapsed={!steps[4].expanded}\n                synced\n              >\n                <SyncStep4Buttons\n                  activePill={activePill}\n                  connectSyncPill={connectSyncPill}\n                  deleteSyncPill={deleteSyncPill}\n                  handleSyncBoxMouseDown={handleSyncBoxMouseDown}\n                  handleSyncBoxMouseUp={handleSyncBoxMouseUp}\n                  handleSyncKeydown={handleSyncKeydown}\n                  handleSyncKeyup={handleSyncKeyup}\n                  linkPillsSequence={linkPillsSequence}\n                  linkSequenceMode={linkSequenceMode}\n                  location={location}\n                  pills={pills}\n                  player={player}\n                  resetPillLinks={resetPillLinks}\n                  stats={stats}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"5. Review &amp; Save\"\n                locked={steps[5].locked}\n                expanded={steps[5].expanded}\n                collapsed={!steps[5].expanded}\n                synced\n              >\n                <SyncStep5Save\n                  info={info}\n                  pending={pending.SEND_SONG}\n                  saveSync={saveSync}\n                  unlockSpecificStep={unlockSpecificStep}\n                />\n              </Collapsible>\n            </div>\n            <div className=\"sync__group sync__group--right\">\n              <Collapsible\n                title=\"1. Video Id\"\n                locked={steps[1].locked}\n                expanded={steps[1].expanded}\n                collapsed={!steps[1].expanded}\n                synced\n              >\n                <SyncStep1VideoId\n                  handleVideoId={handleVideoId}\n                  loadYoutubeVideo={this.loadYoutubeVideo}\n                  videoId={videoId}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"2. Info\"\n                locked={steps[2].locked}\n                expanded={steps[2].expanded}\n                collapsed={!steps[2].expanded}\n                synced\n              >\n                <SyncStep2Info\n                  artistsTypeahead={artistsTypeahead}\n                  handleFormInfo={handleFormInfo}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"3. Lyrics\"\n                locked={steps[3].locked}\n                expanded={steps[3].expanded}\n                collapsed={!steps[3].expanded}\n                synced\n              >\n                <SyncStep3Lyrics\n                  handleLyricsEdit={handleLyricsEdit}\n                  lockLyrics={lockLyrics}\n                  lyrics={lyrics}\n                  prepareLines={prepareLines}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"4. Distribution\"\n                locked={steps[4].locked}\n                expanded={steps[4].expanded}\n                collapsed={!steps[4].expanded}\n                synced\n              >\n                <SyncStep4Distributions\n                  activeLine={activeLine}\n                  connectSyncLine={connectSyncLine}\n                  distributionLines={distributionLines}\n                  isDistributionComplete={isDistributionComplete}\n                  unlockSpecificStep={unlockSpecificStep}\n                  unlockNextStep={unlockNextStep}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"5. Verify\"\n                locked={steps[5].locked}\n                expanded={steps[5].expanded}\n                collapsed={!steps[5].expanded}\n                synced\n              >\n                <SyncStep5Verify\n                  currentTime={this.state.currentTime}\n                  distributionLines={distributionLines}\n                  timestamps={timestamps}\n                />\n              </Collapsible>\n            </div>\n          </section>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nSync.propTypes = {\n  db: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  connectSyncLine: PropTypes.func.isRequired,\n  connectSyncPill: PropTypes.func.isRequired,\n  deleteSyncPill: PropTypes.func.isRequired,\n  handleFormInfo: PropTypes.func.isRequired,\n  handleLyricsEdit: PropTypes.func.isRequired,\n  handleSyncBoxMouseDown: PropTypes.func.isRequired,\n  handleSyncBoxMouseUp: PropTypes.func.isRequired,\n  handleSyncKeydown: PropTypes.func.isRequired,\n  handleSyncKeyup: PropTypes.func.isRequired,\n  handleResetSync: PropTypes.func.isRequired,\n  handleVideoId: PropTypes.func.isRequired,\n  linkPillsSequence: PropTypes.func.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  lockLyrics: PropTypes.func.isRequired,\n  prepareLines: PropTypes.func.isRequired,\n  resetPillLinks: PropTypes.func.isRequired,\n  saveSync: PropTypes.func.isRequired,\n  sync: PropTypes.object.isRequired,\n  unlockNextStep: PropTypes.func.isRequired,\n  unlockSpecificStep: PropTypes.func.isRequired,\n};\n\nexport default Sync;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Sync from '../components/Sync';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { dbOperations } from '../../../../reducers/db';\nimport { syncOperations } from '../../../../reducers/sync';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  db: state.db,\n  sync: state.sync,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...dbOperations,\n  ...syncOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Sync)\n);\n","import SyncContainer from './containers/SyncContainer';\n\nexport default SyncContainer;\n","import React, { Component } from 'react';\n\n// Import common components\nimport { RequirementWrapper } from '../../../common';\n\nclass Temp extends Component {\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  render() {\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--temp\">\n          <h1>Temp Page</h1>\n          <div className=\"temp-box temp-1\" />\n          <div className=\"temp-box temp-2\" />\n          <div className=\"temp-box temp-3\" />\n          <div className=\"temp-box temp-4\" />\n          <div className=\"temp-box temp-5\" />\n          <div className=\"temp-box temp-6\" />\n          <div className=\"temp-box temp-7\" />\n          <div className=\"temp-box temp-8\" />\n          <div className=\"temp-box temp-9\" />\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nTemp.propTypes = {};\n\nTemp.defaultProps = {};\n\nexport default Temp;\n","import TempContainer from './containers/TempContainer';\n\nexport default TempContainer;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Temp from '../components/Temp';\n\nconst mapStateToProps = state => ({\n  ...state,\n});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Temp)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst ColorSheet = ({ colors }) => {\n  colors = Object.values(colors);\n  return (\n    <main className=\"container\">\n      <ul className=\"color-palette\">\n        {colors &&\n          colors.map(colorObj => (\n            <li\n              key={colorObj.id}\n              className={`palette background-color-${colorObj.id}`}\n            >\n              {colorObj.id}\n              <br />\n              {utils.humanize(colorObj.name, 'Capital')}\n              <br />\n              {colorObj.count} uses\n            </li>\n          ))}\n      </ul>\n    </main>\n  );\n};\n\nColorSheet.propTypes = {\n  colors: PropTypes.object,\n};\n\nColorSheet.defaultProps = {\n  colors: {},\n};\n\nexport default ColorSheet;\n","import React from 'react';\n\n// Import common components\nimport {\n  FavoriteIcon,\n  Icon,\n  LoadingIcon,\n  Switch,\n  Tabs,\n  Typeahead,\n  Collapsible,\n} from '../../../common';\n\nconst NOOP = () => {};\n\nconst ComponentSheet = () => (\n  <main className=\"container\">\n    <ul className=\"component-list\">\n      <li className=\"component-list__item\">\n        <h3 className=\"component-list__name\">Favorite Icon</h3>\n        <div className=\"component-list__example\">\n          <FavoriteIcon action={NOOP} id=\"1\" />\n          <FavoriteIcon action={NOOP} id=\"2\" state />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Heart shaped favorite icon</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: onClick function\n            </li>\n            <li className=\"component-list__argument\">\n              id: value the action function calls\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              className: additional classes (default: &#39;&#39;)\n            </li>\n            <li className=\"component-list__argument\">\n              size: string or number (default: 12)\n            </li>\n            <li className=\"component-list__argument\">\n              state: boolean that determines if heart is red or gray (default:\n              false)\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Icon</h3>\n        <div className=\"component-list__example\">\n          <Icon size={36} />\n        </div>\n        <div className=\"component-list__description\">\n          <p>See Icon tab for list of icons</p>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              type: the name of the icon (default: default)\n            </li>\n            <li className=\"component-list__argument\">\n              color: one of the default colors (default: default)\n            </li>\n            <li className=\"component-list__argument\">\n              size: string or number (default: 12)\n            </li>\n            <li className=\"component-list__argument\">\n              inline: boolean that determines if icon will be inline with text\n              (default: false)\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Loading Icon</h3>\n        <div className=\"component-list__example\">\n          <LoadingIcon />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Colored loading icon</p>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              size: tiny, small, medium (Default), large\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Switch</h3>\n        <div className=\"component-list__example\">\n          <Switch action={NOOP} /> <Switch action={NOOP} checked />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Switch button to indicate if a feature is on</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: function to be exectued when switch is triggers\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              labels: object with left and right values\n            </li>\n            <li className=\"component-list__argument\">\n              checked: boolean that determines if switch is on\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Tabs</h3>\n        <div className=\"component-list__example\">\n          <Tabs action={NOOP} tabs={['Tab 1', 'Tab 2', 'Tab 3']} active=\"Tab 1\">\n            Content goes here as a component child\n          </Tabs>\n        </div>\n\n        <div className=\"component-list__description\">\n          <p>Wrapper component with selectable tabs</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              tabs: array of tabs strings\n            </li>\n            <li className=\"component-list__argument\">\n              action: the function triggered when a tab is clicked\n            </li>\n            <li className=\"component-list__argument\">\n              children: the content to be displayed by the tab content div\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              active: what tab is active (default: the first tab)\n            </li>\n            <li className=\"component-list__argument\">\n              icons: object with a contition key and an icon component value\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Typeahead</h3>\n        <div className=\"component-list__example\">\n          <Typeahead\n            action={NOOP}\n            name=\"example\"\n            suggestions={['Avocado', 'Banana', 'Cranberry']}\n          />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Input field with autocomplete datalist option</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: function trigged when input is selected\n            </li>\n            <li className=\"component-list__argument\">\n              name: name of the datalist/input\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              className: additional classes (default: &#39;&#39;)\n            </li>\n            <li className=\"component-list__argument\">\n              placeholder: input field placeholder (default: Searching...)\n            </li>\n            <li className=\"component-list__argument\">\n              suggestions: list of suggestions to autocomplete in the datalist\n              (default: [])\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Collapsible</h3>\n        <div className=\"component-list__example\">\n          <Collapsible title=\"Locked Collapsible\" locked>\n            Content\n          </Collapsible>\n          <Collapsible title=\"Locked Expanded Collapsible\" locked expanded>\n            Content\n          </Collapsible>\n          <Collapsible title=\"Collapsed Collapsible\">Content</Collapsible>\n          <Collapsible title=\"Expanded Collapsible\" expanded>\n            Content\n          </Collapsible>\n        </div>\n        <div className=\"component-list__description\">\n          <p>Collapsible panel with children content</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              title: the header of the panel\n            </li>\n            <li className=\"component-list__argument\">\n              children elements to be rendered when expanded\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              collapsed: makes panel collapse (default)\n            </li>\n            <li className=\"component-list__argument\">\n              expanded: makes panel expand\n            </li>\n            <li className=\"component-list__argument\">\n              locked: locks panel action keeping it expanded or collapsed\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>New Component</h3>\n        <div className=\"component-list__example\">\n          {/* Component goes here */}\n        </div>\n        <div className=\"component-list__description\">\n          <p>Description</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n        </div>\n      </li>\n    </ul>\n  </main>\n);\n\nexport default ComponentSheet;\n","import React from 'react';\n\n// Import common components\nimport { Icon } from '../../../common';\n// Import utility functions\nimport ICONS from '../../../../utils/icons';\n\nconst IconSheet = () => (\n  <main className=\"container\">\n    <ul className=\"icon-list\">\n      {Object.keys(ICONS).map(name => (\n        <li key={name} className=\"icon-list__item\">\n          <span className=\"icon-list__name\">{name.toLowerCase()}</span>\n          <Icon type={name} size=\"36\" />\n        </li>\n      ))}\n    </ul>\n  </main>\n);\n\nexport default IconSheet;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport ColorSheet from './ColorSheet';\nimport ComponentSheet from './ComponentsSheet';\nimport IconSheet from './IconSheet';\n// Import common components\nimport { RequirementWrapper, Tabs, LoadingWrapper } from '../../../common';\n\nclass UIReference extends Component {\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.loadColors();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.auth.isAuthenticated && this.props.auth.isAuthenticated) {\n      this.props.loadColors();\n    }\n  }\n\n  render() {\n    const {\n      admin: { uiReferenceTab },\n      app,\n      db: { colors },\n    } = this.props;\n\n    const TABS = ['Colors', 'Components', 'Icons'];\n\n    let tabContent = null;\n    switch (uiReferenceTab) {\n      case 'Components':\n        tabContent = <ComponentSheet />;\n        break;\n      case 'Icons':\n        tabContent = <IconSheet />;\n        break;\n      default:\n        tabContent = <ColorSheet colors={colors} />;\n    }\n\n    return (\n      <RequirementWrapper requirements={['admin']}>\n        <main className=\"container container--artists\">\n          <h1>UI Reference</h1>\n          <Tabs\n            tabs={TABS}\n            action={this.props.switchUIReferenceTab}\n            active={uiReferenceTab || 'Colors'}\n          >\n            <LoadingWrapper pending={app.pending.REQUEST_COLORS}>\n              {tabContent}\n            </LoadingWrapper>\n          </Tabs>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nUIReference.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadColors: PropTypes.func.isRequired,\n  switchUIReferenceTab: PropTypes.func.isRequired,\n};\n\nUIReference.defaultProps = {};\n\nexport default UIReference;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport UIReference from '../components/UIReference';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UIReference)\n);\n","import UIReferenceContainer from './containers/UIReferenceContainer';\n\nexport default UIReferenceContainer;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst User = () => (\n  <main className=\"container container--user\">\n    <h1>My Favorite Artists</h1>\n    <h1>My Distributions</h1>\n    <h1>My Custom Units</h1>\n    <h1>My Created Artists</h1>\n    <h1>My Created Songs</h1>\n  </main>\n);\n\nUser.propTypes = {};\n\nUser.defaultProps = {};\n\nexport default User;\n","import UserContainer from './containers/UserContainer';\n\nexport default UserContainer;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport User from '../components/User';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(User)\n);\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\n// Global Imports (siblings of any page)\nimport Footer from './app/global/footer';\nimport Header from './app/global/header';\nimport ErrorModal from './app/global/error-modal';\n\n// Pages Imports\nimport AdminActions from './app/pages/admin-actions';\nimport Artists from './app/pages/artists';\nimport Artist from './app/pages/artist';\nimport Distribute from './app/pages/distribute';\nimport Home from './app/pages/home';\nimport Idols from './app/pages/idols';\nimport Lab from './app/pages/lab';\nimport LearnMore from './app/pages/learn-more';\nimport Lyrics from './app/pages/lyrics';\nimport Manage from './app/pages/manage';\nimport Songs from './app/pages/songs';\nimport Sync from './app/pages/sync';\nimport Temp from './app/pages/temp';\nimport UIReference from './app/pages/ui-reference';\nimport User from './app/pages/user';\n\n// Styles Import\nimport './stylesheets/index.css';\n\nconst routes = (\n  <Router>\n    <div className=\"app\">\n      <Header />\n      <ErrorModal />\n      <Route path=\"/artists/:artistId/:unitId\" component={Artist} />\n      <Route exact path=\"/artists/:artistId\" component={Artist} />\n      <Route exact path=\"/artists\" component={Artists} />\n      <Route path=\"/distribute\" component={Distribute} />\n      <Route path=\"/idols\" component={Idols} />\n      <Route path=\"/lab\" component={Lab} />\n      <Route path=\"/learn-more\" component={LearnMore} />\n      <Route path=\"/lyrics\" component={Lyrics} />\n      <Route path=\"/songs\" component={Songs} />\n\n      <Route path=\"/admin/actions\" component={AdminActions} />\n      <Route path=\"/admin/manage\" component={Manage} />\n      <Route path=\"/admin/sync\" component={Sync} />\n      <Route path=\"/admin/ui-reference\" component={UIReference} />\n      <Route path=\"/admin/temp\" component={Temp} />\n\n      <Route path=\"/user\" component={User} />\n\n      <Route exact path=\"/\" component={Home} />\n      <Footer />\n    </div>\n  </Router>\n);\n\nexport default routes;\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ReduxToastr from 'react-redux-toastr';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport store from './store';\nimport routes from './routes';\n\nimport './stylesheets/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Fragment>\n      {routes}\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates\n        position=\"bottom-center\"\n        transitionIn=\"bounceIn\"\n        transitionOut=\"bounceOut\"\n        progressBar\n      />\n    </Fragment>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/loading.d6605f0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-lock.4e4f8dbd.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-plus.5cbc8658.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-leader.6a295198.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-vocalist.a995fa3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-rapper.269fbdb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-dancer.581fc18e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-vocalist.7c410976.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-rapper.0735854b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-dancer.b38316e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-vocalist.131d4b70.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-dancer.a9fd47b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rapper.cb032f09.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-center.83737fe1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-visual.187fc8b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-maknae.afb2e497.svg\";"],"sourceRoot":""}