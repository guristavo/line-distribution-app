{"version":3,"sources":["images/icon-all.svg","images/icon-none.svg","images/logo-neg.svg","images/bias-placeholder.svg","images/logo.svg","images/user-placeholder.svg","images/logo-alt.svg","registerServiceWorker.js","reducers/app/types.js","reducers/app/reducers.js","reducers/app/actions.js","reducers/app/operations.js","reducers/app/index.js","reducers/admin/types.js","reducers/admin/reducers.js","utils/constants.js","reducers/admin/actions.js","reducers/admin/operations.js","reducers/admin/index.js","reducers/artists/types.js","reducers/artists/reducers.js","reducers/artists/actions.js","reducers/artists/operations.js","reducers/artists/index.js","reducers/auth/types.js","reducers/auth/reducers.js","reducers/auth/actions.js","reducers/auth/operations.js","reducers/auth/index.js","reducers/db/types.js","reducers/db/reducers.js","reducers/db/actions.js","reducers/db/operations.js","reducers/db/index.js","reducers/distribute/types.js","reducers/distribute/reducers.js","reducers/distribute/actions.js","reducers/distribute/operations.js","reducers/distribute/index.js","reducers/sync/types.js","reducers/sync/reducers.js","reducers/sync/actions.js","reducers/sync/operations.js","reducers/sync/index.js","reducers/temp/types.js","reducers/temp/reducers.js","reducers/temp/actions.js","reducers/temp/operations.js","reducers/temp/index.js","reducers/index.js","api/utils.js","api/response.js","api/enums.js","api/serializers.js","api/deserializers.js","api/firebase.js","api/index.js","utils/index.js","sagas/api-saga.js","sagas/status-handling.js","sagas/index.js","store.js","app/common/components/ActiveSongWidget.jsx","app/common/containers/ActiveSongWidgetContainer.js","app/common/components/ActiveUnitWidget.jsx","app/common/containers/ActiveUnitWidgetContainer.js","app/common/components/Collapsible.jsx","app/common/components/ErrorModal.jsx","app/common/containers/ErrorModalContainer.js","app/common/components/FavoriteIcon.jsx","utils/icons.js","app/common/components/Icon.jsx","app/common/components/Loading.jsx","app/common/components/LoadingIcon.jsx","app/common/components/LoadingWrapper.jsx","app/common/components/member/MemberNationalityFlag.jsx","app/common/components/member/MemberPicture.jsx","app/common/components/member/MemberPositions.jsx","app/common/components/MemberCard.jsx","app/common/components/PositionIcon.jsx","app/common/components/RequirementWrapper.jsx","app/common/containers/RequirementWrapperContainer.js","app/common/components/Select.jsx","app/common/components/Switch.jsx","app/common/components/Tabs.jsx","app/common/components/Typeahead.jsx","app/pages/artists/components/ArtistsTable.jsx","app/pages/artists/components/Artists.jsx","app/pages/artists/containers/ArtistsContainer.js","app/pages/artists/index.js","app/pages/artist/components/BiasPicture.jsx","app/pages/artist/components/DistributedSongPreview.jsx","app/pages/artist/components/DistributedSongsTable.jsx","app/pages/artist/components/Units.jsx","app/pages/artist/components/Artist.jsx","app/pages/artist/containers/ArtistContainer.js","app/pages/artist/index.js","app/pages/distribute/components/DistributeConnect.jsx","app/pages/distribute/components/Distribute.jsx","app/pages/distribute/containers/DistributeContainer.js","app/pages/distribute/index.js","app/pages/header/components/Menu.jsx","app/pages/header/components/LoadingBar.jsx","app/pages/header/components/Header.jsx","app/pages/header/containers/HeaderContainer.js","app/pages/header/index.js","app/pages/home/components/Home.jsx","app/pages/home/containers/HomeContainer.js","app/pages/home/index.js","app/pages/idols/components/Idols.jsx","app/pages/idols/containers/IdolsContainer.js","app/pages/idols/index.js","app/pages/lyrics/components/LyricsOutput.jsx","app/pages/lyrics/parser/index.js","app/pages/lyrics/components/Lyrics.jsx","app/pages/lyrics/containers/LyricsContainer.js","app/pages/lyrics/index.js","app/pages/manage/components/ColorReferenceBar.jsx","app/pages/manage/components/ManageArtist.jsx","app/pages/manage/components/ManageUnit.jsx","app/pages/manage/components/ManageMembers.jsx","app/pages/manage/components/Manage.jsx","app/pages/manage/containers/ManageContainer.js","app/pages/manage/index.js","app/pages/songs/components/SongsTable.jsx","app/pages/songs/components/Songs.jsx","app/pages/songs/containers/SongsContainer.js","app/pages/songs/index.js","app/pages/sync/components/SyncStep1VideoId.jsx","app/pages/sync/components/SyncStep2Info.jsx","app/pages/sync/components/SyncStep3Lyrics.jsx","app/pages/sync/components/SyncStep4Buttons.jsx","app/pages/sync/components/SyncStep4Distribution.jsx","app/pages/sync/components/SyncStep5Verify.jsx","app/pages/sync/components/SyncStep5Save.jsx","app/pages/sync/components/Sync.jsx","app/pages/sync/containers/SyncContainer.js","app/pages/sync/index.js","app/pages/ui-reference/components/ColorSheet.jsx","app/pages/ui-reference/components/ComponentsSheet.jsx","app/pages/ui-reference/components/IconSheet.jsx","app/pages/ui-reference/components/UIReference.jsx","app/pages/ui-reference/containers/UIReferenceContainer.js","app/pages/ui-reference/index.js","components/Lab.jsx","containers/LabContainer.js","components/LearnMore.jsx","containers/LearnMoreContainer.js","components/MyArtists.jsx","containers/MyArtistsContainer.js","components/MyDistributions.jsx","containers/MyDistributionsContainer.js","components/Temp.jsx","containers/TempContainer.js","routes.js","index.js","images/loading.svg","images/manage-lock.svg","images/manage-plus.svg","images/icon-leader.svg","images/icon-main-vocalist.svg","images/icon-main-rapper.svg","images/icon-main-dancer.svg","images/icon-lead-vocalist.svg","images/icon-lead-rapper.svg","images/icon-lead-dancer.svg","images/icon-vocalist.svg","images/icon-dancer.svg","images/icon-rapper.svg","images/icon-center.svg","images/icon-visual.svg","images/icon-maknae.svg"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","types","RESET_ERROR","SET_DATABASE_READY","SET_ERROR","SET_ERROR_INLINE","SET_ERROR_MESSAGE","SET_LOADING","SET_PENDING","SET_SUCCESS","SET_SUCCESS_INLINE","SET_SUCCESS_MESSAGE","initialState","databaseReady","errorInline","errorMessage","pending","loading","actions","payload","dispatch","type","operations","init","handleCloseErrorModal","handleSendBugReport","getState","app","body","timestamp","Date","now","content","appReducer","prevState","arguments","length","undefined","action","newState","Object","assign","success","admin_types","SET_COLORS_IN_USE","SET_CREATE_SUCCESS","SET_EDITING_ARTIST","SET_EDITING_MEMBERS","SET_EDITING_UNIT","SET_MANAGE_RESULT","SET_PANELS","SET_UI_REFERENCE_TAB","SET_UNITS_TYPEAHEAD","SET_UNITS_TYPEAHEAD_DICT","colorsInUse","editingArtist","editingMembers","editingUnit","manageResult","panels","artist","unit","members","uiReferenceTab","unitsTypeahead","unitsTypeaheadDict","constants","COLORS","col000001","col000002","col000003","col000004","col000005","col000006","col000007","col000008","col000009","col000010","col000011","col000012","col000013","col000014","col000015","col000016","col000017","col000018","col000019","col000020","col000021","col000022","col000023","col000024","col000025","col000026","col000027","col000028","col000029","col000030","DEFAULT_COLORS","default","black","blue","gray","green","orange","pink","purple","red","teal","white","yellow","FLAGS_LIST","AMERICAN","BRAZILIAN","CANADIAN","CHINESE","JAPANESE","KOREAN","TAIWANESE","THAI","VIETNAMISE","GENDERS","FEMALE","MALE","UNKOWN","GENRES","CPOP","JPOP","KPOP","OTHER","POP","GENRES_DB","C-Pop","J-Pop","K-Pop","Other","Pop","POSITIONS_LIST","POSITIONS_LIST_OBJ","MAIN_VOCALIST","LEAD_VOCALIST","VOCALIST","MAIN_RAPPER","LEAD_RAPPER","RAPPER","MAIN_DANCER","LEAD_DANCER","DANCER","LEADER","CENTER","VISUAL","NATIONALITIES","BRITISH","NATIONALITY_FLAG_URL","PROFILE_PICTURE_URL","SYNC_KEY_LIST","1","2","3","4","5","SYNC_KEY_COLOR_LIST","YOUTUBE_URLS","admin_actions","admin_operations","handleEditArtist","artistId","objectSpread","admin","new","handleEditMember","memberId","formState","toConsumableArray","memberIndex","_","findIndex","m","id","addedMember","push","forEach","member","colorId","lastMember","values","positions","gender","nationality","handleEditUnit","unitId","units","currentUnit","u","handleResyncDB","removeMember","index","resetManage","saveManage","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","artistState","unitState","membersState","missingField","editingArtistState","editingUnitState","editingMembersState","wrap","_context2","prev","next","keys","errors","abrupt","name","genre","debutYear","birthdate","some","otherNames","private","memberIds","memberList","map","createdBy","official","subUnit","averages","distributions","distributions_legacy","memberState","newMember","replace","initials","referenceArtist","key","includes","stop","_x2","_x3","apply","this","switchUIReferenceTab","event","_ref","_callee","_context","target","_x","unlockUnit","unlockMembers","updateManageForm","updateMemberColor","value","updateMemberPositions","adminReducer","SET_SONGS","songs","SET_SONG_SEARCH_QUERY","songSearchQuery","artists_types","SET_ARTIST_LIST","SET_ARTIST_PAGE_TAB","SET_BIAS","SET_SEARCH_QUERY","SET_SELECTED_ARTIST","SET_SELECTED_UNIT","SET_SHOW_FAVORITE_ARTISTS_ONLY","artistList","artistPageTab","bias","searchQuery","selectedArtist","selectedUnit","showFavoriteArtistsOnly","userFavoriteArtists","userLatestArtists","artists_actions","findUnitIndex","artists_operations","getBias","biases","auth","user","artists","concat","loadUserArtists","loadArtist","queryParams","updateSearchQuery","toLowerCase","updateLatestUnits","_x4","showFavoriteArtistsOnlyToggle","switchArtistPageTab","_ref3","_callee3","unitIndex","_context3","parentNode","complete","_x5","_x6","artistsReducer","auth_types","SET_ADMIN","SET_AUTHENTICATED","SET_BIASES","SET_USER","isAuthenticated","isAdmin","auth_actions","auth_operations","login","logout","updateBias","_getState$artists$sel","biasId","currentBias","userId","updateFavoriteArtists","favoriteArtists","updateFavoriteMembers","userFavoriteMembers","favoriteMembers","authReducer","db_types","SET_ARTISTS","SET_ARTISTS_TYPEAHEAD","SET_ARTISTS_TYPEAHEAD_DICT","SET_COLORS","SET_MEMBERS","SET_MEMBERS_TYPEAHEAD","SET_MEMBERS_TYPEAHEAD_DICT","artistsTypeahead","artistsTypeaheadDict","colors","membersTypeahead","membersTypeaheadDict","db_actions","db_operations","loadArtists","loadColors","loadMembers","loadSongs","resetSongSearchQuery","updateSongSearchQuery","dbReducer","distribute_types","RESET_DISTRIBUTE","RESET_DISTRIBUTE_SONG","SET_ACTIVE_MEMBER_PILL","SET_ACTIVE_SONG","SET_ACTIVE_UNIT","SET_DISTRIBUTION_CATEGORY","SET_DISTRIBUTION_LINES","SET_DISTRIBUTION_REMAINDER","SET_RATES","activeMemberPill","activeSong","activeUnit","category","distributionLines","rates","remainder","distribute_actions","calculateRates","total","remaining","max","l","line","part","duration","mId","_rates$mId","slicedToArray","rate","Number","toFixed","Math","round","calculateRemainder","distribute_operations","activateMemberPill","distribute","activateSong","find","db","activateUnit","artistName","handleDistributionCategory","handleSaveDistribution","ratesToSave","relationships","entries","entry","Array","isArray","songId","features","JSON","stringify","linkMemberToPart","found","filter","prepareSong","distributionString","distribution","buildPartData","data","_data$split","split","_data$split2","startTime","endTime","parsedLine","insideBracket","i","char","substring","trim","distributeReducer","sync_types","RESET_SYNC","SET_ACTIVE_LINE","SET_ACTIVE_PILL","SET_ARE_LYRICS_LOCKED","SET_FINAL_LYRICS","SET_INFO","SET_IS_DISTRIBUTION_COMPLETE","SET_LINK_SEQUENCE_MODE","SET_LAST_ID_NUM","SET_LYRICS","SET_PILLS","SET_QUEUE","SET_STEP","SET_STEPS","SET_SYNC_DISTRIBUTION_LINES","SET_SYNC_STATS","SET_TIMESTAMPS","SET_VIDEO_ID","activeLine","activePill","areLyricsLocked","finalLyrics","info","isDistributionComplete","linkSequenceMode","lastIdNum","lyrics","pills","queue","step","steps","locked","expanded","stats","lines","linked","timestamps","videoId","sync_actions","unlockNextStep","sync","cloneDeep","finalizeLyrics","prepareLines","clearBrackets","preparedLyrics","startsWith","join","parseLyricsToObject","lineCount","link","color","setTimeout","enqueueCapture","newPillId","dequeueCapture","pillId","linksBackUp","connect","lineId","collection","searchId","newValue","nullifyLine","nullifyPill","isComplete","item","partId","k","pill","newLines","finalId","timepstamps","bracket","second","size","totalSize","intervalId","sync_operations","connectSyncLine","_getState$sync","connectSyncPill","_getState$sync2","deleteSyncPill","clearInterval","handleFormInfo","originalArtist","album","groupSize","single","title","handleLyricsEdit","e","text","handleResetSync","handleSyncBoxMouseDown","player","getPlayerState","getCurrentTime","handleSyncBoxMouseUp","handleSyncKeydown","handleSyncKeyup","handleVideoId","youtubeLink","youtubeLinkQuery","linkPillsSequence","pillList","findNextPill","nextActive","el","setInterval","lockLyrics","s","idNum","resetPillLinks","saveSync","_getState$sync3","originalArtistId","unlockSpecificStep","num","st","syncReducer","temp_types","SET_TEST_1","SET_TEST_2","SET_TEST_3","SET_TEST_4","SET_TEST_5","test1","test2","test3","test4","test5","temp_actions","temp_operations","testFunction1","testFunction2","testFunction3","testFunction4","testFunction5","tempReducer","rootReducer","combineReducers","temp","toastr","appTypes","adminTypes","artistsTypes","authTypes","dbTypes","distributeTypes","syncTypes","tempTypes","TODAY","ageDict","getNumberFromColorId","makeSixDigit","pad","isNaN","str","toString","wait","ms","Promise","r","j","utils","breadcrumble","path","Error","HttpStatus","UNAUTHORIZED","BAD_REQUEST","urlSplit","fullPath","queryResult","querySplit","subQuery","queryName","queryValue","root","referenceId","subPath","buildArtistQuery","memberNames","buildMemberInitials","floor","toUpperCase","buildSongQuery","calculateAge","birthday","birthdateString","birthDate","ageDate","getTime","abs","getUTCFullYear","ensureGenreEnum","C-POP","J-POP","K-POP","getAlternativeColor","list","random","mergeMembers","unitMembersArr","membersArr","positionsDict","attributes","parseUnitMembers","membersObj","dict","_key$split","_key$split2","memberName","memberPosition","verifyRequirements","uid","fields","missing","field","NewResponse","classCallCheck","statusCode","dataResponse","errorResponse","code","OK","dt","INTERNAL_SERVER_ERROR","message","throwError","serialize","modifiedBy","query","b","count","g","hex","number","parse","age","song","email","latestUnits","latesUnits","session","displayName","photoURL","serializeCollection","object","deserialize","post","reportedBy","photoUrl","put","res","fb","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","googleProvider","GoogleAuthProvider","userSession","onAuthStateChanged","users","fullyLoaded","dbRef","API","_authenticated","_admin","_loaded","_loggedInThisSession","_tries","_uid","print","response","status","authenticated","loaded","resolve","database","dbInfo","emailVerified","get","userRes","NO_CONTENT","setPersistence","Auth","Persistence","LOCAL","signInWithPopup","result","t0","t2","signOut","ok","_context4","warn","syncDB","ref","once","snapshot","val","resyncFunctions","set","throwDBError","route","getFunctions","fetchArtistUnits","fetchArtist","fetchArtists","fetchColor","fetchColors","fetchMember","fetchMembers","fetchSong","fetchSongs","fetchUnitDistributions","fetchUnitMembers","fetchUnit","fetchUser","throwPathError","postFunctions","createArtist","createDistribution","createLogEntry","createMember","createSong","createUnit","createUser","putFunctions","updateArtist","updateDistribution","updateMember","updateSong","updateUnit","updateUserBiases","updateUserFavoriteArtists","updateUserFavoriteMembers","updateUserLatestUnits","updateUser","deleteFunctions","destroyUser","snap","_fetchArtists","_callee13","_context13","_fetchArtist","_callee14","_context14","_x9","_fetchArtistUnits","_callee15","_context15","sent","all","_x10","_fetchColors","_callee16","_context16","_fetchColor","_callee17","_context17","_x11","fetchDistribution","_fetchDistribution","_callee18","_context18","_x12","_fetchMembers","_callee19","_context19","_fetchMember","_callee20","_response$colorId","_context20","_x13","_fetchSongs","_callee21","_context21","_fetchSong","_callee22","_context22","_x14","_fetchUnit","_callee23","_context23","_x15","_fetchUnitDistributions","_callee24","unitDistributionsPromises","unitDistributions","unitSongsPromises","unitSongs","_context24","distributionId","distributionObject","_x16","_fetchUnitMembers","_callee25","membersResponse","promiseResponse","_context25","_x17","_fetchUser","_callee26","_context26","_x18","_createArtist","_callee27","_context27","update","_x19","_x20","createColor","_createColor","_callee28","_context28","_x21","_createDistribution","_callee29","_context29","_x22","_x23","_createLogEntry","_callee30","subRoute","_context30","_x24","_x25","_x26","_createMember","_callee31","_context31","_x27","_x28","_createSong","_callee32","_context32","_x29","_x30","_createUnit","_callee33","_context33","_x31","_x32","_createUser","_callee34","_context34","_x33","_x34","_updateArtist","_callee35","_context35","_x35","_x36","_x37","_updateDistribution","_callee36","_context36","_x38","_x39","_x40","_updateMember","_callee37","_context37","_x41","_x42","_x43","_updateSong","_callee38","_context38","_x44","_x45","_x46","_updateUnit","_callee39","_context39","_x47","_x48","_x49","_updateUser","_callee40","_context40","_x50","_x51","_updateUserBiases","_callee41","_context41","_x52","_x53","_updateUserFavoriteArtists","_callee42","_context42","_x54","_x55","_updateUserFavoriteMembers","_callee43","_context43","_x56","_x57","_updateUserLatestUnits","_callee44","_context44","_x58","_x59","_destroyUser","_callee45","_context45","remove","defineProperty","_x60","_x61","resetAristsArrays","resetMemberPositions","parseUnits","parseMembers","parseArtists","parseDistributions","membersPositions","parsePositions","Set","sort","unitDict","subUnitDict","unitSameYear","reverse","year","subUnits","memberDict","unitMembers","position","api","spiralCase","string","src_utils","bem","block","modifiers","element","extras","hasBlock","hasModifiers","hasElement","hasExtras","classes","camelCase","word","capitalizeWord","separator","charAt","slice","ensureColorUniqueness","membersList","refactoredMembers","altColorId","altColor","oldColor","getColorNumber","getMostImportantPosition","POSITIONS_IMPORTANT_ORDER","humanize","option","captalizeFirstLetter","insertAtCursor","valueToInsert","selectionStart","selectionEnd","startPos","endPos","makePositionsEditable","pos","parseBirthDate","d","date","month","day","parseQueryParams","params","pair","parseArrayToObject","instance","parseResponse","responseParser","obj","parseResponseToObject","spiralBirthdate","dateStr","spinalCaseWord","initializer","requestArtists","requestArtist","requestColors","requestMembers","requestSongs","requestUnit","requestUnitMembers","resyncDatabase","runLogin","runLogout","sendDistribution","sendLog","sendSong","updateCompleteArtist","test","apiSaga","delay","DELAY_DURATION","dbStart","loggedUser","actionType","_marked","sortedArtistList","sortBy","_marked2","selectedUnitId","_response","indexOf","t1","call","_marked3","colorsList","_marked4","sortedMembersList","_context5","_marked5","songsList","sortedSongsList","_context6","_marked6","_response2","_response3","_context7","songsDict","reduce","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","logoff","_marked11","receivedSong","_context12","_marked12","logType","_marked13","_marked14","receivedMembers","receivedArtist","receivedUnit","_marked15","_marked16","_marked17","_marked18","_marked19","_marked20","takeLatest","takeEvery","_marked21","clearPending","errorToast","successInline","successToast","warningToast","statusHandlingSaga","localPendingCache","status_handling_marked","status_handling_marked2","err","status_handling_marked3","status_handling_marked4","_ref4","status_handling_marked5","_ref5","status_handling_marked6","_ref6","status_handling_marked7","_ref7","warning","status_handling_marked8","status_handling_marked9","status_handling_marked10","rootSaga","fork","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","thunkMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ActiveSongWidget","inline","inlineClass","react_default","createElement","className","defaultProps","mapDispatchToProps","authOperations","withRouter","ActiveUnitWidget","showMembers","Collapsible","props","_this","possibleConstructorReturn","getPrototypeOf","collapse","bind","assertThisInitialized","enforceProperties","expand","togglePanel","nextProps","synced","collapsed","setState","_this$props","iconComponent","components_Icon","disabled","onClick","children","Component","ErrorModal","appOperations","FavoriteIcon","utils_icons","alert","back-arrow","back-arrow-circle","check","chevron-down","chevron-left","chevron-right","chevron-up","clock","hand-negative","hand-positive","heart","heart-hollow","lock","no","plug","plug-available","plug-connected","question-mark","save","sub-unit","trash","youtube","Icon","styles","svg","display","verticalAlign","margin","transform","fill","style","width","height","viewBox","ICONS","Loading","_ref$message","src","alt","LoadingIcon","LoadingWrapper","MemberNationaltyFlag","flag","flagUrl","MemberPicture","fallback","failed","pictureUrl","colorNumber","profilePlaceholderCode","pictureFallback","onError","MemberPositions","sortedPositions","positionPriority","MAKNAE","iconBank","iconLeader","iconMainVocalist","iconMainRapper","iconMainDancer","iconLeadVocalist","iconLeadRapper","iconLeadDancer","iconVocalist","iconDancer","iconRapper","iconCenter","iconVisual","iconMaknae","positionName","MemberCard","favoriteState","showId","showReferenceArtist","member_MemberPicture","components_FavoriteIcon","MemberNationalityFlag","react","member_MemberPositions","PositionIcon","ALL","iconAll","NONE","iconNone","RequirementWrapper","authentication","activeArtist","ready","parseRequirements","_this2","requirements","requirement","components_Loading","Link","to","logo","selectKey","Select","options","optionValue","optionName","optionPrefix","label","placeholder","disablePlaceholder","classNameModifier","onChange","SwitchToggle","labels","checked","left","right","Tabs","tabs","active","icons","iconConditions","objectWithoutProperties","tab","tabObj","isActive","showIcons","condition","show","Typeahead","suggestions","suggestion","ArtistsTable","favoriteAction","rowAction","filteredArtists","o","emptyTableMessage","colSpan","components_LoadingIcon","Artists","_this$props$artists","_this$props$distribut","handleTableClick","history","RequirementWrapperContainer","ActiveUnitWidgetContainer","ActiveSongWidgetContainer","components_ArtistsTable","REQUEST_ARTISTS","Switch","artistsOperations","dbOperations","ArtistsContainer","BiasPicture","biasPlaceholder","DistributedSongPreview","percentage","spanWidth","DistributedSongsTable","humanizeCategory","components_DistributedSongPreview","Units","prevProps","page","_this$props$props","_this$props$props$art","isUnitPending","REQUEST_UNIT","hasLegacyDistributions","components_Tabs","components_LoadingWrapper","artistRedirect","components_BiasPicture","components_Select","components_MemberCard","components_DistributedSongsTable","Artist","memberColors","search","getMemberColors","isArtistPending","REQUEST_ARTIST","components_Units","distributeOperations","ArtistContainer","DistributeConnect","activeClass","percentageWidth","role","tabIndex","components_PositionIcon","partIndex","partKey","lineColors","_colors","background","fontStyle","mKey","Distribute","getMembers","components_Collapsible","components_DistributeConnect","adminOperations","DistributeContainer","Menu","pathname","authHideClass","adminHideClass","activeUnitHideClass","userPlaceholder","href","LoadingBar","App","components_Menu","components_LoadingBar","HeaderContainer","Header","Home","youtubeUrl","frameBorder","allowFullScreen","HomeContainer","Idols","favorite","privacy","order","_this$props$auth","REQUEST_MEMBERS","filteredMembers","evaluation","every","sortedMembers","orderBy","esm","updateFilters","autoComplete","initialValue","maxLength","nationalitie","IdolsContainer","colorDict","keyNumber","Verse","verse","LyricsOutput_Line","Line","adlib","LyricsOutput_Bracket","LyricsOutput_Part","Part","bitStyle","getBitStyle","Bracket","omit","hasSingers","singers","hasSubSingers","subSingers","omitSub","hasChoirSingers","choirSingers","omitChoir","colorHexes","c","subColors","choirColors","LyricsOutput","colorsDB","col000000","LyricsOutput_Verse","COLOR_BANK","latestUnitId","lastSingers","lastColors","lastSubsingers","lastSubColors","lastChoirSingers","lastChoirColors","wasLastLineEmpty","lastLineHadSubSingers","lastLineHadChoirSings","uses","updateUses","addEntry","n","cleanUpPart","empty","parseLine","insideParentheses","insideCurly","names","currentString","lastCharacter","currentPart","parseLyrics","input","paragraphedResult","paragraphIndex","currentLine","Lyrics","REQUEST_COLORS","dist","cols","rows","components_LyricsOutput","LyricsContainer","ColorReferenceBar","isInUse","PropTypes","ManageArtist","validateTypeahead","isValid","defaultValues","manageLock","managePlus","components_Typeahead","isRequired","isValidName","scope","validateOnBlur","validate","required","ManageUnit","_props$admin","isValidDebutYear","getFullYear","ManageMembers","Manage","validArtist","validUnit","validMember","handleEditMemberAndState","resetAll","validateArtist","validateUnit","validateMembers","_this$props$admin","isSaveable","RESYNC_DATABASE","UPDATE_COMPLETE_ARTIST","components_ColorReferenceBar","components_ManageArtist","components_ManageUnit","components_ManageMembers","ManageContainer","SongsTable","previouslyDistributedSongsDict","filteredSongs","previouslyDistributed","Songs","_this$props$db","components_SongsTable","REQUEST_SONGS","SongsContainer","SyncStep1VideoId","loadYoutubeVideo","SyncStep2Info","addToOriginalArtistForm","min","SyncStep3Lyrics","document","getElementById","newEl","SyncStep4Buttons","addEventListener","pillColors","boxId","box","onMouseDown","onMouseUp","ICON_COLOR_CODE_HASH","8","12","20","26","SyncStep4Distributions","linesOn","SyncStep5Verify","currentTime","timestampsList","tsObj","SyncStep5Save","loadYT","animationInterval","Sync","onPlayerStateChange","setHeight","clientWidth","_this3","tag","firstScriptTag","getElementsByTagName","insertBefore","onYouTubeIframeAPIReady","YT","Player","youtubePlayerAnchor","events","onStateChange","_this4","_this$props$sync","components_SyncStep4Buttons","components_SyncStep5Save","SEND_SONG","components_SyncStep1VideoId","components_SyncStep2Info","components_SyncStep3Lyrics","SyncStep4Distribution","components_SyncStep5Verify","syncOperations","SyncContainer","ColorSheet","colorObj","NOOP","ComponentSheet","IconSheet","UIReference","tabContent","ComponentsSheet","components_IconSheet","components_ColorSheet","UIReferenceContainer","Lab","LearnMore","MyArtists","MyDistributions","Test","json","readOnly","tempOperations","Temp","routes","HashRouter","header","ErrorModalContainer","Route","component","exact","LabContainer","LearnMoreContainer","TempContainer","MyArtistsContainer","MyDistributionsContainer","ReactDOM","render","es","lib_default","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","URL","origin","fetch","headers","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ead936b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-all.c2247d81.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-none.ba42a31e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-neg.048816e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/bias-placeholder.61f71a68.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d7f95990.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-placeholder.94d4fc32.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-alt.6de76e88.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const RESET_ERROR = 'RESET_ERROR';\nconst SET_DATABASE_READY = 'SET_DATABASE_READY';\nconst SET_ERROR = 'SET_ERROR';\nconst SET_ERROR_INLINE = 'SET_ERROR_INLINE';\nconst SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\nconst SET_LOADING = 'SET_LOADING';\nconst SET_PENDING = 'SET_PENDING';\nconst SET_SUCCESS = 'SET_SUCCESS';\nconst SET_SUCCESS_INLINE = 'SET_SUCCESS_INLINE';\nconst SET_SUCCESS_MESSAGE = 'SET_SUCCESS_MESSAGE';\n\nexport default {\n  RESET_ERROR,\n  SET_DATABASE_READY,\n  SET_ERROR,\n  SET_ERROR_INLINE,\n  SET_ERROR_MESSAGE,\n  SET_LOADING,\n  SET_PENDING,\n  SET_SUCCESS,\n  SET_SUCCESS_INLINE,\n  SET_SUCCESS_MESSAGE,\n};\n","import types from './types';\n\nconst initialState = {\n  databaseReady: false,\n  error: false,\n  errorInline: false,\n  errorMessage: '',\n  pending: {},\n  loading: false,\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_ERROR:\n      newState.error = false;\n      newState.errorInline = false;\n      newState.errorMessage = '';\n      break;\n\n    case types.SET_DATABASE_READY:\n      newState.databaseReady = action.payload;\n      break;\n\n    case types.SET_ERROR:\n      newState.error = action.payload;\n      break;\n\n    case types.SET_ERROR_INLINE:\n      newState.errorInline = action.payload;\n      break;\n\n    case types.SET_ERROR_MESSAGE:\n      newState.errorMessage = action.payload;\n      break;\n\n    case types.SET_PENDING:\n      newState.pending = action.payload;\n      break;\n\n    case types.SET_SUCCESS:\n      newState.success = action.payload;\n      break;\n\n    case types.SET_LOADING:\n      newState.loading = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetError = payload => dispatch =>\n  dispatch({ type: types.RESET_ERROR, payload });\nconst setDatabaseReady = payload => dispatch =>\n  dispatch({ type: types.SET_DATABASE_READY, payload });\n\nexport default {\n  resetError,\n  setDatabaseReady,\n};\n","import actions from './actions';\n\nconst init = () => dispatch => dispatch({ type: 'INITIALIZER' });\n\nconst handleCloseErrorModal = () => dispatch => {\n  dispatch(actions.resetError());\n};\nconst handleSendBugReport = () => (dispatch, getState) => {\n  const { errorMessage } = getState().app;\n  const today = Date.now();\n\n  const body = {\n    type: 'error',\n    timestamp: today,\n    content: errorMessage,\n  };\n\n  dispatch({ type: 'SEND_LOG', body });\n  dispatch(actions.resetError());\n};\n\nexport default {\n  init,\n  handleCloseErrorModal,\n  handleSendBugReport,\n};\n","import appReducer from './reducers';\n\nexport { default as appOperations } from './operations';\nexport { default as appTypes } from './types';\nexport default appReducer;\n","const SET_COLORS_IN_USE = 'SET_COLORS_IN_USE';\nconst SET_CREATE_SUCCESS = 'SET_CREATE_SUCCESS';\nconst SET_EDITING_ARTIST = 'SET_EDITING_ARTIST';\nconst SET_EDITING_MEMBERS = 'SET_EDITING_MEMBERS';\nconst SET_EDITING_UNIT = 'SET_EDITING_UNIT';\nconst SET_MANAGE_RESULT = 'SET_MANAGE_RESULT';\nconst SET_PANELS = 'SET_PANELS';\nconst SET_UI_REFERENCE_TAB = 'SET_UI_REFERENCE_TAB';\nconst SET_UNITS_TYPEAHEAD = 'SET_UNITS_TYPEAHEAD';\nconst SET_UNITS_TYPEAHEAD_DICT = 'SET_UNITS_TYPEAHEAD_DICT';\n\nexport default {\n  SET_COLORS_IN_USE,\n  SET_CREATE_SUCCESS,\n  SET_EDITING_ARTIST,\n  SET_EDITING_MEMBERS,\n  SET_EDITING_UNIT,\n  SET_MANAGE_RESULT,\n  SET_PANELS,\n  SET_UI_REFERENCE_TAB,\n  SET_UNITS_TYPEAHEAD,\n  SET_UNITS_TYPEAHEAD_DICT,\n};\n","import types from './types';\n\nconst initialState = {\n  colorsInUse: {},\n  editingArtist: {},\n  editingMembers: [],\n  editingUnit: {},\n  manageResult: null,\n  panels: {\n    artist: 'open',\n    unit: 'locked',\n    members: 'locked',\n  },\n  uiReferenceTab: null,\n  unitsTypeahead: [],\n  unitsTypeaheadDict: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_COLORS_IN_USE:\n      newState.colorsInUse = action.payload;\n      break;\n\n    case types.SET_EDITING_ARTIST:\n      newState.editingArtist = action.payload;\n      break;\n\n    case types.SET_EDITING_MEMBERS:\n      newState.editingMembers = action.payload;\n      break;\n\n    case types.SET_EDITING_UNIT:\n      newState.editingUnit = action.payload;\n      break;\n\n    case types.SET_MANAGE_RESULT:\n      newState.manageResult = action.payload;\n      break;\n\n    case types.SET_PANELS:\n      newState.panels = action.payload;\n      break;\n\n    case types.SET_SONGS:\n      newState.songs = action.payload;\n      break;\n\n    case types.SET_SONG_SEARCH_QUERY:\n      newState.songSearchQuery = action.payload;\n      break;\n\n    case types.SET_UI_REFERENCE_TAB:\n      newState.uiReferenceTab = action.payload;\n      break;\n\n    case types.SET_UNITS_TYPEAHEAD:\n      newState.unitsTypeahead = action.payload;\n      break;\n\n    case types.SET_UNITS_TYPEAHEAD_DICT:\n      newState.unitsTypeaheadDict = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","const COLORS = {\n  col000001: 'red',\n  col000002: 'blood',\n  col000003: 'coral',\n  col000004: 'peach',\n  col000005: 'brown',\n  col000006: 'orange',\n  col000007: 'gold',\n  col000008: 'yellow',\n  col000009: 'olive',\n  col000010: 'lemon',\n  col000011: 'lime',\n  col000012: 'green',\n  col000013: 'basil',\n  col000014: 'forest',\n  col000015: 'jade',\n  col000016: 'teal',\n  col000017: 'cyan',\n  col000018: 'turquoise',\n  col000019: 'navy',\n  col000020: 'blue',\n  col000021: 'sky',\n  col000022: 'purple',\n  col000023: 'violet',\n  col000024: 'rose',\n  col000025: 'mauve',\n  col000026: 'magenta',\n  col000027: 'jam',\n  col000028: 'pink',\n  col000029: 'burgundy',\n  col000030: 'salmon',\n};\n\nconst DEFAULT_COLORS = {\n  default: '#000000',\n  black: '#000000',\n  blue: '#598ffd',\n  gray: '#707070',\n  green: '#49d156',\n  orange: '#fea245',\n  pink: '#fb9cf0',\n  purple: '#9e8ef0',\n  red: '#d14949',\n  teal: '#34ac9e',\n  white: 'FFFFFF',\n  yellow: '#ffd700',\n};\n\nconst FLAGS_LIST = {\n  AMERICAN: 'usa',\n  BRAZILIAN: 'brazil',\n  CANADIAN: 'canada',\n  CHINESE: 'china',\n  JAPANESE: 'japan',\n  KOREAN: 'korea',\n  TAIWANESE: 'taiwan',\n  THAI: 'thailand',\n  VIETNAMISE: 'vietnamise',\n};\n\nconst GENDERS = {\n  FEMALE: 'Female',\n  MALE: 'Male',\n  UNKOWN: 'Unknown',\n};\n\nconst GENRES = {\n  CPOP: 'C-Pop',\n  JPOP: 'J-Pop',\n  KPOP: 'K-Pop',\n  OTHER: 'Other',\n  POP: 'Pop',\n};\n\nconst GENRES_DB = {\n  'C-Pop': 'CPOP',\n  'J-Pop': 'JPOP',\n  'K-Pop': 'KPOP',\n  Other: 'OTHER',\n  Pop: 'POP',\n};\n\nconst POSITIONS_LIST = [\n  'MAIN_VOCALIST',\n  'MAIN_RAPPER',\n  'MAIN_DANCER',\n  'LEAD_VOCALIST',\n  'LEAD_RAPPER',\n  'LEAD_DANCER',\n  'VOCALIST',\n  'RAPPER',\n  'DANCER',\n  'LEADER',\n  'CENTER',\n  'VISUAL',\n];\n\nconst POSITIONS_LIST_OBJ = {\n  MAIN_VOCALIST: 'Main Vocalist',\n  LEAD_VOCALIST: 'Lead Vocalist',\n  VOCALIST: 'Vocalist',\n  MAIN_RAPPER: 'Main Rapper',\n  LEAD_RAPPER: 'Lead Rapper',\n  RAPPER: 'Rapper',\n  MAIN_DANCER: 'Main Dancer',\n  LEAD_DANCER: 'Lead Dancer',\n  DANCER: 'Dancer',\n  LEADER: 'Leader',\n  CENTER: 'Center',\n  VISUAL: 'Visual',\n};\n\nconst NATIONALITIES = {\n  AMERICAN: 'American',\n  BRAZILIAN: 'Brazilian',\n  BRITISH: 'British',\n  CANADIAN: 'Canadian',\n  CHINESE: 'Chinese',\n  JAPANESE: 'Japanese',\n  KOREAN: 'Korean',\n  OTHER: 'Other',\n  TAIWANESE: 'Taiwanese',\n  THAI: 'Thai',\n  VIETNAMISE: 'Vietnamise',\n};\n\nconst NATIONALITY_FLAG_URL = '/images/flags/';\n\nconst PROFILE_PICTURE_URL = '/images/profiles/';\n\nconst SYNC_KEY_LIST = {\n  1: true,\n  2: true,\n  3: true,\n  4: true,\n  5: true,\n};\n\nconst SYNC_KEY_COLOR_LIST = {\n  1: '1',\n  2: '8',\n  3: '12',\n  4: '20',\n  5: '26',\n};\n\nconst YOUTUBE_URLS = ['cudssvDuOpc'];\n\nexport default {\n  COLORS,\n  DEFAULT_COLORS,\n  FLAGS_LIST,\n  GENDERS,\n  GENRES,\n  GENRES_DB,\n  POSITIONS_LIST,\n  POSITIONS_LIST_OBJ,\n  NATIONALITIES,\n  NATIONALITY_FLAG_URL,\n  PROFILE_PICTURE_URL,\n  SYNC_KEY_LIST,\n  SYNC_KEY_COLOR_LIST,\n  YOUTUBE_URLS,\n};\n","import types from './types';\n\nconst setColorsInUse = payload => dispatch =>\n  dispatch({ type: types.SET_COLORS_IN_USE, payload });\nconst setEditingArtist = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_ARTIST, payload });\nconst setEditingMembers = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_MEMBERS, payload });\nconst setEditingUnit = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_UNIT, payload });\nconst setManageResult = payload => dispatch =>\n  dispatch({ type: types.SET_MANAGE_RESULT, payload });\nconst setPanels = payload => dispatch =>\n  dispatch({ type: types.SET_PANELS, payload });\nconst setSongSearchQuery = payload => dispatch =>\n  dispatch({ type: types.SET_SONG_SEARCH_QUERY, payload });\nconst setUIReferenceTab = payload => dispatch =>\n  dispatch({ type: types.SET_UI_REFERENCE_TAB, payload });\nconst setUnitsTypeahead = payload => dispatch =>\n  dispatch({ type: types.SET_UNITS_TYPEAHEAD, payload });\nconst setUnitsTypeaheadDict = payload => dispatch =>\n  dispatch({ type: types.SET_UNITS_TYPEAHEAD_DICT, payload });\n\nexport default {\n  setColorsInUse,\n  setEditingArtist,\n  setEditingMembers,\n  setEditingUnit,\n  setManageResult,\n  setPanels,\n  setSongSearchQuery,\n  setUIReferenceTab,\n  setUnitsTypeahead,\n  setUnitsTypeaheadDict,\n};\n","import _ from 'lodash';\n\nimport constants from '../../utils/constants';\n\nimport actions from './actions';\n\nconst switchUIReferenceTab = event => async dispatch => {\n  const { id } = event.target;\n\n  if (!id) return null;\n\n  return dispatch(actions.setUIReferenceTab(id));\n};\n\nconst handleResyncDB = () => dispatch => dispatch({ type: 'RESYNC_DATABASE' });\n\nconst handleEditArtist = artistId => (dispatch, getState) => {\n  const panels = { ...getState().admin.panels };\n\n  panels.artist = 'edit';\n\n  if (artistId) {\n    dispatch({ type: 'REQUEST_ARTIST', artistId, panels, state: 'edit' });\n  } else {\n    dispatch(actions.setEditingArtist({ new: true }));\n    dispatch(actions.setPanels(panels));\n  }\n};\n\nconst handleEditUnit = unitId => (dispatch, getState) => {\n  const panels = { ...getState().admin.panels };\n\n  panels.unit = 'edit';\n\n  if (unitId) {\n    const units = [...getState().admin.editingArtist.units];\n    const unitIndex = _.findIndex(units, u => u.id === unitId);\n    const currentUnit = units[unitIndex];\n\n    dispatch(actions.setEditingUnit(currentUnit));\n  } else {\n    dispatch(actions.setEditingUnit({ new: true }));\n  }\n\n  dispatch(actions.setPanels(panels));\n};\n\nconst handleEditMember = (memberId, formState) => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  if (memberId) {\n    const { members } = getState().admin;\n    const memberIndex = _.findIndex(members, m => m.id === memberId);\n    const addedMember = { ...members[memberIndex] };\n    editingMembers.push(addedMember);\n    dispatch(actions.setEditingMembers(editingMembers));\n\n    // Also update colors in use\n    const colorsInUse = {};\n    editingMembers.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n    dispatch(actions.setColorsInUse(colorsInUse));\n  } else {\n    let lastMember = editingMembers[editingMembers.length - 1] || false;\n    if (lastMember && formState.values.members) {\n      lastMember =\n        formState.values.members[formState.values.members.length - 1];\n    }\n\n    editingMembers.push({\n      new: true,\n      positions: [],\n      gender: lastMember.gender || undefined,\n      nationality: lastMember.nationality || undefined,\n    });\n    dispatch(actions.setEditingMembers(editingMembers));\n  }\n};\n\nconst updateMemberColor = (value, index) => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  editingMembers[index].colorId = value;\n  dispatch(actions.setEditingMembers(editingMembers));\n\n  // Also update colors in use\n  const colorsInUse = {};\n  editingMembers.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n  dispatch(actions.setColorsInUse(colorsInUse));\n};\n\nconst updateMemberPositions = () => {};\n\n// const updateMemberPositions = (value, position, index) => (\n//   dispatch,\n//   getState\n// ) => {\n//   const editingMembers = [...getState().admin.editingMembers];\n//   const positionsObj = {};\n//   editingMembers[index].positions.forEach(pos => (positionsObj[pos] = true));\n//   if (value === false) {\n//     delete positionsObj[position];\n//   } else {\n//     positionsObj[position] = true;\n//     switch (position) {\n//       case 'MAIN_VOCALIST':\n//         delete positionsObj.LEAD_VOCALIST;\n//         delete positionsObj.VOCALIST;\n//         break;\n//       case 'LEAD_VOCALIST':\n//         delete positionsObj.MAIN_VOCALIST;\n//         delete positionsObj.VOCALIST;\n//         break;\n//       case 'VOCALIST':\n//         delete positionsObj.MAIN_VOCALIST;\n//         delete positionsObj.LEAD_VOCALIST;\n//         break;\n//       case 'MAIN_DANCER':\n//         delete positionsObj.LEAD_DANCER;\n//         delete positionsObj.DANCER;\n//         break;\n//       case 'LEAD_DANCER':\n//         delete positionsObj.MAIN_DANCER;\n//         delete positionsObj.DANCER;\n//         break;\n//       case 'DANCER':\n//         delete positionsObj.MAIN_DANCER;\n//         delete positionsObj.LEAD_DANCER;\n//         break;\n//       case 'MAIN_RAPPER':\n//         delete positionsObj.LEAD_RAPPER;\n//         delete positionsObj.RAPPER;\n//         break;\n//       case 'LEAD_RAPPER':\n//         delete positionsObj.MAIN_RAPPER;\n//         delete positionsObj.RAPPER;\n//         break;\n//       case 'RAPPER':\n//         delete positionsObj.MAIN_RAPPER;\n//         delete positionsObj.LEAD_RAPPER;\n//         break;\n//       default:\n//       // do nothing\n//     }\n//   }\n//   editingMembers[index].positions = Object.keys(positionsObj);\n//   dispatch(actions.setEditingMembers(editingMembers));\n// };\n\nconst updateManageForm = () => () => {\n  // // console.log(formObj);\n  // if (formObj.dirty) {\n  //   // console.log('DIRTY');\n  //   // console.log(formObj);\n  // } else {\n  //   // console.log('CLEAN');\n  // }\n};\n\nconst unlockUnit = formState => (dispatch, getState) => {\n  const artistState = formState.values.artist;\n\n  // Only unlock if required fields are filled.\n  if (!artistState || !artistState.name || !artistState.genre) return;\n\n  const panels = { ...getState().admin.panels };\n  panels.unit = 'open';\n\n  const editingArtistState = getState().admin.editingArtist;\n  const editingArtist = {\n    genre: artistState.genre,\n    name: artistState.name,\n    otherNames: artistState.otherNames || '',\n    private: artistState.private || false,\n    new: editingArtistState.new || false,\n    memberIds: editingArtistState.memberIds || false,\n    memberList: editingArtistState.memberList || false,\n    units: editingArtistState.units || false,\n    id: editingArtistState.id,\n    createdBy: editingArtistState.createdBy,\n  };\n\n  dispatch(actions.setEditingArtist(editingArtist));\n  dispatch(actions.setPanels(panels));\n};\n\nconst unlockMembers = formState => (dispatch, getState) => {\n  const unitState = formState.values.unit;\n\n  // Only unlock if required fields are filled.\n  if (!unitState || !unitState.name || !unitState.debutYear) return;\n\n  const panels = { ...getState().admin.panels };\n  panels.members = 'open';\n\n  const editingUnitState = getState().admin.editingUnit;\n  const editingUnit = {\n    debutYear: unitState.debutYear,\n    name: unitState.name,\n    official: unitState.official,\n    private: unitState.private || false,\n    subUnit: unitState.subUnit || null,\n    new: editingUnitState.new || false,\n    averages: editingUnitState.averages || false,\n    distributions: editingUnitState.distributions || false,\n    distributions_legacy: editingUnitState.distributions_legacy || false,\n    members: editingUnitState.members || false,\n    id: editingUnitState.id,\n    createdBy: editingUnitState.createdBy,\n  };\n\n  dispatch(actions.setEditingUnit(editingUnit));\n  dispatch({\n    type: 'REQUEST_UNIT_MEMBERS',\n    unitId: editingUnitState.id,\n    panels,\n  });\n};\n\nconst removeMember = index => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  // editingMembers.splice(index, 1);\n  editingMembers[index] = null;\n  dispatch(actions.setEditingMembers(editingMembers));\n};\n\nconst resetManage = () => dispatch => {\n  dispatch(actions.setEditingArtist({}));\n  dispatch(actions.setEditingMembers([]));\n  dispatch(actions.setEditingUnit({}));\n  dispatch(actions.setUnitsTypeahead([]));\n  dispatch(actions.setUnitsTypeaheadDict({}));\n  dispatch(actions.setManageResult(null));\n  dispatch(actions.setColorsInUse({}));\n  dispatch(\n    actions.setPanels({\n      artist: 'open',\n      unit: 'locked',\n      members: 'locked',\n    })\n  );\n};\n\nconst saveManage = formState => async (dispatch, getState) => {\n  const artistState = formState.values.artist;\n  const unitState = formState.values.unit;\n  const membersState = formState.values.members;\n\n  // Check formState\n  if (Object.keys(formState.errors).length) return;\n\n  // Check artist required fields\n  if (!artistState || !artistState.name || !artistState.genre) return;\n\n  // Check unit required fields\n  if (!unitState || !unitState.name || !unitState.debutYear) return;\n\n  if (!membersState || membersState.length < 2) return;\n\n  // Check members required fields\n  let missingField = false;\n  membersState.forEach(member => {\n    if (\n      !member.name ||\n      !member.birthdate ||\n      !member.colorId ||\n      !member.gender ||\n      !member.nationality\n    ) {\n      missingField = true;\n    }\n    const hasPositions = Object.keys(member).some(\n      m => constants.POSITIONS_LIST_OBJ[m]\n    );\n    if (!hasPositions) missingField = true;\n  });\n  if (missingField) return;\n\n  // Prepare Artist\n  const editingArtistState = getState().admin.editingArtist;\n  const editingArtist = {\n    genre: artistState.genre,\n    name: artistState.name,\n    otherNames: artistState.otherNames || '',\n    private: artistState.private || false,\n    new: editingArtistState.new || false,\n    memberIds: editingArtistState.memberIds || [],\n    memberList: editingArtistState.memberList || [],\n    units: editingArtistState.units\n      ? editingArtistState.units.map(unit => unit.id)\n      : [],\n    id: editingArtistState.id || null,\n    createdBy: editingArtistState.createdBy || null,\n  };\n\n  // Prepare Unit\n  const editingUnitState = getState().admin.editingUnit;\n  const editingUnit = {\n    debutYear: unitState.debutYear,\n    name: unitState.name,\n    official: unitState.official,\n    private: unitState.private || false,\n    subUnit: unitState.subUnit || null,\n    new: editingUnitState.new || false,\n    averages: editingUnitState.averages || false,\n    distributions: editingUnitState.distributions || false,\n    distributions_legacy: editingUnitState.distributions_legacy || false,\n    artistId: editingUnitState.id || null,\n    id: editingUnitState.id || null,\n    createdBy: editingUnitState.createdBy || null,\n  };\n\n  // Prepare Members\n  const editingMembersState = getState().admin.editingMembers;\n  const editingMembers = [];\n  membersState.forEach((memberState, index) => {\n    if (memberState) {\n      const newMember = {\n        birthdate: +memberState.birthdate.replace(/(-)/g, ''),\n        colorId: memberState.colorId,\n        gender: memberState.gender,\n        initials: memberState.initials || '',\n        name: memberState.name,\n        nationality: memberState.nationality,\n        private: memberState.private || false,\n      };\n      // Handle existing database member\n      if (editingMembersState[index].id) {\n        newMember.createdBy = editingMembersState[index].createdBy || null;\n        newMember.id = editingMembersState[index].id || null;\n        newMember.referenceArtist =\n          editingMembersState[index].referenceArtist || null;\n      }\n      // Handle positions\n      const positions = [];\n      Object.keys(memberState).forEach(key => {\n        if (constants.POSITIONS_LIST.includes(key)) positions.push(key);\n      });\n      newMember.positions = positions;\n\n      editingMembers.push(newMember);\n    }\n  });\n\n  dispatch({\n    type: 'UPDATE_COMPLETE_ARTIST',\n    artist: editingArtist,\n    unit: editingUnit,\n    members: editingMembers,\n  });\n};\n\nexport default {\n  handleEditArtist,\n  handleEditMember,\n  handleEditUnit,\n  handleResyncDB,\n  removeMember,\n  resetManage,\n  saveManage,\n  switchUIReferenceTab,\n  unlockUnit,\n  unlockMembers,\n  updateManageForm,\n  updateMemberColor,\n  updateMemberPositions,\n};\n","import adminReducer from './reducers';\n\nexport { default as adminOperations } from './operations';\nexport { default as adminTypes } from './types';\nexport default adminReducer;\n","const SET_ARTIST_LIST = 'SET_ARTIST_LIST';\nconst SET_ARTIST_PAGE_TAB = 'SET_ARTIST_PAGE_TAB';\nconst SET_BIAS = 'SET_BIAS';\nconst SET_SEARCH_QUERY = 'SET_SEARCH_QUERY';\nconst SET_SELECTED_ARTIST = 'SET_SELECTED_ARTIST';\nconst SET_SELECTED_UNIT = 'SET_SELECTED_UNIT';\nconst SET_SHOW_FAVORITE_ARTISTS_ONLY = 'SET_SHOW_FAVORITE_ARTISTS_ONLY';\n\nexport default {\n  SET_ARTIST_LIST,\n  SET_ARTIST_PAGE_TAB,\n  SET_BIAS,\n  SET_SEARCH_QUERY,\n  SET_SELECTED_ARTIST,\n  SET_SELECTED_UNIT,\n  SET_SHOW_FAVORITE_ARTISTS_ONLY,\n};\n","import types from './types';\n\nconst initialState = {\n  artistList: [],\n  artistPageTab: '',\n  bias: {},\n  searchQuery: '',\n  selectedArtist: {},\n  selectedUnit: {},\n  showFavoriteArtistsOnly: false,\n  userFavoriteArtists: {},\n  userLatestArtists: [],\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ARTIST_LIST:\n      newState.artistList = action.payload;\n      break;\n\n    case types.SET_ARTIST_PAGE_TAB:\n      newState.artistPageTab = action.payload;\n      break;\n\n    case types.SET_BIAS:\n      newState.bias = action.payload;\n      break;\n\n    case types.SET_SEARCH_QUERY:\n      newState.searchQuery = action.payload;\n      break;\n\n    case types.SET_SELECTED_ARTIST:\n      newState.selectedArtist = action.payload;\n      break;\n\n    case types.SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      break;\n\n    case types.SET_SHOW_FAVORITE_ARTISTS_ONLY:\n      newState.showFavoriteArtistsOnly = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setArtistList = payload => dispatch =>\n  dispatch({ type: types.SET_ARTIST_LIST, payload });\nconst setArtistPageTab = payload => dispatch =>\n  dispatch({ type: types.SET_ARTIST_PAGE_TAB, payload });\nconst setBias = payload => dispatch =>\n  dispatch({ type: types.SET_BIAS, payload });\nconst setSearchQuery = payload => dispatch =>\n  dispatch({ type: types.SET_SEARCH_QUERY, payload });\nconst setSelectedArtist = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_ARTIST, payload });\nconst setSelectedUnit = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_UNIT, payload });\nconst setShowFavoriteArtistsOnly = payload => dispatch =>\n  dispatch({ type: types.SET_SHOW_FAVORITE_ARTISTS_ONLY, payload });\n\nexport default {\n  setArtistList,\n  setArtistPageTab,\n  setBias,\n  setSearchQuery,\n  setSelectedArtist,\n  setSelectedUnit,\n  setShowFavoriteArtistsOnly,\n};\n","import actions from './actions';\n\nconst loadArtist = (artistId, queryParams) => dispatch =>\n  dispatch({ type: 'REQUEST_ARTIST', artistId, queryParams });\n\nconst loadUserArtists = () => async (dispatch, getState) => {};\n\nconst findUnitIndex = (units, unitId) => units.findIndex(u => u.id === unitId);\n\nconst updateSearchQuery = value => dispatch => {\n  if (value === '' || value.length > 2) {\n    dispatch(actions.setSearchQuery(value.toLowerCase()));\n  }\n};\n\nconst showFavoriteArtistsOnlyToggle = () => (dispatch, getState) => {\n  const { showFavoriteArtistsOnly } = getState().artists;\n  dispatch(actions.setShowFavoriteArtistsOnly(!showFavoriteArtistsOnly));\n};\n\nconst updateLatestUnits = id => async (dispatch, getState) => {};\n\nconst switchArtistPageTab = event => async (dispatch, getState) => {\n  let { id } = event.target;\n\n  // When clicking on the tab icon, the id is lost\n  if (!id) {\n    id = event.target.parentNode.parentNode.id; // eslint-disable-line\n  }\n  if (!id) return null;\n\n  dispatch(actions.setArtistPageTab(id));\n\n  const selectedArtist = { ...getState().artists.selectedArtist };\n  const unitIndex = findUnitIndex(selectedArtist.units, id);\n  const currentUnit = selectedArtist.units[unitIndex];\n\n  // If unit has the complete flag, use it, else request a new complete one\n  if (currentUnit.complete) {\n    dispatch(actions.setSelectedUnit(currentUnit));\n  } else {\n    await dispatch({\n      type: 'REQUEST_UNIT',\n      unitId: id,\n      selectedArtist,\n      unitIndex,\n    });\n  }\n};\n\nconst getBias = () => (dispatch, getState) => {\n  const { biases } = getState().auth.user;\n  const { selectedUnit } = getState().artists;\n  const { id, members } = selectedUnit;\n  let bias = null;\n  if (id && Object.keys(members).length) {\n    Object.keys(members).forEach(key => {\n      if (biases[`${id}:${key}`]) {\n        bias = { ...selectedUnit.members[key] };\n      }\n    });\n  }\n\n  if (bias) {\n    dispatch(actions.setBias(bias));\n  } else {\n    dispatch(actions.setBias({}));\n  }\n};\n\nexport default {\n  getBias,\n  loadUserArtists,\n  loadArtist,\n  updateSearchQuery,\n  updateLatestUnits,\n  showFavoriteArtistsOnlyToggle,\n  switchArtistPageTab,\n};\n","import artistsReducer from './reducers';\n\nexport { default as artistsOperations } from './operations';\nexport { default as artistsTypes } from './types';\nexport default artistsReducer;\n","const SET_ADMIN = 'SET_ADMIN';\nconst SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nconst SET_BIASES = 'SET_BIASES';\nconst SET_USER = 'SET_USER';\n\nexport default {\n  SET_ADMIN,\n  SET_AUTHENTICATED,\n  SET_BIASES,\n  SET_USER,\n};\n","import types from './types';\n\nconst initialState = {\n  isAuthenticated: false,\n  isAdmin: false,\n  user: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ADMIN:\n      newState.isAdmin = action.payload;\n      break;\n\n    case types.SET_AUTHENTICATED:\n      newState.isAuthenticated = action.payload;\n      break;\n\n    case types.SET_BIASES:\n      newState.user.biases = action.payload;\n      break;\n\n    case types.SET_USER:\n      newState.user = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setAdmin = payload => dispatch =>\n  dispatch({ type: types.SET_ADMIN, payload });\nconst setAuthenticated = payload => dispatch =>\n  dispatch({ type: types.SET_AUTHENTICATED, payload });\nconst setUser = payload => dispatch =>\n  dispatch({ type: types.SET_USER, payload });\n\nexport default {\n  setAdmin,\n  setAuthenticated,\n  setUser,\n};\n","import actions from './actions';\n\nconst login = () => dispatch => dispatch({ type: 'RUN_LOGIN' });\n\nconst logout = () => dispatch => dispatch({ type: 'RUN_LOGOUT' });\n\nconst updateFavoriteArtists = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteArtists = { ...user.favoriteArtists } || {};\n  if (user.id) {\n    if (userFavoriteArtists[id]) {\n      userFavoriteArtists[id] = false;\n    } else {\n      userFavoriteArtists[id] = true;\n    }\n\n    await dispatch({\n      type: 'UPDATE_USER_FAVORITE_ARTISTS',\n      userFavoriteArtists,\n      userId: user.id,\n    });\n\n    user.favoriteArtists = userFavoriteArtists;\n    dispatch(actions.setUser(user));\n  }\n};\n\nconst updateFavoriteMembers = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteMembers = { ...user.favoriteMembers } || {};\n  if (user.id) {\n    if (userFavoriteMembers[id]) {\n      userFavoriteMembers[id] = false;\n    } else {\n      userFavoriteMembers[id] = true;\n    }\n\n    await dispatch({\n      type: 'UPDATE_USER_FAVORITE_MEMBERS',\n      userFavoriteMembers,\n      userId: user.id,\n    });\n\n    user.favoriteMembers = userFavoriteMembers;\n    dispatch(actions.setUser(user));\n  }\n};\n\nconst updateBias = event => async (dispatch, getState) => {\n  const { value } = event.target;\n  const { id, members } = getState().artists.selectedUnit;\n\n  if (value && id && members && members[value]) {\n    const user = { ...getState().auth.user };\n    const biases = { ...user.biases } || {};\n\n    const biasId = `${id}:${value}`;\n\n    // Stop if member is already the bias\n    if (biases[biasId]) return;\n\n    // Remove any biases within this unit\n    Object.keys(members).forEach(key => {\n      const currentBias = `${id}:${key}`;\n      if (biases[currentBias]) {\n        delete biases[`${id}:${key}`];\n      }\n    });\n\n    biases[biasId] = true;\n\n    const bias = { ...members[value] };\n\n    await dispatch({\n      type: 'UPDATE_USER_BIASES',\n      bias,\n      biases,\n      userId: user.id,\n    });\n  }\n};\n\nexport default {\n  login,\n  logout,\n  updateBias,\n  updateFavoriteArtists,\n  updateFavoriteMembers,\n};\n","import authReducer from './reducers';\n\nexport { default as authOperations } from './operations';\nexport { default as authTypes } from './types';\nexport default authReducer;\n","const SET_ARTISTS = 'SET_ARTISTS';\nconst SET_ARTISTS_TYPEAHEAD = 'SET_ARTISTS_TYPEAHEAD';\nconst SET_ARTISTS_TYPEAHEAD_DICT = 'SET_ARTISTS_TYPEAHEAD_DICT';\nconst SET_COLORS = 'SET_COLORS';\nconst SET_MEMBERS = 'SET_MEMBERS';\nconst SET_MEMBERS_TYPEAHEAD = 'SET_MEMBERS_TYPEAHEAD';\nconst SET_MEMBERS_TYPEAHEAD_DICT = 'SET_MEMBERS_TYPEAHEAD_DICT';\nconst SET_SONGS = 'SET_SONGS';\nconst SET_SONG_SEARCH_QUERY = 'SET_SONG_SEARCH_QUERY';\n\nexport default {\n  SET_ARTISTS,\n  SET_ARTISTS_TYPEAHEAD,\n  SET_ARTISTS_TYPEAHEAD_DICT,\n  SET_COLORS,\n  SET_MEMBERS,\n  SET_MEMBERS_TYPEAHEAD,\n  SET_MEMBERS_TYPEAHEAD_DICT,\n  SET_SONGS,\n  SET_SONG_SEARCH_QUERY,\n};\n","import types from './types';\n\nconst initialState = {\n  artists: [],\n  artistsTypeahead: [],\n  artistsTypeaheadDict: {},\n  colors: {},\n  members: [],\n  membersTypeahead: [],\n  membersTypeaheadDict: {},\n  songs: [],\n  songSearchQuery: '',\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ARTISTS:\n      newState.artists = action.payload;\n      break;\n\n    case types.SET_ARTISTS_TYPEAHEAD:\n      newState.artistsTypeahead = action.payload;\n      break;\n\n    case types.SET_ARTISTS_TYPEAHEAD_DICT:\n      newState.artistsTypeaheadDict = action.payload;\n      break;\n\n    case types.SET_COLORS:\n      newState.colors = action.payload;\n      break;\n\n    case types.SET_MEMBERS:\n      newState.members = action.payload;\n      break;\n\n    case types.SET_MEMBERS_TYPEAHEAD:\n      newState.membersTypeahead = action.payload;\n      break;\n\n    case types.SET_MEMBERS_TYPEAHEAD_DICT:\n      newState.membersTypeaheadDict = action.payload;\n      break;\n\n    case types.SET_SONGS:\n      newState.songs = action.payload;\n      break;\n\n    case types.SET_SONG_SEARCH_QUERY:\n      newState.songSearchQuery = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setColors = payload => dispatch =>\n  dispatch({ type: types.SET_COLORS, payload });\nconst setSongs = payload => dispatch =>\n  dispatch({ type: types.SET_SONGS, payload });\nconst setSongSearchQuery = payload => dispatch =>\n  dispatch({ type: types.SET_SONG_SEARCH_QUERY, payload });\n\nexport default {\n  setColors,\n  setSongs,\n  setSongSearchQuery,\n};\n","import actions from './actions';\n\nconst loadArtists = () => dispatch => dispatch({ type: 'REQUEST_ARTISTS' });\n\nconst loadColors = () => dispatch => dispatch({ type: 'REQUEST_COLORS' });\n\nconst loadMembers = () => dispatch => dispatch({ type: 'REQUEST_MEMBERS' });\n\nconst loadSongs = () => dispatch => dispatch({ type: 'REQUEST_SONGS' });\n\nconst resetSongSearchQuery = () => dispatch =>\n  dispatch(actions.setSongSearchQuery(''));\n\nconst updateSongSearchQuery = value => dispatch =>\n  dispatch(actions.setSongSearchQuery(value));\n\nexport default {\n  loadArtists,\n  loadColors,\n  loadMembers,\n  loadSongs,\n  resetSongSearchQuery,\n  updateSongSearchQuery,\n};\n","import dbReducer from './reducers';\n\nexport { default as dbOperations } from './operations';\nexport { default as dbTypes } from './types';\nexport default dbReducer;\n","const RESET_DISTRIBUTE = 'RESET_DISTRIBUTE';\nconst RESET_DISTRIBUTE_SONG = 'RESET_DISTRIBUTE_SONG';\nconst SET_ACTIVE_MEMBER_PILL = 'SET_ACTIVE_MEMBER_PILL';\nconst SET_ACTIVE_SONG = 'SET_ACTIVE_SONG';\nconst SET_ACTIVE_UNIT = 'SET_ACTIVE_UNIT';\nconst SET_DISTRIBUTION_CATEGORY = 'SET_DISTRIBUTION_CATEGORY';\nconst SET_DISTRIBUTION_LINES = 'SET_DISTRIBUTION_LINES';\nconst SET_DISTRIBUTION_REMAINDER = 'SET_DISTRIBUTION_REMAINDER';\nconst SET_RATES = 'SET_RATES';\n\nexport default {\n  RESET_DISTRIBUTE,\n  RESET_DISTRIBUTE_SONG,\n  SET_ACTIVE_MEMBER_PILL,\n  SET_ACTIVE_SONG,\n  SET_ACTIVE_UNIT,\n  SET_DISTRIBUTION_CATEGORY,\n  SET_DISTRIBUTION_LINES,\n  SET_DISTRIBUTION_REMAINDER,\n  SET_RATES,\n};\n","import types from './types';\n\nconst initialState = {\n  activeMemberPill: '',\n  activeSong: {},\n  activeUnit: {},\n  // activeSong: {\n  //   id: '-L_4OOhzdx5L1qgyuyoU',\n  //   album: 'The Story Begins',\n  //   createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   distribution:\n  //     '[1:13.31:3.09] modu nareul gajigo maeil gaman an dujo\\n[2:16.51:1.6]  naega neomu yeppeujo\\n[3:18.23:1.67]  na ttaemune da himdeuljo\\n[4:19.95:3.23]  eodil geotgo isseodo ppalgan badagingeojo\\n[5:23.24:1.98]  Red carpet gateun gibun',\n  //   groupSize: 9,\n  //   modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   originalArtist: 'TEST',\n  //   originalArtistId: '-LZDwKklI8YGlhmy0KJ2',\n  //   private: false,\n  //   query: 'like ooh-ahh twice the story begins',\n  //   single: true,\n  //   title: 'Test Title',\n  //   videoId: '0rtV5esQT6I',\n  // },\n  // activeUnit: {\n  //   id: '-LZJ7AZJOR0ehcrPecgO',\n  //   artistId: '-LZJ7AQQhyOk5w_TAD4u',\n  //   averages: [],\n  //   createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   debutYear: 2018,\n  //   distributions: [],\n  //   distributions_legacy: [],\n  //   members: {\n  //     '-LZJ7AGyuXFDjXz1ECb2': {\n  //       age: 20,\n  //       birthdate: 19980826,\n  //       colorId: 'col000018',\n  //       color: {\n  //         b: 221,\n  //         count: 8,\n  //         g: 186,\n  //         hex: '#39BADD',\n  //         name: 'turquoise',\n  //         number: 18,\n  //         r: 57,\n  //         id: 'col000018',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'SY',\n  //       name: 'Soyeon',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'KOREAN',\n  //       positions: [\n  //         'CENTER',\n  //         'LEADER',\n  //         'LEAD_RAPPER',\n  //         'MAIN_DANCER',\n  //         'VOCALIST',\n  //       ],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AGyuXFDjXz1ECb2',\n  //     },\n  //     '-LZJ7AH22seM59PQ977M': {\n  //       age: 22,\n  //       birthdate: 19970131,\n  //       colorId: 'col000023',\n  //       color: {\n  //         b: 239,\n  //         count: 10,\n  //         g: 119,\n  //         hex: '#A177EF',\n  //         name: 'violet',\n  //         number: 23,\n  //         r: 161,\n  //         id: 'col000023',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'MY',\n  //       name: 'Miyeon',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'KOREAN',\n  //       positions: ['MAIN_VOCALIST'],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AH22seM59PQ977M',\n  //     },\n  //     '-LZJ7AH7krbGtR-yZyhT': {\n  //       age: 21,\n  //       birthdate: 19971023,\n  //       colorId: 'col000002',\n  //       color: {\n  //         b: 27,\n  //         count: 6,\n  //         g: 49,\n  //         hex: '#CE311B',\n  //         name: 'blood',\n  //         number: 2,\n  //         r: 206,\n  //         id: 'col000002',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'MN',\n  //       name: 'Minnie',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'KOREAN',\n  //       positions: ['MAIN_VOCALIST'],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AH7krbGtR-yZyhT',\n  //     },\n  //     '-LZJ7AHDQIEw5VM1mI3C': {\n  //       age: 20,\n  //       birthdate: 19980309,\n  //       colorId: 'col000006',\n  //       color: {\n  //         b: 42,\n  //         count: 14,\n  //         g: 142,\n  //         hex: '#FF8E2A',\n  //         name: 'orange',\n  //         number: 6,\n  //         r: 255,\n  //         id: 'col000006',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'SJ',\n  //       name: 'Soojin',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'KOREAN',\n  //       positions: ['LEAD_RAPPER', 'MAIN_DANCER', 'VOCALIST'],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AHDQIEw5VM1mI3C',\n  //     },\n  //     '-LZJ7AHM3LgaoxdPJphc': {\n  //       age: 19,\n  //       birthdate: 19990923,\n  //       colorId: 'col000014',\n  //       color: {\n  //         b: 20,\n  //         count: 5,\n  //         g: 125,\n  //         hex: '#147D14',\n  //         name: 'forest',\n  //         number: 14,\n  //         r: 20,\n  //         id: 'col000014',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'YQ',\n  //       name: 'Yuqi',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'CHINESE',\n  //       positions: ['LEAD_DANCER', 'LEAD_RAPPER', 'LEAD_VOCALIST'],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AHM3LgaoxdPJphc',\n  //     },\n  //     '-LZJ7AHNENioOO_v3cE5': {\n  //       age: 19,\n  //       birthdate: 20000106,\n  //       colorId: 'col000008',\n  //       color: {\n  //         b: 0,\n  //         count: 10,\n  //         g: 228,\n  //         hex: '#FFE400',\n  //         name: 'yellow',\n  //         number: 8,\n  //         r: 255,\n  //         id: 'col000008',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'SH',\n  //       name: 'Shuhua',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'TAIWANESE',\n  //       positions: ['VISUAL', 'VOCALIST'],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AHNENioOO_v3cE5',\n  //     },\n  //   },\n  //   modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   name: 'OT6',\n  //   official: true,\n  //   private: false,\n  //   complete: true,\n  //   artistName: '(G)I-DLE',\n  //   genre: 'K-Pop',\n  // },\n  category: 'OFFICIAL',\n  distributionLines: [],\n  rates: {},\n  remainder: 100,\n};\n\nexport default function reducer(prevState = initialState, action) {\n  let newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_DISTRIBUTE:\n      newState = Object.assign({}, initialState);\n      break;\n\n    case types.RESET_DISTRIBUTE_SONG:\n      newState = Object.assign({}, initialState);\n      newState.activeUnit = Object.assign({}, prevState.activeUnit);\n      break;\n\n    case types.SET_ACTIVE_MEMBER_PILL:\n      newState.activeMemberPill = action.payload;\n      break;\n\n    case types.SET_ACTIVE_SONG:\n      newState.activeSong = action.payload;\n      break;\n\n    case types.SET_ACTIVE_UNIT:\n      newState.activeUnit = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_CATEGORY:\n      newState.category = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_LINES:\n      newState.distributionLines = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_REMAINDER:\n      newState.remainder = action.payload;\n      break;\n\n    case types.SET_RATES:\n      newState.rates = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetDistribute = payload => dispatch =>\n  dispatch({ type: types.RESET_DISTRIBUTE, payload });\nconst resetDistributeSong = payload => dispatch =>\n  dispatch({ type: types.RESET_DISTRIBUTE_SONG, payload });\nconst setActiveMemberPill = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_MEMBER_PILL, payload });\nconst setActiveSong = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_SONG, payload });\nconst setActiveUnit = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_UNIT, payload });\nconst setDistributionCategory = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_CATEGORY, payload });\nconst setDistibutionLines = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_LINES, payload });\nconst setDistributionRemainder = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_REMAINDER, payload });\nconst setRates = payload => dispatch =>\n  dispatch({ type: types.SET_RATES, payload });\n\nexport default {\n  resetDistribute,\n  resetDistributeSong,\n  setActiveMemberPill,\n  setActiveSong,\n  setActiveUnit,\n  setDistributionCategory,\n  setDistibutionLines,\n  setDistributionRemainder,\n  setRates,\n};\n","import _ from 'lodash';\n\nimport actions from './actions';\n\nconst activateSong = id => (dispatch, getState) => {\n  // Reset everything but Unit\n  dispatch(actions.resetDistributeSong({}));\n\n  const activeSong = _.find(getState().db.songs, { id });\n  dispatch(actions.setActiveSong(activeSong));\n};\n\nconst activateUnit = () => (dispatch, getState) => {\n  // Reset everything\n  dispatch(actions.resetDistribute({}));\n\n  const selectedArtist = { ...getState().artists.selectedArtist };\n  const activeUnit = { ...getState().artists.selectedUnit };\n\n  activeUnit.artistName = selectedArtist.name;\n  activeUnit.genre = selectedArtist.genre;\n\n  dispatch(actions.setActiveUnit(activeUnit));\n};\n\nconst prepareSong = () => (dispatch, getState) => {\n  const { activeSong } = getState().distribute;\n  if (activeSong.id) {\n    const distributionString = activeSong.distribution;\n\n    const buildPartData = data => {\n      const [id, startTime, duration] = data.split(':');\n      return {\n        id,\n        startTime: +startTime,\n        duration: +duration,\n        endTime: +startTime + +duration,\n      };\n    };\n\n    // Iterate through lines\n    const distributionLines = distributionString.split('\\n').map(line => {\n      if (line.length < 2) {\n        return [];\n      }\n      const parsedLine = [];\n      let insideBracket = false;\n      let id = '';\n      let content = '';\n\n      for (let i = 0; i < line.length; i++) {\n        const char = line[i];\n        if (char === '[' && i > 0) {\n          content = content[0] === ' ' ? content.substring(1) : content;\n          parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n        }\n\n        if (char === '[') {\n          insideBracket = true;\n          id = '';\n          content = content.trim();\n        } else if (char === ']') {\n          insideBracket = false;\n          content = '';\n        } else if (insideBracket) {\n          id += char;\n        } else {\n          content += char;\n        }\n      }\n      content = content[0] === ' ' ? content.substring(1) : content;\n      parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n\n      return parsedLine;\n    });\n\n    dispatch(actions.setDistibutionLines(distributionLines));\n  }\n};\n\nconst activateMemberPill = id => (dispatch, getState) => {\n  const { activeMemberPill } = getState().distribute;\n\n  if (id === activeMemberPill) {\n    dispatch(actions.setActiveMemberPill(''));\n  } else {\n    dispatch(actions.setActiveMemberPill(id));\n  }\n};\n\nconst linkMemberToPart = id => (dispatch, getState) => {\n  const { activeMemberPill } = getState().distribute;\n\n  if (!activeMemberPill) return;\n\n  const distributionLines = [...getState().distribute.distributionLines];\n\n  for (let l = 0; l < distributionLines.length; l++) {\n    const line = distributionLines[l];\n    let found = false;\n    for (let p = 0; p < line.length; p++) {\n      const part = line[p];\n\n      if (part.id === id) {\n        // If it already has the member, remove it\n        if (part.memberId.includes(activeMemberPill)) {\n          part.memberId = part.memberId.filter(m => m !== activeMemberPill);\n        }\n        // If the active pill is NONE, replace it by NONE\n        else if (activeMemberPill === 'NONE') {\n          part.memberId = ['NONE'];\n        }\n        // If there was already a none, only add the new member\n        else if (part.memberId[0] === 'NONE') {\n          part.memberId = [activeMemberPill];\n        }\n        // Any other case, just push the member\n        else {\n          part.memberId.push(activeMemberPill);\n        }\n\n        found = true;\n        break;\n      }\n    }\n    if (found) break;\n  }\n  dispatch(actions.setDistibutionLines(distributionLines));\n  dispatch(calculateRates(distributionLines));\n};\n\nconst calculateRates = distributionLines => dispatch => {\n  const rates = {\n    total: 0,\n    remaining: 0,\n    max: 0,\n  };\n\n  for (let l = 0; l < distributionLines.length; l++) {\n    const line = distributionLines[l];\n    for (let p = 0; p < line.length; p++) {\n      const part = line[p];\n      if (part.memberId.length) {\n        for (let m = 0; m < part.memberId.length; m++) {\n          rates.total += part.duration;\n          const mId = part.memberId[m];\n          if (rates[mId] === undefined) {\n            // [duration, absolute percentage, relative percentage]\n            rates[mId] = [0, 0, 0];\n          }\n          rates[mId][0] += part.duration;\n          // Replace max if greater than previous max\n          if (rates[mId][0] > rates.max) [rates.max] = rates[mId];\n        }\n      } else {\n        rates.remaining += part.duration;\n      }\n    }\n  }\n\n  // Calculate percentages\n  Object.keys(rates).forEach(key => {\n    if (key === 'max' || key === 'remaining' || key === 'total') return;\n    const rate = rates[key];\n    // Add absolute percentage\n    rate[1] = Number(((100 * rate[0]) / rates.total).toFixed(1));\n    // Add relative percentage (bar width)\n    rate[2] = Math.round((100 * rate[0]) / rates.max);\n  });\n\n  dispatch(actions.setRates(rates));\n  dispatch(calculateRemainder(rates));\n};\n\nconst calculateRemainder = rates => dispatch => {\n  let remainder = 0;\n\n  if (rates.remaining === 0 && rates.total === 0) {\n    remainder = 100;\n  } else if (rates.remaining > 0 && rates.total > 0) {\n    remainder = Math.round(\n      (100 * rates.remaining) / (rates.total + rates.remaining)\n    );\n  } else if (rates.remaining === 0 && rates.total > 0) {\n    remainder = 0;\n  }\n  dispatch(actions.setDistributionRemainder(remainder));\n};\n\nconst handleDistributionCategory = event => async dispatch => {\n  const { value } = event.target;\n  dispatch(actions.setDistributionCategory(value));\n};\n\nconst handleSaveDistribution = () => async (dispatch, getState) => {\n  const { rates } = getState().distribute;\n  const ratesToSave = {};\n  Object.entries(rates).forEach(entry => {\n    if (Array.isArray(entry[1])) {\n      ratesToSave[entry[0]] = entry[1][0]; // eslint-disable-line\n    } else {\n      ratesToSave[entry[0]] = entry[1]; // eslint-disable-line\n    }\n  });\n\n  const body = {\n    category: getState().distribute.category,\n    songId: getState().distribute.activeSong.id,\n    rates: ratesToSave,\n    relationships: '',\n    features: [],\n    unitId: getState().distribute.activeUnit.id,\n  };\n\n  // Build relationships\n  const relationships = {};\n  getState().distribute.distributionLines.forEach(line =>\n    line.forEach(part => {\n      relationships[part.id] = part.memberId;\n    })\n  );\n\n  body.relationships = JSON.stringify(relationships);\n\n  // TO-DO: add featuring artists\n\n  await dispatch({ type: 'SEND_DISTRIBUTION', body });\n};\n\nexport default {\n  activateMemberPill,\n  activateSong,\n  activateUnit,\n  handleDistributionCategory,\n  handleSaveDistribution,\n  linkMemberToPart,\n  prepareSong,\n};\n","import distributeReducer from './reducers';\n\nexport { default as distributeOperations } from './operations';\nexport { default as distributeTypes } from './types';\nexport default distributeReducer;\n","const RESET_SYNC = 'RESET_SYNC';\nconst SET_ACTIVE_LINE = 'SET_ACTIVE_LINE';\nconst SET_ACTIVE_PILL = 'SET_ACTIVE_PILL';\nconst SET_ARE_LYRICS_LOCKED = 'SET_ARE_LYRICS_LOCKED';\nconst SET_FINAL_LYRICS = 'SET_FINAL_LYRICS';\nconst SET_INFO = 'SET_INFO';\nconst SET_IS_DISTRIBUTION_COMPLETE = 'SET_IS_DISTRIBUTION_COMPLETE';\nconst SET_LINK_SEQUENCE_MODE = 'SET_LINK_SEQUENCE_MODE';\nconst SET_LAST_ID_NUM = 'SET_LAST_ID_NUM';\nconst SET_LYRICS = 'SET_LYRICS';\nconst SET_PILLS = 'SET_PILLS';\nconst SET_QUEUE = 'SET_QUEUE';\nconst SET_STEP = 'SET_STEP';\nconst SET_STEPS = 'SET_STEPS';\nconst SET_SYNC_DISTRIBUTION_LINES = 'SET_SYNC_DISTRIBUTION_LINES';\nconst SET_SYNC_STATS = 'SET_SYNC_STATS';\nconst SET_TIMESTAMPS = 'SET_TIMESTAMPS';\nconst SET_VIDEO_ID = 'SET_VIDEO_ID';\n\nexport default {\n  RESET_SYNC,\n  SET_ACTIVE_LINE,\n  SET_ACTIVE_PILL,\n  SET_ARE_LYRICS_LOCKED,\n  SET_FINAL_LYRICS,\n  SET_INFO,\n  SET_IS_DISTRIBUTION_COMPLETE,\n  SET_LINK_SEQUENCE_MODE,\n  SET_LAST_ID_NUM,\n  SET_LYRICS,\n  SET_PILLS,\n  SET_QUEUE,\n  SET_STEP,\n  SET_STEPS,\n  SET_SYNC_DISTRIBUTION_LINES,\n  SET_SYNC_STATS,\n  SET_TIMESTAMPS,\n  SET_VIDEO_ID,\n};\n","import types from './types';\n\nconst initialState = {\n  activeLine: null,\n  activePill: null,\n  areLyricsLocked: false,\n  distributionLines: [],\n  finalLyrics: '',\n  info: {},\n  isDistributionComplete: false,\n  linkSequenceMode: false,\n  lastIdNum: 0,\n  lyrics: '',\n  pills: {},\n  queue: {},\n  step: 1,\n  steps: {\n    1: {\n      locked: false,\n      expanded: true,\n    },\n    2: {\n      locked: true,\n      expanded: false,\n    },\n    3: {\n      locked: true,\n      expanded: false,\n    },\n    4: {\n      locked: true,\n      expanded: false,\n    },\n    5: {\n      locked: true,\n      expanded: false,\n    },\n  },\n  stats: {\n    lines: 0,\n    pills: 0,\n    linked: 0,\n  },\n  timestamps: {},\n  videoId: '',\n};\n\nexport default function reducer(prevState = initialState, action) {\n  let newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_SYNC:\n      newState = Object.assign({}, initialState);\n      break;\n\n    case types.SET_ACTIVE_LINE:\n      newState.activeLine = action.payload;\n      break;\n\n    case types.SET_ACTIVE_PILL:\n      newState.activePill = action.payload;\n      break;\n\n    case types.SET_ARE_LYRICS_LOCKED:\n      newState.areLyricsLocked = action.payload;\n      break;\n\n    case types.SET_FINAL_LYRICS:\n      newState.finalLyrics = action.payload;\n      break;\n\n    case types.SET_INFO:\n      newState.info = action.payload;\n      break;\n\n    case types.SET_IS_DISTRIBUTION_COMPLETE:\n      newState.isDistributionComplete = action.payload;\n      break;\n\n    case types.SET_LINK_SEQUENCE_MODE:\n      newState.linkSequenceMode = action.payload;\n      break;\n\n    case types.SET_LAST_ID_NUM:\n      newState.lastIdNum = action.payload;\n      break;\n\n    case types.SET_LYRICS:\n      newState.lyrics = action.payload;\n      break;\n\n    case types.SET_PILLS:\n      newState.pills = action.payload;\n      break;\n\n    case types.SET_QUEUE:\n      newState.queue = action.payload;\n      break;\n\n    case types.SET_STEP:\n      newState.step = action.payload;\n      break;\n\n    case types.SET_STEPS:\n      newState.steps = action.payload;\n      break;\n\n    case types.SET_SYNC_DISTRIBUTION_LINES:\n      newState.distributionLines = action.payload;\n      break;\n\n    case types.SET_SYNC_STATS:\n      newState.stats = action.payload;\n      break;\n\n    case types.SET_TIMESTAMPS:\n      newState.timestamps = action.payload;\n      break;\n\n    case types.SET_VIDEO_ID:\n      newState.videoId = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetSync = payload => dispatch =>\n  dispatch({ type: types.RESET_SYNC, payload });\nconst setActiveLine = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_LINE, payload });\nconst setActivePill = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_PILL, payload });\nconst setAreLyricsLocked = payload => dispatch =>\n  dispatch({ type: types.SET_ARE_LYRICS_LOCKED, payload });\nconst setFinalLyrics = payload => dispatch =>\n  dispatch({ type: types.SET_FINAL_LYRICS, payload });\nconst setInfo = payload => dispatch =>\n  dispatch({ type: types.SET_INFO, payload });\nconst setIsDistributionComplete = payload => dispatch =>\n  dispatch({ type: types.SET_IS_DISTRIBUTION_COMPLETE, payload });\nconst setLinkSequenceMode = payload => dispatch =>\n  dispatch({ type: types.SET_LINK_SEQUENCE_MODE, payload });\nconst setLastIdNum = payload => dispatch =>\n  dispatch({ type: types.SET_LAST_ID_NUM, payload });\nconst setLyrics = payload => dispatch =>\n  dispatch({ type: types.SET_LYRICS, payload });\nconst setPills = payload => dispatch =>\n  dispatch({ type: types.SET_PILLS, payload });\nconst setQueue = payload => dispatch =>\n  dispatch({ type: types.SET_QUEUE, payload });\nconst setStep = payload => dispatch =>\n  dispatch({ type: types.SET_STEP, payload });\nconst setSteps = payload => dispatch =>\n  dispatch({ type: types.SET_STEPS, payload });\nconst setSyncDistributionLines = payload => dispatch =>\n  dispatch({ type: types.SET_SYNC_DISTRIBUTION_LINES, payload });\nconst setSyncStats = payload => dispatch =>\n  dispatch({ type: types.SET_SYNC_STATS, payload });\nconst setTimestamps = payload => dispatch =>\n  dispatch({ type: types.SET_TIMESTAMPS, payload });\nconst setVideoId = payload => dispatch =>\n  dispatch({ type: types.SET_VIDEO_ID, payload });\n\nexport default {\n  resetSync,\n  setActiveLine,\n  setActivePill,\n  setAreLyricsLocked,\n  setFinalLyrics,\n  setInfo,\n  setIsDistributionComplete,\n  setLinkSequenceMode,\n  setLastIdNum,\n  setLyrics,\n  setPills,\n  setQueue,\n  setStep,\n  setSteps,\n  setSyncDistributionLines,\n  setSyncStats,\n  setTimestamps,\n  setVideoId,\n};\n","import _ from 'lodash';\n\nimport actions from './actions';\n\nimport constants from '../../utils/constants';\n\nconst handleVideoId = e => dispatch => {\n  const { value } = e.target;\n\n  let videoId = '';\n  // TO-DO: Check if value is one of the placeholders and assign correct video id\n\n  // Parse youtube link\n  if (value.startsWith('https://youtu.be/')) {\n    videoId = value.substring(17);\n  } else if (value && !videoId) {\n    const youtubeLink = value.split('v=');\n    if (youtubeLink.length === 1) {\n      [videoId] = youtubeLink;\n    } else if (youtubeLink.length === 2) {\n      const youtubeLinkQuery = youtubeLink[1].split('&');\n      [videoId] = youtubeLinkQuery;\n    }\n  }\n\n  dispatch(actions.setVideoId(videoId));\n};\n\nconst handleFormInfo = (formState, originalArtist) => (dispatch, getState) => {\n  // Original Artist is required\n  if (!originalArtist) return;\n\n  const info = {};\n\n  const { artistsTypeaheadDict } = getState().db;\n  if (artistsTypeaheadDict[originalArtist]) {\n    info.artistId = artistsTypeaheadDict[originalArtist];\n    info.originalArtist = originalArtist;\n  } else {\n    info.originalArtist = originalArtist;\n  }\n\n  if (Object.values(formState.values)) {\n    info.album = formState.values.album;\n    info.groupSize = formState.values.groupSize;\n    info.single = formState.values.single || false;\n    info.title = formState.values.title;\n    info.private = formState.values.private;\n  }\n\n  info.videoId = getState().sync.videoId;\n  dispatch(actions.setInfo(info));\n  dispatch(unlockNextStep());\n};\n\nconst unlockNextStep = () => (dispatch, getState) => {\n  let { step } = getState().sync;\n  const steps = _.cloneDeep(getState().sync.steps);\n\n  steps[step].locked = true;\n  steps[step].expanded = false;\n  steps[step + 1].locked = false;\n  steps[step + 1].expanded = true;\n\n  step++;\n\n  if (step === 5) {\n    dispatch(finalizeLyrics());\n  }\n  dispatch(actions.setStep(step));\n  dispatch(actions.setSteps(steps));\n};\n\nconst unlockSpecificStep = num => (dispatch, getState) => {\n  if (!num) return;\n\n  let { step } = getState().sync;\n  const steps = _.cloneDeep(getState().sync.steps);\n\n  Object.values(steps).forEach(st => {\n    st.locked = true;\n    st.expanded = false;\n  });\n\n  steps[+num].locked = false;\n  steps[+num].expanded = true;\n\n  step = +num;\n\n  dispatch(actions.setStep(step));\n  dispatch(actions.setSteps(steps));\n\n  if (+num === 3) {\n    dispatch(actions.setAreLyricsLocked(false));\n  }\n};\n\n// Adds []s in the beginning of every line and remove diplicated spaces\nconst prepareLines = (clearBrackets = false) => (dispatch, getState) => {\n  const { lyrics } = getState().sync;\n\n  let preparedLyrics = lyrics;\n\n  if (clearBrackets) {\n    preparedLyrics = preparedLyrics.replace(/\\[(.*?)\\]/g, '[]');\n  }\n\n  preparedLyrics = preparedLyrics\n    .split('\\n')\n    .map(line => {\n      if (line.length > 0 && !line.startsWith('[')) {\n        return `[] ${line}`;\n      }\n      return line;\n    })\n    .join('\\n')\n    .replace(/ +(?= )/g, '');\n\n  dispatch(actions.setLyrics(preparedLyrics));\n};\n\n// Verify lyrics and add ids to all []s\nconst prepareLyrics = () => (dispatch, getState) => {\n  // Add spaces between ending and opening braces\n  // Remove spaces between opening and ending braces\n  let lyrics = getState().sync.lyrics.replace(/\\]\\(|\\)\\[|\\[ \\]|\\( \\)/g, s => {\n    if (s === '](') return '] (';\n    if (s === ')[') return ') [';\n    if (s === '( )') return '()';\n    if (s === '[ ]') return '[]';\n    return s;\n  });\n  // Add spaces between characters and opening braces\n  // Add spaces between ending braces and characters\n  lyrics = lyrics.replace(\n    /[A-Za-z0-9][(]|[A-Za-z0-9][[]|[)][A-Za-z0-9]|[\\]][A-Za-z0-9]/g,\n    s => `${s[0]} ${s[1]}`\n  );\n  // Add brackets before any parentheses\n  lyrics = lyrics.replace(\n    /[A-Za-z0-9?!][ ][(]|[)][ ][(]|[)][ ][A-Za-z0-9]/g,\n    s => `${s[0]}${s[1]}[] ${s[2]}`\n  );\n  // Add a unique idNum inside each []\n  let idNum = getState().sync.lastIdNum;\n  lyrics = lyrics.replace(/\\[\\]/g, () => {\n    idNum++;\n    return `[${idNum}]`;\n  });\n  dispatch(actions.setLastIdNum(idNum));\n  dispatch(actions.setLyrics(lyrics));\n  dispatch(actions.setAreLyricsLocked(true));\n};\n\nconst lockLyrics = (locked = true) => (dispatch, getState) => {\n  dispatch(prepareLines());\n  dispatch(prepareLyrics());\n  dispatch(actions.setAreLyricsLocked(locked));\n  const { lyrics } = getState().sync;\n  dispatch(parseLyricsToObject(lyrics));\n};\n\nconst handleLyricsEdit = e => dispatch => {\n  let text = '';\n  if (typeof e === 'string') {\n    text = e;\n  } else {\n    text = e.target.value || '';\n  }\n  dispatch(actions.setLyrics(text.replace(/ +(?= )/g, '')));\n  dispatch(actions.setAreLyricsLocked(false));\n};\n\nconst parseLyricsToObject = lyrics => (dispatch, getState) => {\n  let lineCount = 0;\n  const lines = lyrics.split('\\n').map(line => {\n    if (line.length < 2) {\n      return [];\n    }\n    const parsedLine = [];\n    let insideBracket = false;\n    let id = '';\n    let content = '';\n\n    for (let i = 0; i < line.length; i++) {\n      const char = line[i];\n      if (char === '[' && i > 0) {\n        content = content[0] === ' ' ? content.substring(1) : content;\n        parsedLine.push({ id, content, link: null });\n      }\n\n      if (char === '[') {\n        insideBracket = true;\n        id = '';\n        content = content.trim();\n        lineCount++;\n      } else if (char === ']') {\n        insideBracket = false;\n        content = '';\n      } else if (insideBracket) {\n        id += char;\n      } else {\n        content += char;\n      }\n    }\n    content = content[0] === ' ' ? content.substring(1) : content;\n    parsedLine.push({ id, content, link: null, color: null });\n\n    return parsedLine;\n  });\n  dispatch(actions.setSyncDistributionLines(lines));\n\n  const stats = { ...getState().sync.stats };\n  stats.lines = lineCount;\n\n  dispatch(actions.setSyncStats(stats));\n\n  setTimeout(() => {\n    dispatch(unlockNextStep());\n  }, 1000);\n};\n\nconst handleSyncKeydown = (event, player) => dispatch => {\n  // Only trigger if it is an allowed key and the video is playing\n  const { key } = event;\n  if (constants.SYNC_KEY_LIST[key] && player && player.getPlayerState() === 1) {\n    const timestamp = player.getCurrentTime();\n    dispatch(enqueueCapture(key, timestamp));\n  }\n};\n\nconst handleSyncKeyup = (event, player) => dispatch => {\n  const { key } = event;\n  if (constants.SYNC_KEY_LIST[key]) {\n    const timestamp = player.getCurrentTime();\n    dispatch(\n      dequeueCapture(key, timestamp, constants.SYNC_KEY_COLOR_LIST[key])\n    );\n  }\n};\n\nconst handleSyncBoxMouseDown = (key, player) => dispatch => {\n  // Only trigger if it is an allowed key and the video is playing\n  if (constants.SYNC_KEY_LIST[key] && player && player.getPlayerState() === 1) {\n    const timestamp = player.getCurrentTime();\n    dispatch(enqueueCapture(key, timestamp));\n  }\n};\n\nconst handleSyncBoxMouseUp = (key, player, color) => dispatch => {\n  if (constants.SYNC_KEY_LIST[key]) {\n    const timestamp = player.getCurrentTime();\n    dispatch(dequeueCapture(key, timestamp, color));\n  }\n};\n\nconst enqueueCapture = (id, timestamp) => (dispatch, getState) => {\n  const queue = Object.assign({}, getState().sync.queue);\n  if (queue[id] === undefined) {\n    queue[id] = timestamp;\n    dispatch(actions.setQueue(queue));\n  }\n};\n\nlet newPillId = 0;\n\nconst dequeueCapture = (id, timestamp, color) => (dispatch, getState) => {\n  const queue = Object.assign({}, getState().sync.queue);\n\n  if (queue[id]) {\n    const pills = Object.assign({}, getState().sync.pills);\n    const startTime = queue[id];\n    const duration = timestamp - startTime;\n    delete queue[id];\n\n    newPillId++;\n    pills[newPillId] = {\n      pillId: newPillId,\n      timestamp: startTime,\n      duration,\n      link: null,\n      key: id,\n      color,\n    };\n\n    dispatch(actions.setQueue(queue));\n    dispatch(actions.setPills(pills));\n\n    const stats = { ...getState().sync.stats };\n    stats.pills = Object.keys(pills).length;\n    dispatch(actions.setSyncStats(stats));\n  }\n};\n\nconst connectSyncLine = id => (dispatch, getState) => {\n  const { activeLine, activePill } = getState().sync;\n  if (activeLine === id) {\n    dispatch(actions.setActiveLine(null));\n  } else if (activePill) {\n    dispatch(\n      connect(\n        id,\n        activePill\n      )\n    );\n  } else {\n    dispatch(actions.setActiveLine(id));\n  }\n};\n\nconst connectSyncPill = id => (dispatch, getState) => {\n  const { activeLine, activePill } = getState().sync;\n  if (activePill === id) {\n    dispatch(actions.setActivePill(null));\n  } else if (activeLine) {\n    dispatch(\n      connect(\n        activeLine,\n        id\n      )\n    );\n  } else {\n    dispatch(actions.setActivePill(id));\n  }\n};\n\nlet linksBackUp = {};\nconst connect = (lineId, pillId) => (dispatch, getState) => {\n  let lines = [...getState().sync.distributionLines];\n  let pills = Object.assign({}, getState().sync.pills);\n\n  // Nullify any line with pillId as a link\n  lines = nullifyLine(lines, pillId, lineId);\n  // Nullify any pill with lineId as a link\n  pills = nullifyPill(pills, lineId);\n  // Link each other\n  function modifyPart(collection, searchId, id, key, newValue, color) {\n    return collection.map(l =>\n      l.map(part => {\n        if (+part[searchId] === +id) {\n          part[key] = newValue;\n          part.color = color;\n        }\n        return part;\n      })\n    );\n  }\n\n  pills[pillId].link = lineId;\n  modifyPart(lines, 'id', lineId, 'link', pillId, pills[pillId].color);\n\n  // Add to the linksBackUp for when user needs to edit lyrics\n  linksBackUp[lineId] = pillId;\n\n  dispatch(actions.setActiveLine(null));\n  dispatch(actions.setActivePill(null));\n\n  dispatch(actions.setPills(pills));\n  dispatch(actions.setSyncDistributionLines(lines));\n\n  // Check if distribution is complete\n  function isDistributionComplete(collection) {\n    let isComplete = true;\n\n    collection.forEach(l =>\n      l.forEach(part => {\n        if (part.link === null) isComplete = false;\n      })\n    );\n    return isComplete;\n  }\n\n  const stats = { ...getState().sync.stats };\n  stats.linked = Object.keys(linksBackUp).length;\n  dispatch(actions.setSyncStats(stats));\n\n  dispatch(actions.setIsDistributionComplete(isDistributionComplete(lines)));\n};\n\nconst deleteSyncPill = () => (dispatch, getState) => {\n  const { activePill } = getState().sync;\n\n  if (activePill) {\n    const pills = Object.assign({}, getState().sync.pills);\n    let lines = [...getState().sync.distributionLines];\n\n    // Stop linkSequencer\n    clearInterval(intervalId);\n\n    // Nullify any line with activePill as a link\n    lines = nullifyLine(lines, activePill);\n\n    delete pills[activePill];\n\n    dispatch(actions.setActivePill(null));\n    dispatch(actions.setPills(pills));\n    dispatch(actions.setSyncDistributionLines(lines));\n    dispatch(actions.setLinkSequenceMode(false));\n\n    const stats = { ...getState().sync.stats };\n    stats.linked = Object.keys(linksBackUp).length;\n    dispatch(actions.setSyncStats(stats));\n  }\n};\n\nconst nullifyLine = (collection, item, partId = null) => {\n  collection.forEach(l =>\n    l.forEach(part => {\n      if (+part.link === +item) {\n        part.link = null;\n        part.color = null;\n      }\n      if (+linksBackUp[part.id] === +item) {\n        delete linksBackUp[part.id];\n      }\n    })\n  );\n\n  // Also remove from backup if part was provided\n  if (partId) {\n    delete linksBackUp[partId];\n  }\n\n  return collection;\n};\n\nconst nullifyPill = (collection, item) => {\n  Object.keys(collection).forEach(k => {\n    const pill = collection[k];\n    if (+pill.link === +item) pill.link = null;\n  });\n  return collection;\n};\n\nconst finalizeLyrics = () => (dispatch, getState) => {\n  const lines = [...getState().sync.distributionLines];\n  const pills = Object.assign({}, getState().sync.pills);\n\n  const newLines = lines.map(line =>\n    line.map(part => {\n      part.startTime = +pills[part.link].timestamp.toFixed(2);\n      part.duration = +pills[part.link].duration.toFixed(2);\n      part.endTime = part.startTime + part.duration;\n      return part;\n    })\n  );\n\n  // Build string\n  let finalId = 1;\n  let finalLyrics = '';\n  const timepstamps = {};\n\n  newLines.forEach(line => {\n    if (line.length > 0) {\n      line.forEach(part => {\n        // Join parts\n        const bracket = `[${finalId}:${part.startTime}:${part.duration}] `;\n        finalLyrics += `${bracket} ${part.content}`;\n        finalId++;\n        // Create karaoke-line object\n        const second = Math.round(part.startTime);\n        if (timepstamps[second] === undefined) timepstamps[second] = [];\n        timepstamps[second].push({\n          partId: `part-${part.id}`,\n          duration: part.duration,\n          endTime: part.endTime,\n          size: 0,\n          totalSize: part.content.length,\n          content: part.content,\n        });\n      });\n    }\n    finalLyrics += '\\n';\n  });\n  finalLyrics = finalLyrics.replace('  ', ' ');\n  dispatch(actions.setFinalLyrics(finalLyrics));\n  dispatch(actions.setTimestamps(timepstamps));\n};\n\nconst resetPillLinks = () => (dispatch, getState) => {\n  const pills = { ...getState().sync.pills };\n  const distributionLines = [...getState().sync.distributionLines];\n\n  // Stop linkSequencer\n  clearInterval(intervalId);\n\n  Object.keys(pills).forEach(k => {\n    const pill = pills[k];\n    pill.link = null;\n  });\n\n  distributionLines.forEach(line => line.forEach(part => (part.link = null)));\n\n  dispatch(actions.setPills(pills));\n};\n\nlet intervalId = null;\n\nconst linkPillsSequence = () => async (dispatch, getState) => {\n  let isOn = getState().sync.linkSequenceMode;\n\n  if (isOn) {\n    dispatch(actions.setLinkSequenceMode(false));\n    clearInterval(intervalId);\n    dispatch(actions.setActivePill(null));\n  } else {\n    dispatch(actions.setLinkSequenceMode(true));\n    let { pills } = getState().sync;\n    const pillList = Object.keys(pills);\n\n    const findNextPill = () => pillList.find(el => pills[el].link === null);\n\n    let nextActive = findNextPill();\n\n    // While is on mode is turned on, perform every one second\n    intervalId = setInterval(() => {\n      pills = getState().sync.pills; // eslint-disable-line\n      isOn = getState().sync.linkSequenceMode;\n\n      const { activePill } = getState().sync;\n      if (activePill === null) {\n        nextActive = findNextPill();\n        dispatch(actions.setActivePill(nextActive));\n      }\n      if (nextActive === undefined) {\n        clearInterval(intervalId);\n        dispatch(actions.setLinkSequenceMode(false));\n        dispatch(actions.setActivePill(null));\n      }\n    }, 250);\n  }\n};\n\nconst saveSync = () => async (dispatch, getState) => {\n  const { info, finalLyrics } = getState().sync;\n  const body = {\n    album: info.album || null,\n    distribution: finalLyrics,\n    groupSize: info.groupSize,\n    originalArtist: info.originalArtist,\n    originalArtistId: info.artistId || null,\n    private: info.private || false,\n    single: info.single || false,\n    title: info.title,\n    videoId: info.videoId,\n  };\n\n  await dispatch({ type: 'SEND_SONG', body });\n\n  dispatch(actions.setStep(6));\n};\n\nconst handleResetSync = () => dispatch => {\n  newPillId = 0;\n  linksBackUp = {};\n  dispatch(actions.resetSync({}));\n};\n\nexport default {\n  connectSyncLine,\n  connectSyncPill,\n  deleteSyncPill,\n  handleFormInfo,\n  handleLyricsEdit,\n  handleResetSync,\n  handleSyncBoxMouseDown,\n  handleSyncBoxMouseUp,\n  handleSyncKeydown,\n  handleSyncKeyup,\n  handleVideoId,\n  linkPillsSequence,\n  lockLyrics,\n  prepareLines,\n  resetPillLinks,\n  saveSync,\n  unlockNextStep,\n  unlockSpecificStep,\n};\n","import syncReducer from './reducers';\n\nexport { default as syncOperations } from './operations';\nexport { default as syncTypes } from './types';\nexport default syncReducer;\n","const SET_TEST_1 = 'SET_TEST_1';\nconst SET_TEST_2 = 'SET_TEST_2';\nconst SET_TEST_3 = 'SET_TEST_3';\nconst SET_TEST_4 = 'SET_TEST_4';\nconst SET_TEST_5 = 'SET_TEST_5';\n\nexport default {\n  SET_TEST_1,\n  SET_TEST_2,\n  SET_TEST_3,\n  SET_TEST_4,\n  SET_TEST_5,\n};\n","import types from './types';\n\nconst initialState = {\n  test1: '',\n  test2: 0,\n  test3: true,\n  test4: [],\n  test5: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_TEST_1:\n      newState.test1 = action.payload;\n      break;\n\n    case types.SET_TEST_2:\n      newState.test2 = action.payload;\n      break;\n\n    case types.SET_TEST_3:\n      newState.test3 = action.payload;\n      break;\n\n    case types.SET_TEST_4:\n      newState.test4 = action.payload;\n      break;\n\n    case types.SET_TEST_5:\n      newState.test5 = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setTest1 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_1, payload });\nconst setTest2 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_2, payload });\nconst setTest3 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_3, payload });\nconst setTest4 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_4, payload });\nconst setTest5 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_5, payload });\n\nexport default {\n  setTest1,\n  setTest2,\n  setTest3,\n  setTest4,\n  setTest5,\n};\n","import actions from './actions';\n\nconst testFunction1 = () => dispatch => {\n  console.log('testFunction1');\n\n  dispatch(actions.setTest1('Ran testFunction1'));\n};\n\nconst testFunction2 = () => dispatch => {\n  console.log('testFunction2');\n\n  dispatch(actions.setTest1('Ran testFunction2'));\n};\n\nconst testFunction3 = () => dispatch => {\n  console.log('testFunction3');\n\n  dispatch(actions.setTest1('Ran testFunction3'));\n};\n\nconst testFunction4 = () => dispatch => {\n  console.log('testFunction4');\n\n  dispatch(actions.setTest1('Ran testFunction4'));\n};\n\nconst testFunction5 = () => dispatch => {\n  console.log('testFunction5');\n\n  dispatch(actions.setTest1('Ran testFunction5'));\n};\n\nexport default {\n  testFunction1,\n  testFunction2,\n  testFunction3,\n  testFunction4,\n  testFunction5,\n};\n","import tempReducer from './reducers';\n\nexport { default as tempOperations } from './operations';\nexport { default as tempTypes } from './types';\nexport default tempReducer;\n","import { combineReducers } from 'redux';\n\nimport { reducer as toastr } from 'react-redux-toastr';\n\nimport app, { appTypes } from './app';\nimport admin, { adminTypes } from './admin';\nimport artists, { artistsTypes } from './artists';\nimport auth, { authTypes } from './auth';\nimport db, { dbTypes } from './db';\nimport distribute, { distributeTypes } from './distribute';\nimport sync, { syncTypes } from './sync';\nimport temp, { tempTypes } from './temp';\n\nconst rootReducer = combineReducers({\n  app,\n  admin,\n  artists,\n  auth,\n  db,\n  distribute,\n  sync,\n  temp,\n  toastr,\n});\n\nexport const types = {\n  ...appTypes,\n  ...adminTypes,\n  ...artistsTypes,\n  ...authTypes,\n  ...dbTypes,\n  ...distributeTypes,\n  ...syncTypes,\n  ...tempTypes,\n};\n\nexport default rootReducer;\n","import HttpStatus from 'http-status-codes';\n\n/**\n * Parses the api path into an object\n * @param {string} path\n * @returns {object} with length of the path, root, referenceId, subPath, and queryParams\n */\nconst breadcrumble = path => {\n  if (!path) {\n    throw new Error(\n      `${HttpStatus.UNAUTHORIZED}: A path is required to make api requests`\n    );\n  }\n\n  if (typeof path !== 'string') {\n    throw new Error(\n      `${HttpStatus.BAD_REQUEST}: Breadcrumble path argument must be a string`\n    );\n  }\n\n  const urlSplit = path.split('?');\n  const fullPath = urlSplit[0].split('/');\n  const queryParams = urlSplit[1] || null;\n  const queryResult = {};\n\n  if (queryParams) {\n    const querySplit = queryParams.split('&');\n    for (let i = 0; i < querySplit.length; i++) {\n      const subQuery = querySplit[i].split('=');\n      if (subQuery.length === 2) {\n        const queryName = subQuery[0];\n        let queryValue = subQuery[1];\n        if (queryValue.includes(',')) {\n          queryValue = queryValue.split(',');\n        }\n        queryResult[queryName] = queryValue;\n      }\n    }\n  }\n\n  return {\n    length: fullPath.length - 1,\n    root: fullPath[1],\n    referenceId: fullPath[2] || null,\n    subPath: fullPath[3] || null,\n    queryParams: Object.keys(queryResult).length > 0 ? queryResult : null,\n  };\n};\n\n/**\n * Builds a string query to be used on search functions for artists\n * @param {object} data\n * @returns {string} a lower cased string with name, otherNames, and members\n */\nconst buildArtistQuery = data => {\n  const { name } = data;\n  const otherNames = data.otherNames || '';\n  const memberList = data.memberList || [];\n  const memberNames = memberList.join(' ');\n  return `${name} ${otherNames} ${memberNames}`.toLowerCase();\n};\n\n/**\n * Build member initials based on their name\n * @param {string} name\n * @returns {string} a two-digit upper cased string\n */\nconst buildMemberInitials = name =>\n  `${name[0]}${name[Math.floor(name.length / 2)]}`.toUpperCase();\n\n/**\n * Builds a string query to be used on search functions for songs\n * @param {Object} data\n * @returns {string} a lowercase string with title, original artists, and album name\n */\nconst buildSongQuery = data => {\n  const { title } = data;\n  const originalArtist = data.originalArtist || '';\n  const album = data.album || '';\n  return `${title} ${originalArtist} ${album}`.toLowerCase();\n};\n\n/**\n * Calculates the age of a member based on their birthday (YYYYMMDD) keeping a cache\n * @param {number} birthday\n * @returns {number} the age of the member\n */\nconst TODAY = process.env.NODE_ENV === 'test' ? 1550000000000 : Date.now();\nconst ageDict = {};\nconst calculateAge = birthday => {\n  if (ageDict[birthday]) return ageDict[birthday];\n\n  const birthdateString = birthday.toString();\n  const birthDate = new Date(\n    +birthdateString.substring(0, 4),\n    +birthdateString.substring(4, 6),\n    +birthdateString.substring(6)\n  );\n\n  const ageDate = new Date(TODAY - birthDate.getTime());\n  ageDict[birthday] = Math.abs(ageDate.getUTCFullYear() - 1970);\n  return ageDict[birthday];\n};\n\n/**\n * Parses genre into ENUM-ready string\n * @param {string} genre\n * @returns {string} genre ENUM-ready\n */\nconst ensureGenreEnum = genre => {\n  const GENRES_TRANSFORM = {\n    CPOP: 'CPOP',\n    JPOP: 'JPOP',\n    KPOP: 'KPOP',\n    OTHER: 'OTHER',\n    POP: 'POP',\n    'C-POP': 'CPOP',\n    'J-POP': 'JPOP',\n    'K-POP': 'KPOP',\n  };\n\n  return GENRES_TRANSFORM[genre.toUpperCase()];\n};\n\n/**\n * Gets a random padded 6-digit color number\n * @param {string} colorId\n * @returns {string} padded 6-digit color number\n */\nconst getAlternativeColor = colorId => {\n  const num = getNumberFromColorId(colorId) + 15;\n  let list = [num, num - 2, num - 1, num + 1, num + 2];\n  list = list.map(item => (item > 30 ? item - 30 : item));\n  return makeSixDigit(list[Math.floor(Math.random() * list.length)]);\n};\n\n/**\n * Extracts the number value of a colorId\n * @param {string} colorId\n * @returns {number} number value of the colorID\n */\nconst getNumberFromColorId = colorId => Number(colorId.split('0000')[1]);\n\n/**\n * Makes a number into a 6 digit stringed-number padded with 0s\n * @param {number} num\n * @returns {string} 6 digit stringed-number padded with 0s\n */\nconst makeSixDigit = num => {\n  const pad = '000000';\n\n  // if it's not a number nor a stringified number\n  if (Number.isNaN(Number(num)) || typeof num === 'boolean') {\n    return pad;\n  }\n  const str = num.toString();\n\n  return pad.substring(0, pad.length - str.length) + str;\n};\n\n/**\n * Merges the array of members from the unit with the list of members generated from each indivitual member\n * @param {array} unitMembersArr\n * @param {array} membersArr\n * @returns {array} a merged member array\n */\nconst mergeMembers = (unitMembersArr, membersArr) => {\n  const positionsDict = {};\n\n  unitMembersArr.forEach(member => {\n    positionsDict[member.memberId] = member.positions;\n  });\n\n  return membersArr.map(member => ({\n    ...member.attributes,\n    positions: positionsDict[member.id],\n  }));\n};\n\n/**\n * Parses the members object from the database with concatenated id:name:position into a array with proper objects\n * @param {object} membersObj\n * @returns {array} array of members objects with memberId, name, and array of positions\n */\nconst parseUnitMembers = membersObj => {\n  const dict = {};\n  Object.keys(membersObj).forEach(key => {\n    const [memberId, memberName, memberPosition] = key.split(':');\n\n    if (dict[memberId] === undefined) {\n      dict[memberId] = {\n        positions: {},\n      };\n    }\n\n    dict[memberId].memberId = memberId;\n    dict[memberId].name = memberName;\n\n    dict[memberId].positions[memberPosition] = true;\n  });\n\n  return Object.keys(dict).map(entry => {\n    const result = {\n      memberId: dict[entry].memberId,\n      name: dict[entry].name,\n      positions: Object.keys(dict[entry].positions),\n    };\n    return result;\n  });\n};\n\n/**\n * Verifies if any of the required fields are present in the data, erroring out if any is missing\n * @param {object} data\n * @param {string} id\n * @param {string} uid\n * @param {array} fields\n * @returns {boolean} true if function runs without errors\n */\nconst verifyRequirements = (data, id, uid, fields) => {\n  const missing = [];\n  fields.forEach(field => {\n    if (field === 'id' && (id === undefined || id === null)) {\n      missing.push('id');\n    } else if (field === 'uid' && (id === undefined || uid === null)) {\n      missing.push('user uid');\n    } else if (field !== 'id' && field !== 'uid' && data[field] === undefined) {\n      missing.push(field);\n    }\n  });\n\n  if (missing.length > 0) {\n    throw new Error(\n      `${HttpStatus.BAD_REQUEST}: Can NOT perform post request for ${id ||\n        null}, missing the following data: ${missing.join(', ')}`\n    );\n  }\n\n  return true;\n};\n\n/**\n * Asyncronous function that delays code when using with async/await\n * @param {number} ms\n * @returns {Promise}\n */\nexport const wait = (ms = 1000) => new Promise((r, j) => setTimeout(r, ms)); // eslint-disable-line\n\nexport default {\n  breadcrumble,\n  buildArtistQuery,\n  buildMemberInitials,\n  buildSongQuery,\n  calculateAge,\n  ensureGenreEnum,\n  getAlternativeColor,\n  getNumberFromColorId,\n  mergeMembers,\n  makeSixDigit,\n  parseUnitMembers,\n  verifyRequirements,\n};\n","import HttpStatus from 'http-status-codes';\n\nexport default class NewResponse {\n  constructor() {\n    this.statusCode = null;\n    this.dataResponse = null;\n    this.errorResponse = null;\n  }\n\n  status(code) {\n    this.statusCode = code;\n  }\n\n  ok() {\n    this.statusCode = HttpStatus.OK;\n  }\n\n  data(dt, code = HttpStatus.OK) {\n    this.statusCode = code;\n    if (dt && dt.id && dt.type && dt.attributes) {\n      this.dataResponse = {\n        id: dt.id,\n        type: dt.type,\n        attributes: dt.attributes,\n      };\n    } else {\n      this.dataResponse = dt;\n    }\n  }\n\n  error(code = HttpStatus.INTERNAL_SERVER_ERROR, message = 'Unknown Error') {\n    this.statusCode = code;\n    this.errorResponse = {\n      code: this.statusCode,\n      message,\n    };\n  }\n\n  resolve() {\n    if (this.errorResponse) {\n      return this.throwError();\n    }\n\n    if (!this.statusCode) {\n      this.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'No status provided by the api'\n      );\n      return this.throwError();\n    }\n\n    if (!this.dataResponse) {\n      this.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'No data provided by the api'\n      );\n      return this.throwError();\n    }\n\n    return {\n      data: this.dataResponse,\n    };\n  }\n\n  throwError() {\n    throw new Error(\n      `${this.errorResponse.code}: ${this.errorResponse.message}`\n    );\n  }\n}\n","export const GENDERS = {\n  FEMALE: 'Female',\n  MALE: 'Male',\n  UNKOWN: 'Unknown',\n};\n\nexport const GENRES = {\n  CPOP: 'C-Pop',\n  JPOP: 'J-Pop',\n  KPOP: 'K-Pop',\n  OTHER: 'Other',\n  POP: 'Pop',\n};\n\nexport const NATIONALITIES = {\n  AMERICAN: 'American',\n  BRAZILIAN: 'Brazilian',\n  BRITISH: 'British',\n  CANADIAN: 'Canadian',\n  CHINESE: 'Chinese',\n  JAPANESE: 'Japanese',\n  KOREAN: 'Korean',\n  OTHER: 'Other',\n  TAIWANESE: 'Taiwanese',\n  THAI: 'Thai',\n  VIETNAMISE: 'Vietnamise',\n};\n\nexport const POSITIONS = {\n  LEADER: 'Leader',\n  MAIN_VOCALIST: 'Main Vocalist',\n  MAIN_RAPPER: 'Main Rapper',\n  MAIN_DANCER: 'Main Dancer',\n  LEAD_VOCALIST: 'Lead Vocalist',\n  LEAD_RAPPER: 'Lead Rapper',\n  LEAD_DANCER: 'Lead Dancer',\n  VOCALIST: 'Vocalist',\n  RAPPER: 'Rapper',\n  DANCER: 'Dancer',\n  CENTER: 'Center',\n  FACE: 'Face of the Group',\n  VISUAL: 'Visual',\n  MAKNAE: 'Maknae',\n};\n\nexport default {\n  GENDERS,\n  GENRES,\n  NATIONALITIES,\n  POSITIONS,\n};\n","/* eslint arrow-body-style: 0 */\nimport _ from 'lodash';\n\nimport utils from './utils';\n\nimport { GENRES } from './enums';\n\nconst UNKNOWN = 'UNKNOWN';\n\nexport const serialize = {\n  artist: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'artist',\n      attributes: {\n        createdBy: data.createdBy || null,\n        genre: GENRES[data.genre] || UNKNOWN,\n        memberIds: data.memberIds || [],\n        memberList: data.memberList || [],\n        modifiedBy: data.modifiedBy || null,\n        name: data.name,\n        otherNames: data.otherNames || '',\n        private: data.private || false,\n        query: data.query || utils.buildArtistQuery(data),\n        units: data.units || [],\n      },\n    };\n  },\n  color: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'color',\n      attributes: {\n        b: data.b,\n        count: data.count || 0,\n        g: data.g,\n        hex: data.hex,\n        name: data.name,\n        number: data.id\n          ? utils.getNumberFromColorId(data.id)\n          : utils.getNumberFromColorId(id),\n        r: data.r,\n      },\n    };\n  },\n  distribution: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'distribution',\n      attributes: {\n        createdBy: data.createdBy || null,\n        category: data.category,\n        features: data.features || [],\n        modifiedBy: data.modifiedBy || null,\n        rates: data.rates,\n        relationships: JSON.parse(data.relationships),\n        songId: data.songId,\n        unitId: data.unitId,\n      },\n    };\n  },\n  member: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'member',\n      attributes: {\n        age: data.birthdate ? utils.calculateAge(data.birthdate) : 0,\n        birthdate: data.birthdate || 0,\n        colorId: data.colorId,\n        color: data.color || null,\n        createdBy: data.createdBy || null,\n        gender: data.gender || UNKNOWN,\n        initials: data.initials || utils.buildMemberInitials(data.name),\n        name: data.name,\n        modifiedBy: data.modifiedBy || null,\n        nationality: data.nationality || UNKNOWN,\n        positions: data.positions || [],\n        private: data.private || false,\n        referenceArtist: data.referenceArtist || UNKNOWN,\n      },\n    };\n  },\n  song: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'song',\n      attributes: {\n        album: data.album || UNKNOWN,\n        createdBy: data.createdBy || null,\n        distribution: data.distribution,\n        groupSize: data.groupSize || 0,\n        modifiedBy: data.modifiedBy || null,\n        originalArtist: data.originalArtist || '',\n        originalArtistId: data.originalArtistId || null,\n        private: data.private || false,\n        query: data.query || utils.buildSongQuery(data),\n        single: data.single || false,\n        title: data.title,\n        videoId: data.videoId || null,\n      },\n    };\n  },\n  unit: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'unit',\n      attributes: {\n        artistId: data.artistId,\n        averages: data.averages || [],\n        createdBy: data.createdBy || null,\n        debutYear: data.debutYear,\n        distributions: data.distributions || [],\n        distributions_legacy: data.distributions_legacy || [],\n        members: data.members ? utils.parseUnitMembers(data.members) : [],\n        modifiedBy: data.modifiedBy || null,\n        name: data.name,\n        official: data.official || false,\n        private: data.private || false,\n        subUnit: data.subUnit || false,\n      },\n    };\n  },\n  user: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'user',\n      attributes: {\n        email: data.email,\n        favoriteArtists: data.favoriteArtists || {}, // Oject(Reference(Artist):Boolean)\n        favoriteMembers: data.favoriteMembers || {}, // Oject(Reference(Member):Boolean)\n        biases: data.biases || {}, // Object(Reference(Artist):Reference(Member))\n        isAdmin: data.isAdmin || false,\n        latestUnits: data.latesUnits || [],\n        session: data.session || {},\n        displayName: null, // merged from auth\n        photoURL: null, // merged from auth\n      },\n    };\n  },\n};\n\nexport const serializeCollection = (object, type) =>\n  Object.keys(object).map(key => serialize[type](object[key], key));\n","/* eslint arrow-body-style: 0 */\n\nimport utils from './utils';\n\nexport const deserialize = {\n  post: {\n    artist: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid', 'name']);\n      return {\n        id,\n        createdBy: uid,\n        genre: data.genre ? utils.ensureGenreEnum(data.genre) : 'OTHER',\n        modifiedBy: uid,\n        name: data.name,\n        otherNames: data.otherNames || null,\n        private: data.private || false,\n        units: data.units || [],\n      };\n    },\n    color: (data, id) => {\n      utils.verifyRequirements(data, id, null, [\n        'id',\n        'name',\n        'hex',\n        'r',\n        'g',\n        'b',\n      ]);\n      return {\n        id,\n        b: data.b,\n        g: data.g,\n        hex: data.hex,\n        name: data.name,\n        r: data.r,\n      };\n    },\n    distribution: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'category',\n        'rates',\n        'relationships',\n        'songId',\n        'unitId',\n      ]);\n      return {\n        id,\n        category: data.category,\n        createdBy: uid,\n        features: data.features || null,\n        modifiedBy: uid,\n        rates: data.rates,\n        relationships:\n          typeof data.relationships === 'string'\n            ? data.relationships\n            : JSON.stringify(data.relationships),\n        songId: data.songId,\n        unitId: data.unitId,\n      };\n    },\n    log: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'timestamp', 'content']);\n      return {\n        reportedBy: uid || 'ANONYMOUS',\n        timestamp: data.timestamp,\n        content: data.content,\n      };\n    },\n    member: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'name',\n        'birthdate',\n        'colorId',\n        'gender',\n        'nationality',\n        'referenceArtist',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        birthdate: data.birthdate,\n        colorId: data.colorId,\n        gender: data.gender,\n        initials: data.initials || utils.buildMemberInitials(data.name),\n        modifiedBy: uid,\n        name: data.name,\n        nationality: data.nationality,\n        private: data.private || false,\n        referenceArtist: data.referenceArtist,\n      };\n    },\n    song: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'distribution',\n        'groupSize',\n        'originalArtist',\n        'title',\n        'videoId',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        album: data.album || null,\n        distribution: data.distribution,\n        groupSize: data.groupSize,\n        modifiedBy: uid,\n        originalArtist: data.originalArtist || '',\n        originalArtistId: data.originalArtistId || null,\n        private: data.private || false,\n        single: data.single || false,\n        title: data.title,\n        videoId: data.videoId,\n      };\n    },\n    unit: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'artistId',\n        'debutYear',\n        'name',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        artistId: data.artistId,\n        debutYear: data.debutYear,\n        distributions: data.distributions || [],\n        distributions_legacy: data.distributions_legacy || [],\n        modifiedBy: uid,\n        name: data.name,\n        members: data.members || {},\n        official: data.official || false,\n        private: data.private || false,\n        subUnit: data.subUnit || false,\n      };\n    },\n    user: (data, id) => {\n      utils.verifyRequirements(data, id, null, ['id', 'email']);\n      return {\n        uid: id,\n        email: data.email,\n        favoriteArtists: data.favoriteArtists || {}, // Oject(Reference(Artist):Boolean)\n        favoriteMembers: data.favoriteMembers || {}, // Oject(Reference(Member):Boolean)\n        biases: data.biases || {}, // Object(Reference(Artist):Reference(Member))\n        isAdmin: data.isAdmin || false,\n        latestUnits: data.latesUnits || [],\n        session: data.session || {},\n        displayName: null, // merged from auth\n        photoUrl: null, // merged from auth\n      };\n    },\n  },\n  put: {\n    artist: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n      if (uid) res.modifiedBy = uid;\n      if (data.genre) res.genre = utils.ensureGenreEnum(data.genre);\n      if (data.memberList) res.memberList = data.memberList;\n      if (data.name) res.name = data.name;\n      if (data.otherNames) res.otherNames = data.otherNames;\n      if (data.private) res.private = data.private;\n      if (data.units) res.units = data.units;\n\n      return res;\n    },\n    distribution: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'category',\n        'rates',\n        'relationships',\n        'songId',\n        'unitId',\n      ]);\n      const res = {};\n      if (uid) res.modifiedBy = uid;\n      if (data.category) res.category = data.category;\n      if (data.features) res.features = data.features;\n      if (data.rates) res.rates = data.rates;\n      if (data.relationships) res.relationships = data.relationships;\n      if (data.songId) res.songId = data.songId;\n      if (data.unitId) res.unitId = data.unitId;\n\n      return res;\n    },\n    member: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.colorId) {\n        res.colorId = data.colorId;\n      }\n\n      if (data.birthdate) res.birthdate = data.birthdate;\n      if (data.gender) res.gender = data.gender;\n\n      if (data.name) {\n        res.name = data.name;\n        res.initials = utils.buildMemberInitials(data.name);\n      }\n      if (data.initials) res.initials = data.initials;\n\n      if (data.nationality) res.nationality = data.nationality;\n      if (data.positions) res.positions = data.positions;\n\n      if (data.private) res.private = data.private;\n      if (data.referenceArtist) res.referenceArtist = data.referenceArtist;\n\n      return res;\n    },\n    song: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.album) res.album = data.album;\n      if (data.distribution) res.distribution = data.distribution;\n      if (data.groupSize) res.groupSize = data.groupSize;\n      if (data.originalArtist) res.originalArtist = data.originalArtist;\n      if (data.originalArtistId) res.originalArtistId = data.originalArtistId;\n      if (data.single) res.single = data.single;\n      if (data.private) res.private = data.private;\n      if (data.title) res.title = data.title;\n      if (data.videoId) res.videoId = data.videoId;\n\n      return res;\n    },\n    unit: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.artistId) res.artistId = data.artistId;\n      if (data.distributions) res.distributions = data.distributions;\n      if (data.distributions_legacy)\n        res.distributions_legacy = data.distributions_legacy;\n      if (data.members) res.members = data.members;\n      if (data.name) res.name = data.name;\n      if (data.official) res.official = data.official;\n      if (data.private) res.private = data.private;\n      if (data.subUnit) res.subUnit = data.subUnit;\n\n      return res;\n    },\n    user: (data, id) => {\n      utils.verifyRequirements(data, id, null, ['id']);\n      const res = {};\n\n      if (data.email) res.email = data.email;\n      if (data.favoriteArtists) res.favoriteArtists = data.favoriteArtists;\n      if (data.favoriteMembers) res.favoriteMembers = data.favoriteMembers;\n      if (data.biases) res.biases = data.biases;\n      if (data.isAdmin) res.isAdmin = data.isAdmin;\n      if (data.latesUnits) res.latesUnits = data.latesUnits;\n      if (data.session) res.session = data.session;\n\n      return res;\n    },\n  },\n};\n\nexport default deserialize;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\n\nexport const fb = firebase.initializeApp(config);\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const userSession = { user: {} };\n\n// Verify user auth session presence\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    userSession.user = user;\n  }\n});\n\nexport default fb;\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_authenticated\", \"_admin\", _loaded, _loggedInThisSession, _uid, _tries] }] */\n/* eslint class-methods-use-this: 0 */\n\nimport firebase from 'firebase';\nimport HttpStatus from 'http-status-codes';\nimport utils, { wait } from './utils';\n\nimport NewResponse from './response';\n\nimport { serialize, serializeCollection } from './serializers';\nimport { deserialize } from './deserializers';\n\nimport { fb, googleProvider, userSession } from './firebase';\n\nconst WAIT_AUTH_TIME = 2000;\nconst WAIT_DB_TIME = 3500;\n\nexport const db = {\n  artists: {},\n  colors: {},\n  distributions: {},\n  members: {},\n  positions: {},\n  songs: {},\n  units: {},\n  users: {},\n};\n\nexport const fullyLoaded = {\n  artists: false,\n  colors: false,\n  distributions: false,\n  members: false,\n  positions: false,\n  songs: false,\n  units: false,\n};\n\nexport let dbRef = null; // eslint-disable-line\n\nclass API {\n  constructor() {\n    this._authenticated = false;\n    this._admin = false;\n    this._loaded = false;\n    this._loggedInThisSession = false;\n    this._tries = 0;\n    this._uid = null;\n  }\n\n  dbRef() {\n    return this._loaded ? dbRef : null;\n  }\n\n  /**\n   * Gets basic information about database\n   * @category Getter\n   * @returns {Object}\n   */\n  dbInfo() {\n    this.print('Fetching DB info...');\n    const response = new NewResponse();\n\n    response.status(HttpStatus.OK);\n    response.data({\n      admin: this._authenticated ? this._admin : false,\n      authenticated: this._authenticated,\n      loaded: this._loaded,\n    });\n\n    return response.resolve();\n  }\n\n  /**\n   * Creates a reference to the firebase database and updates api loaded status\n   * @category Method\n   * @returns {Boolean}\n   */\n  async init() {\n    this.print('Running init...');\n    const response = new NewResponse();\n\n    dbRef = await fb.database();\n\n    if (dbRef) {\n      this._loaded = true;\n      response.status(HttpStatus.OK);\n      response.data(this.dbInfo().data);\n      this._loaded = true;\n    } else {\n      response.error(\n        HttpStatus.BAD_REQUEST,\n        'Failed to load firebase database'\n      );\n    }\n\n    response.resolve();\n    return this;\n  }\n\n  /**\n   * Verifies if the users is still logged from a previous session\n   * @category Method\n   * @returns {Object} user\n   */\n  async auth() {\n    this.print('Running auth...');\n    const response = new NewResponse();\n\n    if (!this._loaded) {\n      await wait(WAIT_AUTH_TIME);\n    }\n\n    const { user } = userSession;\n\n    if (user.emailVerified) {\n      this._authenticated = true;\n      this._uid = user.uid;\n\n      let userRes;\n      try {\n        userRes = await this.get(`/users/${user.uid}`);\n      } catch (_) {\n        userRes = await this.post(`/users/${user.uid}`);\n      }\n\n      userRes.data.attributes.displayName = user.displayName;\n      userRes.data.attributes.photoURL = user.photoURL;\n\n      this._admin = userRes.data.attributes.isAdmin;\n      response.data(userRes.data);\n    } else {\n      this._authenticated = false;\n      this._uid = null;\n      response.data({}, HttpStatus.NO_CONTENT);\n    }\n    return response.resolve();\n  }\n\n  async login() {\n    this.print('Running login...');\n    const response = new NewResponse();\n\n    let result;\n\n    try {\n      await fb.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n      result = await fb.auth().signInWithPopup(googleProvider);\n    } catch (error) {\n      response.error(error.code, error.message);\n      return response.resolve();\n    }\n\n    try {\n      const { user } = result;\n      if (user.emailVerified) {\n        this._authenticated = true;\n        this._uid = user.uid;\n\n        let userRes;\n        try {\n          userRes = await this.get(`/users/${user.uid}`);\n        } catch (_) {\n          userRes = await this.post(`/users/${user.uid}`);\n        }\n\n        userRes.data.attributes.displayName = user.displayName;\n        userRes.data.attributes.photoURL = user.photoURL;\n\n        this._admin = userRes.data.attributes.isAdmin;\n        response.data(userRes.data);\n      }\n    } catch (error) {\n      response.error(error.code, error.message);\n    }\n\n    return response.resolve();\n  }\n\n  async logoff() {\n    this.print('Running logout...');\n    const response = new NewResponse();\n\n    try {\n      await fb.auth().signOut();\n      this._authenticated = false;\n      this._uid = null;\n      response.ok();\n      response.data(true);\n    } catch (error) {\n      response.error(error.code, error.message);\n    }\n\n    return response.resolve();\n  }\n\n  print(message, path = '') {\n    if (process.env.NODE_ENV !== 'test') console.warn(message, path); // eslint-disable-line\n  }\n\n  async resyncDatabase() {\n    this.print('Resyncing database...');\n\n    // Reset fullyLoaded\n    fullyLoaded.artists = false;\n    fullyLoaded.colors = false;\n    fullyLoaded.distributions = false;\n    fullyLoaded.members = false;\n    fullyLoaded.songs = false;\n    fullyLoaded.units = false;\n\n    const syncDB = {\n      artists: {},\n      positions: {},\n      colors: {},\n      members: {},\n      units: {},\n    };\n\n    // Request DB tables\n    await dbRef.ref(`/artists`).once('value', snapshot => {\n      syncDB.artists = snapshot.val();\n    });\n    await dbRef.ref(`/colors`).once('value', snapshot => {\n      syncDB.colors = snapshot.val();\n    });\n    await dbRef.ref(`/members`).once('value', snapshot => {\n      syncDB.members = snapshot.val();\n    });\n    await dbRef.ref(`/units`).once('value', snapshot => {\n      syncDB.units = snapshot.val();\n    });\n    // TO-DO: Add distributions resync\n\n    // Resync\n    resyncFunctions.parse(syncDB);\n\n    // Post new DB tables\n    await dbRef.ref(`/artists`).set(syncDB.artists, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/colors`).set(syncDB.colors, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/members`).set(syncDB.members, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/positions`).set(syncDB.positions, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/units`).set(syncDB.units, error => {\n      if (error) throw new Error(error);\n    });\n\n    return true;\n  }\n\n  async get(path) {\n    this.print('Fetching data...', path);\n    /*\n     * List of possible get calls:\n     * /artists\n     * /artists/<id>\n     * /artists/<id>/units\n     * /colors\n     * /colors/<id>\n     * /members\n     * /members/<id>\n     * /positions\n     * /songs\n     * /songs/<id>\n     * /units/<id>\n     * /units/<id>/distribution\n     * /units/<id>/members\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      await wait(WAIT_DB_TIME);\n\n      if (!this._loaded || !this._authenticated) {\n        return this.throwDBError('GET');\n      }\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    switch (route.root) {\n      // API/artists\n      case 'artists':\n        // API/artists/<id>/units\n        if (route.referenceId && route.subPath === 'units') {\n          result = await getFunctions.fetchArtistUnits(route.referenceId);\n        }\n        // API/artists/<id>\n        else if (route.referenceId) {\n          result = await getFunctions.fetchArtist(route.referenceId);\n        }\n        // API/aritsts\n        else {\n          result = await getFunctions.fetchArtists();\n        }\n        break;\n      // API/colors\n      case 'colors':\n        // API/colors/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchColor(route.referenceId);\n        }\n        // API/colors\n        else {\n          result = await getFunctions.fetchColors();\n        }\n        break;\n      case 'members':\n        // API/members/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchMember(route.referenceId);\n        }\n        // API/members\n        else {\n          result = await getFunctions.fetchMembers();\n        }\n        break;\n      // API/positions\n      case 'positions':\n        // TO-DO: fetch all positions\n        break;\n      // API/songs\n      case 'songs':\n        // API/songs/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchSong(route.referenceId);\n        }\n        // API/songs\n        else {\n          result = await getFunctions.fetchSongs();\n        }\n        break;\n      // API/units\n      case 'units':\n        // API/units/<id>/distributions\n        if (route.referenceId && route.subPath === 'distributions') {\n          result = await getFunctions.fetchUnitDistributions(route.referenceId);\n        }\n        // API/units/<id>/members\n        else if (route.referenceId && route.subPath === 'members') {\n          result = await getFunctions.fetchUnitMembers(route.referenceId);\n        }\n        // API/units/<id>\n        else if (route.referenceId) {\n          result = await getFunctions.fetchUnit(route.referenceId);\n        }\n        break;\n      // API/users\n      case 'users':\n        // API/users/<id>\n        result = await getFunctions.fetchUser(route.referenceId);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async post(path, body) {\n    this.print('Writting data...', path);\n    /*\n     * List of possible post calls:\n     * /artists\n     * /distributions\n     * /members\n     * /songs\n     * /units\n     * /users\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('POST');\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    switch (route.root) {\n      // API/artists/<id>\n      case 'artists':\n        result = await postFunctions.createArtist(body, this._uid);\n        break;\n      // API/distributions/<id>\n      case 'distributions':\n        result = await postFunctions.createDistribution(body, this._uid);\n        break;\n      // API/log/<id>\n      case 'log':\n        result = await postFunctions.createLogEntry(\n          body,\n          this._uid,\n          route.referenceId\n        );\n        break;\n      // API/members/<id>\n      case 'members':\n        result = await postFunctions.createMember(body, this._uid);\n        break;\n      // API/songs/<id>\n      case 'songs':\n        result = await postFunctions.createSong(body, this._uid);\n        break;\n      // API/units/<id>\n      case 'units':\n        result = await postFunctions.createUnit(body, this._uid);\n        break;\n      // API/users/<id>\n      case 'users':\n        result = await postFunctions.createUser(body, this._uid);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async put(path, body) {\n    this.print('Updating data...', path);\n    /*\n     * List of possible put calls:\n     * /artists/<id>\n     * /distributions/<id>\n     * /members/<id>\n     * /songs/<id>\n     * /units/<id>\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('PUT');\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    if (!route.referenceId) {\n      // TO-DO: throw error\n    }\n\n    switch (route.root) {\n      // API/artists/<id>\n      case 'artists':\n        result = await putFunctions.updateArtist(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/distributions/<id>\n      case 'distributions':\n        result = await putFunctions.updateDistribution(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/members/<id>\n      case 'members':\n        result = await putFunctions.updateMember(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/songs/<id>\n      case 'songs':\n        result = await putFunctions.updateSong(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/units/<id>\n      case 'units':\n        result = await putFunctions.updateUnit(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/users/<id>\n      case 'users':\n        if (route.subPath === 'biases') {\n          result = await putFunctions.updateUserBiases(route.referenceId, body);\n        } else if (route.subPath === 'favorite-artists') {\n          result = await putFunctions.updateUserFavoriteArtists(\n            route.referenceId,\n            body\n          );\n        } else if (route.subPath === 'favorite-members') {\n          result = await putFunctions.updateUserFavoriteMembers(\n            route.referenceId,\n            body\n          );\n        } else if (route.subPath === 'latest-units') {\n          result = await putFunctions.updateUserLatestUnits(\n            route.referenceId,\n            body\n          );\n        } else {\n          result = await putFunctions.updateUser(route.referenceId, body);\n        }\n\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async delete(path) {\n    this.print('Deleting data...', path);\n    /*\n     * List of possible delete calls:\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('DELETE');\n    }\n\n    if (!path) {\n      return this.throwPathError('DELETE', 'path');\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    if (!route.referenceId) {\n      // TO-DO: throw error\n    }\n\n    switch (route.root) {\n      // API/users/<id>\n      case 'users':\n        result = await deleteFunctions.destroyUser(route.referenceId);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  /**\n   * Throws database related errors\n   * @category Method\n   * @param {String} action\n   * @throws Error\n   */\n  throwDBError(action = '') {\n    const response = new NewResponse();\n    if (!this._loaded) {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, database is not ready`\n      );\n    } else if (!this._authenticated) {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, you are not logged in`\n      );\n    }\n\n    return response.resolve();\n  }\n\n  /**\n   * Throws api methods related errors\n   * @category Method\n   * @param {String} action\n   * @param {String} type\n   * @throws Error\n   */\n  throwPathError(action = '', type = 'path') {\n    const response = new NewResponse();\n    if (this._loaded && type === 'body') {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, data was not provided`\n      );\n    } else if (this._loaded && type === 'path') {\n      response.error(\n        HttpStatus.BAD_REQUEST,\n        `Unable to perform ${action} action, path doesn't exist`\n      );\n    } else {\n      response.error();\n    }\n\n    return response.resolve();\n  }\n\n  async test() {\n    let r = 'bola';\n    await this.dbRef().once('value', snap => {\n      r = snap.val();\n      return r;\n    });\n\n    return r;\n  }\n\n  async getDB() {\n    return db;\n  }\n\n  async setter(key, value) {\n    this[key] = value;\n    return value;\n  }\n}\n\nconst getFunctions = {\n  // Fetches all artists\n  fetchArtists: async () => {\n    if (fullyLoaded.artists === false) {\n      // TO-DO: Add 00 id to database, remove it in the serializer collection for a better cache check\n      let response = {};\n      await dbRef.ref(`/artists`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists = response;\n      fullyLoaded.artists = true;\n    }\n    return serializeCollection(db.artists, 'artist');\n  },\n  // Fetches single artist\n  fetchArtist: async id => {\n    if (!db.artists[id]) {\n      let response = {};\n      await dbRef.ref(`/artists/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists[id] = response;\n    }\n    return serialize.artist(db.artists[id], id);\n  },\n  // Fetches units from a single artist\n  fetchArtistUnits: async id => {\n    const artist = await getFunctions.fetchArtist(id);\n    const response = await artist.attributes.units.map(unitId =>\n      getFunctions.fetchUnit(unitId)\n    );\n    return Promise.all(response);\n  },\n  // Fetches all colors\n  fetchColors: async () => {\n    if (fullyLoaded.colors === false) {\n      let response = {};\n      await dbRef.ref(`/colors`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.colors = response;\n      fullyLoaded.artists = true;\n    }\n    return serializeCollection(db.colors, 'color');\n  },\n  // Fetches single color\n  fetchColor: async id => {\n    if (!db.colors[id]) {\n      let response = {};\n      await dbRef.ref(`/colors/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.colors[id] = response;\n    }\n    return serialize.color(db.colors[id], id);\n  },\n  // Fetches single distribution\n  fetchDistribution: async id => {\n    if (!db.distributions[id]) {\n      let response = {};\n      await dbRef.ref(`/distributions/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.distributions[id] = response;\n    }\n    return serialize.distribution(db.distributions[id], id);\n  },\n  // Fetches all members\n  fetchMembers: async () => {\n    if (fullyLoaded.members === false) {\n      let response = {};\n      await dbRef.ref(`/members`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.members = response;\n      fullyLoaded.members = true;\n    }\n    return serializeCollection(db.members, 'member');\n  },\n  // Fetches single member\n  fetchMember: async id => {\n    if (!db.members[id]) {\n      let response = {};\n      await dbRef.ref(`/members/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n\n      const { colorId = 'default' } = response;\n      if (colorId) {\n        const color = await getFunctions.fetchColor(colorId);\n        response.color = {\n          ...color.attributes,\n          id: color.id,\n        };\n      }\n\n      db.members[id] = response;\n    }\n    return serialize.member(db.members[id], id);\n  },\n  // Fetches all songs\n  fetchSongs: async () => {\n    if (fullyLoaded.songs === false) {\n      // TO-DO: Add 00 id to database, remove it in the serializer collection for a better cache check\n      let response = {};\n      await dbRef.ref(`/songs`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs = response;\n      fullyLoaded.songs = true;\n    }\n    return serializeCollection(db.songs, 'song');\n  },\n  // Fetches single song\n  fetchSong: async id => {\n    if (!db.songs[id]) {\n      let response = {};\n      await dbRef.ref(`/songs/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs[id] = response;\n    }\n    return serialize.song(db.songs[id], id);\n  },\n  // Fetches single unit\n  fetchUnit: async id => {\n    if (!db.units[id]) {\n      let response = {};\n      await dbRef.ref(`/units/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.units[id] = response;\n    }\n    return serialize.unit(db.units[id], id);\n  },\n  // Fetches units from a single artist\n  fetchUnitDistributions: async id => {\n    const unit = await getFunctions.fetchUnit(id);\n    const unitDistributionsPromises = await unit.attributes.distributions.map(\n      distributionId => getFunctions.fetchDistribution(distributionId)\n    );\n    const unitDistributions = await Promise.all(unitDistributionsPromises);\n\n    const unitSongsPromises = await unitDistributions.map(distributionObject =>\n      getFunctions.fetchSong(distributionObject.attributes.songId)\n    );\n\n    const unitSongs = await Promise.all(unitSongsPromises);\n\n    unitDistributions.forEach((distributionObject, index) => {\n      unitDistributions[index].attributes.distribution =\n        unitSongs[index].attributes.distribution;\n      unitDistributions[index].attributes.originalArtist =\n        unitSongs[index].attributes.originalArtist;\n      unitDistributions[index].attributes.title =\n        unitSongs[index].attributes.title;\n      unitDistributions[index].attributes.videoId =\n        unitSongs[index].attributes.videoId;\n    });\n\n    return unitDistributions;\n  },\n  // Fetches units from a single artist\n  fetchUnitMembers: async id => {\n    const unit = await getFunctions.fetchUnit(id);\n    const membersResponse = await unit.attributes.members.map(member =>\n      getFunctions.fetchMember(member.memberId)\n    );\n\n    const promiseResponse = await Promise.all(membersResponse);\n\n    const response = promiseResponse.map((member, index) => {\n      member.attributes.id = member.id;\n      member.attributes.positions = unit.attributes.members[index].positions;\n      return member;\n    });\n    return utils.mergeMembers(unit.attributes.members, response);\n  },\n  // Fetches single user\n  fetchUser: async id => {\n    if (!db.users[id]) {\n      let response = {};\n      await dbRef.ref(`/users/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.users[id] = response;\n    }\n    return serialize.user(db.users[id], id);\n  },\n};\n\nconst postFunctions = {\n  // Creates single artist\n  createArtist: async (body, uid) => {\n    const key = await dbRef.ref(`/artists`).push().key;\n    const data = deserialize.post.artist(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/artists/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Artist ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.artists[key] = response;\n    fullyLoaded.artists = false;\n    return serialize.artist(db.artists[key]);\n  },\n  // Creates single color\n  // TO-DO: Delete this after feeding firebase\n  createColor: async body => {\n    const key = await dbRef.ref(`/colors`).push().key;\n    const data = deserialize.post.color(body, key);\n    let response = {};\n    await dbRef.ref(`/colors/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Color ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.colors[key] = response;\n    fullyLoaded.colors = false;\n    return serialize.color(db.colors[key]);\n  },\n  // Creates single distribution\n  createDistribution: async (body, uid) => {\n    const key = await dbRef.ref(`/distributions`).push().key;\n    const data = deserialize.post.distribution(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/distributions/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create distribution ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n\n    // Add distribution id to unit\n    const unit = await getFunctions.fetchUnit(data.unitId);\n    const unitDistributions = [...unit.attributes.distributions];\n    unitDistributions.push(key);\n    await putFunctions.updateUnit(\n      data.unitId,\n      { distributions: unitDistributions },\n      uid\n    );\n\n    db.distributions[key] = response;\n    return serialize.distribution(db.distributions[key]);\n  },\n  // Creates single log entry\n  createLogEntry: async (body, uid, subRoute) => {\n    const key = await dbRef.ref(`/log/${subRoute}`).push().key;\n    const data = deserialize.post.log(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/log/${subRoute}/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to log entry ${key}: ${data.content}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    return response;\n  },\n  // Creates single member\n  createMember: async (body, uid) => {\n    const key = await dbRef.ref(`/members`).push().key;\n    const data = deserialize.post.member(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/members/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Member ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.members[key] = response;\n    fullyLoaded.members = false;\n    return serialize.member(db.members[key]);\n  },\n  // Creates single song\n  createSong: async (body, uid) => {\n    const key = await dbRef.ref(`/songs`).push().key;\n    const data = deserialize.post.song(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/songs/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Song ${key}: ${data.title}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.songs[key] = response;\n    fullyLoaded.songs = false;\n    return serialize.song(db.songs[key]);\n  },\n  // Creates single unit\n  createUnit: async (body, uid) => {\n    const key = await dbRef.ref(`/units`).push().key;\n    const data = deserialize.post.unit(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/units/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Unit ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.units[key] = response;\n    fullyLoaded.units = false;\n    return serialize.unit(db.units[key]);\n  },\n  // Creates single user\n  createUser: async (body, uid) => {\n    const key = uid;\n    const data = deserialize.post.user(body, key);\n    let response = {};\n    await dbRef.ref(`/users/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create User ${key}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.users[key] = response;\n    return serialize.user(db.users[key]);\n  },\n};\n\nconst putFunctions = {\n  // Updates single artist\n  updateArtist: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.artist(body, key, uid);\n    await dbRef.ref(`/artists/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Artist ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/artists/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.artists[key] = response;\n    fullyLoaded.artists = false;\n    return serialize.artist(db.artists[key]);\n  },\n  // Updates single distribution\n  updateDistribution: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.distribution(body, key, uid);\n    await dbRef.ref(`/distributions/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update distribution ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/distributions/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.distributions[key] = response;\n    return serialize.distribution(db.distributions[key]);\n  },\n  // Updates single member\n  updateMember: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.member(body, key, uid);\n    await dbRef.ref(`/members/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Member ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/members/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.members[key] = response;\n    fullyLoaded.members = false;\n    return serialize.member(db.members[key]);\n  },\n  // Updates single song\n  updateSong: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.song(body, key, uid);\n    await dbRef.ref(`/songs/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Song ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/songs/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.songs[key] = response;\n    fullyLoaded.songs = false;\n    return serialize.song(db.songs[key]);\n  },\n  // Updates single unit\n  updateUnit: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.unit(body, key, uid);\n    await dbRef.ref(`/units/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Unit ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/units/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.units[key] = response;\n    fullyLoaded.units = false;\n    return serialize.unit(db.units[key]);\n  },\n  // Updates single user\n  updateUser: async (id, body) => {\n    const key = id;\n    const data = deserialize.put.user(body, key);\n    await dbRef.ref(`/users/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update User ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/users/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.users[key] = response;\n    return serialize.user(db.users[key]);\n  },\n  updateUserBiases: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/biases`).set(body, error => {\n      if (error) {\n        const message = `Failed to update User's Biases ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserFavoriteArtists: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/favoriteArtists`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Artists ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserFavoriteMembers: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/favoriteMembers`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Members ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserLatestUnits: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/latestUnits`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Members ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n};\n\nconst deleteFunctions = {\n  // Destroys single user\n  destroyUser: async (id, uid) => {\n    if (id === uid) {\n      await dbRef.ref(`/users/${uid}`).remove();\n      return { [id]: true };\n    }\n  },\n};\n\nconst resyncFunctions = {\n  parse: database => {\n    // Run reseters\n    resyncFunctions.resetAristsArrays(database);\n    resyncFunctions.resetMemberPositions(database);\n    // Run parsers\n    resyncFunctions.parseUnits(database);\n    resyncFunctions.parseMembers(database);\n    resyncFunctions.parseArtists(database);\n    resyncFunctions.parseDistributions(database);\n  },\n  resetAristsArrays: database => {\n    Object.values(database.artists).forEach(artist => {\n      artist.units = [];\n      artist.memberIds = [];\n      artist.memberList = [];\n    });\n  },\n  resetMemberPositions: database => {\n    Object.values(database.members).forEach(member => (member.positions = []));\n  },\n  parseUnits: database => {\n    Object.keys(database.units).forEach(unitId => {\n      const unit = database.units[unitId];\n      // Add artistId to artist\n      const artist = database.artists[unit.artistId];\n      if (artist.units) {\n        artist.units.push(unitId);\n      } else {\n        artist.units = [unitId];\n      }\n\n      // Parse positions\n      const membersPositions = resyncFunctions.parsePositions(\n        database,\n        unit.members\n      );\n\n      // Add members to artist memberIds and memberList\n      const memberIds = [];\n      const memberList = [];\n      Object.values(membersPositions).forEach(value => {\n        memberIds.push(value.memberId);\n        memberList.push(value.name);\n        // Add positions to each member\n        database.members[value.memberId].positions = database.members[\n          value.memberId\n        ].positions.concat(value.positions);\n      });\n      if (artist.memberIds) {\n        artist.memberIds = artist.memberIds.concat(memberIds);\n        artist.memberList = artist.memberList.concat(memberList);\n      } else {\n        artist.memberIds = memberIds;\n        artist.memberList = memberList;\n      }\n    });\n  },\n  parseMembers: database => {\n    // Reset all color counts\n    Object.values(database.colors).forEach(color => {\n      color.count = 0;\n    });\n\n    Object.values(database.members).forEach(member => {\n      // Add member color to color count\n      const { colorId } = member;\n      database.colors[colorId].count++;\n\n      // Sort and make positions unique\n      member.positions = [...new Set(member.positions)].sort();\n    });\n  },\n  parseArtists: database => {\n    Object.values(database.artists).forEach(artist => {\n      // Order units by descending debutYear\n      const unitDict = {};\n      const subUnitDict = {};\n      let unitSameYear = 1;\n      artist.units.forEach(unitId => {\n        const currentUnit = database.units[unitId];\n        let key = currentUnit.debutYear;\n        if (currentUnit.subUnit) {\n          if (subUnitDict[key]) {\n            key = Number(`${key}${unitSameYear}`);\n            unitSameYear++;\n          }\n          subUnitDict[key] = unitId;\n        } else {\n          if (unitDict[key]) {\n            key = Number(`${key}${unitSameYear}`);\n            unitSameYear++;\n          }\n          unitDict[key] = unitId;\n        }\n      });\n      // Sort by year\n      const units = Object.keys(unitDict)\n        .sort()\n        .reverse()\n        .map(year => unitDict[year]);\n\n      const subUnits = Object.keys(subUnitDict)\n        .sort()\n        .map(year => subUnitDict[year]);\n\n      artist.units = [...units, ...subUnits];\n\n      // Sort memberList by name and make it unique, same with memberIds\n      const memberDict = {};\n      artist.memberList.forEach((name, index) => {\n        if (memberDict[name] === undefined) {\n          memberDict[name] = artist.memberIds[index];\n        }\n      });\n      // Make names unique\n      artist.memberList = [...new Set(artist.memberList)];\n      // Sort names\n      artist.memberList.sort();\n      // Parse ids\n      artist.memberIds = artist.memberList.map(name => memberDict[name]);\n    });\n  },\n  parseDistributions: () => {\n    //\n  },\n  parsePositions: (database, unitMembers) => {\n    const memberDict = {};\n\n    Object.keys(unitMembers).forEach(key => {\n      const [memberId, name, position] = key.split(':');\n      // Parse member dict to be returned\n      if (memberDict[memberId]) {\n        memberDict[memberId].positions.push(position);\n      } else {\n        memberDict[memberId] = {\n          memberId,\n          name,\n          positions: [position],\n        };\n      }\n      // Refactor positions (action parsePositions)\n      if (database.positions[position] === undefined) {\n        database.positions[position] = {};\n      }\n      database.positions[position][memberId] = true;\n    });\n\n    return memberDict;\n  },\n};\n\nexport default new API();\n","/* eslint wrap-iife: 0 */\n/* eslint func-names: 0 */\n\nimport _ from 'lodash';\n\n/**\n * Parsers bem classes accepting two or more arguments\n * @param {String} block\n * @param {String} modifiers\n * @param {String} element\n * @param {extra} extras\n * @returns {string} bem-class\n */\nconst bem = (...args) => {\n  const block = args[0];\n  let modifiers = args[1] || '';\n  let element = args[2];\n  let extras = args[3] || [];\n\n  const hasBlock = block !== undefined && block !== null && block !== '';\n  const hasModifiers =\n    modifiers !== undefined &&\n    modifiers !== null &&\n    modifiers !== '' &&\n    modifiers.length > 0;\n  const hasElement =\n    element !== undefined && element !== null && element !== '';\n  const hasExtras =\n    extras !== undefined &&\n    extras !== null &&\n    extras !== '' &&\n    extras.length > 0;\n\n  // Prepare modifiers\n  if (hasModifiers) {\n    if (typeof modifiers === 'string') {\n      modifiers = [modifiers];\n    }\n    modifiers = modifiers.map(m => `--${m}`);\n  }\n  // Prepare element\n  if (hasElement) {\n    element = `__${element}`;\n  }\n  // Prepare Extras\n  if (hasExtras) {\n    if (typeof extras === 'string') {\n      extras = [extras];\n    }\n  }\n\n  // No Block\n  if (!hasBlock) {\n    throw new Error('Block string missing');\n  }\n\n  let classes = block;\n\n  // Only Modifiers\n  if (hasModifiers && !hasElement) {\n    modifiers.forEach(m => {\n      classes += ` ${block}${m}`;\n    });\n  }\n\n  // Only Element\n  if (hasElement && !hasModifiers) {\n    classes = ` ${block}${element}`;\n  }\n\n  // Modifiers and Element\n  if (hasElement && hasModifiers) {\n    classes += `${element}`;\n    modifiers.forEach(m => {\n      classes += ` ${block}${element}${m}`;\n    });\n  }\n\n  return `${classes} ${extras.join(' ')}`.trim();\n};\n\n/**\n * Loops through members and reassign colors if they are duplicated\n * @param {Array} members\n * @returns {Array} members with unique colors\n */\nconst ensureColorUniqueness = members => {\n  const membersList = _.cloneDeep(members);\n  const dict = {};\n  const refactoredMembers = [];\n  // Loop through members and make color dict\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    if (dict[colorId] === undefined) {\n      dict[colorId] = 1;\n    } else {\n      dict[colorId] += 1;\n    }\n  });\n\n  // Loop again and check for uniqueness, unique stays\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    const altColorId = member.altColor.id;\n    if (dict[colorId] > 1) {\n      if (dict[altColorId] === undefined) {\n        const oldColor = member.color;\n        member.color = member.altColor;\n        member.altColor = oldColor;\n      } else {\n        console.warn(`Duplicated color for member ${member.id}`);\n      }\n    }\n    refactoredMembers.push(member);\n  });\n  return refactoredMembers;\n};\n\nconst capitalizeWord = (str, separator = ' ') =>\n  str\n    .toString()\n    .split(separator)\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(separator);\n\nconst spinalCaseWord = str =>\n  str\n    .toLowerCase()\n    .split(' ')\n    .join('-');\n\nconst parseBirthDate = d => {\n  const date = `${d}`;\n  if (date.length < 5) {\n    return date;\n  }\n  if (date.length === 8) {\n    const year = date.substring(0, 4);\n    const month = date.substring(4, 6);\n    const day = date.substring(6);\n    return `${month}/${day}/${year}`;\n  }\n  return '?';\n};\n\nconst parseResponse = response => {\n  function responseParser(obj) {\n    return {\n      id: obj.id,\n      ...obj.attributes,\n    };\n  }\n\n  // Response has a single object instance without the \"data\" object\n  if (response && response.id && response.attributes) {\n    return responseParser(response);\n  }\n\n  // Response has a \"data\" object\n  if (response && response.data) {\n    response = response.data;\n\n    // If response.data is not an array\n    if (response && response.id && response.attributes) {\n      return responseParser(response);\n    }\n\n    if (Array.isArray(response)) {\n      const result = [];\n      for (let i = 0; i < response.length; i++) {\n        result.push(responseParser(response[i]));\n      }\n      return result;\n    }\n  }\n\n  throw new Error('parserResponse failed. Object is not a response');\n};\n\nconst parseResponseToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = {\n          id: instance.id,\n          ...instance.attributes,\n        };\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseArrayToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = instance;\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseQueryParams = query => {\n  if (!query) return null;\n\n  if (query[0] === '?') {\n    query = query.substring(1);\n  }\n\n  const params = {};\n  query.split('&').forEach(item => {\n    const pair = item.split('=');\n    const key = pair[0];\n    if (key) {\n      params[key] = pair[1] || null;\n    }\n  });\n\n  return params;\n};\n\nconst humanize = (string, option = 'Sentence') => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or -\n  string = string.replace(/([\\-|\\_])/g, ' '); // eslint-disable-line\n\n  function captalizeFirstLetter(word) {\n    return word[0].toUpperCase() + word.substring(1);\n  }\n\n  switch (option) {\n    case 'Sentence':\n      return captalizeFirstLetter(string);\n    case 'Capital':\n      return string\n        .split(' ')\n        .map(word => captalizeFirstLetter(word))\n        .join(' ');\n    default:\n      return string;\n  }\n};\n\nconst camelCase = string => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or -\n  string = string.replace(/([\\-|\\_])/g, ' '); // eslint-disable-line\n\n  return string\n    .split(' ')\n    .map((word, index) => {\n      if (index === 0) return word;\n      return word[0].toUpperCase() + word.substring(1);\n    })\n    .join('');\n};\n\nconst spiralCase = string => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or ' ' or :\n  return string.replace(/([\\-\\_\\ \\:])/g, '-'); // eslint-disable-line\n};\n\nconst getColorNumber = (colorId = 'col000000') => Number(colorId.substring(7));\n\nconst spiralBirthdate = date => {\n  const dateStr = date.toString();\n  return `${dateStr.substring(0, 4)}-${dateStr.substring(\n    4,\n    6\n  )}-${dateStr.substring(6)}`;\n};\n\nconst makePositionsEditable = positions => {\n  const result = {};\n  positions.forEach(position => {\n    const pos = spiralCase(position);\n    result[pos] = pos;\n  });\n  return result;\n};\n\nconst insertAtCursor = (field, valueToInsert) => {\n  if (\n    (field.selectionStart || field.selectionStart === 0) &&\n    field.selectionStart === field.selectionEnd\n  ) {\n    const startPos = field.selectionStart;\n    const endPos = field.selectionEnd;\n    field.value =\n      field.value.substring(0, startPos) +\n      valueToInsert +\n      field.value.substring(endPos, field.value.length);\n  }\n  return field.value;\n};\n\nconst getMostImportantPosition = positions => {\n  const POSITIONS_IMPORTANT_ORDER = [\n    'ALL',\n    'NONE',\n    'MAIN_VOCALIST',\n    'MAIN_RAPPER',\n    'MAIN_DANCER',\n    'LEAD_VOCALIST',\n    'LEAD_RAPPER',\n    'LEAD_DANCER',\n    'VOCALIST',\n    'RAPPER',\n    'DANCER',\n  ];\n\n  for (let i = 0; i < POSITIONS_IMPORTANT_ORDER.length; i++) {\n    if (positions.includes(POSITIONS_IMPORTANT_ORDER[i])) {\n      return POSITIONS_IMPORTANT_ORDER[i];\n    }\n  }\n\n  return 'VOCALIST';\n};\n\nexport default {\n  bem,\n  camelCase,\n  capitalizeWord,\n  ensureColorUniqueness,\n  getColorNumber,\n  getMostImportantPosition,\n  humanize,\n  insertAtCursor,\n  makePositionsEditable,\n  parseBirthDate,\n  parseQueryParams,\n  parseArrayToObject,\n  parseResponse,\n  parseResponseToObject,\n  spiralBirthdate,\n  spiralCase,\n  spinalCaseWord,\n};\n","import { all, call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport _ from 'lodash';\n\nimport API from '../api';\n\nimport { types } from '../reducers';\nimport utils from '../utils';\nimport constants from '../utils/constants';\n\n// Delay helper to make API look more realistic\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nconst DELAY_DURATION = process.env.NODE_ENV === 'development' ? 500 : 0;\n\n// API Workers\n\n/**\n * Initializes database, check for existing auth session, and load colors\n * @param {object} action\n */\nfunction* initializer(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const dbStart = yield API.init();\n    const status = dbStart.dbInfo();\n    yield put({ type: types.SET_DATABASE_READY, payload: status.data.loaded });\n\n    yield delay(DELAY_DURATION);\n\n    let loggedUser = yield API.auth();\n    loggedUser = loggedUser.data.attributes ? loggedUser.data : null;\n    if (loggedUser) {\n      const user = utils.parseResponse(loggedUser);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Welcome back!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: error,\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestArtists(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/artists');\n    const artistList = utils.parseResponse(response);\n    const sortedArtistList = _.sortBy(artistList, [a => a.name.toLowerCase()]);\n    yield put({ type: types.SET_ARTISTS, payload: sortedArtistList });\n\n    const artistsTypeahead = [];\n    const artistsTypeaheadDict = {};\n\n    sortedArtistList.forEach(artist => {\n      artistsTypeahead.push(artist.name);\n      artistsTypeaheadDict[artist.name] = artist.id;\n    });\n    yield put({ type: types.SET_ARTISTS_TYPEAHEAD, payload: artistsTypeahead });\n    yield put({\n      type: types.SET_ARTISTS_TYPEAHEAD_DICT,\n      payload: artistsTypeaheadDict,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load artists database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestArtist(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { artistId, panels, state } = action;\n  let { queryParams } = action;\n\n  let selectedArtist = {};\n\n  // Fetch Artist\n  try {\n    const response = yield API.get(`/artists/${artistId}`);\n    selectedArtist = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load artist ${artistId} from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  // Select default unit id\n  queryParams = utils.parseQueryParams(queryParams);\n  let selectedUnitId = selectedArtist.units[0];\n  let unitIndex = 0;\n  if (\n    queryParams &&\n    queryParams.unit &&\n    selectedArtist.units.includes(queryParams.unit)\n  ) {\n    selectedUnitId = queryParams.unit;\n    unitIndex = selectedArtist.units.indexOf(selectedUnitId);\n  }\n\n  // Fetch Artist's Units\n  try {\n    const response = yield API.get(`/artists/${artistId}/units`);\n    selectedArtist.units = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load artist ${artistId}'s units from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  // Just send artist if dealing with Manage Artist\n  if (state === 'edit') {\n    selectedArtist.state = 'edit';\n    panels.artist = state;\n\n    const unitsTypeahead = [];\n    const unitsTypeaheadDict = {};\n\n    selectedArtist.units.forEach(unit => {\n      unitsTypeahead.push(unit.name);\n      unitsTypeaheadDict[unit.name] = unit.id;\n    });\n\n    yield put({ type: types.SET_UNITS_TYPEAHEAD, payload: unitsTypeahead });\n    yield put({\n      type: types.SET_UNITS_TYPEAHEAD_DICT,\n      payload: unitsTypeaheadDict,\n    });\n\n    selectedArtist.genre = constants.GENRES_DB[selectedArtist.genre];\n\n    yield put({ type: types.SET_EDITING_ARTIST, payload: selectedArtist });\n    yield put({ type: types.SET_PANELS, payload: panels });\n  } else {\n    // Fetch complete unit for default unit\n    const selectedUnit = yield call(requestUnit, {\n      unitId: selectedUnitId,\n    });\n\n    selectedArtist.units[unitIndex] = selectedUnit;\n\n    yield put({ type: types.SET_ARTIST_PAGE_TAB, payload: selectedUnitId });\n    yield put({ type: types.SET_SELECTED_ARTIST, payload: selectedArtist });\n    yield put({ type: types.SET_SELECTED_UNIT, payload: selectedUnit });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestColors(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/colors');\n    const colorsList = utils.parseResponseToObject(response);\n    yield put({ type: types.SET_COLORS, payload: colorsList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load colors database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestMembers(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/members');\n    const membersList = utils.parseResponse(response);\n    const sortedMembersList = _.sortBy(membersList, [\n      m => m.name.toLowerCase(),\n    ]);\n    yield put({ type: types.SET_MEMBERS, payload: sortedMembersList });\n\n    const membersTypeahead = [];\n    const membersTypeaheadDict = {};\n\n    sortedMembersList.forEach(member => {\n      const key = `${member.name} (${member.referenceArtist})`;\n      membersTypeahead.push(key);\n      membersTypeaheadDict[key] = member.id;\n    });\n    yield put({ type: types.SET_MEMBERS_TYPEAHEAD, payload: membersTypeahead });\n    yield put({\n      type: types.SET_MEMBERS_TYPEAHEAD_DICT,\n      payload: membersTypeaheadDict,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load members database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestSongs(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/songs');\n    const songsList = utils.parseResponse(response);\n    const sortedSongsList = _.sortBy(songsList, [s => s.title.toLowerCase()]);\n    yield put({ type: types.SET_SONGS, payload: sortedSongsList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load songs database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestUnit({ type, unitId, selectedArtist, unitIndex }) {\n  const actionType = 'REQUEST_UNIT';\n  yield put({ type: 'PENDING', actionType });\n  yield delay(DELAY_DURATION);\n\n  let unit = {};\n  try {\n    const response = yield API.get(`/units/${unitId}`);\n    unit = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n\n  // Fetch members\n  let members = {};\n  try {\n    const response = yield API.get(`/units/${unitId}/members`);\n    members = utils.parseArrayToObject(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load members from unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n  unit.members = members;\n\n  // Fetch distributions and merge\n  let distributions = {};\n  try {\n    const response = yield API.get(`/units/${unitId}/distributions`);\n    distributions = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load distributions from unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n\n  unit.distributions = distributions || [];\n\n  unit.songsDict = distributions.reduce((dict, distribution) => {\n    dict[distribution.songId] = true;\n    return dict;\n  }, {});\n\n  // Fetch legacy distributions and merge\n\n  // Calculate averages\n\n  // Flag unit as complete\n  unit.complete = true;\n\n  // The following if statements are used when the unit tab is updated in the UI\n  if (type) {\n    yield put({ type: types.SET_SELECTED_UNIT, payload: unit });\n  }\n  if (selectedArtist) {\n    selectedArtist.units[unitIndex] = unit;\n    yield put({ type: types.SET_SELECTED_ARTIST, payload: selectedArtist });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType });\n  return unit;\n}\n\nfunction* requestUnitMembers({ type, unitId, panels }) {\n  yield put({ type: 'PENDING', actionType: type });\n  yield delay(DELAY_DURATION);\n\n  let members = [];\n  if (unitId) {\n    try {\n      const response = yield API.get(`/units/${unitId}/members`);\n      members = response.data;\n    } catch (error) {\n      yield put({\n        type: 'ERROR',\n        message: [\n          `Unable to load members from unit ${unitId} from database`,\n          error.toString(),\n        ],\n        actionType: type,\n      });\n    }\n  }\n\n  // Make colors in use dict\n  const colorsInUse = {};\n  members.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n\n  yield put({ type: types.SET_COLORS_IN_USE, payload: colorsInUse });\n  yield put({ type: types.SET_EDITING_MEMBERS, payload: members });\n  yield put({ type: types.SET_PANELS, payload: panels });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: type });\n  return members;\n}\n\nfunction* resyncDatabase(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.resyncDatabase();\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [`Unable to resync database`, error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  // When done, re-request artists, colors, and members\n  yield put({ type: 'REQUEST_ARTISTS' });\n  yield put({ type: 'REQUEST_COLORS' });\n  yield put({ type: 'REQUEST_MEMBERS' });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* runLogin(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    let loggedUser = yield API.login();\n    loggedUser = loggedUser.data.attributes ? loggedUser.data : null;\n\n    if (loggedUser) {\n      const user = utils.parseResponse(loggedUser);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Hello!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\nfunction* runLogout(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    yield API.logoff();\n\n    yield put({ type: types.SET_USER, payload: {} });\n    yield put({ type: types.SET_AUTHENTICATED, payload: false });\n    yield put({ type: types.SET_ADMIN, payload: false });\n\n    yield put({\n      type: 'WARNING_TOAST',\n      message: 'You are logged out',\n      actionType: action.type,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\nfunction* sendDistribution(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  // Save song\n  let receivedSong;\n  try {\n    receivedSong = yield API.post('/distributions', action.body);\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing distribution: ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedSong;\n}\n\nfunction* sendLog(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const logType = action.body.type === 'error' ? 'errors' : 'general';\n\n  // Save song\n  try {\n    yield API.post(`/log/${logType}`, action.body);\n  } catch (e) {\n    // do nothing\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* sendSong(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  // Save song\n  let receivedSong;\n  try {\n    receivedSong = yield API.post('/songs', action.body);\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing song: ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedSong;\n}\n\nfunction* updateCompleteArtist(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { artist, members, unit } = action;\n\n  // Save Members\n  const receivedMembers = yield all(\n    members.map((member, index) =>\n      call(updateMember, {\n        type: `UPDATE_MEMBER_${index}`,\n        member,\n        referenceArtist: artist.name,\n      })\n    )\n  );\n\n  // Prepare Unit Members Data\n  let unitMembers = {};\n  receivedMembers.forEach(member => {\n    unitMembers = {\n      ...unitMembers,\n      ...member.positions,\n    };\n  });\n\n  yield delay(DELAY_DURATION);\n\n  // Save Artist\n  let receivedArtist;\n  try {\n    if (artist.id) {\n      // Update member if it has an id\n      receivedArtist = yield API.put(`/artists/${artist.id}`, artist);\n    } else {\n      // Create member if it does not have an id\n      receivedArtist = yield API.post('/artists', artist);\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing artist ${\n        artist.id ? artist.id : artist.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  // Save unit\n  unit.members = unitMembers;\n  unit.artistId = receivedArtist.data.id;\n  let receivedUnit;\n\n  try {\n    if (unit.id) {\n      // Update member if it has an id\n      receivedUnit = yield API.put(`/units/${unit.id}`, unit);\n    } else {\n      // Create member if it does not have an id\n      receivedUnit = yield API.post('/units', unit);\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing unit ${\n        unit.id ? unit.id : artist.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'SET_MANAGE_RESULT', payload: 'SUCCESS' });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedUnit;\n}\n\nfunction* updateMember(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { member, referenceArtist } = action;\n\n  let response;\n  try {\n    if (member.id) {\n      // Update member if it has an id\n      response = yield API.put(`/members/${member.id}`, member);\n    } else {\n      // Create member if it does not have an id\n      response = yield API.post('/members', {\n        ...member,\n        referenceArtist,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing member ${\n        member.id ? member.id : member.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  response.data.positions = {};\n  member.positions.forEach(pos => {\n    response.data.positions[`${response.data.id}:${member.name}:${pos}`] = true;\n  });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return response.data;\n}\n\nfunction* updateUserBiases(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(`/users/${action.userId}/biases`, action.biases);\n    yield put({ type: types.SET_BIASES, payload: action.biases });\n    yield put({ type: types.SET_BIAS, payload: action.bias });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* updateUserFavoriteArtists(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(\n      `/users/${action.userId}/favorite-artists`,\n      action.userFavoriteArtists\n    );\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* updateUserFavoriteMembers(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(\n      `/users/${action.userId}/favorite-members`,\n      action.userFavoriteMembers\n    );\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* apiSaga() {\n  yield takeLatest('INITIALIZER', initializer);\n  yield takeLatest('REQUEST_ARTISTS', requestArtists);\n  yield takeLatest('REQUEST_ARTIST', requestArtist);\n  yield takeLatest('REQUEST_COLORS', requestColors);\n  yield takeLatest('REQUEST_MEMBERS', requestMembers);\n  yield takeLatest('REQUEST_SONGS', requestSongs);\n  yield takeLatest('REQUEST_UNIT', requestUnit);\n  yield takeLatest('REQUEST_UNIT_MEMBERS', requestUnitMembers);\n  yield takeLatest('RESYNC_DATABASE', resyncDatabase);\n  yield takeLatest('RUN_LOGIN', runLogin);\n  yield takeLatest('RUN_LOGOUT', runLogout);\n  yield takeLatest('SEND_DISTRIBUTION', sendDistribution);\n  yield takeLatest('SEND_LOG', sendLog);\n  yield takeLatest('SEND_SONG', sendSong);\n  yield takeLatest('UPDATE_COMPLETE_ARTIST', updateCompleteArtist);\n  yield takeLatest('UPDATE_USER_BIASES', updateUserBiases);\n  yield takeLatest('UPDATE_USER_FAVORITE_ARTISTS', updateUserFavoriteArtists);\n  yield takeLatest('UPDATE_USER_FAVORITE_MEMBERS', updateUserFavoriteMembers);\n\n  yield takeEvery('TEST', test);\n}\n\nexport default apiSaga;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { toastr } from 'react-redux-toastr';\n\nimport { types } from '../reducers';\n\n// PENDING WORKERS\nconst localPendingCache = {};\n\n/**\n * Removes action type from pendingCache and updates pending if pendingCache is empty\n * @param {string} actionType\n */\nfunction* clearPending(actionType) {\n  if (typeof actionType === 'object') {\n    actionType = actionType.actionType; // eslint-disable-line\n  }\n  if (localPendingCache[actionType]) {\n    delete localPendingCache[actionType];\n  }\n\n  if (Object.keys(localPendingCache).length === 0) {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: false });\n  }\n}\n\n/**\n * Adds action type to pendingInlineCache and updates pending based on pendingInlineCache values\n * @param {string} actionType\n */\nfunction* pending({ actionType }) {\n  if (localPendingCache[actionType] === undefined) {\n    localPendingCache[actionType] = true;\n  }\n\n  if (Object.keys(localPendingCache).length > 0) {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: true });\n  } else {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: false });\n  }\n}\n\n// ERROR WORKERS\n\n/**\n * Dispatches an error message and an error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* error({ message, actionType }) {\n  const errorMessage = typeof err === 'string' ? message : message.join(': ');\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield toastr.error(errorMessage);\n  yield call(clearPending, actionType);\n}\n\n/**\n * Dispatches an error message and and an inline error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* errorInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR_INLINE, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops an error toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* errorToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.error(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.error(message);\n  }\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n// SUCCESS WORKERS\n\n/**\n * Dispatches a success message and and an inline sucess flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* successInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_SUCCESS_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_SUCCESS_INLINE, payload: true });\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops a sucess toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* successToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.success(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.success(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// WARNING WORKERS\n\n/**\n * Pops a warning toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* warningToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.warning(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.warning(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* statusHandlingSaga() {\n  yield takeEvery('CLEAR_PENDING', clearPending);\n  yield takeEvery('ERROR', error);\n  yield takeEvery('ERROR_INLINE', errorInline);\n  yield takeEvery('ERROR_TOAST', errorToast);\n  yield takeEvery('PENDING', pending);\n  yield takeEvery('SUCCESS_INLINE', successInline);\n  yield takeEvery('SUCCESS_TOAST', successToast);\n  yield takeEvery('WARNING_TOAST', warningToast);\n  yield takeEvery('TEST', test);\n}\n\nexport default statusHandlingSaga;\n","import { all, fork } from 'redux-saga/effects';\nimport apiSaga from './api-saga';\nimport statusHandlingSaga from './status-handling';\n\nexport default function* rootSaga() {\n  yield all([fork(apiSaga), fork(statusHandlingSaga)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, thunkMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger({ collapsed: true }));\n}\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ActiveSongWidget = ({ activeSong, inline }) => {\n  // Return nothing if currentUnit is not available\n  if (!activeSong.id) {\n    return null;\n  }\n\n  const inlineClass = inline ? 'inline' : '';\n\n  return (\n    <section className={`active-widget ${inlineClass}`}>\n      <h3>Active Song:</h3>\n      <div className=\"active-widget__content\">\n        <h1>\n          {activeSong.title.toUpperCase()}{' '}\n          <span className=\"active-widget__unit\">\n            (by {activeSong.originalArtist})\n          </span>\n        </h1>\n      </div>\n    </section>\n  );\n};\n\nActiveSongWidget.propTypes = {\n  activeSong: PropTypes.object,\n  inline: PropTypes.bool,\n};\n\nActiveSongWidget.defaultProps = {\n  activeSong: {},\n  inline: false,\n};\n\nexport default ActiveSongWidget;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ActiveSongWidget from '../components/ActiveSongWidget';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribution: state.distribution,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ActiveSongWidget)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../utils';\n\nconst ActiveUnitWidget = ({ activeUnit, showMembers, inline }) => {\n  // Return nothing if currentUnit is not available\n  if (!activeUnit.id) {\n    return null;\n  }\n\n  const inlineClass = inline ? 'inline' : '';\n\n  return (\n    <section className={`active-widget ${inlineClass}`}>\n      <h3>Active Unit:</h3>\n      <div className=\"active-widget__content\">\n        <h1>\n          {activeUnit.artistName.toUpperCase()}{' '}\n          <span className=\"active-widget__unit\">({activeUnit.name})</span>\n          <span className=\"active-widget__genre\">\n            {activeUnit.genre} - {Object.values(activeUnit.members).length}{' '}\n            members\n          </span>\n        </h1>\n        {showMembers ? (\n          <ul className=\"active-widget__members\">\n            {Object.values(activeUnit.members).map(member => (\n              <li\n                key={member.id}\n                className={`pill background-color-${utils.getColorNumber(\n                  member.colorId\n                )}`}\n              >\n                {member.name}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className=\"active-widget__members-count\">3</p>\n        )}\n      </div>\n    </section>\n  );\n};\n\nActiveUnitWidget.propTypes = {\n  activeUnit: PropTypes.object,\n  inline: PropTypes.bool,\n  showMembers: PropTypes.bool,\n};\n\nActiveUnitWidget.defaultProps = {\n  activeUnit: {},\n  inline: false,\n  showMembers: false,\n};\n\nexport default ActiveUnitWidget;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ActiveUnitWidget from '../components/ActiveUnitWidget';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribution: state.distribution,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ActiveUnitWidget)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon } from '../../common';\n\nclass Collapsible extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n\n    this.collapse = this.collapse.bind(this);\n    this.enforceProperties = this.enforceProperties.bind(this);\n    this.expand = this.expand.bind(this);\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  componentDidMount() {\n    this.enforceProperties();\n  }\n\n  componentDidUpdate(nextProps) {\n    if (\n      this.props.synced &&\n      (nextProps.expanded !== this.props.expanded ||\n        nextProps.collapsed !== this.props.collapsed)\n    ) {\n      this.enforceProperties();\n    }\n  }\n\n  enforceProperties() {\n    if (this.props.expanded) {\n      this.expand();\n    }\n    if (this.props.collapsed) {\n      this.collapse();\n    }\n  }\n\n  togglePanel() {\n    if (!this.props.locked) {\n      this.setState({\n        expanded: !this.state.expanded,\n      });\n    }\n  }\n\n  expand() {\n    this.setState({\n      expanded: true,\n    });\n  }\n\n  collapse() {\n    this.setState({\n      expanded: false,\n    });\n  }\n\n  render() {\n    const { title, locked } = this.props;\n\n    let iconComponent = null;\n    if (locked) {\n      iconComponent = <Icon type=\"lock\" color=\"gray\" />;\n    } else if (this.state.expanded) {\n      iconComponent = <Icon type=\"chevron-up\" color=\"gray\" />;\n    } else {\n      iconComponent = <Icon type=\"chevron-down\" color=\"gray\" />;\n    }\n\n    return (\n      <section className=\"collapsible\">\n        <button\n          className={`collapsible__header ${locked ? 'locked' : ''}`}\n          disabled={locked}\n          onClick={this.togglePanel}\n        >\n          <h3 className=\"collapsible__title\">{title}</h3>\n          <span className=\"collapsible__icon\">{iconComponent}</span>\n        </button>\n        <div\n          className={`collapsible__content ${\n            this.state.expanded ? 'expanded' : 'collapsed'\n          }`}\n        >\n          {this.state.expanded ? this.props.children : null}\n        </div>\n      </section>\n    );\n  }\n}\n\nCollapsible.propTypes = {\n  children: PropTypes.any.isRequired,\n  collapsed: PropTypes.bool,\n  expanded: PropTypes.bool,\n  locked: PropTypes.bool,\n  synced: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n};\n\nCollapsible.defaultProps = {\n  collapsed: false,\n  expanded: false,\n  locked: false,\n  synced: false,\n};\n\nexport default Collapsible;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../index';\n\nconst ErrorModal = ({ app, handleCloseErrorModal, handleSendBugReport }) => {\n  if (app.error) {\n    return (\n      <div className=\"modal-error\">\n        <main className=\"modal-error__content\">\n          <button className=\"close\" onClick={handleCloseErrorModal}>\n            ×\n          </button>\n          <Icon type=\"error\" color=\"red\" size=\"96\" />\n          <h1>AN ERROR HAS OCURRED</h1>\n          <h3 className=\"modal-error__error-message\">{app.errorMessage}</h3>\n          <h4>\n            You may close this modal, but the website might not work as\n            expected.\n          </h4>\n          <button className=\"btn\" onClick={handleSendBugReport}>\n            Send Bug Report\n          </button>\n        </main>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nErrorModal.propTypes = {\n  app: PropTypes.object.isRequired,\n  handleCloseErrorModal: PropTypes.func.isRequired,\n  handleSendBugReport: PropTypes.func.isRequired,\n};\n\nexport default ErrorModal;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ErrorModal from '../components/ErrorModal';\n\nimport { appOperations } from '../../../reducers/app';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n});\n\nconst mapDispatchToProps = {\n  ...appOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ErrorModal)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon } from '../../common';\n\nconst FavoriteIcon = ({ action, className, id, size, state }) => (\n  <button\n    className={`btn btn-transparent ${className}`}\n    onClick={() => action(id)}\n  >\n    {state ? (\n      <Icon type=\"heart\" color=\"red\" size={size} />\n    ) : (\n      <Icon type=\"heart-hollow\" color=\"gray\" size={size} />\n    )}\n  </button>\n);\n\nFavoriteIcon.propTypes = {\n  action: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  state: PropTypes.bool,\n};\n\nFavoriteIcon.defaultProps = {\n  className: '',\n  size: 12,\n  state: false,\n};\n\nexport default FavoriteIcon;\n","// When pasting SVG from illustrator, use helper to convert svg string into a inline string: https://repl.it/@kavispires/ConvertSVGtoInlineString\n\nexport default {\n  alert:\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M57,78c0,1.2-1,2.2-2.2,2.2h-9.6 c-1.2,0-2.2-1-2.2-2.2v-9.6c0-1.2,1-2.2,2.2-2.2h9.6c1.2,0,2.2,1,2.2,2.2V78z M56.6,57.8c-0.2,1.1-1.5,2-3.2,2h-6.9 c-1.6,0-3-0.9-3.2-2L38,22.2c-0.1-0.6,0.2-1.2,0.8-1.7c0.6-0.5,1.5-0.7,2.4-0.7h17.6c0.9,0,1.8,0.3,2.4,0.7c0.6,0.5,0.9,1.1,0.8,1.7 L56.6,57.8z',\n  'back-arrow':\n    'M87.4,37.1C76.6,28,63.8,23.3,50.2,20.5c-3.9-0.8-7.9-1.3-12-2c0-3.7,0-7.2,0-10.8c0-1.9-0.5-3.4-2.3-4.3 c-1.8-0.9-3.4-0.3-4.9,1c-9.7,8.5-19.4,17-29.1,25.6c-2.5,2.2-2.5,4.5,0,6.8c9.7,8.5,19.4,17,29.1,25.6c1.5,1.3,3.1,1.8,4.9,1 c1.8-0.8,2.2-2.4,2.2-4.3c-0.1-3.7,0-7.4,0-11.9c6.4,1.3,12.4,2.2,18.3,3.8c7,1.8,13.4,4.9,18.6,10.1c3.6,3.7,5.8,8,5.1,13.3 c-0.6,4.4-2.8,8.1-6.1,10.9c-3.1,2.6-6.6,4.6-10,6.8c-1.2,0.8-2.4,1.6-1.7,3.2c0.7,1.8,2.2,1.6,3.6,1.1c1.7-0.7,3.3-1.3,5-2 c9.1-4.1,17.4-9.2,23.4-17.4c5-6.8,7-14.4,4.8-22.7C97.3,47.3,93,41.7,87.4,37.1z',\n  'back-arrow-circle':\n    'M50,0c27.7,0,50,22.4,50,50c0,27.6-22.5,50-50.1,50C22.3,100-0.1,77.5,0,49.9C0.1,22.3,22.5,0,50,0z M41.9,49.6 c4.3,0.9,8.4,1.5,12.4,2.5c4.7,1.2,9.1,3.3,12.6,6.9c2.5,2.5,3.9,5.4,3.5,9c-0.4,3-1.9,5.5-4.1,7.4c-2.1,1.7-4.5,3.1-6.8,4.6 c-0.8,0.5-1.6,1.1-1.2,2.2c0.5,1.2,1.5,1.1,2.5,0.7c1.1-0.4,2.3-0.9,3.4-1.4c6.1-2.8,11.8-6.2,15.8-11.8c3.4-4.6,4.7-9.7,3.2-15.4 c-1.3-4.8-4.2-8.6-7.9-11.7c-7.3-6.2-16-9.3-25.2-11.2c-2.7-0.5-5.4-0.9-8.1-1.3c0-2.5,0-4.9,0-7.3c0-1.3-0.3-2.3-1.5-2.9 c-1.2-0.6-2.3-0.2-3.3,0.7C30.5,26.5,23.9,32.2,17.3,38c-1.7,1.5-1.7,3.1,0,4.6c6.6,5.8,13.1,11.5,19.7,17.3c1,0.9,2.1,1.2,3.3,0.7 c1.2-0.6,1.5-1.6,1.5-2.9C41.8,55.2,41.9,52.7,41.9,49.6z',\n  check:\n    'M50,0C22.5,0,0,22.5,0,50s22.5,50,50,50s50-22.5,50-50S77.5,0,50,0z M75.6,41.2L47.5,73.1 c-1.2,1.2-3.1,1.2-4.4,0.6L23.1,60c-1.9-1.3-1.9-3.1-0.6-4.4l6.2-8.8c0.6-1.9,2.5-1.9,4.4-1.2l6.9,5c1.2,1.2,3.1,0.6,4.4-0.6 l18.1-20c1.2-1.2,3.1-1.2,4.4,0l8.1,6.9C76.2,38.1,76.2,40,75.6,41.2z',\n  'chevron-down':\n    'M49.8,75c-1.6,0-3.1-0.6-4.4-1.8L6.8,35.7c-2.5-2.4-2.5-6.4-0.1-8.8c2.4-2.5,6.4-2.5,8.8-0.1l34.3,33.3l34.7-33.3 c2.5-2.4,6.4-2.3,8.8,0.2c2.4,2.5,2.3,6.4-0.2,8.8L54.1,73.3C52.9,74.4,51.4,75,49.8,75z',\n  'chevron-left':\n    'M25,49.8c0-1.6,0.6-3.1,1.8-4.4L64.3,6.8c2.4-2.5,6.4-2.5,8.8-0.1c2.5,2.4,2.5,6.4,0.1,8.8L39.9,49.8l33.3,34.7 c2.4,2.5,2.3,6.4-0.2,8.8c-2.5,2.4-6.4,2.3-8.8-0.2L26.7,54.1C25.6,52.9,25,51.4,25,49.8z',\n  'chevron-right':\n    'M75,50.2c0,1.6-0.6,3.1-1.8,4.4L35.7,93.2c-2.4,2.5-6.4,2.5-8.8,0.1c-2.5-2.4-2.5-6.4-0.1-8.8l33.3-34.3L26.7,15.5 C24.4,13,24.4,9,26.9,6.6c2.5-2.4,6.4-2.3,8.8,0.2l37.5,39.1C74.4,47.1,75,48.6,75,50.2z',\n  'chevron-up':\n    'M50.2,25c1.6,0,3.1,0.6,4.4,1.8l38.7,37.5c2.5,2.4,2.5,6.4,0.1,8.8c-2.4,2.5-6.4,2.5-8.8,0.1L50.2,39.9L15.5,73.3 C13,75.6,9,75.6,6.6,73.1c-2.4-2.5-2.3-6.4,0.2-8.8l39.1-37.5C47.1,25.6,48.6,25,50.2,25z',\n  clock:\n    'M100,50c0,9.4-2.2,17.8-6.6,25.1c-4.6,7.6-10.7,13.7-18.3,18.3C67.8,97.8,59.4,100,50,100s-17.8-2.2-25.1-6.6 c-7.6-4.6-13.7-10.7-18.3-18.3C2.2,67.8,0,59.4,0,50s2.2-17.8,6.6-25.1c4.6-7.6,10.7-13.7,18.3-18.3C32.2,2.2,40.6,0,50,0 s17.8,2.2,25.1,6.6c7.6,4.6,13.7,10.7,18.3,18.3C97.8,32.2,100,40.6,100,50z M85.4,50c0-6.2-1.5-12.2-4.6-17.8 c-3.2-5.5-7.5-9.8-13-13c-5.6-3-11.6-4.6-17.8-4.6s-12.2,1.5-17.8,4.6c-5.5,3.2-9.8,7.5-13,13c-3,5.6-4.6,11.6-4.6,17.8 s1.5,12.2,4.6,17.8c3.2,5.5,7.5,9.8,13,13c5.6,3,11.6,4.6,17.8,4.6s12.2-1.5,17.8-4.6c5.5-3.2,9.8-7.5,13-13 C83.9,62.2,85.4,56.2,85.4,50z M58.4,26.9v29.2c0,0.6-0.2,1.1-0.7,1.6c-0.5,0.5-1,0.7-1.6,0.7H35.4c-0.6,0-1.1-0.2-1.6-0.7 c-0.3-0.6-0.5-1.1-0.5-1.6v-4.1c0-0.6,0.2-1.1,0.5-1.4c0.5-0.5,1-0.7,1.6-0.7H50V26.9c0-0.5,0.2-0.9,0.7-1.4 c0.2-0.5,0.6-0.7,1.4-0.7h4.1c0.6,0,1.1,0.2,1.6,0.7C58.2,26,58.4,26.5,58.4,26.9z',\n  default:\n    'M81.2,12.5c3.8,0,6.2,2.5,6.2,6.2v62.5c0,3.8-2.5,6.2-6.2,6.2H18.8c-3.7,0-6.2-2.5-6.2-6.2V18.8 c0-3.7,2.5-6.2,6.2-6.2H81.2 M81.2,0H18.8C8.1,0,0,8.1,0,18.8v62.5C0,91.9,8.1,100,18.8,100h62.5c10.6,0,18.8-8.1,18.8-18.8V18.8 C100,8.1,91.9,0,81.2,0L81.2,0z M35.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,35.7,35.3,33.6,35.3,31.1z M58.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,35.7,58.3,33.6,58.3,31.1z M81.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,35.7,81.3,33.6,81.3,31.1z M35.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,58.3,35.3,56.3,35.3,53.8z M58.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,58.3,58.3,56.3,58.3,53.8z M81.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,58.3,81.3,56.3,81.3,53.8z M35.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,81,35.3,79,35.3,76.5z M58.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,81,58.3,79,58.3,76.5z M81.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,81,81.3,79,81.3,76.5z',\n  error:\n    'M70.7,0H29.3L0,29.3v41.4L29.3,100h41.4L100,70.7V29.3L70.7,0z M45.1,69.6v-6.7c0-0.8,0.7-1.5,1.5-1.5h6.7 c0.8,0,1.5,0.7,1.5,1.5v6.7c0,0.8-0.7,1.5-1.5,1.5h-6.7C45.8,71.2,45.1,70.5,45.1,69.6z M54.6,55.5c-0.1,0.8-1.1,1.4-2.2,1.4h-4.8 c-1.2,0-2.1-0.6-2.2-1.4l-3.7-24.9c-0.1-0.4,0.1-0.9,0.6-1.2c0.4-0.3,1-0.5,1.7-0.5h12.3c0.6,0,1.2,0.2,1.7,0.5 c0.4,0.3,0.6,0.8,0.6,1.2L54.6,55.5z',\n  'hand-negative':\n    'M61.01,72.06c1.49,3.99,3.22,7.93,4.26,12.03c2.28,8.94-4.49,16.89-13.28,15.8c-4.59-0.57-7.71-3.45-10.01-7.24 c-2.28-3.76-4.65-7.49-6.54-11.44c-3.42-7.17-8.8-12.32-15.49-16.34c-2.88-1.73-5.66-3.62-8.43-5.54c-1.76-1.22-2.96-2.81-2.95-5.15 c0.04-11.38-0.03-22.77,0.07-34.15c0.03-3.54,1.91-5.75,5.29-6.81c1.1-0.34,2.26-0.51,3.4-0.67c5.24-0.76,10.34-1.71,14.98-4.7 c6.03-3.88,12.82-6.16,19.88-7.33c5.4-0.9,10.84-0.75,16.06,1.23c5.36,2.03,9.32,5.37,10.85,11.21c0.4,1.52,1.41,3,2.49,4.19 c2.96,3.27,4.18,6.97,3.83,11.36c-0.1,1.29,0.28,2.8,0.94,3.92c1.67,2.87,2.89,5.87,2.52,9.18c-0.24,2.16,0.13,3.95,1.05,5.9 c2.78,5.9,1.6,12.48-2.61,16.48c-2.75,2.6-6.16,3.15-9.68,3.21c-6.06,0.09-12.13,0.03-18.81,0.03 C59.75,69.26,60.48,70.63,61.01,72.06z M14.52,54.03c0.67,0.54,1.43,1.22,2.27,1.79c2.24,1.54,4.43,3.18,6.79,4.51 c7.95,4.5,13.46,11.14,17.52,19.2c1.63,3.23,3.52,6.33,5.39,9.43c0.73,1.21,1.61,2.36,2.62,3.34c1.92,1.85,4.24,2.56,6.76,1.4 c2.56-1.18,4.03-3.25,3.99-6.13c-0.02-1.27-0.26-2.59-0.7-3.78c-1.47-4-3.06-7.95-4.63-11.91c-0.28-0.72-0.67-1.4-0.96-2.12 c-1.77-4.49,0.54-8.2,5.33-8.3c5.56-0.12,11.13-0.03,16.7-0.05c1.16,0,2.34,0.03,3.49-0.14c4.83-0.68,7.08-3.47,6.37-8.31 c-0.25-1.72-1.35-3.29-1.94-4.98c-0.45-1.29-1.25-2.82-0.91-3.96c1.32-4.45-0.14-7.83-3.32-10.78c-0.18-0.17-0.25-0.45-0.5-0.91 c0.93-5.11,2.08-10.58-4.55-13.12c-0.18-0.9-0.35-1.52-0.43-2.15c-0.76-6.1-3.64-9.05-9.69-10.43C56.85,4.97,50,6.5,43.25,8.97 c-2.42,0.89-4.93,1.82-7.01,3.28c-5.48,3.84-11.59,5.48-18.12,6.09c-1.12,0.1-2.21,0.45-3.6,0.75 C14.52,31.05,14.52,42.42,14.52,54.03z',\n  'hand-positive':\n    'M46.01,6c-2.12,3.51-4.26,7.02-6.1,10.68c-4.59,9.12-10.84,16.63-19.83,21.73c-2.67,1.51-5.15,3.37-7.68,5.11 c-0.95,0.65-1.81,1.42-2.57,2.03c0,13.14,0,26.02,0,39.56c1.58,0.34,2.82,0.73,4.08,0.85c7.38,0.69,14.3,2.55,20.51,6.9 c2.36,1.65,5.2,2.71,7.94,3.71c7.64,2.8,15.4,4.53,23.63,2.65c6.84-1.57,10.11-4.9,10.97-11.81c0.09-0.71,0.28-1.41,0.49-2.44 c7.51-2.88,6.2-9.07,5.15-14.85c0.28-0.53,0.36-0.85,0.56-1.04c3.6-3.35,5.26-7.17,3.76-12.21c-0.38-1.28,0.53-3.02,1.03-4.48 c0.66-1.91,1.91-3.69,2.19-5.64c0.8-5.48-1.74-8.64-7.21-9.41c-1.3-0.18-2.63-0.15-3.95-0.15c-6.3-0.02-12.6,0.08-18.9-0.05 c-5.42-0.12-8.04-4.31-6.04-9.4c0.32-0.82,0.76-1.59,1.08-2.4c1.77-4.49,3.57-8.96,5.24-13.49c0.49-1.35,0.77-2.84,0.79-4.27 c0.04-3.25-1.62-5.6-4.52-6.93c-2.86-1.31-5.49-0.51-7.66,1.58C47.84,3.33,46.84,4.64,46.01,6z',\n  heart:\n    'M50,85.5c-1,0-1.9-0.3-2.5-1L12.7,51c-0.1,0-0.4-0.2-0.7-0.6s-0.6-0.7-0.9-0.8c-0.7-0.8-1.7-2-3.1-3.7 c-1.3-1.6-2.5-3.4-3.7-5.5c-1-1.7-2-3.9-2.9-6.6C0.5,31.2,0,28.6,0,26c0-8.1,2.3-14.5,7-19.1C11.6,2.3,18.2,0,26.8,0 c2.2,0,4.6,0.4,7,1.2s4.7,1.8,6.6,3.1c1.8,1.2,3.6,2.5,5.3,3.9c1.6,1.2,3,2.4,4.3,3.7c1.3-1.3,2.7-2.5,4.3-3.7 c1.7-1.4,3.5-2.7,5.3-3.9c2-1.3,4.2-2.3,6.6-3.1C68.7,0.4,71,0,73.2,0C81.8,0,88.4,2.3,93,6.8c4.7,4.7,7,11.1,7,19.1 s-4.2,16.5-12.7,25.2L52.5,84.6C51.9,85.2,51,85.5,50,85.5z',\n  'heart-hollow':\n    'M73.2,8c6.4,0,11,1.5,14.1,4.5C90.5,15.6,92,20.1,92,26c0,5.9-3.5,12.4-10.3,19.5L50,75.9L18.3,45.2 c-0.2-0.2-0.4-0.4-0.6-0.5c-0.3-0.3-0.7-0.7-1-1c-0.6-0.8-1.5-1.7-2.5-3c-1-1.2-1.9-2.6-2.9-4.2c-0.1-0.1-0.1-0.2-0.2-0.3 c-0.5-0.8-1.3-2.3-2.2-5c0,0,0-0.1,0-0.1C8.3,29.4,8,27.7,8,26c0-5.9,1.5-10.3,4.7-13.5c3-3,7.6-4.5,14.1-4.5 c1.4,0,2.9,0.3,4.6,0.8c1.7,0.6,3.3,1.3,4.6,2.2c0,0,0.1,0,0.1,0.1c1.5,1,3,2.1,4.4,3.3c0.1,0.1,0.2,0.2,0.4,0.3 c1.3,0.9,2.4,1.9,3.4,3c1.5,1.5,3.5,2.3,5.7,2.3s4.2-0.8,5.7-2.3c1-1,2.2-2,3.4-3c0.1-0.1,0.2-0.2,0.4-0.3c1.4-1.2,2.9-2.3,4.4-3.3 c0,0,0.1,0,0.1-0.1c1.3-0.9,2.9-1.6,4.6-2.2C70.3,8.3,71.9,8,73.2,8 M73.2,0c-2.2,0-4.6,0.4-7,1.2C63.7,2,61.5,3,59.6,4.3 c-1.8,1.2-3.6,2.5-5.3,3.9c-1.6,1.2-3,2.4-4.3,3.7c-1.3-1.3-2.7-2.5-4.3-3.7c-1.7-1.4-3.5-2.7-5.3-3.9c-2-1.3-4.2-2.3-6.6-3.1 C31.3,0.4,29,0,26.8,0C18.2,0,11.6,2.3,7,6.8C2.3,11.5,0,17.9,0,26c0,2.6,0.5,5.2,1.4,7.8c0.9,2.7,1.9,4.9,2.9,6.6 c1.2,2.1,2.4,3.9,3.7,5.5c1.4,1.7,2.5,2.9,3.1,3.7c0.3,0.1,0.6,0.4,0.9,0.8c0.3,0.4,0.6,0.6,0.7,0.6l34.8,33.6c0.7,0.7,1.5,1,2.5,1 s1.9-0.3,2.5-1l34.8-33.4C95.8,42.4,100,34,100,26c0-8.1-2.3-14.5-7-19.1C88.4,2.3,81.8,0,73.2,0L73.2,0z',\n  info:\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M57.9,78.3c0,1.7-1.3,3-3,3h-9.9 c-1.7,0-3-1.3-3-3V43.6c0-1.7,1.3-3,3-3h9.9c1.7,0,3,1.3,3,3V78.3z M57.9,30.6c0,1.7-1.3,3-3,3h-9.9c-1.7,0-3-1.3-3-3v-9.9 c0-1.7,1.3-3,3-3h9.9c1.7,0,3,1.3,3,3V30.6z',\n  lock:\n    'M20.2,100h59.6c3.5,0,6.4-2.9,6.4-6.4V44.7c0-3.5-2.9-6.4-6.4-6.4h-3.2V26.6C76.6,11.9,64.7,0,50,0S23.4,11.9,23.4,26.6 v11.7h-3.2c-3.5,0-6.4,2.9-6.4,6.4v48.9C13.8,97.1,16.7,100,20.2,100z M50,77.7c-4.7,0-8.5-3.8-8.5-8.5c0-4.7,3.8-8.5,8.5-8.5 s8.5,3.8,8.5,8.5C58.5,73.8,54.7,77.7,50,77.7z M40.4,26.6c0-5.3,4.3-9.6,9.6-9.6s9.6,4.3,9.6,9.6v11.7H40.4V26.6z',\n  login:\n    'M77.2,50c0,1.1-0.5,2.1-1.4,3L40.4,88.4c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H4.1 c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3 c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L75.8,47C76.7,47.9,77.2,48.9,77.2,50z M82,8H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20 c1.7,0,10,0.7,10,11v21v4v21c0,10.3-8.4,11-10,11H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20c0.5,0,4.6-0.1,8.9-2.3C95,87.4,100,82.7,100,73 V52v-4V27C100,11.4,87,8,82,8z',\n  logout:\n    'M0,27l0,21l0,4l0,21c0,9.7,5,14.4,9.1,16.7c4.3,2.3,8.4,2.3,8.9,2.3h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18c-1.6,0-10-0.7-10-11 V52v-4V27c0-10.3,8.4-11,10-11h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18C13,8,0,11.4,0,27z M100.2,50c0,1.1-0.5,2.1-1.4,3L63.4,88.4 c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H27.1c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4 c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L98.8,47 C99.7,47.9,100.2,48.9,100.2,50z',\n  no:\n    '    M50,0C22.5,0,0,22.5,0,50s22.5,50,50,50s50-22.5,50-50S77.5,0,50,0z M72.5,65.6L65,73.1c-1.2,1.2-3.1,1.2-4.4,0L52.5,65 c-1.2-1.2-3.1-1.2-4.4,0L40,73.1c-1.2,1.2-3.1,1.2-4.4,0l-7.5-7.5c-1.2-1.2-1.2-3.1,0-4.4l8.1-8.1c1.2-1.2,1.2-3.1,0-4.4L26.9,40 c-1.2-1.2-1.2-3.1,0-4.4l7.5-7.5c1.2-1.2,3.1-1.2,4.4,0l8.1,8.1c1.9,1.2,3.8,1.2,5,0l8.1-8.1c1.2-1.2,3.1-1.2,4.4,0l7.5,7.5 c1.2,1.2,1.2,3.1,0,4.4l-8.1,8.1c-1.2,1.2-1.2,3.1,0,4.4l8.1,8.1C73.8,62.5,73.8,64.4,72.5,65.6z',\n  plug:\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,90.5 C27.6,90.5,9.5,72.4,9.5,50C9.5,27.6,27.6,9.5,50,9.5S90.5,27.6,90.5,50C90.5,72.4,72.4,90.5,50,90.5z M34,66H33 c-2.5,0-4.5-2-4.5-4.5V38.5c0-2.5,2-4.5,4.5-4.5H34c2.5,0,4.5,2,4.5,4.5v23.1C38.5,64,36.5,66,34,66z M70,66H69 c-2.5,0-4.5-2-4.5-4.5V38.5c0-2.5,2-4.5,4.5-4.5H70c2.5,0,4.5,2,4.5,4.5v23.1C74.5,64,72.5,66,70,66z',\n  'plug-available':\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,90.5 c-10.3,0-19.7-3.8-26.8-10.1c1.4,0,3.3,0.4,5.6,1.2c0.9,0.3,1.8,0.7,2.7,1.1c2.5,1,5.2,2.1,8.1,2.6c0.6,0.1,1.3,0.2,2.2,0.2 c0.9,0,1.8-0.1,2.8-0.4c3.3-1,5.1-3.7,4.8-7c-0.2-1.8-1-3.6-2.4-5.4c-2.5-3-6.2-5.1-10.2-5.7c-1.6-0.2-3.1-0.1-4.4,0 c-1.7,0.1-2.8,0.2-3.7-0.2c-1.2-0.6-2.1-2.4-2.2-4.6c-0.1-1.5,0.1-2.7,0.6-3.4c0.2-0.2,0.3-0.4,0.4-0.5c1,0.4,2.9,2.8,3.8,3.8 c0.7,0.8,1.3,1.6,1.9,2.2c1.6,1.7,3.3,2,4.4,2c1,0,2.7-0.3,4.2-1.9l1.3-1.3l0.3,0.3c6.3,6.3,16.7,6.3,23.1,0l9.8-9.8 c1.8-1.8,1.8-4.7,0-6.5l-2.9-2.9l6.8-6.8c1.1-1.1,1.1-3,0-4.1h0c-1.1-1.1-3-1.1-4.1,0l-6.8,6.8l-6.8-6.8l6.8-6.8 c1.1-1.1,1.1-3,0-4.1c-1.1-1.1-3-1.1-4.1,0l-6.8,6.8l-2.9-2.9c-1.8-1.8-4.7-1.8-6.5,0L39.1,36c-6,6-6.3,15.7-0.9,22.1 c-0.2,0.2-0.4,0.4-0.6,0.6c-0.3-0.3-0.6-0.7-0.9-1.1c-2.2-2.7-5.2-6.5-9.3-6.5c0,0,0,0-0.1,0c-1.5,0-3.8,0.6-5.8,3.2 c-1.6,2.1-2.3,4.8-2,8.2c0.4,4.8,2.7,8.7,6.2,10.4c2.6,1.2,5.2,1.1,7.2,0.9c1-0.1,2-0.1,2.8,0c2.3,0.3,4.4,1.5,5.8,3.2 c0.5,0.6,0.7,1,0.8,1.3c-0.4,0.1-1,0.1-1.7,0c-2.1-0.3-4.3-1.2-6.6-2.2c-1-0.4-2-0.8-3-1.2c-5.6-2.1-10.1-2.2-13.3-0.4 C12.6,67.8,9.5,59.3,9.5,50C9.5,27.6,27.6,9.5,50,9.5S90.5,27.6,90.5,50C90.5,72.4,72.4,90.5,50,90.5z',\n  'plug-connected':\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,9.5c10.1,0,19.4,3.7,26.4,9.8 l-7,7c-5.2-4.1-12.9-3.8-17.7,1l-8,8c-1.5,1.5-1.5,3.9,0,5.3l2,2l-3,3l-2.4-2.4c-1.5-1.5-3.9-1.5-5.3,0l-8,8 c-4.8,4.8-5.2,12.4-1,17.7l-7,7c-5.9-7-9.5-16.1-9.5-26C9.5,27.6,27.6,9.5,50,9.5z M46.3,49.3l3-3l5,5l-3,3L46.3,49.3z M50,90.5 c-10.1,0-19.3-3.7-26.4-9.8l7-7c5.2,5.2,13.7,5.2,18.8,0l8-8c1.5-1.5,1.5-3.9,0-5.3l-2.6-2.6l3-3l3,3c1.5,1.5,3.9,1.5,5.3,0l8-8 c5.2-5.2,5.2-13.6,0-18.8L81,24c5.9,7,9.5,16.1,9.5,26C90.5,72.4,72.4,90.5,50,90.5z',\n  private:\n    'M41,0C18.4,0,0,18.4,0,41s18.4,41,41,41s41-18.4,41-41S63.6,0,41,0z M58,59.5c0,1.6-1.3,3-3,3H27c-1.7,0-3-1.4-3-3v-23 c0-1.7,1.3-3,3-3h1.5V28c0-6.9,5.6-12.5,12.5-12.5S53.5,21.1,53.5,28v5.5H55c1.7,0,3,1.3,3,3V59.5z M45.5,28v5.5h-9V28 c0-2.5,2-4.5,4.5-4.5S45.5,25.5,45.5,28z M45,48c0,2.2-1.8,4-4,4s-4-1.8-4-4c0-2.2,1.8-4,4-4S45,45.8,45,48z',\n  'question-mark':\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M56.5,76.4c0,1-0.8,1.8-1.8,1.8h-9.5 c-1,0-1.8-0.8-1.8-1.8v-9.5c0-1,0.8-1.8,1.8-1.8h9.5c1,0,1.8,0.8,1.8,1.8V76.4z M66,38.3c0,0.9-0.1,1.6-0.3,2.3 c-0.2,0.7-0.3,1.3-0.6,1.8c-0.3,0.6-0.6,1.1-1,1.6l-6.4,7.7c-0.4,0.4-0.7,0.9-0.9,1.3c-0.2,0.3-0.2,0.5-0.2,0.8v5.2 c0,1-0.8,1.8-1.8,1.8h-9.5c-1,0-1.8-0.8-1.8-1.8v-6.1c0-1.2,0.3-2.4,0.8-3.6c0.5-1,1.1-2,1.9-2.9l6-6.9c0.3-0.3,0.5-0.7,0.6-1.1 c0.1-0.5,0.2-1,0.2-1.6v-3.5c0-0.1,0-0.5-0.6-0.9c-0.6-0.4-1.3-0.6-2.2-0.6c-0.8,0-1.6,0.2-2.4,0.6c-0.6,0.3-0.6,0.6-0.6,0.9v3.8 c0,1-0.8,1.8-1.8,1.8h-9.5c-1,0-1.8-0.8-1.8-1.8v-3.9c0-1.7,0.5-3.3,1.4-4.8c0.9-1.4,2.1-2.7,3.6-3.8c1.5-1,3.2-1.8,5.1-2.4 c1.9-0.6,3.9-0.9,6.1-0.9c2.5,0,4.8,0.4,6.9,1.1c2.1,0.7,3.9,1.8,5.3,3.2c0.7,0.7,1.2,1.3,1.7,1.9c0.5,0.6,0.9,1.4,1.2,2.1 c0.5,1.3,0.8,3.1,0.8,5.3C66,36.5,66,37.5,66,38.3z',\n  save:\n    'M100,90c0,1.5-0.5,2.8-1.5,3.8s-2.2,1.5-3.8,1.5H5.2H5c-1.3,0-2.5-0.5-3.5-1.5S0,91.5,0,90V28.2V28c0-1.5,0.3-2.7,1-3.5 l10.5-18c0.8-1.2,1.8-1.8,3-1.8h70.8h0.2c1.8,0,2.9,0.8,3.2,2.5l10,17.2v0.2c0.8,0.8,1.2,1.9,1.2,3.2v0.2V90z M90.5,22.8L83.8,11 H16.2L9.5,22.8H90.5z M67.2,58c-0.2-0.5-0.6-0.8-1.2-0.8h-7.5V37c0-1-0.5-1.5-1.5-1.5H43c-1,0-1.5,0.5-1.5,1.5v20.2H34 c-0.7,0-1.1,0.2-1.2,0.8s-0.2,1,0,1.5l16,22.5c0.3,0.3,0.8,0.5,1.2,0.5s0.9-0.2,1.2-0.5l16-22.5C67.4,59,67.4,58.5,67.2,58z',\n  stop:\n    'M68.3,90.5H31.7c-4.4,0-9.5-3-11.7-6.8L1.6,52c-2.2-3.8-2.2-9.7,0-13.5L20,6.8C22.2,3,27.3,0,31.7,0h36.6 c4.4,0,9.5,3,11.7,6.8l18.3,31.7c2.2,3.8,2.2,9.7,0,13.5L80,83.8C77.9,87.6,72.7,90.5,68.3,90.5z M31.7,5.9c-2.3,0-5.5,1.8-6.6,3.8\tL6.7,41.4c-1.2,2-1.2,5.6,0,7.6l18.3,31.7c1.2,2,4.3,3.8,6.6,3.8h36.6c2.3,0,5.5-1.8,6.6-3.8l18.3-31.7c1.1-2,1.1-5.6,0-7.6 L74.9,9.7c-1.1-2-4.3-3.8-6.6-3.8H31.7z M70.9,30.5c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.8-3.6,4.6c0,4.8,0,9.6,0,14.3 c0,0.7-0.4,1.3-0.7,2c-0.3-0.7-0.9-1.3-0.9-2c-0.1-6,0-11.9-0.1-17.9c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.7-3.6,4.6 c0,6,0,11.9,0,17.9c0,0.6-0.5,1.3-0.8,1.9c-0.3-0.6-0.7-1.2-0.9-1.9c-0.1-0.5,0-1.1,0-1.6c0-7.8,0-15.5,0-23.3 c0-2.1-0.5-3.8-2.8-4.3c-2.5-0.6-4.4,1.1-4.4,4c0,8,0,16,0,24c0,1-0.5,2-0.8,3c-0.3-1-0.8-2-0.8-3.1c-0.1-5.8,0.1-11.6-0.1-17.4 c0-1.2-1.1-2.8-2.1-3.4c-0.8-0.5-2.8-0.2-3.6,0.5c-0.9,0.8-1.3,2.4-1.3,3.7c-0.1,10.6,0,21.2-0.1,31.8c0,0.7-0.5,1.3-0.7,2 c-0.5-0.4-1.1-0.8-1.5-1.3c-2.3-3.6-4.4-7.2-6.7-10.8c-1.5-2.5-3.5-3.2-5.4-2c-2,1.2-2.3,3.2-0.8,5.7c3.2,5.3,6.5,10.5,9.7,15.8 c2.6,4.3,6.4,6.3,11.4,6.3c4.9,0,9.9,0,14.8,0c8.1,0,13.2-5.1,13.3-13.2c0-5,0-10,0-15.1C70.9,41.2,70.9,35.8,70.9,30.5z',\n  'sub-unit':\n    'M81.23,55.11c0,0.98-0.29,1.69-0.87,2.12c-0.58,0.43-1.54,0.65-2.89,0.65h-5.49v-5.53h5.49c1.35,0,2.32,0.22,2.89,0.65 C80.94,53.42,81.23,54.12,81.23,55.11z M79.61,46.63c0.59-0.39,0.88-1.02,0.88-1.88c0-0.91-0.29-1.57-0.88-1.99 c-0.59-0.42-1.52-0.63-2.8-0.63h-4.83v5.09h4.83C78.08,47.22,79.02,47.02,79.61,46.63z M100,34.03v31.94 C100,71.49,95.49,76,89.97,76H10.03C4.51,76,0,71.49,0,65.97V34.03C0,28.51,4.51,24,10.03,24h79.94C95.49,24,100,28.51,100,34.03z  M34.07,55.18c0-1.33-0.28-2.47-0.85-3.43c-0.57-0.96-1.52-1.8-2.88-2.53c-1.35-0.72-3.21-1.35-5.57-1.86 c-1.45-0.29-2.54-0.58-3.28-0.87c-0.74-0.28-1.24-0.57-1.51-0.87s-0.41-0.68-0.41-1.14c0-0.79,0.38-1.42,1.14-1.9 c0.76-0.48,1.77-0.72,3.02-0.72c2.6,0,5.09,0.81,7.45,2.43l2.06-4.79c-0.98-0.84-2.35-1.52-4.11-2.05 c-1.76-0.53-3.57-0.79-5.44-0.79c-2.11,0-3.99,0.36-5.62,1.09c-1.63,0.73-2.9,1.72-3.8,2.99c-0.9,1.27-1.35,2.7-1.35,4.3 c0,1.4,0.28,2.58,0.83,3.54s1.52,1.79,2.89,2.51s3.28,1.33,5.71,1.84c1.97,0.42,3.3,0.84,4,1.25c0.7,0.42,1.05,0.96,1.05,1.62 c0,0.74-0.39,1.31-1.16,1.71c-0.77,0.41-1.9,0.61-3.37,0.61c-1.45,0-2.89-0.21-4.31-0.63c-1.43-0.42-2.77-1.02-4.02-1.81l-2.1,4.79 c1.18,0.86,2.72,1.55,4.61,2.06c1.89,0.52,3.81,0.77,5.75,0.77c3.56,0,6.33-0.72,8.3-2.16C33.09,59.73,34.07,57.74,34.07,55.18z  M60.8,37h-6.67v15.3c0,1.87-0.42,3.31-1.25,4.31c-0.84,1.01-2.04,1.51-3.61,1.51c-1.57,0-2.78-0.5-3.61-1.51 c-0.84-1.01-1.25-2.44-1.25-4.31V37h-6.64v15.04c0,3.69,0.98,6.49,2.93,8.41c1.95,1.92,4.81,2.88,8.57,2.88 c3.74,0,6.59-0.96,8.57-2.89c1.98-1.93,2.97-4.73,2.97-8.39V37z M87.53,55.88c0-1.6-0.41-2.94-1.22-4.04 c-0.81-1.09-1.98-1.87-3.5-2.34c1.28-0.47,2.27-1.21,2.99-2.23c0.71-1.02,1.07-2.19,1.07-3.52c0-2.06-0.81-3.71-2.42-4.92 C82.84,37.61,80.67,37,77.95,37H65.37V63h12.94c1.87,0,3.5-0.29,4.89-0.88c1.39-0.59,2.46-1.42,3.21-2.49 C87.16,58.55,87.53,57.31,87.53,55.88z',\n  trash:\n    'M91.8,18.7v4.1c0,0.5-0.2,1-0.5,1.6c-0.6,0.3-1.1,0.5-1.6,0.5h-6.2v61.9c0,3.7-1.1,6.8-3.2,9.4c-2,2.6-4.4,3.9-7.3,3.9 H18.7c-2.9,0-5.3-1.2-7.3-3.7c-2.1-2.6-3.2-5.7-3.2-9.4V24.9H2.1c-0.5,0-1-0.2-1.6-0.5C0.2,23.8,0,23.3,0,22.8v-4.1 c0-0.5,0.2-1,0.5-1.6c0.6-0.3,1.1-0.5,1.6-0.5h20.1l4.6-11c0.8-1.7,2-3,3.7-4.1c1.5-1.1,3.2-1.6,5-1.6h21c1.8,0,3.5,0.5,5,1.6 c1.7,1.1,2.9,2.4,3.7,4.1l4.6,11h20.1c0.5,0,1,0.2,1.6,0.5C91.6,17.7,91.8,18.3,91.8,18.7z M33.3,81.3V35.4c0-0.5-0.2-1-0.5-1.6 c-0.6-0.3-1.1-0.5-1.6-0.5h-4.1c-0.5,0-1,0.2-1.6,0.5c-0.3,0.3-0.5,0.8-0.5,1.6v45.9c0,0.8,0.2,1.3,0.5,1.6 c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5C33.2,82.3,33.3,81.7,33.3,81.3z M31.3,16.7h29.2l-3.2-7.8 c-0.2-0.2-0.5-0.4-1.1-0.7H35.6c-0.6,0.3-1,0.5-1.1,0.7L31.3,16.7z M50,81.3V35.4c0-0.5-0.2-1-0.5-1.6c-0.6-0.3-1.1-0.5-1.6-0.5 h-4.1c-0.5,0-1,0.2-1.6,0.5c-0.3,0.6-0.5,1.1-0.5,1.6v45.9c0,0.5,0.2,1,0.5,1.6c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5 C49.8,82.3,50,81.7,50,81.3z M66.7,81.3V35.4c0-0.8-0.2-1.3-0.5-1.6c-0.6-0.3-1.1-0.5-1.6-0.5h-4.1c-0.5,0-1,0.2-1.6,0.5 c-0.3,0.6-0.5,1.1-0.5,1.6v45.9c0,0.5,0.2,1,0.5,1.6c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5C66.5,82.6,66.7,82,66.7,81.3 z',\n  youtube:\n    'M16.1,83.3c-2.8-0.2-5.8-1.1-8.3-2.4c-5-2.5-6.4-7.3-6.9-12.5c-1.2-11.2-1.1-22.4-0.3-33.5c0.2-2.7,0.6-5.3,1.2-7.9 c1.2-5.4,6-9.6,12.1-10c10.7-0.7,21.4-1.4,32-1.5C56.9,15.4,68,15.9,79,16.2c2.8,0.1,5.7,0.4,8.5,0.9c6.2,1.1,9.7,4.8,10.8,11 c1.4,7.9,1.8,16,1.5,24c-0.2,6.5-0.7,13-1.6,19.5c-0.8,6.4-5.5,10.9-12,11.3c-11,0.8-22.1,1.1-33.2,1.6c-2,0.1-4,0-6,0 C47.2,84.6,26.4,84,16.1,83.3z M40.6,34.6c0,10.3,0,20.4,0,30.6c8.4-5.2,16.5-10.2,24.9-15.3C57.1,44.8,48.9,39.8,40.6,34.6z',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport constants from '../../../utils/constants';\nimport ICONS from '../../../utils/icons';\n\nconst Icon = ({ type, size, color, inline, title }) => {\n  const margin = inline ? '0 3px' : 0;\n\n  if (!title) title = type;\n\n  const styles = {\n    svg: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      margin,\n      transform: 'translateY(-1px)',\n    },\n    path: {\n      fill: constants.DEFAULT_COLORS[color],\n    },\n  };\n\n  return (\n    <svg\n      title={title}\n      style={styles.svg}\n      width={`${size}px`}\n      height={`${size}px`}\n      viewBox=\"0 0 100 100\"\n    >\n      <path style={styles.path} d={ICONS[type]} className={`icon-${type}`}>\n        <title>{title}</title>\n      </path>\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  color: PropTypes.string,\n  inline: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, null]),\n};\n\nIcon.defaultProps = {\n  type: 'default',\n  size: 12,\n  color: 'default',\n  inline: false,\n  title: null,\n};\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst Loading = ({ message = '' }) => (\n  <main className=\"container container--flex container--center container--requirement-wrapper\">\n    <div className=\"requirement-wrapper__container\">\n      <img\n        className=\"requirement-wrapper__loading-icon\"\n        src={loading}\n        alt=\"Loading Icon\"\n      />\n      <p>{message}</p>\n    </div>\n  </main>\n);\n\nLoading.propTypes = {\n  message: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  message: '',\n};\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst LoadingIcon = ({ size }) => (\n  <span className={`loading-icon loading-icon--${size}`}>\n    <img className=\"loading-icon__image\" src={loading} alt=\"Loading Icon\" />\n  </span>\n);\n\nLoadingIcon.propTypes = {\n  size: PropTypes.string,\n};\n\nLoadingIcon.defaultProps = {\n  size: 'medium',\n};\n\nexport default LoadingIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst LoadingWrapper = ({ pending, children, size }) =>\n  pending ? (\n    <span className={`loading-icon loading-icon--${size}`}>\n      <img className=\"loading-icon__image\" src={loading} alt=\"Loading Icon\" />\n    </span>\n  ) : (\n    children\n  );\n\nLoadingWrapper.propTypes = {\n  children: PropTypes.object.isRequired,\n  pending: PropTypes.bool,\n  size: PropTypes.string,\n};\n\nLoadingWrapper.defaultProps = {\n  pending: false,\n  size: 'medium',\n};\n\nexport default LoadingWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport constants from '../../../../utils/constants';\n\nconst MemberNationaltyFlag = ({ nationality }) => {\n  const flag = constants.FLAGS_LIST[nationality];\n\n  let flagUrl = `${process.env.PUBLIC_URL}${\n    constants.NATIONALITY_FLAG_URL\n  }unknown.jpg`;\n\n  if (flag) {\n    flagUrl = `${process.env.PUBLIC_URL}${\n      constants.NATIONALITY_FLAG_URL\n    }${flag}.jpg`;\n  }\n\n  return (\n    <img\n      className=\"card__flag\"\n      src={flagUrl}\n      alt={nationality}\n      title={nationality}\n    />\n  );\n};\n\nMemberNationaltyFlag.propTypes = {\n  nationality: PropTypes.string,\n};\n\nMemberNationaltyFlag.defaultProps = {\n  nationality: 'unknown',\n};\n\nexport default MemberNationaltyFlag;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport constants from '../../../../utils/constants';\nimport utils from '../../../../utils';\n\nclass MemberPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.fallback = () => {\n      this.setState({ failed: true });\n    };\n  }\n\n  render() {\n    const pictureUrl = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }${this.props.name.toLowerCase()}${this.props.memberId}.jpg`;\n\n    const gender = this.props.gender === 'FEMALE' ? 'f' : 'm';\n\n    const colorNumber = utils.getColorNumber(this.props.colorId);\n    const profilePlaceholderCode = (colorNumber % 5) + 1;\n\n    const pictureFallback = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }profile-${gender}-${profilePlaceholderCode}.png`;\n\n    if (this.state.failed) {\n      return (\n        <img\n          className={`${this.props.className} background-color-${colorNumber}`}\n          src={pictureFallback}\n          alt=\"Member\"\n        />\n      );\n    }\n    return (\n      <img\n        className={this.props.className}\n        src={pictureUrl}\n        onError={this.fallback}\n        alt=\"Member\"\n      />\n    );\n  }\n}\n\nMemberPicture.propTypes = {\n  className: PropTypes.string,\n  colorId: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  memberId: PropTypes.string.isRequired,\n  name: PropTypes.string,\n};\n\nMemberPicture.defaultProps = {\n  className: 'card__profile-image',\n  name: 'Unkown',\n};\n\nexport default MemberPicture;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import position icons\nimport iconLeader from '../../../../images/icon-leader.svg';\nimport iconMainVocalist from '../../../../images/icon-main-vocalist.svg';\nimport iconMainRapper from '../../../../images/icon-main-rapper.svg';\nimport iconMainDancer from '../../../../images/icon-main-dancer.svg';\nimport iconLeadVocalist from '../../../../images/icon-lead-vocalist.svg';\nimport iconLeadRapper from '../../../../images/icon-lead-rapper.svg';\nimport iconLeadDancer from '../../../../images/icon-lead-dancer.svg';\nimport iconVocalist from '../../../../images/icon-vocalist.svg';\nimport iconDancer from '../../../../images/icon-dancer.svg';\nimport iconRapper from '../../../../images/icon-rapper.svg';\nimport iconCenter from '../../../../images/icon-center.svg';\nimport iconVisual from '../../../../images/icon-visual.svg';\nimport iconMaknae from '../../../../images/icon-maknae.svg';\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst MemberPositions = ({ memberId, positions }) => {\n  // Sort positions by importance\n  const sortedPositions = [];\n\n  const positionPriority = {\n    LEADER: 0,\n    MAIN_VOCALIST: 1,\n    MAIN_RAPPER: 2,\n    MAIN_DANCER: 3,\n    LEAD_VOCALIST: 4,\n    LEAD_RAPPER: 5,\n    LEAD_DANCER: 6,\n    VOCALIST: 7,\n    RAPPER: 8,\n    DANCER: 9,\n    CENTER: 10,\n    VISUAL: 11,\n    MAKNAE: 12,\n  };\n\n  positions.forEach(position => {\n    sortedPositions[positionPriority[position]] = position;\n  });\n\n  const iconBank = {\n    LEADER: iconLeader,\n    MAIN_VOCALIST: iconMainVocalist,\n    MAIN_RAPPER: iconMainRapper,\n    MAIN_DANCER: iconMainDancer,\n    LEAD_VOCALIST: iconLeadVocalist,\n    LEAD_RAPPER: iconLeadRapper,\n    LEAD_DANCER: iconLeadDancer,\n    VOCALIST: iconVocalist,\n    RAPPER: iconDancer,\n    DANCER: iconRapper,\n    CENTER: iconCenter,\n    VISUAL: iconVisual,\n    MAKNAE: iconMaknae,\n  };\n\n  return (\n    <ul className=\"card__positions\">\n      {sortedPositions.map(position => {\n        const positionName = utils.humanize(position, 'Capital');\n        return (\n          <li key={`${memberId}-${position}`} className=\"card__position\">\n            <img\n              className=\"card__position-icon\"\n              src={iconBank[position]}\n              alt={`Position: ${positionName}`}\n              title={position}\n            />\n            {positionName}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMemberPositions.propTypes = {\n  memberId: PropTypes.string.isRequired,\n  positions: PropTypes.array.isRequired,\n};\n\nexport default MemberPositions;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import Member components\nimport MemberNationaltyFlag from './member/MemberNationalityFlag';\nimport MemberPicture from './member/MemberPicture';\nimport MemberPositions from './member/MemberPositions';\n// Import utility functions\nimport utils from '../../../utils';\nimport { FavoriteIcon, Icon } from '..';\n\nconst MemberCard = ({\n  favoriteState,\n  member,\n  updateFavoriteMembers,\n  averages,\n  showId,\n  showReferenceArtist,\n}) => (\n  <div className=\"card\">\n    {showId ? (\n      <p className=\"member-id\">\n        {member.name.toLowerCase()}\n        {member.id}\n      </p>\n    ) : null}\n    <MemberPicture\n      className={\n        showReferenceArtist ? 'card__profile-full-image' : 'card__profile-image'\n      }\n      colorId={member.colorId}\n      gender={member.gender}\n      memberId={member.id}\n      name={member.name}\n    />\n    <span\n      className={`card__color-bar background-color-${utils.getColorNumber(\n        member.colorId\n      )}`}\n    />\n    <h3 className=\"card__name\">\n      {member.name}\n      <FavoriteIcon\n        action={updateFavoriteMembers}\n        id={member.id}\n        size=\"20\"\n        state={favoriteState}\n      />\n    </h3>\n    {showReferenceArtist ? (\n      <p>\n        {member.private ? (\n          <Icon type=\"private\" color=\"red\" inline title=\"private\" size=\"18\" />\n        ) : null}\n        <b>From </b> {member.referenceArtist}\n      </p>\n    ) : null}\n\n    <p>\n      <b>Date of Birth:</b> {utils.parseBirthDate(member.birthdate)} ({\n        member.age\n      }yo)\n    </p>\n    <p>\n      <b>Nationality: </b>\n      <MemberNationaltyFlag nationality={member.nationality} />\n    </p>\n    {averages ? (\n      <Fragment>\n        <p>\n          <b>Avg Official Songs: </b>0%\n        </p>\n        <p>\n          <b>Avg Custom Songs: </b>0%\n        </p>\n        <p>\n          <b>Avg All Songs: </b>0%\n        </p>\n      </Fragment>\n    ) : null}\n    <p>\n      <b>Positions:</b>\n    </p>\n    <MemberPositions memberId={member.id} positions={member.positions} />\n  </div>\n);\n\nMemberCard.propTypes = {\n  averages: PropTypes.oneOfType([PropTypes.object, null]),\n  showId: PropTypes.bool,\n  showReferenceArtist: PropTypes.bool,\n  favoriteState: PropTypes.bool,\n  member: PropTypes.object.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n};\n\nMemberCard.defaultProps = {\n  averages: null,\n  showId: false,\n  showReferenceArtist: false,\n  favoriteState: false,\n};\n\nexport default MemberCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import position icons\nimport iconLeader from '../../../images/icon-leader.svg';\nimport iconMainVocalist from '../../../images/icon-main-vocalist.svg';\nimport iconMainRapper from '../../../images/icon-main-rapper.svg';\nimport iconMainDancer from '../../../images/icon-main-dancer.svg';\nimport iconLeadVocalist from '../../../images/icon-lead-vocalist.svg';\nimport iconLeadRapper from '../../../images/icon-lead-rapper.svg';\nimport iconLeadDancer from '../../../images/icon-lead-dancer.svg';\nimport iconVocalist from '../../../images/icon-vocalist.svg';\nimport iconDancer from '../../../images/icon-dancer.svg';\nimport iconRapper from '../../../images/icon-rapper.svg';\nimport iconCenter from '../../../images/icon-center.svg';\nimport iconVisual from '../../../images/icon-visual.svg';\nimport iconMaknae from '../../../images/icon-maknae.svg';\nimport iconAll from '../../../images/icon-all.svg';\nimport iconNone from '../../../images/icon-none.svg';\n\nconst PositionIcon = ({ className, position }) => {\n  const iconBank = {\n    LEADER: iconLeader,\n    MAIN_VOCALIST: iconMainVocalist,\n    MAIN_RAPPER: iconMainRapper,\n    MAIN_DANCER: iconMainDancer,\n    LEAD_VOCALIST: iconLeadVocalist,\n    LEAD_RAPPER: iconLeadRapper,\n    LEAD_DANCER: iconLeadDancer,\n    VOCALIST: iconVocalist,\n    RAPPER: iconDancer,\n    DANCER: iconRapper,\n    CENTER: iconCenter,\n    VISUAL: iconVisual,\n    MAKNAE: iconMaknae,\n    ALL: iconAll,\n    NONE: iconNone,\n  };\n\n  return (\n    <span className={className}>\n      <img\n        className=\"position-icon\"\n        src={iconBank[position]}\n        alt={`Position: ${position}`}\n        title={position}\n      />\n    </span>\n  );\n};\n\nPositionIcon.propTypes = {\n  className: PropTypes.string,\n  position: PropTypes.string.isRequired,\n};\n\nPositionIcon.defaultProps = {\n  className: 'position-icon-container--inline',\n};\n\nexport default PositionIcon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon, Loading } from '..';\n// Import images\nimport logo from '../../../images/logo-neg.svg';\n\nclass RequirementWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: true,\n      authentication: true,\n      admin: false,\n      activeArtist: false,\n      ready: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.ready) {\n      this.parseRequirements();\n    }\n  }\n\n  parseRequirements() {\n    this.props.requirements.forEach(requirement => {\n      this.setState({ [requirement]: true });\n    });\n    this.setState({ ready: true });\n  }\n\n  render() {\n    if (!this.state.ready) {\n      return <Loading message=\"Loading...\" />;\n    }\n\n    // Verify Database\n    if (this.state.database && !this.props.app.databaseReady) {\n      return <Loading message=\"Fecthing database...\" />;\n    }\n\n    // Verify Authentication\n    if (\n      !this.props.app.loading &&\n      this.state.authentication &&\n      !this.props.auth.isAuthenticated\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <img className=\"login-logo\" src={logo} alt=\"Line Distribution\" />\n            <p>You must be logged in to access this page.</p>\n            <button className=\"btn btn-simple\" onClick={this.props.login}>\n              Sign-in now <Icon type=\"login\" color=\"black\" inline />\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Admin\n    if (\n      !this.props.app.loading &&\n      this.state.admin &&\n      !this.props.auth.isAdmin\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <div className=\"requirement-wrapper__big-icon\">\n              <Icon type=\"stop\" color=\"red\" size={120} />\n            </div>\n            <p>You must be an administrator to access this page.</p>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Selected Artist\n    if (\n      !this.props.app.loading &&\n      this.state.selectedArtist &&\n      (!this.props.artists.selectedArtist ||\n        !this.props.artists.selectedArtist.id)\n    ) {\n      if (this.props.app.loading) {\n        return <Loading message=\"Fecthing artist...\" />;\n      }\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group.\n          </p>\n        </main>\n      );\n    }\n\n    // Verify Active Artist\n    if (\n      !this.props.app.loading &&\n      this.state.activeArtist &&\n      this.props.artists.activeArtist &&\n      !this.props.artists.activeArtist.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Required</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group and then\n            a unit.\n          </p>\n        </main>\n      );\n    }\n\n    // Verify Active Active\n    if (\n      !this.props.app.loading &&\n      this.state.activeUnit &&\n      this.props.distribute.activeUnit &&\n      !this.props.distribute.activeUnit.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Active Unit Required</h1>\n          <p>\n            No unit has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group and then\n            a unit.\n          </p>\n        </main>\n      );\n    }\n\n    if (\n      !this.props.app.loading &&\n      this.state.activeSong &&\n      this.props.distribute.activeSong &&\n      !this.props.distribute.activeSong.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Active Song Required</h1>\n          <p>\n            No song has been selected. Go to the{' '}\n            <Link to=\"/songs\">Songs Page</Link> and select a song.\n          </p>\n        </main>\n      );\n    }\n\n    return <div className=\"wrapper\">{this.props.children}</div>;\n  }\n}\n\nRequirementWrapper.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  children: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  requirements: PropTypes.array,\n};\n\nRequirementWrapper.defaultProps = {\n  requirements: [],\n};\n\nexport default RequirementWrapper;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport RequirementWrapper from '../components/RequirementWrapper';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RequirementWrapper)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nlet selectKey = 0;\n\n/**\n * Select\n * @param {action} action onChange action\n * @param {string} label label for the select\n * @param {array|object} options arrays or objects of objects\n * @param {string} optionValue key on values to be used as an option value\n * @param {string} optionName key on values to be used as an option name\n * @param {string} optionPrefix string to come before optionName\n * @param {string} placeholder string for the first placeholder option name\n * @param {bool} disablePlaceholder makes label unselectable\n * @param {string} type 'normal' or 'slim'\n */\nconst Select = ({\n  action,\n  options,\n  optionValue,\n  optionName,\n  optionPrefix,\n  label,\n  placeholder,\n  disablePlaceholder,\n  type,\n}) => {\n  // Transform options object into array\n  if (!Array.isArray(options)) {\n    options = Object.values(options);\n  }\n\n  const classNameModifier = type === 'slim' ? '--slim' : '';\n\n  return (\n    <div className=\"ld-select-group\">\n      {label ? <label className=\"ld-select__label\">{label}</label> : null}\n      <div className={`ld-select${classNameModifier}`}>\n        <select onChange={action}>\n          {placeholder ? (\n            <option value=\"\" disabled={disablePlaceholder}>\n              {placeholder}\n            </option>\n          ) : null}\n          {options.map(option => {\n            const key = `select-${selectKey++}`;\n            return (\n              <option key={key} value={option[optionValue]}>\n                {optionPrefix}\n                {option[optionName]}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nSelect.propTypes = {\n  action: PropTypes.func.isRequired,\n  options: PropTypes.oneOfType([PropTypes.array, PropTypes.object, undefined]),\n  optionValue: PropTypes.string,\n  optionName: PropTypes.string,\n  optionPrefix: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disablePlaceholder: PropTypes.bool,\n  type: PropTypes.oneOf(['slim', undefined]),\n};\n\nSelect.defaultProps = {\n  options: [],\n  optionValue: '',\n  optionName: '',\n  optionPrefix: '',\n  label: '',\n  placeholder: '',\n  disablePlaceholder: false,\n  type: '',\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SwitchToggle = ({ action, labels, checked }) => {\n  if (!labels) {\n    labels = { left: '', right: '' };\n  } else if (Array.isArray(labels)) {\n    labels = { left: labels[0], right: labels[1] };\n  } else if (typeof labels !== 'object') {\n    labels = { left: 'A', right: 'B' };\n  }\n\n  return (\n    <span>\n      <span className=\"slide-text-left\">{labels.left}</span>\n      <label className=\"switch\">\n        <input type=\"checkbox\" onChange={action} checked={checked} />\n        <span className=\"slider\" />\n      </label>\n      <span className=\"slide-text-right\">{labels.right}</span>\n    </span>\n  );\n};\n\nSwitchToggle.propTypes = {\n  action: PropTypes.func.isRequired,\n  labels: PropTypes.object, // eslint-disable-line\n  checked: PropTypes.bool,\n};\n\nSwitchToggle.defaultProps = {\n  checked: false,\n};\n\nexport default SwitchToggle;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../utils';\n\nconst Tabs = ({ tabs, active, action, icons, iconConditions, ...props }) => {\n  // Check for names and ids\n  tabs = tabs.map((tab, index) => {\n    const tabObj = {\n      name: tab.name || tab,\n      id: tab.id || tab,\n    };\n    if (tab.id !== undefined && tab.name === undefined) {\n      tabObj.name = utils.capitalizeWord(tab.id);\n    }\n    if (tab.id === undefined && tab.name !== undefined) {\n      tabObj.id = utils.spinalCaseWord(tab.name);\n    }\n\n    tabObj.key = `${tab.id}-${index}`;\n    tabObj.isActive = active === tab.id || active === tab ? 'selected' : '';\n    tabObj.showIcons = iconConditions.map(condition => tab[condition] || false);\n    return tabObj;\n  });\n\n  // Activate first tab if action paramenter is not available\n  if (!active) {\n    tabs[0].isActive = 'selected';\n  }\n\n  return (\n    <section className=\"tabs-container\">\n      <ul className=\"tabs\" onClick={action}>\n        {tabs.map(tab => (\n          <li\n            key={tab.key}\n            className={utils.bem('tabs', tab.isActive, 'tab')}\n            id={tab.id}\n          >\n            {tab.name}{' '}\n            <Fragment>\n              {tab.showIcons.map((show, index) => {\n                if (show) {\n                  return icons[index];\n                }\n                return null;\n              })}\n            </Fragment>\n          </li>\n        ))}\n      </ul>\n      <div className=\"tabs-content\">{props.children}</div>\n    </section>\n  );\n};\n\nTabs.propTypes = {\n  action: PropTypes.func.isRequired,\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any.isRequired,\n  iconConditions: PropTypes.array,\n  icons: PropTypes.array,\n  tabs: PropTypes.array.isRequired,\n};\n\nTabs.defaultProps = {\n  active: 0,\n  iconConditions: [],\n  icons: [],\n};\n\nexport default Tabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Typeahead = ({ action, className, name, placeholder, suggestions }) => (\n  <div className={`typeahead ${className}`}>\n    <input\n      className=\"typeahead-input\"\n      list={`list-${name}`}\n      onChange={action}\n      placeholder={placeholder}\n    />\n    <datalist className=\"typeahead-datalist\" id={`list-${name}`}>\n      {suggestions.map(suggestion => (\n        <option\n          key={suggestion}\n          className=\"typeahead-option\"\n          value={suggestion}\n        />\n      ))}\n    </datalist>\n  </div>\n);\n\nTypeahead.propTypes = {\n  action: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  suggestions: PropTypes.array,\n};\n\nTypeahead.defaultProps = {\n  className: '',\n  placeholder: 'Search...',\n  suggestions: [],\n};\n\nexport default Typeahead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import shared components\nimport { FavoriteIcon, LoadingIcon } from '../../../common';\n\nconst ArtistsTable = ({\n  artists,\n  favoriteAction,\n  pending,\n  rowAction,\n  searchQuery,\n  user,\n}) => {\n  // Filter table rows based on searchQuery\n  let filteredArtists = artists;\n  if (searchQuery && filteredArtists[0]) {\n    filteredArtists = _.filter(artists, o => o.query.includes(searchQuery));\n  }\n  // Message to be display when table has no rows\n  const emptyTableMessage =\n    searchQuery.length > 0\n      ? 'No artists available within your search'\n      : 'No artists available';\n\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"5\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"5\">{emptyTableMessage}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th className=\"artists-table__favorite-col\" />\n          <th>Name</th>\n          <th>Genre</th>\n          <th>Units</th>\n          <th>Members</th>\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {filteredArtists.length > 0\n          ? filteredArtists.map(entry => (\n              <tr key={`all-artists-${entry.id}`} id={`a-${entry.id}`}>\n                <td\n                  className=\"artists-cell-favorite\"\n                  onClick={() => favoriteAction(entry.id)}\n                >\n                  <FavoriteIcon\n                    action={() => {}}\n                    id={entry.id}\n                    size=\"12\"\n                    state={\n                      user.favoriteArtists && user.favoriteArtists[entry.id]\n                    }\n                  />\n                </td>\n                <td>{entry.name}</td>\n                <td>{entry.genre}</td>\n                <td>{entry.units ? entry.units.length : 0}</td>\n                <td>\n                  {entry.memberList.join(', ')} ({entry.memberList.length})\n                </td>\n              </tr>\n            ))\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nArtistsTable.propTypes = {\n  artists: PropTypes.array.isRequired,\n  favoriteAction: PropTypes.func.isRequired,\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string,\n  user: PropTypes.object.isRequired,\n};\n\nArtistsTable.defaultProps = {\n  pending: false,\n  searchQuery: '',\n};\n\nexport default ArtistsTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import common components\nimport {\n  ActiveUnit,\n  Icon,\n  Switch,\n  RequirementWrapper,\n  ActiveSong,\n} from '../../../common';\nimport ArtistsTable from './ArtistsTable';\n\nclass Artists extends Component {\n  componentDidMount() {\n    this.props.loadArtists();\n    this.props.updateSearchQuery('');\n  }\n  render() {\n    const {\n      app: { pending },\n      artists: { searchQuery, showFavoriteArtistsOnly, userLatestArtists },\n      auth: { user },\n      db,\n      distribute: { activeSong, activeUnit },\n    } = this.props;\n\n    const artistList = db.artists;\n\n    let filteredArtists = artistList;\n    if (showFavoriteArtistsOnly) {\n      filteredArtists = _.filter(artistList, o => user.favoriteArtists[o.id]);\n    }\n\n    // Row click should send user to the selected artist page\n    const handleTableClick = e => {\n      const { id } = e.target.parentNode;\n      const { className } = e.target;\n      if (id && className !== 'artists-cell-favorite') {\n        const artistId = id.substring(2);\n        this.props.history.push(`/artists/${artistId}`);\n      }\n    };\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--artists\">\n          <h1>Artists</h1>\n\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n\n          {userLatestArtists.length > 0 ? (\n            <section className=\"artists__section\">\n              <h2>\n                <Icon type=\"clock\" size=\"20\" color=\"blue\" /> Your Recently Used\n                Artists\n              </h2>\n\n              <ArtistsTable\n                artists={filteredArtists}\n                rowAction={handleTableClick}\n                favoriteAction={this.props.updateFavoriteArtists}\n                pending={pending.REQUEST_ARTISTS}\n                user={user}\n              />\n            </section>\n          ) : null}\n\n          <section className=\"artists__section\">\n            <h2>All Artists</h2>\n            <input\n              className=\"artists__search-bar\"\n              type=\"text\"\n              placeholder=\"Filter...\"\n              onChange={e => this.props.updateSearchQuery(e.target.value)}\n            />{' '}\n            Show Favorite Artists Only:{' '}\n            <Switch\n              action={this.props.showFavoriteArtistsOnlyToggle}\n              checked={showFavoriteArtistsOnly}\n            />\n            <ArtistsTable\n              artists={filteredArtists}\n              searchQuery={searchQuery}\n              pending={pending.REQUEST_ARTISTS}\n              rowAction={handleTableClick}\n              favoriteAction={this.props.updateFavoriteArtists}\n              user={user}\n            />\n          </section>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtists.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  showFavoriteArtistsOnlyToggle: PropTypes.func.isRequired,\n  updateSearchQuery: PropTypes.func.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtists.defaultProps = {};\n\nexport default Artists;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artists from '../components/Artists';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artists)\n);\n","import ArtistsContainer from './containers/ArtistsContainer';\n\nexport default ArtistsContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import constants\nimport constants from '../../../../utils/constants';\n// Import images\nimport biasPlaceholder from '../../../../images/bias-placeholder.svg';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass BiasPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.fallback = () => {\n      this.setState({ failed: true });\n    };\n  }\n\n  render() {\n    const { bias } = this.props;\n    // If no bias, display placeholder\n    if (!Object.keys(bias).length) {\n      return (\n        <img\n          className=\"unit-section__bias-placeholder\"\n          src={biasPlaceholder}\n          alt=\"Bias\"\n        />\n      );\n    }\n\n    const pictureUrl = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }${bias.name.toLowerCase()}${bias.id}.jpg`;\n\n    // If picture is not found\n    if (this.state.failed) {\n      return (\n        <div\n          className={`unit-section__bias-no-picture background-color-${utils.getColorNumber(\n            bias.colorId\n          )}`}\n        >\n          <span>{bias.name}</span>\n        </div>\n      );\n    }\n\n    return (\n      <img\n        className=\"unit-section__bias-picture\"\n        src={pictureUrl}\n        onError={this.fallback}\n        alt=\"Bias\"\n      />\n    );\n  }\n}\n\nBiasPicture.propTypes = {\n  bias: PropTypes.object.isRequired,\n};\n\nBiasPicture.defaultProps = {};\n\nexport default BiasPicture;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DistributedSongPreview = ({ rates, members }) => (\n  <div className=\"distribution-rates-preview__container\">\n    {Object.keys(members).map(memberId => {\n      const percentage = (100 * rates[memberId]) / (rates.total - rates.ALL);\n\n      // const percentage = rates[memberId].toFixed(1);\n      const spanWidth = {\n        width: `${percentage}%`,\n      };\n\n      return (\n        <span\n          key={`bar-${memberId}-${percentage}`}\n          className={`distribution-rates-preview__bar background-color-${\n            members[memberId].color.number\n          }`}\n          style={spanWidth}\n        >\n          {percentage.toFixed(1)}%\n        </span>\n      );\n    })}\n  </div>\n);\n\nDistributedSongPreview.propTypes = {\n  rates: PropTypes.object.isRequired,\n  members: PropTypes.object.isRequired,\n};\n\nDistributedSongPreview.defaultProps = {};\n\nexport default DistributedSongPreview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { LoadingIcon } from '../../../common';\nimport DistributedSongPreview from './DistributedSongPreview';\n\nconst DistributedSongsTable = ({\n  distributions,\n  pending,\n  members,\n  rowAction,\n}) => {\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"7\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"3\">This artist have no distributions yet</td>\n      </tr>\n    );\n  };\n\n  const humanizeCategory = (category, originalArtist) => {\n    switch (category) {\n      case 'WOULD':\n        return `How they would sing ${originalArtist}`;\n      case 'SHOULD':\n        return 'How they should sing it';\n      default:\n        return 'Official';\n    }\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Type</th>\n          <th>Distribution Preview</th>\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {distributions.length > 0\n          ? distributions.map(entry => (\n              <tr key={`all-artists-${entry.id}`} id={`a-${entry.id}`}>\n                <td>{entry.title}</td>\n                <td>\n                  {humanizeCategory(entry.category, entry.originalArtist)}\n                </td>\n                <td>\n                  <DistributedSongPreview\n                    rates={entry.rates}\n                    members={members}\n                  />\n                </td>\n              </tr>\n            ))\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nDistributedSongsTable.propTypes = {\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func,\n  distributions: PropTypes.array.isRequired,\n  members: PropTypes.object.isRequired,\n};\n\nDistributedSongsTable.defaultProps = {\n  pending: false,\n  rowAction: () => {},\n};\n\nexport default DistributedSongsTable;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport BiasPicture from './BiasPicture';\n// Import common components\nimport {\n  Tabs,\n  Icon,\n  LoadingWrapper,\n  MemberCard,\n  Select,\n} from '../../../common';\nimport DistributedSongsTable from './DistributedSongsTable';\n\nclass Units extends Component {\n  componentDidMount() {\n    this.props.props.getBias();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.props.artists.selectedUnit.id !==\n      this.props.props.artists.selectedUnit.id\n    ) {\n      this.props.props.getBias();\n    }\n  }\n\n  artistRedirect(page) {\n    this.props.props.activateUnit();\n\n    this.props.props.history.push(`/${page}`);\n  }\n\n  render() {\n    const {\n      props: {\n        app,\n        artists: { artistPageTab, bias, selectedArtist, selectedUnit },\n        auth,\n        switchArtistPageTab,\n        updateBias,\n        updateFavoriteMembers,\n      },\n    } = this.props;\n\n    // If Artist has no unit\n    if (!app.loading && !Object.keys(selectedUnit).length) {\n      return (\n        <section className=\"artist__section\">\n          <div className=\"tabs-container\">\n            <p className=\"tabs-content--empty\">\n              This artist has no units available.\n            </p>\n          </div>\n        </section>\n      );\n    }\n\n    const isUnitPending = app.pending.REQUEST_UNIT;\n\n    const hasLegacyDistributions =\n      selectedUnit.distributions_legacy &&\n      selectedUnit.distributions_legacy.length;\n\n    return (\n      <section className=\"artist__section\">\n        <Tabs\n          tabs={selectedArtist.units || []}\n          action={switchArtistPageTab}\n          active={artistPageTab}\n          icons={[\n            <Icon type=\"check\" color=\"blue\" inline key=\"official\" />,\n            <Icon type=\"sub-unit\" color=\"orange\" key=\"subUnit\" />,\n          ]}\n          iconConditions={['official', 'subUnit']}\n        >\n          {selectedUnit.id ? (\n            <div className=\"unit-section\">\n              <div className=\"unit-section__info\">\n                <div className=\"unit-section__summary\">\n                  <LoadingWrapper pending={isUnitPending}>\n                    <Fragment>\n                      <p>\n                        <b>\n                          {selectedUnit.subUnit ? 'Sub-unit' : ''} Debut Year:\n                        </b>{' '}\n                        {selectedUnit.debutYear || '?'}\n                      </p>\n                      <p>\n                        <b>Official Distributions:</b>{' '}\n                        {selectedUnit.distributions.length || 0}\n                      </p>\n                      <p>\n                        <b>Custom Distributions:</b>{' '}\n                        {selectedUnit.distributions.length || 0}\n                      </p>\n                      {hasLegacyDistributions ? (\n                        <p>\n                          <b>Legacy Distributions:</b>{' '}\n                          {selectedUnit.distributions_legacy.length || 0}\n                        </p>\n                      ) : null}\n                      <div className=\"unit-section__actions\">\n                        <button\n                          className=\"btn\"\n                          onClick={() => this.artistRedirect('songs')}\n                        >\n                          Distribute\n                        </button>\n                        <button\n                          className=\"btn\"\n                          onClick={() => this.artistRedirect('lyrics')}\n                        >\n                          Play with Lyrics{' '}\n                          <span className=\"restriction\">*</span>\n                        </button>\n                        <button className=\"btn\" disabled>\n                          Random Song\n                        </button>\n                        <p>\n                          <small>* You won&apos;t be able to save this.</small>\n                        </p>\n                      </div>\n                    </Fragment>\n                  </LoadingWrapper>\n                </div>\n                <div className=\"unit-section__bias\">\n                  <LoadingWrapper pending={isUnitPending}>\n                    <div className=\"unit-section__bias-wrapper\">\n                      <BiasPicture bias={bias} />\n                      <Select\n                        action={updateBias}\n                        options={selectedUnit.members}\n                        optionValue=\"id\"\n                        optionName=\"name\"\n                        optionPrefix=\"Bias: \"\n                        placeholder=\"Select your bias...\"\n                      />\n                    </div>\n                  </LoadingWrapper>\n                </div>\n              </div>\n              <hr className=\"unit-section__ruler\" />\n              <h2>Members:</h2>\n              <LoadingWrapper pending={isUnitPending}>\n                <div className=\"unit-section__members\">\n                  {Object.values(selectedUnit.members).map(member => (\n                    <MemberCard\n                      averages={{}}\n                      key={member.id}\n                      member={member}\n                      favoriteState={\n                        auth.user.favoriteMembers &&\n                        auth.user.favoriteMembers[member.id]\n                      }\n                      updateFavoriteMembers={updateFavoriteMembers}\n                    />\n                  ))}\n                </div>\n              </LoadingWrapper>\n              <hr className=\"unit-section__ruler\" />\n              <h2>Distributions</h2>\n              <LoadingWrapper pending={isUnitPending}>\n                <DistributedSongsTable\n                  distributions={selectedUnit.distributions}\n                  members={selectedUnit.members}\n                />\n              </LoadingWrapper>\n\n              {hasLegacyDistributions ? (\n                <Fragment>\n                  <hr />\n                  <h2>Legacy Distributions</h2>{' '}\n                  <p>List of Legacy Distributions</p>\n                </Fragment>\n              ) : null}\n            </div>\n          ) : (\n            <p>The selected Artist has no units.</p>\n          )}\n        </Tabs>\n      </section>\n    );\n  }\n}\n\nUnits.propTypes = {\n  props: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n};\n\nexport default Units;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport Units from './Units';\n// Import common components\nimport {\n  FavoriteIcon,\n  LoadingWrapper,\n  RequirementWrapper,\n} from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Artist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      memberColors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { artistId } = this.props.match.params;\n    if (\n      this.props.artists.selectedArtist &&\n      this.props.artists.selectedArtist.id !== artistId\n    ) {\n      this.props.loadArtist(artistId, this.props.location.search);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.artists.selectedUnit.id !== this.props.artists.selectedUnit.id\n    ) {\n      this.getMemberColors();\n    }\n  }\n\n  getMemberColors() {\n    const memberColors = { ...this.state.memberColors };\n    Object.values(this.props.artists.selectedUnit.members).forEach(member => {\n      memberColors[member.id] = utils.getColorNumber(member.colorId);\n    });\n    this.setState({ memberColors });\n  }\n\n  render() {\n    const {\n      app,\n      artists: { selectedArtist },\n      auth,\n    } = this.props;\n\n    const isArtistPending = app.pending.REQUEST_ARTIST;\n\n    return (\n      <RequirementWrapper requirements={['selectedArtist']}>\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          <LoadingWrapper pending={isArtistPending}>\n            <section className=\"artist__section\">\n              <h2 className=\"artist-page__name\">\n                {selectedArtist.name}\n                <FavoriteIcon\n                  action={this.props.updateFavoriteArtists}\n                  id={selectedArtist.id || ''}\n                  className=\"artist-page__name--fav-icon\"\n                  size=\"20\"\n                  state={\n                    selectedArtist &&\n                    selectedArtist.id &&\n                    auth.user &&\n                    auth.user.favoriteArtists[selectedArtist.id]\n                  }\n                />\n              </h2>\n              <p className=\"artist-page__genre\">{selectedArtist.genre}</p>\n              <ul className=\"artist-page__members-list\">\n                {selectedArtist.memberList &&\n                  selectedArtist.memberList.map((memberName, index) => (\n                    <li\n                      className={`artist-page__member-pill background-color-${\n                        this.state.memberColors[selectedArtist.memberIds[index]]\n                      }`}\n                      key={`mp-${memberName}`}\n                    >\n                      {memberName}\n                    </li>\n                  ))}\n              </ul>\n              <Units props={this.props} />\n            </section>\n          </LoadingWrapper>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtist.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  loadArtist: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtist.defaultProps = {};\n\nexport default Artist;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artist from '../components/Artist';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artist)\n);\n","import ArtistContainer from './containers/ArtistContainer';\n\nexport default ArtistContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon, PositionIcon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst DistributeConnect = ({\n  activeMemberPill,\n  activateMemberPill,\n  distributionLines,\n  linkMemberToPart,\n  members,\n  rates,\n  remainder,\n}) => (\n  <section className=\"distribute__section distribute__section--connect\">\n    <div className=\"distribute__section-left\">\n      <div className=\"distribute__content\">\n        <h3>Instructions</h3>\n        <p>\n          Assign members to every single part in the lyrics. You can instantly\n          see the overall percentage. You can overwrite a member by assigning a\n          new one to that part.\n        </p>\n      </div>\n      <div className=\"distribute__content\">\n        <h3>Members &amp; Live Distribution Rates</h3>\n        <p>\n          Click on the member pill then in a lyric connection icon on the right.\n        </p>\n        <ul className=\"distribute__rates\">\n          {Object.values(members).map(member => {\n            const colorNumber = utils.getColorNumber(member.colorId);\n            const activeClass = activeMemberPill === member.id ? 'active' : '';\n            const percentage = rates[member.id] ? rates[member.id][1] : 0;\n            const percentageWidth = rates[member.id] ? rates[member.id][2] : 0;\n\n            const spanWidth = {\n              width: `${percentageWidth}%`,\n            };\n\n            return (\n              <li className=\"distribute__pill-group\" key={member.id}>\n                <div\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`pill distribute__member-pill background-color-${colorNumber} border-color-${colorNumber} ${activeClass}`}\n                  onClick={() => activateMemberPill(member.id)}\n                >\n                  <PositionIcon\n                    position={utils.getMostImportantPosition(member.positions)}\n                  />{' '}\n                  {member.name}\n                </div>\n                <div className=\"pill distribute__rates__percentage-bar-group\">\n                  <span className=\"distribute__rates__percentage-value\">\n                    {percentage}%\n                  </span>\n                  <span\n                    style={spanWidth}\n                    className={`distribute__rates__percentage-bar background-color-${utils.getColorNumber(\n                      member.colorId\n                    )}`}\n                  />\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n\n        <p>Remaining: {remainder}%</p>\n      </div>\n    </div>\n    <div className=\"distribute__section-right\">\n      <div className=\"distribute__content--lyrics\">\n        {distributionLines.map((line, index) => {\n          const key = `line-${index}`;\n          return line.length > 0 ? (\n            <div className=\"distribution__lyrics__line\" key={key}>\n              {line.map((part, partIndex) => {\n                const partKey = `${key}-${partIndex}`;\n\n                const colors = part.memberId.map(mId => members[mId].color.hex);\n\n                const lineColors = {};\n                if (colors.length === 1) {\n                  [lineColors.background] = colors;\n                  if (colors[0] === '#ebebf2') {\n                    lineColors.fontStyle = 'italic';\n                    lineColors.color = '#7e7e82';\n                  }\n                } else if (colors.length > 1) {\n                  lineColors.background = `linear-gradient(${colors.join(\n                    ', '\n                  )})`;\n                }\n\n                return (\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"distribution__lyrics__line--part\"\n                    style={lineColors}\n                    key={`${partKey}-new`}\n                    onClick={() => linkMemberToPart(part.id)}\n                  >\n                    {part.memberId.map(m => {\n                      const mKey = `${partKey}-${m}`;\n                      return (\n                        <span\n                          key={mKey}\n                          className=\"distribution__lyrics__line--icon\"\n                        >\n                          <Icon type=\"plug-connected\" size=\"12\" color=\"black\" />\n                        </span>\n                      );\n                    })}\n                    <span className=\"distribution__lyrics__line--icon\">\n                      <Icon type=\"plug-available\" size=\"12\" color=\"gray\" />\n                    </span>\n                    <span className=\"distribution__lyrics__line--content\">\n                      {part.content}\n                    </span>\n                  </span>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"distribution__lyrics\" key={key}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  </section>\n);\n\nDistributeConnect.propTypes = {\n  activeMemberPill: PropTypes.string,\n  activateMemberPill: PropTypes.func.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  members: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n  remainder: PropTypes.number,\n};\n\nDistributeConnect.defaultProps = {\n  activeMemberPill: '',\n  remainder: 0,\n};\n\nexport default DistributeConnect;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport {\n  ActiveSong,\n  ActiveUnit,\n  Collapsible,\n  RequirementWrapper,\n} from '../../../common';\nimport DistributeConnect from './DistributeConnect';\n\nclass Distribute extends Component {\n  componentDidMount() {\n    this.props.prepareSong();\n  }\n\n  render() {\n    const {\n      distribute: {\n        activeMemberPill,\n        activeSong,\n        activeUnit,\n        distributionLines,\n        rates,\n        remainder,\n      },\n      activateMemberPill,\n      handleDistributionCategory,\n      handleSaveDistribution,\n      linkMemberToPart,\n    } = this.props;\n\n    const getMembers = () => {\n      const members = { ...activeUnit.members };\n      members.ALL = {\n        id: 'ALL',\n        name: 'ALL',\n        colorId: 'col000000',\n        color: { number: 0, hex: '#b5b5ba' },\n        positions: ['ALL'],\n      };\n      members.NONE = {\n        id: 'NONE',\n        name: 'NONE',\n        colorId: 'col000031',\n        color: { number: 0, hex: '#ebebf2' },\n        positions: ['NONE'],\n      };\n      return members;\n    };\n\n    const members = getMembers();\n\n    return (\n      <RequirementWrapper requirements={['activeUnit', 'activeSong']}>\n        <main className=\"container container--distribute\">\n          <h1>Distribute</h1>\n\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n\n          <div className=\"distribute__container\">\n            <Collapsible title=\"1. Connect Lines\" expanded>\n              <DistributeConnect\n                distributionLines={distributionLines}\n                members={members}\n                activateMemberPill={activateMemberPill}\n                activeMemberPill={activeMemberPill}\n                linkMemberToPart={linkMemberToPart}\n                rates={rates}\n                remainder={remainder}\n              />\n            </Collapsible>\n            <Collapsible title=\"2. Play\" locked>\n              Play distribution with youtube video\n            </Collapsible>\n            <Collapsible title=\"3. Results\" locked>\n              Results Visualization\n            </Collapsible>\n            <Collapsible title=\"4. Save\" expanded>\n              <p>\n                <label className=\"distribute__distribution-category\">\n                  Category*\n                  <select onChange={handleDistributionCategory}>\n                    <option value=\"OFFICIAL\">Official</option>\n                    <option value=\"WOULD\">How they would sing</option>\n                    <option value=\"SHOULD\">How they should sing</option>\n                  </select>\n                </label>\n              </p>\n              <p>\n                <button\n                  className=\"btn\"\n                  onClick={handleSaveDistribution}\n                  disabled={remainder}\n                >\n                  Save\n                </button>\n              </p>\n            </Collapsible>\n          </div>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nDistribute.propTypes = {\n  activateMemberPill: PropTypes.func.isRequired,\n  distribute: PropTypes.object.isRequired,\n  handleDistributionCategory: PropTypes.func.isRequired,\n  handleSaveDistribution: PropTypes.func.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  prepareSong: PropTypes.func.isRequired,\n};\n\nDistribute.defaultProps = {};\n\nexport default Distribute;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Distribute from '../components/Distribute';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Distribute)\n);\n","import DistributeContainer from './containers/DistributeContainer';\n\nexport default DistributeContainer;\n","/* eslint react/require-default-props: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon } from '../../../common';\n// Import images\nimport logo from '../../../../images/logo.svg';\nimport userPlaceholder from '../../../../images/user-placeholder.svg';\n\nconst Menu = ({ activeUnit, auth, history, location, login, logout }) => {\n  const handleLogoClick = () => {\n    history.push('/');\n  };\n\n  const { pathname } = location;\n\n  // Hide parts of the menu if user is not authenticaded\n  const authHideClass = auth.isAuthenticated ? '' : 'hidden';\n\n  // Hide parts of the menu if user is not an administrator\n  const adminHideClass = auth.isAdmin ? '' : 'hidden';\n\n  // Hide parts of the menu if user hasn't selected an active unit\n  const activeUnitHideClass = activeUnit.id ? '' : 'hidden';\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-nav\">\n        <img\n          className=\"header-nav__logo\"\n          src={logo}\n          alt=\"Logo\"\n          onClick={() => handleLogoClick()}\n        />\n        <nav className={`header-nav__links ${authHideClass}`}>\n          <Link\n            to=\"/artists\"\n            className={pathname === '/artists' ? 'active' : ''}\n          >\n            Artists\n          </Link>\n          <Link\n            to=\"/distribute\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/distribute' ? 'active' : ''\n            }`}\n          >\n            Distribute\n          </Link>\n          <Link\n            to=\"/lyrics\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/lyrics' ? 'active' : ''\n            }`}\n          >\n            Lyrics\n          </Link>\n          <Link\n            to=\"/songs\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/songs' ? 'active' : ''\n            }`}\n          >\n            Songs\n          </Link>\n          <Link to=\"/idols\" className={pathname === '/idols' ? 'active' : ''}>\n            Idols\n          </Link>\n          <Link to=\"/lab\" className={pathname === '/lab' ? 'active' : ''}>\n            Lab\n          </Link>\n          <div className={`header-admin ${adminHideClass}`}>\n            <button\n              className={\n                pathname.includes('/admin')\n                  ? 'header-admin__nav active'\n                  : 'header-admin__nav'\n              }\n            >\n              Admin Tools\n            </button>\n            <div className=\"header-admin__dropdown\">\n              <Link to=\"/admin/manage\">Manage</Link>\n              <Link to=\"/admin/sync\">Sync</Link>\n              <Link to=\"/admin/temp\">Test/Temp</Link>\n              <Link to=\"/admin/ui-reference\">UI Reference</Link>\n            </div>\n          </div>\n        </nav>\n      </div>\n      {auth.isAuthenticated ? (\n        <div className=\"header-user\">\n          <button className=\"header-user__nav\">\n            <img\n              className=\"header-user__photo\"\n              src={auth.user.photoURL || userPlaceholder}\n              alt=\"user\"\n            />\n            {auth.user.displayName}\n          </button>\n          <div className=\"header-user__dropdown\">\n            <Link to=\"/user/my-artists\">My Artists</Link>\n            <Link to=\"/user/my-distributions\">My Distributions</Link>\n            <hr />\n            <a href=\"/\" onClick={logout}>\n              Sign out <Icon type=\"logout\" inline />\n            </a>\n          </div>\n        </div>\n      ) : (\n        <div className=\"header-user\">\n          <button className=\"btn btn-hollow header-user__btn\" onClick={login}>\n            Sign-in<Icon type=\"login\" color=\"white\" inline />\n          </button>\n        </div>\n      )}\n    </header>\n  );\n};\n\nMenu.propTypes = {\n  activeUnit: PropTypes.object,\n  auth: PropTypes.object,\n  history: PropTypes.object,\n  location: PropTypes.object,\n  login: PropTypes.func,\n  logout: PropTypes.func,\n};\n\nMenu.defaultProps = {\n  activeUnit: {},\n  auth: {},\n  history: {},\n  location: {},\n  login: () => {},\n  logout: () => {},\n};\n\nexport default Menu;\n","import React from 'react';\n\nconst LoadingBar = () => (\n  <div className=\"loading-bar\">\n    <div className=\"bar-container\">\n      <span className=\"bar bar-0\" />\n      <span className=\"bar bar-1\" />\n      <span className=\"bar bar-2\" />\n      <span className=\"bar bar-3\" />\n      <span className=\"bar bar-4\" />\n      <span className=\"bar bar-5\" />\n      <span className=\"bar bar-6\" />\n      <span className=\"bar bar-7\" />\n      <span className=\"bar bar-8\" />\n    </div>\n  </div>\n);\n\nexport default LoadingBar;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport Menu from './Menu';\nimport LoadingBar from './LoadingBar';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.init();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Menu\n          activeUnit={this.props.distribute.activeUnit}\n          auth={this.props.auth}\n          history={this.props.history}\n          location={this.props.location}\n          login={this.props.login}\n          logout={this.props.logout}\n        />\n        {this.props.app.loading ? <LoadingBar /> : null}\n      </Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  distribute: PropTypes.object,\n  history: PropTypes.object.isRequired,\n  init: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nApp.defaultProps = {\n  distribute: { activeUnit: {} },\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Header from '../components/Header';\n\nimport { appOperations } from '../../../../reducers/app';\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...appOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Header)\n);\n","import HeaderContainer from './containers/HeaderContainer';\n\nexport default HeaderContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport logo from '../../../../images/logo-alt.svg';\n\nimport constants from '../../../../utils/constants';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nconst Home = props => {\n  // Randomly choose one video in the playlist\n  const youtubeUrl =\n    constants.YOUTUBE_URLS[\n      Math.floor(Math.random() * constants.YOUTUBE_URLS.length)\n    ];\n\n  const handleLearnMoreClick = () => {\n    props.history.push('/learn-more');\n  };\n\n  return (\n    <main className=\"container container--no-padding\">\n      <div className=\"home__video\">\n        <iframe\n          className=\"home__iframe\"\n          title=\"home__video\"\n          src={`https://www.youtube.com/embed/${youtubeUrl}?controls=0&showinfo=0&rel=0&autoplay=1&loop=1&mute=1&playlist=${youtubeUrl}`}\n          frameBorder=\"0\"\n          allowFullScreen\n        />\n      </div>\n      <div className=\"home__content\">\n        <img className=\"home__logo\" src={logo} alt=\"Line Distribution\" />\n        <div className=\"home__buttons\">\n          {!props.auth.isAuthenticated ? (\n            <button className=\"btn-home\" onClick={props.login}>\n              Sign-in <Icon type=\"logout\" color=\"white\" inline />\n            </button>\n          ) : null}\n          <button className=\"btn-home\" onClick={() => handleLearnMoreClick()}>\n            Learm more\n          </button>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nHome.propTypes = {\n  auth: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default Home;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Home from '../components/Home';\n\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = {\n  login: authOperations.login,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Home)\n);\n","import HomeContainer from './containers/HomeContainer';\n\nexport default HomeContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { Form, Option, Select, Text } from 'informed';\n\n// Import common components\nimport { Loading, MemberCard, RequirementWrapper } from '../../../common';\n// Import constants\nimport constants from '../../../../utils/constants';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Idols extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      age: '',\n      color: '',\n      favorite: '',\n      gender: '',\n      name: '',\n      nationality: '',\n      position: '',\n      privacy: '',\n      sort: 'name',\n      order: 'asc',\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadMembers();\n  }\n\n  updateFilters(formState) {\n    this.setState({\n      age: formState.values.age,\n      color: formState.values.color,\n      favorite: formState.values.favorite,\n      gender: formState.values.gender,\n      name: formState.values.name,\n      nationality: formState.values.nationality,\n      position: formState.values.position,\n      privacy: formState.values.privacy,\n      sort: formState.values.sort || 'name',\n      order: formState.values.order || 'asc',\n    });\n  }\n\n  render() {\n    const {\n      app: { pending },\n      auth: { isAdmin, user },\n      db: { members },\n      updateFavoriteMembers,\n    } = this.props;\n\n    if (pending.REQUEST_MEMBERS) {\n      return <Loading message=\"Fecthing Idols...\" />;\n    }\n\n    const filteredMembers = _.filter(members, member => {\n      const evaluation = [];\n\n      if (this.state.favorite) {\n        if (this.state.favorite === 'favorite') {\n          evaluation.push(user.favoriteMembers[member.id]);\n        } else {\n          evaluation.push(!user.favoriteMembers[member.id]);\n        }\n      }\n\n      if (this.state.privacy) {\n        if (this.state.privacy === 'private') {\n          evaluation.push(member.private);\n        } else {\n          evaluation.push(!member.private);\n        }\n      }\n\n      if (this.state.color)\n        evaluation.push(member.colorId === this.state.color);\n      if (this.state.gender)\n        evaluation.push(member.gender === this.state.gender);\n      if (this.state.nationality)\n        evaluation.push(member.nationality === this.state.nationality);\n      if (this.state.position)\n        evaluation.push(member.positions.includes(this.state.position));\n      if (this.state.name)\n        evaluation.push(\n          member.name.toLowerCase().startsWith(this.state.name.toLowerCase())\n        );\n      if (this.state.age) {\n        if (this.state.age === '<18') {\n          evaluation.push(member.age < 18);\n        } else if (this.state.age === '18-28') {\n          evaluation.push(member.age > 17 && member.age < 28);\n        } else {\n          evaluation.push(member.age > 28);\n        }\n      }\n      const res = evaluation.every(e => e);\n      return res;\n    });\n\n    const sortedMembers = _.orderBy(\n      filteredMembers,\n      [this.state.sort],\n      [this.state.order]\n    );\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--idols\">\n          <h1>Idols</h1>\n          <Form\n            onChange={formState => this.updateFilters(formState)}\n            autoComplete=\"off\"\n            className=\"idols__filters-form\"\n          >\n            <div className=\"idols__filters-group\">\n              <div className=\"idols__filters-items\">\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">\n                    Name starts with\n                  </label>\n                  <Text\n                    className=\"idols__filter-input-text\"\n                    field=\"name\"\n                    initialValue={this.state.name}\n                    maxLength=\"3\"\n                  />\n                </div>\n\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Gender</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"gender\"\n                    initialValue={this.state.gender}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {Object.entries(constants.GENDERS).map(gender => (\n                      <Option key={gender[0]} value={gender[0]}>\n                        {gender[1]}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Nationality</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"nationality\"\n                    initialValue={this.state.nationality}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {Object.entries(constants.NATIONALITIES).map(\n                      nationalitie => (\n                        <Option key={nationalitie[0]} value={nationalitie[0]}>\n                          {nationalitie[1]}\n                        </Option>\n                      )\n                    )}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Age Range</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"age\"\n                    initialValue={this.state.age}\n                  >\n                    <Option value=\"\">Any</Option>\n                    <Option value=\"<18\">&lt;18</Option>\n                    <Option value=\"18-28\">18-28</Option>\n                    <Option value=\"28+\">28+</Option>\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Position</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"position\"\n                    initialValue={this.state.position}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {constants.POSITIONS_LIST.map(position => (\n                      <Option key={position} value={position}>\n                        {constants.POSITIONS_LIST_OBJ[position]}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Color</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"color\"\n                    initialValue={this.state.color}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {Object.entries(constants.COLORS).map(color => (\n                      <Option key={color[0]} value={color[0]}>\n                        {utils.humanize(color[1], 'Capital')}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Favorite</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"favorite\"\n                    initialValue={this.state.favorite}\n                  >\n                    <Option value=\"\">Any</Option>\n                    <Option value=\"favorite\">Favorite</Option>\n                    <Option value=\"nonfavorite\">Non-favorite</Option>\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Privacy</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"privacy\"\n                    initialValue={this.state.privacy}\n                  >\n                    <Option value=\"\">Any</Option>\n                    <Option value=\"private\">Private</Option>\n                    <Option value=\"public\">Public</Option>\n                  </Select>\n                </div>\n              </div>\n            </div>\n            <div className=\"idols__filters-group\">\n              <div className=\"idols__filters-items\">\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Sort by</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"sort\"\n                    initialValue={this.state.sort}\n                  >\n                    <Option value=\"age\">Age</Option>\n                    <Option value=\"colorId\">Color</Option>\n                    <Option value=\"gender\">Gender</Option>\n                    <Option value=\"referenceArtist\">Group</Option>\n                    <Option value=\"name\">Name</Option>\n                    <Option value=\"nationality\">Nationality</Option>\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Order by</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"order\"\n                    initialValue={this.state.order}\n                  >\n                    <Option value=\"asc\">Ascending</Option>\n                    <Option value=\"desc\">Descending</Option>\n                  </Select>\n                </div>\n              </div>\n            </div>\n          </Form>\n          <h3 className=\"member-count\">\n            Displaying {sortedMembers.length} members\n          </h3>\n          <div className=\"idols__list\">\n            {sortedMembers.map(member => (\n              <MemberCard\n                key={member.id}\n                member={member}\n                showId={isAdmin}\n                showReferenceArtist\n                favoriteState={\n                  user.favoriteMembers && user.favoriteMembers[member.id]\n                }\n                updateFavoriteMembers={updateFavoriteMembers}\n              />\n            ))}\n          </div>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nIdols.propTypes = {\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadMembers: PropTypes.func.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n};\n\nexport default Idols;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Idols from '../components/Idols';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...dbOperations,\n  ...artistsOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Idols)\n);\n","import IdolsContainer from './containers/IdolsContainer';\n\nexport default IdolsContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nlet colorDict = null;\nlet keyNumber = 0;\n\nconst LyricsOutput = ({ lyrics, colorsDB }) => {\n  if (!colorDict || !Object.keys(colorDict).length) {\n    colorDict = colorsDB;\n    colorDict.col000000 = {\n      number: 0,\n      hex: '#b1b1b1',\n    };\n  }\n\n  return (\n    <div className=\"lyrics__output\">\n      {lyrics.map(verse => {\n        keyNumber++;\n        return <Verse key={`verse-${keyNumber}`} verse={verse} />;\n      })}\n    </div>\n  );\n};\n\nLyricsOutput.propTypes = {\n  lyrics: PropTypes.array.isRequired,\n  colorsDB: PropTypes.object.isRequired,\n};\n\nconst Verse = ({ verse }) => (\n  <p className=\"lyrics__verse\">\n    {verse.map(line => {\n      keyNumber++;\n      return (\n        <Fragment key={`line-${keyNumber}`}>\n          <Line line={line} />\n          <br />\n        </Fragment>\n      );\n    })}\n  </p>\n);\n\nVerse.propTypes = {\n  verse: PropTypes.array.isRequired,\n};\n\nconst Line = ({ line }) => (\n  <span className=\"lyrics__line\">\n    {line.map(part => {\n      keyNumber++;\n      if (!part.line || !part.line[0] || !part.adlib) return null;\n\n      return (\n        <Fragment key={`part-${keyNumber}`}>\n          <Bracket part={part} />\n          <Part part={part} />\n        </Fragment>\n      );\n    })}\n  </span>\n);\n\nLine.propTypes = {\n  line: PropTypes.array.isRequired,\n};\n\nconst Part = ({ part }) => (\n  <Fragment>\n    {part.adlib.map((type, index) => {\n      keyNumber++;\n\n      const bitStyle = getBitStyle(part, type, index);\n\n      switch (type) {\n        case 0:\n          // colored line (colors)\n          return (\n            <span\n              key={`bit-${keyNumber}`}\n              className=\"lyrics__bit-normal\"\n              style={bitStyle}\n            >\n              {part.line[index]}\n            </span>\n          );\n        case 1:\n          // colored line with parentheses (subColors)\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              (\n              <span className=\"lyrics__bit-sub\" style={bitStyle}>\n                {part.line[index]}\n              </span>\n              )\n            </Fragment>\n          );\n        case 2:\n          // greyed italic line with parentheses\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              <i>(</i>\n              <span className=\"lyrics__bit-grey\">{part.line[index]}</span>\n              <i>)</i>\n            </Fragment>\n          );\n        case 3:\n          // greyed italitc line\n          return (\n            <span key={`bit-${keyNumber}`} className=\"lyrics__bit-all\">\n              {part.line[index]}\n            </span>\n          );\n        case 4:\n          // colored line with parentheses (choirColors)\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              <i>(</i>\n              <span className=\"lyrics__bit-choir\" style={bitStyle}>\n                {part.line[index]}\n              </span>\n              <i>)</i>\n            </Fragment>\n          );\n        default:\n          return (\n            <span\n              key={`bit-${keyNumber}`}\n              className=\"lyrics__bit-normal\"\n              style={bitStyle}\n            >\n              {part.line[index]}\n            </span>\n          );\n      }\n    })}\n  </Fragment>\n);\n\nPart.propTypes = {\n  part: PropTypes.object.isRequired,\n};\n\nconst Bracket = ({ part }) => {\n  if (part.omit) return null;\n\n  const hasSingers = part.singers && !part.omit;\n  const hasSubSingers = part.subSingers && !part.omitSub;\n  const hasChoirSingers = part.choirSingers && !part.omitChoir;\n\n  if (!hasSingers && !hasSubSingers && !hasChoirSingers) return null;\n\n  return (\n    <span className=\"lyrics__bracket\">\n      {' ['}\n      {hasSingers ? part.singers.join('/') : null}\n      {hasSubSingers ? (\n        <span className=\"lyrics__parenthesis\">\n          {' ('}\n          {part.subSingers.join('/')}\n          {')'}\n        </span>\n      ) : null}\n      {hasChoirSingers ? (\n        <span className=\"lyrics__braces\">\n          {' {'}\n          {part.choirSingers.join('/')}\n          {'}'}\n        </span>\n      ) : null}\n      {'] '}\n    </span>\n  );\n};\n\nBracket.propTypes = {\n  part: PropTypes.object.isRequired,\n};\n\nconst getBitStyle = (part, type) => {\n  const BASE_COLOR = '#b5b5ba';\n  const styles = {\n    background: '#b1b1b1',\n  };\n\n  if (type === 0 && part.colors && part.colors.length) {\n    if (part.colors.length > 1) {\n      const colorHexes = part.colors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.colors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  if (type === 1 && part.subColors && part.subColors.length) {\n    if (part.subColors.length > 1) {\n      const colorHexes = part.subColors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.subColors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  if (type === 4 && part.choirColors && part.choirColors.length) {\n    if (part.choirColors.length > 1) {\n      const colorHexes = part.choirColors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.choirColors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  return styles;\n};\n\nexport default LyricsOutput;\n","// Global variables\nconst COLOR_BANK = {\n  ALL: 'col000000',\n};\nlet latestUnitId = null;\nlet errors = [];\n\nlet lastSingers = [];\nlet lastColors = [];\nlet lastSubsingers = [];\nlet lastSubColors = [];\nlet lastChoirSingers = [];\nlet lastChoirColors = [];\nlet wasLastLineEmpty = false;\nlet lastLineHadSubSingers = false;\nlet lastLineHadChoirSings = false;\n\nlet uses = {};\n\nconst updateUses = entry => {\n  function addEntry(name) {\n    if (uses[name]) {\n      uses[name]++;\n    } else {\n      uses[name] = 1;\n    }\n  }\n\n  if (typeof entry === 'string') {\n    addEntry(entry.trim().toUpperCase());\n  } else if (Array.isArray(entry)) {\n    entry.forEach(n => addEntry(n.trim().toUpperCase()));\n  }\n};\n\nclass Part {\n  constructor() {\n    this.singers = null; // type: array\n    this.subSingers = null; // type: array\n    this.line = []; // type: array\n    this.adlib = []; // type: array\n    /**\n     * adlib code reference\n     * 0: regular line colored\n     * 1: surrounded by parenthesis colored\n     * 2: italic greyed surrouneded by parenthesis\n     * 3: italic greyed\n     * 4: italic colored\n     */\n    this.colors = null; // type: array\n    this.subColors = null; // type: array\n    this.omit = false; // type: bool\n    this.omitSub = false; // type: bool\n  }\n}\n\nconst cleanUpPart = part => {\n  if (lastSubsingers.length) lastLineHadSubSingers = true;\n  if (lastChoirSingers.length) lastLineHadChoirSings = true;\n\n  // Keep singer state when not preceeded by an empty line\n  if (part.adlib.includes(0)) {\n    if (!part.singers && wasLastLineEmpty) {\n      part.adlib = part.adlib.map(() => 3);\n    } else if (!part.singers) {\n      updateUses(lastSingers);\n      part.singers = [...lastSingers];\n      part.colors = [...lastColors];\n      part.omit = true;\n    }\n  }\n\n  // Keep subSinger state when not preceeded by an empty line\n  if (part.adlib.includes(1)) {\n    if (!part.subSingers && (wasLastLineEmpty || !lastLineHadSubSingers)) {\n      part.adlib = part.adlib.map(a => (a === 1 ? 2 : a));\n    } else if (!part.subSingers) {\n      updateUses(lastSubsingers);\n      part.subSingers = [...lastSubsingers];\n      part.subColors = [...lastSubColors];\n      part.omitSub = true;\n      lastLineHadSubSingers = true;\n    }\n  }\n\n  if (part.adlib.includes(1)) {\n    lastLineHadSubSingers = true;\n  }\n\n  // Keep choirSinger state when not preceeded by an empty line\n  if (part.adlib.includes(4)) {\n    if (!part.choirSingers && (wasLastLineEmpty || !lastLineHadChoirSings)) {\n      part.adlib = part.adlib.map(a => (a === 4 ? 2 : a));\n    } else if (!part.choirSingers && lastChoirSingers.length) {\n      updateUses(lastChoirSingers);\n      part.choirSingers = [...lastChoirSingers];\n      part.choirColors = [...lastChoirColors];\n      part.omitChoir = true;\n      lastLineHadChoirSings = true;\n    }\n  }\n\n  if (part.adlib.includes(4)) {\n    lastLineHadChoirSings = true;\n  }\n\n  // Clean up unused keys\n  if (!part.singers) delete part.singers;\n  if (Array.isArray(part.singers) && !part.singers.length) delete part.singers;\n  if (!part.subSingers) delete part.subSingers;\n  if (Array.isArray(part.subSingers) && !part.subSingers.length)\n    delete part.subSingers;\n  if (!part.line) delete part.line;\n  if (Array.isArray(part.line) && !part.line.length) delete part.line;\n  if (!part.adlib) delete part.adlib;\n  if (Array.isArray(part.adlib) && !part.adlib.length) delete part.adlib;\n  if (!part.colors) delete part.colors;\n  if (Array.isArray(part.colors) && !part.colors.length) delete part.colors;\n  if (!part.subColors) delete part.subColors;\n  if (Array.isArray(part.subColors) && !part.subColors.length)\n    delete part.subColors;\n  if (!part.omit) delete part.omit;\n  if (!part.omitSub) delete part.omitSub;\n\n  if (Object.keys(part).length) {\n    wasLastLineEmpty = false;\n  } else {\n    part.empty = true;\n    wasLastLineEmpty = true;\n    lastLineHadSubSingers = false;\n    lastLineHadChoirSings = false;\n  }\n\n  // Save last\n  if (!part.empty) {\n    if (part.singers) lastSingers = [...part.singers];\n    if (part.colors) lastColors = [...part.colors];\n    if (part.subSingers) lastSubsingers = [...part.subSingers];\n    if (part.subColors) lastSubColors = [...part.subColors];\n    if (part.choirSingers) lastChoirSingers = [...part.choirSingers];\n    if (part.choirColors) lastChoirColors = [...part.choirColors];\n  } else {\n    lastSingers = [];\n    lastColors = [];\n    lastSubsingers = [];\n    lastSubColors = [];\n    lastChoirSingers = [];\n    lastChoirSingers = [];\n    lastLineHadSubSingers = false;\n    lastLineHadChoirSings = false;\n  }\n  return part;\n};\n\nconst parseLine = line => {\n  const result = [];\n  let insideBracket = false;\n  let insideParentheses = false;\n  let insideCurly = false;\n\n  let names = [];\n  let colors = [];\n\n  let currentString = '';\n  let lastCharacter = '';\n  let currentPart = new Part();\n  for (let i = 0; i < line.length; i++) {\n    const char = line[i];\n\n    // Analyse each character\n    switch (char) {\n      case '[':\n        if (insideBracket) {\n          errors.push(\n            'You should not place an opening square bracket inside another square bracket'\n          );\n        }\n        insideBracket = true;\n        // Push Part and reset variabes\n        if (i !== 0) {\n          if (currentString.trim()) {\n            currentPart.line.push(currentString.trim());\n            currentPart.adlib.push(0);\n          }\n          result.push(cleanUpPart(currentPart));\n          insideParentheses = false;\n          names = [];\n          colors = [];\n          currentString = '';\n          lastCharacter = '';\n        }\n        // Start new Part\n        currentPart = new Part();\n        break;\n\n      case ']':\n        if (!insideBracket) {\n          errors.push(\n            'You should not place an closing square bracket inside another square bracket'\n          );\n        }\n        if (insideBracket && lastCharacter !== ')' && lastCharacter !== '}') {\n          const entry = currentString.trim().toUpperCase();\n          names.push(entry);\n          colors.push(COLOR_BANK[entry] || 'col000000');\n          updateUses(names);\n          currentPart.singers = names;\n          currentPart.colors = colors;\n          names = [];\n          colors = [];\n          currentString = '';\n        }\n        insideBracket = false;\n        break;\n\n      case '(':\n        if (insideParentheses) {\n          errors.push(\n            'You should not place a opening parenthesis inside another parenthesis'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.singers = names;\n            currentPart.colors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(0);\n          currentString = '';\n        }\n        insideParentheses = true;\n        break;\n\n      case ')':\n        if (!insideParentheses) {\n          errors.push(\n            'You should not place a closing parenthesis inside another parenthesis'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.subSingers = names;\n            currentPart.subColors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(1);\n          currentString = '';\n        }\n        insideParentheses = false;\n        break;\n\n      case '{':\n        if (insideCurly) {\n          errors.push(\n            'You should not place a opening curly braces inside another curly braces'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.singers = names;\n            currentPart.colors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(0);\n          currentString = '';\n        }\n        insideCurly = true;\n        break;\n\n      case '}':\n        if (!insideCurly) {\n          errors.push(\n            'You should not place a closing curly braces inside another curly braces'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.choirSingers = names;\n            currentPart.choirColors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(4);\n          currentString = '';\n        }\n        insideCurly = false;\n        break;\n\n      case '/':\n        // TO-DO\n        if (insideBracket) {\n          const entry = currentString.trim().toUpperCase();\n          names.push(entry);\n          colors.push(COLOR_BANK[entry] || 'col000000');\n          currentString = '';\n        } else {\n          currentString += char;\n        }\n        break;\n      default:\n        currentString += char;\n      // do nothing\n    }\n    lastCharacter = char;\n  }\n  // Push the last part to the result\n  if (currentString) {\n    currentPart.line.push(currentString.trim());\n    currentPart.adlib.push(0);\n  }\n  result.push(cleanUpPart(currentPart));\n\n  if (result.length === 1 && result[0].empty) {\n    return null;\n  }\n  return result;\n};\n\nconst parseLyrics = (input, members, unitId) => {\n  const result = [];\n\n  // Build member color bank if it's a new unitId\n  if (unitId !== latestUnitId) {\n    Object.values(members).forEach(member => {\n      COLOR_BANK[member.name.toUpperCase()] = member.colorId || 'col000000';\n    });\n    latestUnitId = unitId;\n  }\n\n  // Split in linebreaks\n  const lines = input.split('\\n').map(l => l.trim());\n  // Keep track of previous information\n\n  // Iterate through lines\n  for (let i = 0; i < lines.length; i++) {\n    result.push(parseLine(lines[i]));\n  }\n\n  // Reset all variabes\n  lastSingers = [];\n  lastColors = [];\n  lastSubsingers = [];\n  lastSubColors = [];\n  lastChoirSingers = [];\n  lastChoirSingers = [];\n  wasLastLineEmpty = false;\n  lastLineHadSubSingers = false;\n  lastLineHadChoirSings = false;\n\n  // Group lyrics in paragraphs\n  const paragraphedResult = [[]];\n  let paragraphIndex = 0;\n  result.forEach(currentLine => {\n    if (!currentLine) {\n      paragraphedResult.push([]);\n      paragraphIndex++;\n    } else {\n      paragraphedResult[paragraphIndex].push(currentLine);\n    }\n  });\n\n  const response = {\n    result: paragraphedResult,\n    uses: { ...uses },\n  };\n\n  // Add any errors\n  if (errors.length) {\n    response.errors = [...errors];\n  }\n\n  errors = [];\n  uses = [];\n\n  return response;\n};\n\nexport default parseLyrics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\n\n// Import lyrics components\nimport LyricsOutput from './LyricsOutput';\n// Import common components\nimport { Loading, RequirementWrapper } from '../../../common';\n// Import lyric parser\nimport parseLyrics from '../parser';\n\nclass Lyrics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lyrics: {\n        result: [],\n        uses: {},\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadColors();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { colors },\n      distribute: { activeUnit },\n    } = this.props;\n\n    if (pending.REQUEST_COLORS) {\n      return <Loading message=\"Fecthing Colors...\" />;\n    }\n\n    const handleLyricsInput = event => {\n      const { value } = event.target;\n\n      this.setState({\n        lyrics: parseLyrics(value, activeUnit.members || [], activeUnit.id),\n      });\n    };\n\n    return (\n      <RequirementWrapper requirements={['activeUnit']}>\n        <main className=\"container container--lyrics\">\n          <h1>Lyrics</h1>\n          {activeUnit.members ? (\n            <ul className=\"lyrics__members-list\">\n              {Object.values(activeUnit.members).map(member => (\n                <li\n                  className={`pill background-color-${member.color.number ||\n                    0}`}\n                  key={member.id}\n                >\n                  {member.name.toUpperCase()}{' '}\n                  {this.state.lyrics.uses[member.name.toUpperCase()]\n                    ? `(${this.state.lyrics.uses[member.name.toUpperCase()]})`\n                    : null}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <section className=\"lyrics__members-list--empty\">\n              There is no Active Unit Selected.\n            </section>\n          )}\n          <ScrollSync>\n            <section className=\"lyrics__group\">\n              <ScrollSyncPane>\n                <textarea\n                  name=\"lyrics\"\n                  id=\"\"\n                  cols=\"30\"\n                  rows=\"10\"\n                  className=\"lyrics__input\"\n                  onChange={handleLyricsInput}\n                />\n              </ScrollSyncPane>\n              <ScrollSyncPane>\n                <LyricsOutput\n                  lyrics={this.state.lyrics.result}\n                  colorsDB={colors}\n                />\n              </ScrollSyncPane>\n            </section>\n          </ScrollSync>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nLyrics.propTypes = {\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  loadColors: PropTypes.func.isRequired,\n};\n\nexport default Lyrics;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Lyrics from '../components/Lyrics';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Lyrics)\n);\n","import LyricsContainer from './containers/LyricsContainer';\n\nexport default LyricsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ColorReferenceBar = ({ colors, colorsInUse }) => (\n  <ul className=\"color-reference-bar\">\n    {Object.values(colors).map(color => {\n      const isInUse = colorsInUse[color.id]\n        ? 'color-reference-item--in-use'\n        : '';\n      return (\n        <li\n          className={`color-reference-item background-color-${\n            color.number\n          } ${isInUse}`}\n          key={color.id}\n        >\n          {color.name}\n          <br />\n          {color.count}\n        </li>\n      );\n    })}\n  </ul>\n);\n\nColorReferenceBar.propTypes = {\n  colors: PropTypes.object,\n  colorsInUse: PropTypes.object,\n};\n\nColorReferenceBar.defaultProps = {\n  colors: {},\n  colorsInUse: PropTypes.object,\n};\n\nexport default ColorReferenceBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Select, Option, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n// Import constants\nimport constants from '../../../../utils/constants';\n\nconst ManageArtist = ({\n  formState,\n  props,\n  validateTypeahead,\n  isValid,\n  artistId,\n  defaultValues,\n  next,\n}) => {\n  const {\n    admin: { panels },\n    db: { artistsTypeahead },\n    handleEditArtist,\n  } = props;\n\n  // Locked Panel\n  if (panels.artist === 'locked') {\n    return (\n      <section className=\"manage-form__artist\">\n        <h3 className=\"manage-form__button-title\">Artist</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Lock Artist\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Open Panel\n  if (panels.artist === 'open') {\n    return (\n      <section className=\"manage-form__artist\">\n        <h3 className=\"manage-form__button-title\">Artist</h3>\n        <button\n          className=\"manage-form__button-add\"\n          onClick={() => handleEditArtist(artistId)}\n        >\n          <img\n            className=\"manage-form__button-add-image\"\n            src={managePlus}\n            alt=\"Add Artist\"\n          />\n        </button>\n        <Typeahead\n          action={e => validateTypeahead(e)}\n          name=\"artists\"\n          placeholder=\"Search existing artist...\"\n          suggestions={artistsTypeahead}\n        />\n        {isValid ? (\n          <p className=\"manage-form__valid\">\n            <Icon type=\"check\" color=\"green\" inline />\n            Selected Artist is valid. Click on the plus button to add it.\n          </p>\n        ) : null}\n      </section>\n    );\n  }\n\n  // Validation classes\n  const isRequired = value => (!value ? 'This field is required' : undefined);\n\n  const isValidName =\n    formState.errors.artist && formState.errors.artist.name\n      ? 'manage-form__input--invalid'\n      : '';\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__artist manage-form__artist-edit\">\n      <div className=\"manage-form__form-group\">\n        <Scope scope=\"artist\">\n          <h3>Artist</h3>\n          <label className=\"manage-form__label\">\n            Name*<Text\n              className={`manage-form__input ${isValidName}`}\n              field=\"name\"\n              validateOnBlur\n              validate={isRequired}\n              required\n              initialValue={defaultValues.name}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Other Names<Text\n              className=\"manage-form__input\"\n              field=\"otherNames\"\n              initialValue={defaultValues.otherNames}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Genre*\n            <Select\n              className=\"manage-form__input\"\n              field=\"genre\"\n              validate={isRequired}\n              initialValue={defaultValues.genre}\n              required\n            >\n              <Option value=\"\" disabled>\n                Select One...\n              </Option>\n              {Object.entries(constants.GENRES).map(genre => (\n                <Option key={genre[0]} value={genre[0]}>\n                  {genre[1]}\n                </Option>\n              ))}\n            </Select>\n          </label>\n          <label className=\"manage-form__label\">\n            Private{' '}\n            <Checkbox field=\"private\" initialValue={defaultValues.private} />\n          </label>\n        </Scope>\n      </div>\n      <div className=\"manage-form__navigation\">\n        <button className=\"btn\" onClick={() => next(formState)}>\n          Unlock Unit\n        </button>\n      </div>\n    </section>\n  );\n};\n\nManageArtist.propTypes = {\n  admin: PropTypes.object,\n  artistId: PropTypes.string,\n  db: PropTypes.object,\n  defaultValues: PropTypes.object.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditArtist: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n  props: PropTypes.object.isRequired,\n  validateTypeahead: PropTypes.func.isRequired,\n};\n\nManageArtist.defaultProps = {\n  admin: {},\n  db: {},\n  artistId: null,\n  handleEditArtist: () => {},\n};\n\nexport default ManageArtist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n\nconst ManageUnit = ({\n  formState,\n  props,\n  validateTypeahead,\n  isValid,\n  unitId,\n  defaultValues,\n  next,\n}) => {\n  const {\n    admin: { unitsTypeahead, panels },\n    handleEditUnit,\n  } = props;\n\n  // Locked Panel\n  if (panels.unit === 'locked') {\n    return (\n      <section className=\"manage-form__unit\">\n        <h3 className=\"manage-form__button-title\">Unit</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Locked Unit\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Open Panel\n  if (panels.unit === 'open') {\n    return (\n      <section className=\"manage-form__unit\">\n        <h3 className=\"manage-form__button-title\">Unit</h3>\n        <button\n          className=\"manage-form__button-add\"\n          onClick={() => handleEditUnit(unitId)}\n        >\n          <img\n            className=\"manage-form__button-add-image\"\n            src={managePlus}\n            alt=\"Add Unit\"\n          />\n        </button>\n        {unitsTypeahead.length ? (\n          <Typeahead\n            action={e => validateTypeahead(e)}\n            name=\"units\"\n            placeholder=\"Search existing unit...\"\n            suggestions={unitsTypeahead}\n          />\n        ) : null}\n        {isValid ? (\n          <p className=\"manage-form__valid\">\n            <Icon type=\"check\" color=\"green\" inline />\n            Selected Unit is valid. Click on the plus button to add it.\n          </p>\n        ) : null}\n      </section>\n    );\n  }\n\n  // Validation classes\n  const isRequired = value => (!value ? 'This field is required' : undefined);\n  const isYear = value =>\n    value < 1900 || value > new Date().getFullYear()\n      ? 'Value must be a four digit year'\n      : undefined;\n\n  const isValidName =\n    formState.errors.unit && formState.errors.unit.name\n      ? 'manage-form__input--invalid'\n      : '';\n\n  const isValidDebutYear =\n    formState.errors.unit && formState.errors.unit.debutYear\n      ? 'manage-form__input--invalid'\n      : '';\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__unit manage-form__unit-edit\">\n      <div className=\"manage-form__form-group\">\n        <Scope scope=\"unit\">\n          <h3>Unit</h3>\n          <label className=\"manage-form__label\">\n            Unit Name* (e.g. OT4)<Text\n              className={`manage-form__input ${isValidName}`}\n              field=\"name\"\n              validateOnBlur\n              validate={isRequired}\n              required\n              initialValue={defaultValues.name}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Debut Year*<Text\n              className={`manage-form__input ${isValidDebutYear}`}\n              field=\"debutYear\"\n              validateOnBlur\n              validate={isYear}\n              required\n              initialValue={defaultValues.debutYear}\n              type=\"number\"\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Official{' '}\n            <Checkbox field=\"official\" initialValue={defaultValues.official} />\n          </label>\n          <label className=\"manage-form__label\">\n            Sub-unit{' '}\n            <Checkbox field=\"subUnit\" initialValue={defaultValues.subUnit} />\n          </label>\n          <label className=\"manage-form__label\">\n            Private{' '}\n            <Checkbox field=\"private\" initialValue={defaultValues.private} />\n          </label>\n        </Scope>\n      </div>\n      <div className=\"manage-form__navigation\">\n        <button className=\"btn\" onClick={() => next(formState)}>\n          Unlock Members\n        </button>\n      </div>\n    </section>\n  );\n};\n\nManageUnit.propTypes = {\n  admin: PropTypes.object,\n  defaultValues: PropTypes.object.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditUnit: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n  props: PropTypes.object.isRequired,\n  validateTypeahead: PropTypes.func.isRequired,\n  unitId: PropTypes.string,\n};\n\nManageUnit.defaultProps = {\n  admin: {},\n  handleEditUnit: () => {},\n  unitId: null,\n};\n\nexport default ManageUnit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Select, Option, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n// Import utils\nimport utils from '../../../../utils';\n// Import constants\nimport constants from '../../../../utils/constants';\n\nconst ManageMembers = ({\n  formState,\n  props,\n  colorsInUse,\n  defaultValues,\n  handleEditMember,\n  isValid,\n  memberId,\n  validateTypeahead,\n}) => {\n  const {\n    admin: { panels },\n    db: { membersTypeahead },\n    removeMember,\n    updateMemberColor,\n    // updateMemberPositions,\n  } = props;\n\n  // Locked Panel\n  if (panels.members === 'locked') {\n    return (\n      <section className=\"manage-form__members\">\n        <h3 className=\"manage-form__button-title\">Members</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Locked Unit\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__members manage-form__members-edit\">\n      <div className=\"manage-form__form-group-member\">\n        {defaultValues.map((member, index) => {\n          const key = index;\n\n          // Validation classes\n          const isRequired = value =>\n            !value ? 'This field is required' : undefined;\n          const isName = value => {\n            // isRequired\n            if (!value) return 'This field is required';\n            // Cannot have spaces\n            if (value.match(/(\\.|:| |,|;|\\?)/g))\n              return 'Name cannot contain spaces, commas, ., :, ;, or ?';\n            // Max 12 characters\n            if (value.length > 12)\n              return 'Name cannot be longer than 12 characters';\n            return undefined;\n          };\n\n          const isValidName =\n            formState.errors.members &&\n            formState.errors.members[index] &&\n            formState.errors.members[index].name\n              ? 'manage-form__input--invalid'\n              : '';\n\n          if (member) {\n            return (\n              <Scope scope={`members[${index}]`} key={`member-${key}`}>\n                <div className=\"manage-form__form-member manage-member\">\n                  <span\n                    className={`manage-member__title background-color-${utils.getColorNumber(\n                      member.colorId\n                    )}`}\n                  >\n                    Member {index + 1}{' '}\n                    <button\n                      className=\"btn-remove-user\"\n                      onClick={() => removeMember(index)}\n                    >\n                      ×\n                    </button>\n                  </span>\n                  <div className=\"manage-form__inline\">\n                    <label\n                      className=\"manage-form__label\"\n                      title=\"Member names must be less than 12 characters without spaces, commas, colors, semicolons, questions marks or periods\"\n                    >\n                      Name*<Text\n                        className={`manage-form__input ${isValidName}`}\n                        field=\"name\"\n                        validateOnBlur\n                        validate={isName}\n                        required\n                        initialValue={member.name}\n                      />\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--30\">\n                      Initials<Text\n                        className=\"manage-form__input\"\n                        field=\"initials\"\n                        initialValue={member.initials}\n                        maxLength=\"2\"\n                      />\n                    </label>\n                  </div>\n                  <div className=\"manage-form__inline\">\n                    <label className=\"manage-form__label manage-form__label--70\">\n                      Birthdate*<Text\n                        className=\"manage-form__input\"\n                        field=\"birthdate\"\n                        validate={isRequired}\n                        required\n                        initialValue={member.birthdate}\n                        type=\"date\"\n                      />\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--30\">\n                      Color*\n                      <Select\n                        className={`manage-form__input background-color-${utils.getColorNumber(\n                          member.colorId\n                        )}`}\n                        field=\"colorId\"\n                        validate={isRequired}\n                        initialValue={member.colorId}\n                        required\n                        onChange={e => updateMemberColor(e.target.value, index)}\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.COLORS).map(color => (\n                          <Option\n                            key={`${key}-${color[0]}`}\n                            value={color[0]}\n                            disabled={colorsInUse[color[0]]}\n                          >\n                            {color[1]}\n                          </Option>\n                        ))}\n                      </Select>\n                    </label>\n                  </div>\n                  <div className=\"manage-form__inline\">\n                    <label className=\"manage-form__label manage-form__label--50\">\n                      Gender*\n                      <Select\n                        className=\"manage-form__input\"\n                        field=\"gender\"\n                        validate={isRequired}\n                        initialValue={member.gender}\n                        required\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.GENDERS).map(gender => (\n                          <Option key={`${key}-${gender[0]}`} value={gender[0]}>\n                            {gender[1]}\n                          </Option>\n                        ))}\n                      </Select>\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--50\">\n                      Nationality*\n                      <Select\n                        className=\"manage-form__input\"\n                        field=\"nationality\"\n                        validate={isRequired}\n                        initialValue={member.nationality}\n                        required\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.NATIONALITIES).map(\n                          nationality => (\n                            <Option\n                              key={`${key}-${nationality[0]}`}\n                              value={nationality[0]}\n                            >\n                              {nationality[1]}\n                            </Option>\n                          )\n                        )}\n                      </Select>\n                    </label>\n                  </div>\n                  <label className=\"manage-form__label\">Positions* </label>\n                  <div className=\"position-buttons\">\n                    {constants.POSITIONS_LIST.map(position => (\n                      <Checkbox\n                        key={`${key}-${position}`}\n                        field={position}\n                        initialValue={member[utils.spiralCase(position)]}\n                        className={`position-checkbox position-checkbox-${utils.spiralCase(\n                          position\n                        )}`}\n                        title={position}\n                        // onChange={e =>\n                        //   updateMemberPositions(\n                        //     e.target.checked,\n                        //     position,\n                        //     index\n                        //   )\n                        // }\n                      />\n                    ))}\n                  </div>\n                  <label className=\"manage-form__label\">\n                    Private{' '}\n                    <Checkbox field=\"private\" initialValue={member.private} />\n                  </label>\n                </div>\n              </Scope>\n            );\n          }\n          return null;\n        })}\n        <div className=\"manage-form__form-member manage-member-new\">\n          <h3 className=\"manage-form__button-title\">Add new member</h3>\n          <button\n            className=\"manage-form__button-add\"\n            onClick={() => handleEditMember(memberId, formState)}\n          >\n            <img\n              className=\"manage-form__button-add-image\"\n              src={managePlus}\n              alt=\"Add Unit\"\n            />\n          </button>\n          <Typeahead\n            action={e => validateTypeahead(e)}\n            name=\"members\"\n            placeholder=\"Search existing members...\"\n            suggestions={membersTypeahead}\n          />\n          {isValid ? (\n            <p className=\"manage-form__valid\">\n              <Icon type=\"check\" color=\"green\" inline />\n              Selected Member is valid. Click on the plus button to add it.\n            </p>\n          ) : null}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nManageMembers.propTypes = {\n  admin: PropTypes.object,\n  colorsInUse: PropTypes.object,\n  db: PropTypes.object,\n  defaultValues: PropTypes.array.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditMember: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  memberId: PropTypes.string,\n  props: PropTypes.object.isRequired,\n  removeMember: PropTypes.func,\n  updateMemberColor: PropTypes.func,\n  // updateMemberPositions: PropTypes.func,\n  validateTypeahead: PropTypes.func.isRequired,\n};\n\nManageMembers.defaultProps = {\n  admin: {},\n  db: {},\n  colorsInUse: {},\n  handleEditMember: () => {},\n  memberId: null,\n  removeMember: () => {},\n  updateMemberColor: () => {},\n  // updateMemberPositions: () => {},\n};\n\nexport default ManageMembers;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'informed';\n\n// Import components\nimport ColorReferenceBar from './ColorReferenceBar';\nimport ManageArtist from './ManageArtist';\nimport ManageUnit from './ManageUnit';\nimport ManageMembers from './ManageMembers';\n// Import common components\nimport { RequirementWrapper, Loading, Icon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Manage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artistId: null,\n      validArtist: false,\n      unitId: null,\n      validUnit: false,\n      memberId: null,\n      validMember: false,\n    };\n\n    this.handleEditMemberAndState = this.handleEditMemberAndState.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n    this.validateArtist = this.validateArtist.bind(this);\n    this.validateUnit = this.validateUnit.bind(this);\n    this.validateMembers = this.validateMembers.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.loadArtists();\n    this.props.loadColors();\n    this.props.loadMembers();\n  }\n\n  validateArtist(event) {\n    const { value } = event.target;\n    const dict = this.props.db.artistsTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ artistId: dict[value], validArtist: true });\n    } else {\n      this.setState({ artistId: null, validArtist: false });\n    }\n  }\n\n  validateUnit(event) {\n    const { value } = event.target;\n    const dict = this.props.admin.unitsTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ unitId: dict[value], validUnit: true });\n    } else {\n      this.setState({ unitId: null, validUnit: false });\n    }\n  }\n\n  validateMembers(event) {\n    const { value } = event.target;\n    const dict = this.props.db.membersTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ memberId: dict[value], validMember: true });\n    } else {\n      this.setState({ memberId: null, validMember: false });\n    }\n  }\n\n  handleEditMemberAndState(memberId, formState) {\n    if (memberId) {\n      this.setState({ memberId: null, validMember: false });\n    }\n    this.props.handleEditMember(memberId, formState);\n  }\n\n  resetAll() {\n    this.setState({\n      artistId: null,\n      validArtist: false,\n      unitId: null,\n      validUnit: false,\n      memberId: null,\n      validMember: false,\n    });\n    this.props.resetManage();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      admin: {\n        colorsInUse,\n        editingArtist,\n        editingMembers,\n        editingUnit,\n        manageResult,\n      },\n      db: { colors },\n      handleResyncDB,\n      saveManage,\n      updateManageForm,\n      unlockUnit,\n      unlockMembers,\n    } = this.props;\n\n    const isSaveable =\n      Object.keys(editingArtist).length &&\n      Object.keys(editingUnit).length &&\n      editingMembers.length;\n\n    // Build default values for form\n    const defaultValues = {\n      artist: {\n        name: undefined,\n        otherNames: undefined,\n        genre: undefined,\n        private: undefined,\n      },\n      unit: {\n        debutYear: undefined,\n        name: undefined,\n        official: undefined,\n        private: undefined,\n        subUnit: undefined,\n      },\n      members: [],\n    };\n\n    if (editingArtist && editingArtist.id) {\n      defaultValues.artist = {\n        name: editingArtist.name,\n        otherNames: editingArtist.otherNames,\n        genre: editingArtist.genre,\n        private: editingArtist.private,\n      };\n    }\n\n    if (editingUnit && editingUnit.id) {\n      defaultValues.unit = {\n        debutYear: editingUnit.debutYear,\n        name: editingUnit.name,\n        official: editingUnit.official,\n        private: editingUnit.private,\n        subUnit: editingUnit.subUnit,\n      };\n    }\n\n    if (editingMembers.length) {\n      editingMembers.forEach(member => {\n        if (member) {\n          defaultValues.members.push({\n            colorId: member.colorId || undefined,\n            gender: member.gender || undefined,\n            initials: member.initials || undefined,\n            name: member.name || undefined,\n            nationality: member.nationality || undefined,\n            private: member.private || undefined,\n            referenceArtist: member.referenceArtist || undefined,\n            birthdate: member.birthdate\n              ? utils.spiralBirthdate(member.birthdate)\n              : undefined,\n            ...utils.makePositionsEditable(member.positions || []),\n          });\n        } else {\n          defaultValues.members.push(null);\n        }\n      });\n    }\n\n    // If database is still loading\n    if (\n      pending.REQUEST_ARTISTS ||\n      pending.REQUEST_COLORS ||\n      pending.REQUEST_MEMBERS\n    ) {\n      return <Loading message=\"Preparing manage...\" />;\n    }\n\n    // If database is being resynced\n    if (pending.RESYNC_DATABASE) {\n      return <Loading message=\"Resyncing database...\" />;\n    }\n\n    // If save is in progress\n    if (pending.UPDATE_COMPLETE_ARTIST) {\n      return <Loading message=\"Saving...\" />;\n    }\n\n    // If save is in progress\n    if (manageResult === 'SUCCESS') {\n      return (\n        <main className=\"container container--manage\">\n          <h1>Manage</h1>\n          <div className=\"manage-section--manage-success\">\n            <Icon type=\"check\" color=\"green\" size={96} />\n            <p>Complete Artists Successfully Created/Updated</p>\n            <button className=\"btn\" onClick={this.resetAll}>\n              Create New Artist\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--manage\">\n          <h1>Manage</h1>\n          <button className=\"btn btn-resync-db\" onClick={handleResyncDB}>\n            Resync Database\n          </button>\n          <p>\n            A complete group is required to save with ONE Artist, ONE Unit, and\n            at least TWO members (no solo artists)\n          </p>\n          <ColorReferenceBar colors={colors} colorsInUse={colorsInUse} />\n          <Form\n            onChange={formState => updateManageForm(formState)}\n            autoComplete=\"off\"\n            className=\"manage-section\"\n          >\n            {({ formState }) => (\n              <Fragment>\n                <div className=\"manage-form\">\n                  <ManageArtist\n                    formState={formState}\n                    props={this.props}\n                    validateTypeahead={this.validateArtist}\n                    isValid={this.state.validArtist}\n                    artistId={this.state.artistId}\n                    defaultValues={defaultValues.artist}\n                    next={unlockUnit}\n                  />\n                  <ManageUnit\n                    formState={formState}\n                    props={this.props}\n                    validateTypeahead={this.validateUnit}\n                    isValid={this.state.validUnit}\n                    unitId={this.state.unitId}\n                    defaultValues={defaultValues.unit}\n                    next={unlockMembers}\n                  />\n                  <ManageMembers\n                    formState={formState}\n                    props={this.props}\n                    defaultValues={defaultValues.members}\n                    validateTypeahead={this.validateMembers}\n                    isValid={this.state.validMember}\n                    memberId={this.state.memberId}\n                    colorsInUse={colorsInUse}\n                    handleEditMember={this.handleEditMemberAndState}\n                  />\n                </div>\n                <div className=\"manage-form-nav\">\n                  <button className=\"btn\" onClick={() => this.resetAll()}>\n                    Reset\n                  </button>\n                  <button\n                    className=\"btn\"\n                    onClick={() => saveManage(formState)}\n                    disabled={!isSaveable}\n                  >\n                    Save\n                  </button>\n                </div>\n              </Fragment>\n            )}\n          </Form>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nManage.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  loadColors: PropTypes.func.isRequired,\n  loadMembers: PropTypes.func.isRequired,\n  handleEditMember: PropTypes.func.isRequired,\n  handleResyncDB: PropTypes.func.isRequired,\n  resetManage: PropTypes.func.isRequired,\n  saveManage: PropTypes.func.isRequired,\n  updateManageForm: PropTypes.func.isRequired,\n  unlockMembers: PropTypes.func.isRequired,\n  unlockUnit: PropTypes.func.isRequired,\n};\n\nManage.defaultProps = {};\n\nexport default Manage;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Manage from '../components/Manage';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Manage)\n);\n","import ManageContainer from './containers/ManageContainer';\n\nexport default ManageContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import shared components\nimport { LoadingIcon, Icon } from '../../../common';\n\nconst SongsTable = ({\n  songs,\n  pending,\n  rowAction,\n  songSearchQuery,\n  previouslyDistributedSongsDict,\n}) => {\n  // Filter table rows based on searchQuery\n  let filteredSongs = songs;\n  if (songSearchQuery && filteredSongs[0]) {\n    filteredSongs = _.filter(songs, o => o.query.includes(songSearchQuery));\n  }\n  // Message to be display when table has no rows\n  const emptyTableMessage =\n    songSearchQuery.length > 0\n      ? 'No songs available within your search'\n      : 'No songs available';\n\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"7\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"7\">{emptyTableMessage}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Distributed</th>\n          <th>Title</th>\n          <th>Artist</th>\n          <th>Album</th>\n          <th>Group Size</th>\n          <th>Video</th>\n          <th>Title Song</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {filteredSongs.length > 0\n          ? filteredSongs.map(entry => {\n              const previouslyDistributed = previouslyDistributedSongsDict[\n                entry.id\n              ]\n                ? 'previously-distributed-row'\n                : '';\n              return (\n                <tr\n                  key={`all-artists-${entry.id}`}\n                  id={`a-${entry.id}`}\n                  className={previouslyDistributed}\n                >\n                  <td>\n                    {previouslyDistributed ? (\n                      <Icon\n                        type=\"hand-positive\"\n                        color=\"green\"\n                        title=\"Previously Distributed\"\n                        inline\n                      />\n                    ) : (\n                      ''\n                    )}\n                  </td>\n                  <td>{entry.title}</td>\n                  <td>\n                    {entry.originalArtist}{' '}\n                    {entry.originalArtistId ? (\n                      <Icon\n                        type=\"check\"\n                        color=\"yellow\"\n                        title=\"Artist in LD\"\n                        inline\n                      />\n                    ) : null}\n                  </td>\n                  <td>\n                    {entry.album !== 'UNKNOWN' ? (\n                      entry.album\n                    ) : (\n                      <Icon\n                        type=\"question-mark\"\n                        color=\"blue\"\n                        title=\"Unkown Album Title\"\n                        inline\n                      />\n                    )}\n                  </td>\n                  <td>{entry.groupSize}</td>\n                  <td>\n                    {entry.videoId ? (\n                      <Icon\n                        type=\"youtube\"\n                        color=\"red\"\n                        title={entry.videoId}\n                        size=\"18\"\n                        inline\n                      />\n                    ) : (\n                      'Unavailable'\n                    )}\n                  </td>\n                  <td>\n                    {entry.single ? (\n                      <Icon\n                        type=\"check\"\n                        color=\"green\"\n                        title=\"Title Song\"\n                        inline\n                      />\n                    ) : (\n                      <Icon\n                        type=\"no\"\n                        color=\"red\"\n                        title=\"Not a Title Song\"\n                        inline\n                      />\n                    )}\n                  </td>\n                  <td>\n                    {entry.private ? (\n                      <Icon type=\"private\" color=\"red\" title=\"Private\" inline />\n                    ) : (\n                      ''\n                    )}\n                  </td>\n                </tr>\n              );\n            })\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nSongsTable.propTypes = {\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func.isRequired,\n  songs: PropTypes.array.isRequired,\n  songSearchQuery: PropTypes.string,\n  previouslyDistributedSongsDict: PropTypes.object,\n};\n\nSongsTable.defaultProps = {\n  pending: false,\n  songSearchQuery: '',\n  previouslyDistributedSongsDict: {},\n};\n\nexport default SongsTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport SongsTable from './SongsTable';\n// Import common components\nimport { ActiveSong, ActiveUnit, RequirementWrapper } from '../../../common';\n\nclass Songs extends Component {\n  componentDidMount() {\n    this.props.loadSongs();\n    this.props.resetSongSearchQuery();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { songs, songSearchQuery },\n      distribute: { activeSong, activeUnit },\n    } = this.props;\n\n    // Row click should send user to the selected artist page\n    const handleTableClick = e => {\n      const { id } = e.target.parentNode;\n      if (id) {\n        const songId = id.substring(2);\n        this.props.activateSong(songId);\n        this.props.history.push(`/distribute`);\n      }\n    };\n\n    return (\n      <RequirementWrapper requirements={['activeUnit']}>\n        <main className=\"container container--songs\">\n          <h1>Songs</h1>\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n          <h2>All Songs</h2>\n          <p>To start a distribution, select a song by clicking on its row.</p>\n          <input\n            className=\"artists__search-bar\"\n            type=\"text\"\n            placeholder=\"Filter songs...\"\n            onChange={e => this.props.updateSongSearchQuery(e.target.value)}\n          />\n          <SongsTable\n            songs={songs}\n            songSearchQuery={songSearchQuery}\n            pending={pending.REQUEST_SONGS}\n            rowAction={handleTableClick}\n            previouslyDistributedSongsDict={activeUnit.songsDict}\n          />\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nSongs.propTypes = {\n  activateSong: PropTypes.func.isRequired,\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadSongs: PropTypes.func.isRequired,\n  resetSongSearchQuery: PropTypes.func.isRequired,\n  updateSongSearchQuery: PropTypes.func.isRequired,\n};\n\nexport default Songs;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Songs from '../components/Songs';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Songs)\n);\n","import SongsContainer from './containers/SongsContainer';\n\nexport default SongsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SyncStep1VideoId = ({ handleVideoId, loadYoutubeVideo, videoId }) => (\n  <div className=\"sync__step sync__step--1\">\n    <p>Add a youtube link/video id here</p>\n    <input type=\"text\" onChange={handleVideoId} />\n    <p>OR choose a metronome placeholder</p>\n    <select onChange={handleVideoId} disabled>\n      <option value=\"\">Select a btm placeholder</option>\n      <option value=\"90bpm\">90 bpm</option>\n      <option value=\"100bpm\">100 bpm</option>\n      <option value=\"110bpm\">110 bpm</option>\n      <option value=\"120bpm\">120 bpm</option>\n      <option value=\"130bpm\">130 bpm</option>\n    </select>\n\n    <button\n      className=\"btn btn-block\"\n      disabled={!videoId}\n      onClick={() => loadYoutubeVideo()}\n    >\n      Load Video for {videoId}\n    </button>\n  </div>\n);\n\nSyncStep1VideoId.propTypes = {\n  handleVideoId: PropTypes.func.isRequired,\n  loadYoutubeVideo: PropTypes.func.isRequired,\n  videoId: PropTypes.string,\n};\n\nSyncStep1VideoId.defaultProps = {\n  videoId: '',\n};\n\nexport default SyncStep1VideoId;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Form, Text } from 'informed';\n\n// Import common components\nimport { Typeahead } from '../../../common';\n\nclass SyncStep2Info extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalArtist: '',\n    };\n  }\n\n  addToOriginalArtistForm(event) {\n    const { value } = event.target;\n    this.setState({\n      originalArtist: value,\n    });\n  }\n\n  render() {\n    return (\n      <Form autoComplete=\"off\" className=\"sync__step sync__step--2\">\n        {({ formState }) => (\n          <Fragment>\n            <label className=\"sync__form__label\">\n              Song Title*<Text\n                className=\"sync__form__input\"\n                field=\"title\"\n                required\n              />\n            </label>\n            <label className=\"sync__form__label\">\n              Original Artist*{' '}\n              <Typeahead\n                action={e => this.addToOriginalArtistForm(e)}\n                name=\"artists\"\n                placeholder=\"Search existing artist...\"\n                suggestions={this.props.artistsTypeahead}\n              />\n            </label>\n\n            <label className=\"sync__form__label\">\n              Album<Text className=\"sync__form__input\" field=\"album\" />\n            </label>\n            <label className=\"sync__form__label\">\n              Single (Title song){' '}\n              <Checkbox className=\"sync__form__input\" field=\"single\" />\n            </label>\n            <label className=\"sync__form__label\">\n              Original Group Size*<Text\n                className=\"sync__form__input\"\n                field=\"groupSize\"\n                required\n                type=\"number\"\n                min=\"1\"\n                max=\"50\"\n                step=\"1\"\n              />\n            </label>\n            <label className=\"sync__form__label\">\n              Private <Checkbox className=\"sync__form__input\" field=\"private\" />\n            </label>\n\n            <button\n              className=\"btn btn-block\"\n              onClick={() =>\n                this.props.handleFormInfo(formState, this.state.originalArtist)\n              }\n            >\n              Unlock Next Step\n            </button>\n          </Fragment>\n        )}\n      </Form>\n    );\n  }\n}\n\nSyncStep2Info.propTypes = {\n  artistsTypeahead: PropTypes.array.isRequired,\n  handleFormInfo: PropTypes.func.isRequired,\n};\n\nexport default SyncStep2Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst SyncStep3Lyrics = ({\n  handleLyricsEdit,\n  lockLyrics,\n  lyrics,\n  prepareLines,\n}) => {\n  const insertBrackers = () => {\n    const el = document.getElementById('lyrics-editor');\n    const newEl = utils.insertAtCursor(el, ' [] ');\n    handleLyricsEdit(newEl);\n  };\n\n  return (\n    <div className=\"sync__step sync__step--1\">\n      <div className=\"sync__lyrics__controls\">\n        <button className=\"btn btn-50\" onClick={() => prepareLines(true)}>\n          Prepare Lines *\n        </button>{' '}\n        <button className=\"btn btn-50\" onClick={insertBrackers}>\n          Add []\n        </button>\n      </div>\n      <textarea\n        id=\"lyrics-editor\"\n        className=\"sync__lyrics__textarea\"\n        onChange={e => handleLyricsEdit(e)}\n        placeholder=\"Add Lyrics here and press Prepare Lines\"\n        value={lyrics || ''}\n      />\n      <p>\n        <small>\n          * Prepare Lines adds square brackets before each line erasing any\n          numbered id previously created. If you are editing, this will erase\n          any previously linked pill.\n        </small>\n      </p>\n      <button className=\"btn btn-block\" onClick={() => lockLyrics()}>\n        Lock Lyrics &amp; Next Step\n      </button>\n    </div>\n  );\n};\n\nSyncStep3Lyrics.propTypes = {\n  handleLyricsEdit: PropTypes.func.isRequired,\n  lockLyrics: PropTypes.func.isRequired,\n  lyrics: PropTypes.string.isRequired,\n  prepareLines: PropTypes.func.isRequired,\n};\n\nexport default SyncStep3Lyrics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nclass SyncStep4Buttons extends Component {\n  componentDidMount() {\n    if (this.props.location.pathname === '/admin/sync') {\n      window.addEventListener('keydown', event =>\n        this.props.handleSyncKeydown(event, this.props.player)\n      );\n      window.addEventListener('keyup', event =>\n        this.props.handleSyncKeyup(event, this.props.player)\n      );\n    }\n  }\n\n  render() {\n    const boxes = [\n      { color: '1', name: 'Vocal', boxId: '1' },\n      { color: '8', name: 'Sub', boxId: '2' },\n      { color: '12', name: 'Rap', boxId: '3' },\n      { color: '20', name: 'AdLibs', boxId: '4' },\n      { color: '26', name: 'All', boxId: '5' },\n    ];\n\n    const pillColors = {\n      1: '1',\n      2: '8',\n      3: '12',\n      4: '20',\n      5: '26',\n    };\n\n    return (\n      <div className=\"sync__step sync__step--4b\">\n        <p>\n          You can only record distributions when the video is playing, so hit\n          play!\n        </p>\n        <div className=\"sync__distribution__buttons\">\n          {boxes.map((box, index) => (\n            <button\n              key={box.name}\n              className={`box box-25 background-color-${box.color}`}\n              onMouseDown={() =>\n                this.props.handleSyncBoxMouseDown(box.boxId, this.props.player)\n              }\n              onMouseUp={() =>\n                this.props.handleSyncBoxMouseUp(\n                  box.boxId,\n                  this.props.player,\n                  box.color\n                )\n              }\n            >\n              <span className=\"key\">{index + 1}</span>\n              <span className=\"member-name\">{box.name}</span>\n            </button>\n          ))}\n        </div>\n        <div className=\"sync__distribution__pills\">\n          <h3>\n            Log\n            <span\n              role=\"button\"\n              tabIndex={0}\n              className=\"sync__log-trash\"\n              onClick={() => this.props.deleteSyncPill()}\n            >\n              <Icon type=\"trash\" size=\"24\" inline />\n            </span>\n          </h3>\n          <p>\n            When you have enough pills in the log, you can connect them with the\n            lyrics. You will need a pill for each unconnected plug in the\n            lyrics.\n          </p>\n          <div className=\"sync__log\">\n            {Object.keys(this.props.pills).map(key => {\n              const item = this.props.pills[key];\n              const isActive =\n                +this.props.activePill === +item.pillId ? 'active' : '';\n\n              return (\n                <span\n                  key={item.pillId}\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`background-color-${\n                    pillColors[item.key]\n                  } sync__log__pill sync__log__pill--${isActive}`}\n                  onClick={() => this.props.connectSyncPill(item.pillId)}\n                >\n                  <Icon\n                    type={item.link ? 'plug-connected' : 'plug'}\n                    size=\"12\"\n                    inline\n                  />\n                  <span className=\"sync__log__num\">\n                    :{item.timestamp.toFixed(2)}\n                  </span>\n                  <span className=\"sync__log__num\">\n                    :{item.duration.toFixed(2)}\n                  </span>\n                </span>\n              );\n            })}\n          </div>\n          <div className=\"sync__log__controls\">\n            <button className=\"btn btn-50\" onClick={this.props.resetPillLinks}>\n              Reset Links\n            </button>\n            <button\n              className={`btn btn-50 sync__sequence--${\n                this.props.linkSequenceMode\n              }`}\n              onClick={this.props.linkPillsSequence}\n            >\n              Link in Sequence\n            </button>\n          </div>\n          <p className=\"sync__log__stats\">\n            <span>Pills: {this.props.stats.pills} </span>\n            <span>Lines: {this.props.stats.lines} </span>\n            <span>\n              Linked:{' '}\n              {Math.round(\n                (100 * this.props.stats.linked) / this.props.stats.lines\n              )}%{' '}\n            </span>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nSyncStep4Buttons.propTypes = {\n  activePill: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  connectSyncPill: PropTypes.func.isRequired,\n  deleteSyncPill: PropTypes.func.isRequired,\n  handleSyncBoxMouseDown: PropTypes.func.isRequired,\n  handleSyncBoxMouseUp: PropTypes.func.isRequired,\n  handleSyncKeydown: PropTypes.func.isRequired,\n  handleSyncKeyup: PropTypes.func.isRequired,\n  linkPillsSequence: PropTypes.func.isRequired,\n  linkSequenceMode: PropTypes.bool.isRequired,\n  location: PropTypes.object.isRequired,\n  pills: PropTypes.object.isRequired,\n  player: PropTypes.any,\n  resetPillLinks: PropTypes.func.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nSyncStep4Buttons.defaultProps = {\n  activePill: null,\n  player: null,\n};\n\nexport default SyncStep4Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nconst ICON_COLOR_CODE_HASH = {\n  '1': 'red',\n  '8': 'yellow',\n  '12': 'green',\n  '20': 'blue',\n  '26': 'pink',\n};\n\nconst SyncStep4Distributions = ({\n  activeLine,\n  connectSyncLine,\n  distributionLines,\n  isDistributionComplete,\n  unlockSpecificStep,\n  unlockNextStep,\n}) => (\n  <div className=\"sync__step sync__step--4\">\n    <p>\n      This step begins in the left side of this page. You will create\n      syncronizations, then link the pills with each plug in the lyrics here.\n    </p>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(3)}>\n      <Icon type=\"back-arrow\" inline /> Go Back To Lyrics\n    </button>\n    <section className=\"sync__distribution__lyrics\">\n      {distributionLines.map((line, index) => {\n        const key = `line-${index}`;\n        return line.length > 0 ? (\n          <div className=\"sync__distribution__line\" key={key}>\n            {line.map((part, partIndex) => {\n              const partKey = `${key}-${partIndex}`;\n              const isActive = +activeLine === +part.id ? 'active' : '';\n              return (\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`sync__distribution__line--part sync__distribution__line--part-${isActive}`}\n                  key={partKey}\n                  onClick={() => connectSyncLine(part.id)}\n                >\n                  <span className=\"sync__distribution__line--icon\">\n                    <Icon\n                      type={part.link ? 'plug-connected' : 'plug-available'}\n                      size=\"12\"\n                      color={\n                        part.color ? ICON_COLOR_CODE_HASH[part.color] : 'gray'\n                      }\n                    />\n                  </span>\n                  <span className=\"sync__distribution__line--content\">\n                    {part.content}\n                  </span>\n                </span>\n              );\n            })}\n          </div>\n        ) : (\n          <div className=\"sync__distribution__line\" key={key}>\n            &nbsp;\n          </div>\n        );\n      })}\n    </section>\n    <button\n      className=\"btn btn-block\"\n      disabled={!isDistributionComplete}\n      onClick={() => unlockNextStep()}\n    >\n      Next Step\n    </button>\n  </div>\n);\n\nSyncStep4Distributions.propTypes = {\n  activeLine: PropTypes.object,\n  connectSyncLine: PropTypes.func.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  isDistributionComplete: PropTypes.bool,\n  unlockSpecificStep: PropTypes.func.isRequired,\n  unlockNextStep: PropTypes.func.isRequired,\n};\n\nSyncStep4Distributions.defaultProps = {\n  activeLine: null,\n  isDistributionComplete: false,\n};\n\nexport default SyncStep4Distributions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst linesOn = {};\n\nconst SyncStep5Verify = ({ currentTime, distributionLines, timestamps }) => {\n  const timestampsList = Object.keys(timestamps);\n  for (let i = 0; i < timestampsList.length; i++) {\n    const key = timestampsList[i];\n\n    // If current time is smaller than the key, stop loop;\n    if (currentTime < key) {\n      i = timestampsList.length;\n    } else if (currentTime >= key) {\n      const tsArray = timestamps[key];\n      tsArray.forEach(tsObj => {\n        if (tsObj.endTime < currentTime) {\n          linesOn[tsObj.partId.substring(5)] = false;\n        } else {\n          linesOn[tsObj.partId.substring(5)] = true;\n        }\n      });\n    }\n  }\n\n  return (\n    <div className=\"sync__step sync__step--5\">\n      <div className=\"sync__distribution__lyrics\">\n        {distributionLines.map((line, index) => {\n          const key = `line-${index}`;\n          return line.length > 0 ? (\n            <div className=\"sync-lyrics-done__line\" key={key}>\n              {line.map((part, partIndex) => {\n                const partKey = `${key}-${partIndex}`;\n                const isActive = linesOn[part.id]\n                  ? 'sync__distribution__line--part-active'\n                  : '';\n                return (\n                  <span\n                    className={`sync__distribution__line--part ${isActive}`}\n                    key={partKey}\n                  >\n                    <span className=\"sync__distribution__line--content\">\n                      {part.content}\n                    </span>\n                  </span>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"sync__distribution__line\" key={key}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nSyncStep5Verify.propTypes = {\n  currentTime: PropTypes.number.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  timestamps: PropTypes.object.isRequired,\n};\n\nSyncStep5Verify.defaultProps = {};\n\nexport default SyncStep5Verify;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon, LoadingWrapper } from '../../../common';\n\nconst SyncStep5Save = ({ info, pending, saveSync, unlockSpecificStep }) => (\n  <div className=\"sync__step sync__step--5\">\n    <h3>Info</h3>\n    <ul className=\"sync__verify__info\">\n      <li className=\"sync__verify__info-item\">Title: {info.title}</li>\n      <li className=\"sync__verify__info-item\">Artist: {info.originalArtist}</li>\n      <li className=\"sync__verify__info-item\">\n        ArtistId: {info.artistId ? info.artistId : 'Unavailable'}\n      </li>\n      <li className=\"sync__verify__info-item\">\n        Album: {info.album ? info.album : 'Unknown'}\n      </li>\n      <li className=\"sync__verify__info-item\">\n        Single: {info.single ? 'Yes' : 'No'}\n      </li>\n      <li className=\"sync__verify__info-item\">Group Size: {info.groupSize}</li>\n      <li className=\"sync__verify__info-item\">Video Id: {info.videoId}</li>\n      <li className=\"sync__verify__info-item\">\n        Private: {info.private ? 'Yes' : 'No'}\n      </li>\n    </ul>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(2)}>\n      <Icon type=\"back-arrow\" inline /> Info is wrong. Let me fix it!\n    </button>\n    <p>\n      Play the video and see your distribution in action to see if anything is\n      wrong.\n    </p>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(3)}>\n      <Icon type=\"back-arrow\" inline /> Lyrics or distribution are wrong. Let me\n      fix it!\n    </button>\n    <p>\n      After everything is good. You can save by clicking on the button below:\n    </p>\n\n    <button className=\"btn btn-block\" onClick={() => saveSync()}>\n      <LoadingWrapper pending={pending} size=\"tiny\">\n        <Icon type=\"save\" color=\"red\" inline /> Save\n      </LoadingWrapper>\n    </button>\n  </div>\n);\n\nSyncStep5Save.propTypes = {\n  info: PropTypes.object.isRequired,\n  pending: PropTypes.bool,\n  saveSync: PropTypes.func.isRequired,\n  unlockSpecificStep: PropTypes.func.isRequired,\n};\n\nSyncStep5Save.defaultProps = {\n  pending: false,\n};\n\nexport default SyncStep5Save;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport SyncStep1VideoId from './SyncStep1VideoId';\nimport SyncStep2Info from './SyncStep2Info';\nimport SyncStep3Lyrics from './SyncStep3Lyrics';\nimport SyncStep4Buttons from './SyncStep4Buttons';\nimport SyncStep4Distributions from './SyncStep4Distribution';\nimport SyncStep5Verify from './SyncStep5Verify';\nimport SyncStep5Save from './SyncStep5Save';\n// Import common components\nimport {\n  Collapsible,\n  Loading,\n  RequirementWrapper,\n  Icon,\n} from '../../../common';\n\nlet loadYT;\nlet player;\nlet animationInterval;\n\nclass Sync extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 0,\n      currentTime: 0,\n    };\n\n    this.loadYoutubeVideo = this.loadYoutubeVideo.bind(this);\n    this.onPlayerStateChange = this.onPlayerStateChange.bind(this);\n    this.setHeight = this.setHeight.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.db.artists.length < 10) {\n      this.props.loadArtists();\n    }\n  }\n\n  componentDidUpdate() {\n    // Determine player height\n    if (!this.state.height && document.getElementById('video-container')) {\n      this.setHeight();\n    }\n  }\n\n  onPlayerStateChange(e) {\n    // If video is playing\n    if (e.data === 1 && this.props.sync.step === 5) {\n      // Lyric Review Animation Interval\n      animationInterval = setInterval(() => {\n        const currentTime = Math.round(player.getCurrentTime());\n        this.setState(() => ({ currentTime }));\n      }, 500);\n    } else {\n      // Kill interval\n      clearInterval(animationInterval);\n    }\n  }\n\n  setHeight() {\n    const width = document.getElementById('video-container').clientWidth;\n    const height = (9 * width) / 16;\n    this.setState(() => ({ width, height }));\n  }\n\n  loadYoutubeVideo() {\n    if (!loadYT && this.props.sync.videoId) {\n      loadYT = new Promise(resolve => {\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => resolve(window.YT);\n      });\n\n      loadYT.then(YT => {\n        player = new YT.Player(this.youtubePlayerAnchor, {\n          height: this.state.height || 390,\n          width: this.state.width || 640,\n          videoId: this.props.sync.videoId,\n          events: {\n            onStateChange: e => this.onPlayerStateChange(e),\n          },\n        });\n        this.props.unlockNextStep();\n      });\n    }\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { artistsTypeahead },\n      sync: {\n        activeLine,\n        activePill,\n        distributionLines,\n        info,\n        isDistributionComplete,\n        linkSequenceMode,\n        lyrics,\n        pills,\n        step,\n        steps,\n        stats,\n        timestamps,\n        videoId,\n      },\n      connectSyncLine,\n      connectSyncPill,\n      deleteSyncPill,\n      handleFormInfo,\n      handleLyricsEdit,\n      handleSyncBoxMouseDown,\n      handleSyncBoxMouseUp,\n      handleSyncKeydown,\n      handleSyncKeyup,\n      handleResetSync,\n      handleVideoId,\n      linkPillsSequence,\n      location,\n      lockLyrics,\n      prepareLines,\n      resetPillLinks,\n      saveSync,\n      unlockNextStep,\n      unlockSpecificStep,\n    } = this.props;\n\n    if (pending.REQUEST_ARTISTS) {\n      return <Loading message=\"Preparing Sync...\" />;\n    }\n\n    // If save is in progress\n    if (step === 6) {\n      return (\n        <main className=\"container container--sync\">\n          <h1>Manage</h1>\n          <div className=\"manage-section--manage-success\">\n            <Icon type=\"check\" color=\"green\" size={96} />\n            <p>Song Successfully Created</p>\n            <button className=\"btn\" onClick={handleResetSync}>\n              Create New Song Distribution\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--sync\">\n          <h1>Sync</h1>\n          <section className=\"sync__container\">\n            <div className=\"sync__group sync__group--left\">\n              <section\n                className=\"sync__video\"\n                id=\"video-container\"\n                ref={r => {\n                  this.youtubePlayerAnchor = r;\n                }}\n              >\n                <Icon type=\"youtube\" color=\"white\" size=\"72\" />\n              </section>\n              <Collapsible\n                title=\"4. Distribution Buttons\"\n                locked={steps[4].locked}\n                expanded={steps[4].expanded}\n                collapsed={!steps[4].expanded}\n                synced\n              >\n                <SyncStep4Buttons\n                  activePill={activePill}\n                  connectSyncPill={connectSyncPill}\n                  deleteSyncPill={deleteSyncPill}\n                  handleSyncBoxMouseDown={handleSyncBoxMouseDown}\n                  handleSyncBoxMouseUp={handleSyncBoxMouseUp}\n                  handleSyncKeydown={handleSyncKeydown}\n                  handleSyncKeyup={handleSyncKeyup}\n                  linkPillsSequence={linkPillsSequence}\n                  linkSequenceMode={linkSequenceMode}\n                  location={location}\n                  pills={pills}\n                  player={player}\n                  resetPillLinks={resetPillLinks}\n                  stats={stats}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"5. Confirm &amp; Save\"\n                locked={steps[5].locked}\n                expanded={steps[5].expanded}\n                collapsed={!steps[5].expanded}\n                synced\n              >\n                <SyncStep5Save\n                  info={info}\n                  pending={pending.SEND_SONG}\n                  saveSync={saveSync}\n                  unlockSpecificStep={unlockSpecificStep}\n                />\n              </Collapsible>\n            </div>\n            <div className=\"sync__group sync__group--right\">\n              <Collapsible\n                title=\"1. Video Id\"\n                locked={steps[1].locked}\n                expanded={steps[1].expanded}\n                collapsed={!steps[1].expanded}\n                synced\n              >\n                <SyncStep1VideoId\n                  handleVideoId={handleVideoId}\n                  loadYoutubeVideo={this.loadYoutubeVideo}\n                  videoId={videoId}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"2. Info\"\n                locked={steps[2].locked}\n                expanded={steps[2].expanded}\n                collapsed={!steps[2].expanded}\n                synced\n              >\n                <SyncStep2Info\n                  artistsTypeahead={artistsTypeahead}\n                  handleFormInfo={handleFormInfo}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"3. Lyrics\"\n                locked={steps[3].locked}\n                expanded={steps[3].expanded}\n                collapsed={!steps[3].expanded}\n                synced\n              >\n                <SyncStep3Lyrics\n                  handleLyricsEdit={handleLyricsEdit}\n                  lockLyrics={lockLyrics}\n                  lyrics={lyrics}\n                  prepareLines={prepareLines}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"4. Distribution\"\n                locked={steps[4].locked}\n                expanded={steps[4].expanded}\n                collapsed={!steps[4].expanded}\n                synced\n              >\n                <SyncStep4Distributions\n                  activeLine={activeLine}\n                  connectSyncLine={connectSyncLine}\n                  distributionLines={distributionLines}\n                  isDistributionComplete={isDistributionComplete}\n                  unlockSpecificStep={unlockSpecificStep}\n                  unlockNextStep={unlockNextStep}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"5. Verify\"\n                locked={steps[5].locked}\n                expanded={steps[5].expanded}\n                collapsed={!steps[5].expanded}\n                synced\n              >\n                <SyncStep5Verify\n                  currentTime={this.state.currentTime}\n                  distributionLines={distributionLines}\n                  timestamps={timestamps}\n                />\n              </Collapsible>\n            </div>\n          </section>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nSync.propTypes = {\n  db: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  connectSyncLine: PropTypes.func.isRequired,\n  connectSyncPill: PropTypes.func.isRequired,\n  deleteSyncPill: PropTypes.func.isRequired,\n  handleFormInfo: PropTypes.func.isRequired,\n  handleLyricsEdit: PropTypes.func.isRequired,\n  handleSyncBoxMouseDown: PropTypes.func.isRequired,\n  handleSyncBoxMouseUp: PropTypes.func.isRequired,\n  handleSyncKeydown: PropTypes.func.isRequired,\n  handleSyncKeyup: PropTypes.func.isRequired,\n  handleResetSync: PropTypes.func.isRequired,\n  handleVideoId: PropTypes.func.isRequired,\n  linkPillsSequence: PropTypes.func.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  lockLyrics: PropTypes.func.isRequired,\n  prepareLines: PropTypes.func.isRequired,\n  resetPillLinks: PropTypes.func.isRequired,\n  saveSync: PropTypes.func.isRequired,\n  sync: PropTypes.object.isRequired,\n  unlockNextStep: PropTypes.func.isRequired,\n  unlockSpecificStep: PropTypes.func.isRequired,\n};\n\nexport default Sync;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Sync from '../components/Sync';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { dbOperations } from '../../../../reducers/db';\nimport { syncOperations } from '../../../../reducers/sync';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  db: state.db,\n  sync: state.sync,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...dbOperations,\n  ...syncOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Sync)\n);\n","import SyncContainer from './containers/SyncContainer';\n\nexport default SyncContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst ColorSheet = ({ colors }) => {\n  colors = Object.values(colors);\n  return (\n    <main className=\"container\">\n      <ul className=\"color-palette\">\n        {colors &&\n          colors.map(colorObj => (\n            <li\n              key={colorObj.id}\n              className={`palette background-color-${colorObj.number}`}\n            >\n              {colorObj.id}\n              <br />\n              {utils.humanize(colorObj.name, 'Capital')}\n              <br />\n              {colorObj.count} uses\n            </li>\n          ))}\n      </ul>\n    </main>\n  );\n};\n\nColorSheet.propTypes = {\n  colors: PropTypes.object,\n};\n\nColorSheet.defaultProps = {\n  colors: {},\n};\n\nexport default ColorSheet;\n","import React from 'react';\n\n// Import common components\nimport {\n  FavoriteIcon,\n  Icon,\n  LoadingIcon,\n  Switch,\n  Tabs,\n  Typeahead,\n  Collapsible,\n} from '../../../common';\n\nconst NOOP = () => {};\n\nconst ComponentSheet = () => (\n  <main className=\"container\">\n    <ul className=\"component-list\">\n      <li className=\"component-list__item\">\n        <h3 className=\"component-list__name\">Favorite Icon</h3>\n        <div className=\"component-list__example\">\n          <FavoriteIcon action={NOOP} id=\"1\" />\n          <FavoriteIcon action={NOOP} id=\"2\" state />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Heart shaped favorite icon</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: onClick function\n            </li>\n            <li className=\"component-list__argument\">\n              id: value the action function calls\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              className: additional classes (default: &#39;&#39;)\n            </li>\n            <li className=\"component-list__argument\">\n              size: string or number (default: 12)\n            </li>\n            <li className=\"component-list__argument\">\n              state: boolean that determines if heart is red or gray (default:\n              false)\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Icon</h3>\n        <div className=\"component-list__example\">\n          <Icon size={36} />\n        </div>\n        <div className=\"component-list__description\">\n          <p>See Icon tab for list of icons</p>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              type: the name of the icon (default: default)\n            </li>\n            <li className=\"component-list__argument\">\n              color: one of the default colors (default: default)\n            </li>\n            <li className=\"component-list__argument\">\n              size: string or number (default: 12)\n            </li>\n            <li className=\"component-list__argument\">\n              inline: boolean that determines if icon will be inline with text\n              (default: false)\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Loading Icon</h3>\n        <div className=\"component-list__example\">\n          <LoadingIcon />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Colored loading icon</p>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              size: tiny, small, medium (Default), large\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Switch</h3>\n        <div className=\"component-list__example\">\n          <Switch action={NOOP} /> <Switch action={NOOP} checked />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Switch button to indicate if a feature is on</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: function to be exectued when switch is triggers\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              labels: object with left and right values\n            </li>\n            <li className=\"component-list__argument\">\n              checked: boolean that determines if switch is on\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Tabs</h3>\n        <div className=\"component-list__example\">\n          <Tabs action={NOOP} tabs={['Tab 1', 'Tab 2']}>\n            Content goes here as a component child\n          </Tabs>\n        </div>\n\n        <div className=\"component-list__description\">\n          <p>Wrapper component with selectable tabs</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              active: what tab is active (default: the first tab)\n            </li>\n            <li className=\"component-list__argument\">\n              iconCondition: boolean to display the icon\n            </li>\n            <li className=\"component-list__argument\">\n              icon: icon component to be displayed\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Typeahead</h3>\n        <div className=\"component-list__example\">\n          <Typeahead\n            action={NOOP}\n            name=\"example\"\n            suggestions={['Avocado', 'Banana', 'Cranberry']}\n          />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Input field with autocomplete datalist option</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: function trigged when input is selected\n            </li>\n            <li className=\"component-list__argument\">\n              name: name of the datalist/input\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              className: additional classes (default: &#39;&#39;)\n            </li>\n            <li className=\"component-list__argument\">\n              placeholder: input field placeholder (default: Searching...)\n            </li>\n            <li className=\"component-list__argument\">\n              suggestions: list of suggestions to autocomplete in the datalist\n              (default: [])\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Collapsible</h3>\n        <div className=\"component-list__example\">\n          <Collapsible title=\"Locked Collapsible\" locked>\n            Content\n          </Collapsible>\n          <Collapsible title=\"Locked Expanded Collapsible\" locked expanded>\n            Content\n          </Collapsible>\n          <Collapsible title=\"Collapsed Collapsible\">Content</Collapsible>\n          <Collapsible title=\"Expanded Collapsible\" expanded>\n            Content\n          </Collapsible>\n        </div>\n        <div className=\"component-list__description\">\n          <p>Collapsible panel with children content</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              title: the header of the panel\n            </li>\n            <li className=\"component-list__argument\">\n              children elements to be rendered when expanded\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              collapsed: makes panel collapse (default)\n            </li>\n            <li className=\"component-list__argument\">\n              expanded: makes panel expand\n            </li>\n            <li className=\"component-list__argument\">\n              locked: locks panel action keeping it expanded or collapsed\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>New Component</h3>\n        <div className=\"component-list__example\">\n          {/* Component goes here */}\n        </div>\n        <div className=\"component-list__description\">\n          <p>Description</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n        </div>\n      </li>\n    </ul>\n  </main>\n);\n\nexport default ComponentSheet;\n","import React from 'react';\n\n// Import common components\nimport { Icon } from '../../../common';\n// Import utility functions\nimport ICONS from '../../../../utils/icons';\n\nconst IconSheet = () => (\n  <main className=\"container\">\n    <ul className=\"icon-list\">\n      {Object.keys(ICONS).map(name => (\n        <li key={name} className=\"icon-list__item\">\n          <span className=\"icon-list__name\">{name.toLowerCase()}</span>\n          <Icon type={name} size=\"36\" />\n        </li>\n      ))}\n    </ul>\n  </main>\n);\n\nexport default IconSheet;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport ColorSheet from './ColorSheet';\nimport ComponentSheet from './ComponentsSheet';\nimport IconSheet from './IconSheet';\n// Import common components\nimport { RequirementWrapper, Tabs, LoadingWrapper } from '../../../common';\n\nclass UIReference extends Component {\n  componentDidMount() {\n    this.props.loadColors();\n  }\n\n  render() {\n    const {\n      admin: { uiReferenceTab },\n      app,\n      db: { colors },\n    } = this.props;\n\n    const TABS = ['Colors', 'Components', 'Icons'];\n\n    let tabContent = null;\n    switch (uiReferenceTab) {\n      case 'Components':\n        tabContent = <ComponentSheet />;\n        break;\n      case 'Icons':\n        tabContent = <IconSheet />;\n        break;\n      default:\n        tabContent = <ColorSheet colors={colors} />;\n    }\n\n    return (\n      <RequirementWrapper requirements={['admin']}>\n        <main className=\"container container--artists\">\n          <h1>UI Reference</h1>\n          <Tabs\n            tabs={TABS}\n            action={this.props.switchUIReferenceTab}\n            active={uiReferenceTab}\n          >\n            <LoadingWrapper pending={app.pending.REQUEST_COLORS}>\n              {tabContent}\n            </LoadingWrapper>\n          </Tabs>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nUIReference.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadColors: PropTypes.func.isRequired,\n  switchUIReferenceTab: PropTypes.func.isRequired,\n};\n\nUIReference.defaultProps = {};\n\nexport default UIReference;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport UIReference from '../components/UIReference';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UIReference)\n);\n","import UIReferenceContainer from './containers/UIReferenceContainer';\n\nexport default UIReferenceContainer;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass Lab extends Component {\n  render() {\n    return <h1>Lab</h1>;\n  }\n}\n\nLab.propTypes = {};\n\nLab.defaultProps = {};\n\nexport default Lab;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Lab from '../components/Lab';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Lab)\n);\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass LearnMore extends Component {\n  render() {\n    return <h1>LearnMore</h1>;\n  }\n}\n\nLearnMore.propTypes = {};\n\nLearnMore.defaultProps = {};\n\nexport default LearnMore;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport LearnMore from '../components/LearnMore';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LearnMore)\n);\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass MyArtists extends Component {\n  render() {\n    return <h1>MyArtists</h1>;\n  }\n}\n\nMyArtists.propTypes = {};\n\nMyArtists.defaultProps = {};\n\nexport default MyArtists;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport MyArtists from '../components/MyArtists';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MyArtists)\n);\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass MyDistributions extends Component {\n  render() {\n    return <h1>MyDistributions</h1>;\n  }\n}\n\nMyDistributions.propTypes = {};\n\nMyDistributions.defaultProps = {};\n\nexport default MyDistributions;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport MyDistributions from '../components/MyDistributions';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MyDistributions)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Test extends Component {\n  componentDidMount() {\n    // nothing\n  }\n  render() {\n    console.log(this.props);\n\n    const stringify = json =>\n      JSON.stringify(JSON.parse(JSON.stringify(json)), null, 2);\n\n    return (\n      <main className=\"container\">\n        <h1>Test/Temp</h1>\n        <div className=\"textareas\">\n          <textarea readOnly value={stringify(this.props.temp.test1)} />\n          <textarea readOnly value={stringify(this.props.temp.test2)} />\n          <textarea readOnly value={stringify(this.props.temp.test3)} />\n          <textarea readOnly value={stringify(this.props.temp.test4)} />\n          <textarea readOnly value={stringify(this.props.temp.test5)} />\n        </div>\n        <div className=\"buttons\">\n          <button onClick={() => this.props.testFunction1()}>\n            Run Test Function1\n          </button>\n          <button onClick={() => this.props.testFunction2()}>\n            Run Test Function2\n          </button>\n        </div>\n      </main>\n    );\n  }\n}\n\nTest.propTypes = {\n  temp: PropTypes.object.isRequired,\n  test1: PropTypes.string.isRequired,\n  test2: PropTypes.number.isRequired,\n  test3: PropTypes.bool.isRequired,\n  test4: PropTypes.array.isRequired,\n  test5: PropTypes.object.isRequired,\n  testFunction1: PropTypes.func.isRequired,\n  testFunction2: PropTypes.func.isRequired,\n};\n\nTest.defaultProps = {};\n\nexport default Test;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Temp from '../components/Temp';\n\nimport { tempOperations } from '../reducers/temp';\n\nconst mapStateToProps = state => ({\n  temp: state.temp,\n});\n\nconst mapDispatchToProps = {\n  ...tempOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Temp)\n);\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Artists from './app/pages/artists';\nimport Artist from './app/pages/artist';\nimport Distribute from './app/pages/distribute';\nimport Header from './app/pages/header';\nimport Home from './app/pages/home';\nimport Idols from './app/pages/idols';\nimport Lyrics from './app/pages/lyrics';\nimport Manage from './app/pages/manage';\nimport Songs from './app/pages/songs';\nimport Sync from './app/pages/sync';\nimport UIReference from './app/pages/ui-reference';\n\nimport { ErrorModal } from './app/common/index';\n\nimport LabContainer from './containers/LabContainer';\nimport LearnMoreContainer from './containers/LearnMoreContainer';\nimport MyArtistsContainer from './containers/MyArtistsContainer';\nimport MyDistributionsContainer from './containers/MyDistributionsContainer';\nimport TempContainer from './containers/TempContainer';\n\nimport './stylesheets/index.css';\n\nconst routes = (\n  <Router className=\"bola\">\n    <div className=\"app\">\n      <Header />\n      <ErrorModal />\n      <Route path=\"/artists/:artistId\" component={Artist} />\n      <Route exact path=\"/artists\" component={Artists} />\n      <Route path=\"/distribute\" component={Distribute} />\n      <Route path=\"/idols\" component={Idols} />\n      <Route path=\"/lab\" component={LabContainer} />\n      <Route path=\"/learn-more\" component={LearnMoreContainer} />\n      <Route path=\"/lyrics\" component={Lyrics} />\n      <Route path=\"/songs\" component={Songs} />\n\n      <Route path=\"/admin/manage\" component={Manage} />\n      <Route path=\"/admin/sync\" component={Sync} />\n      <Route path=\"/admin/temp\" component={TempContainer} />\n      <Route path=\"/admin/ui-reference\" component={UIReference} />\n\n      <Route path=\"/user/my-artists\" component={MyArtistsContainer} />\n      <Route\n        path=\"/user/my-distributions\"\n        component={MyDistributionsContainer}\n      />\n\n      <Route exact path=\"/\" component={Home} />\n    </div>\n  </Router>\n);\n\nexport default routes;\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ReduxToastr from 'react-redux-toastr';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport store from './store';\nimport routes from './routes';\n\nimport './stylesheets/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Fragment>\n      {routes}\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates\n        position=\"bottom-center\"\n        transitionIn=\"bounceIn\"\n        transitionOut=\"bounceOut\"\n        progressBar\n      />\n    </Fragment>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/loading.d6605f0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-lock.4e4f8dbd.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-plus.5cbc8658.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-leader.6a295198.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-vocalist.a995fa3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-rapper.269fbdb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-dancer.581fc18e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-vocalist.7c410976.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-rapper.0735854b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-dancer.b38316e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-vocalist.131d4b70.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-dancer.a9fd47b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rapper.cb032f09.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-center.83737fe1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-visual.187fc8b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-maknae.afb2e497.svg\";"],"sourceRoot":""}