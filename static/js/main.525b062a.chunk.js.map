{"version":3,"sources":["registerServiceWorker.js","reducers/app/types.js","reducers/app/reducers.js","reducers/app/actions.js","reducers/app/operations.js","reducers/app/index.js","reducers/admin/types.js","reducers/admin/reducers.js","utils/constants.js","reducers/admin/actions.js","reducers/admin/operations.js","reducers/admin/index.js","reducers/artists/types.js","reducers/artists/reducers.js","reducers/artists/actions.js","reducers/artists/operations.js","reducers/artists/index.js","reducers/auth/types.js","reducers/auth/reducers.js","reducers/auth/actions.js","reducers/auth/operations.js","reducers/auth/index.js","reducers/distribute/types.js","reducers/distribute/reducers.js","reducers/distribute/actions.js","reducers/distribute/operations.js","reducers/distribute/index.js","reducers/sync/types.js","reducers/sync/reducers.js","reducers/sync/actions.js","reducers/sync/operations.js","reducers/sync/index.js","reducers/temp/types.js","reducers/temp/reducers.js","reducers/temp/actions.js","reducers/temp/operations.js","reducers/temp/index.js","reducers/index.js","api/utils.js","api/enums.js","api/serializers.js","api/deserializers.js","api/firebase.js","api/index.js","utils/index.js","sagas/api-saga.js","sagas/status-handling.js","sagas/index.js","store.js","app/common/components/ActiveSongWidget.jsx","app/common/containers/ActiveSongWidgetContainer.js","app/common/components/ActiveUnitWidget.jsx","app/common/containers/ActiveUnitWidgetContainer.js","app/common/components/Collapsible.jsx","app/common/components/ErrorModal.jsx","app/common/containers/ErrorModalContainer.js","app/common/components/FavoriteIcon.jsx","utils/icons.js","app/common/components/Icon.jsx","app/common/components/Loading.jsx","app/common/components/LoadingIcon.jsx","app/common/components/member/MemberNationalityFlag.jsx","app/common/components/member/MemberPicture.jsx","app/common/components/member/MemberPositions.jsx","app/common/components/MemberCard.jsx","app/common/components/PositionIcon.jsx","app/common/components/RequirementWrapper.jsx","app/common/containers/RequirementWrapperContainer.js","app/common/components/Switch.jsx","app/common/components/Tabs.jsx","app/common/components/Typeahead.jsx","app/pages/artists/components/ArtistsTable.jsx","app/pages/artists/components/Artists.jsx","app/pages/artists/containers/ArtistsContainer.js","app/pages/artists/index.js","app/pages/artist/components/BiasPicture.jsx","app/pages/artist/components/Units.jsx","app/pages/artist/components/Artist.jsx","app/pages/artist/containers/ArtistContainer.js","app/pages/artist/index.js","app/pages/distribute/components/DistributeConnect.jsx","app/pages/distribute/components/Distribute.jsx","app/pages/distribute/containers/DistributeContainer.js","app/pages/distribute/index.js","app/pages/header/components/Menu.jsx","app/pages/header/components/LoadingBar.jsx","app/pages/header/components/Header.jsx","app/pages/header/containers/HeaderContainer.js","app/pages/header/index.js","app/pages/home/components/Home.jsx","app/pages/home/containers/HomeContainer.js","app/pages/home/index.js","app/pages/idols/components/Idols.jsx","app/pages/idols/containers/IdolsContainer.js","app/pages/idols/index.js","app/pages/lyrics/components/LyricsOutput.jsx","app/pages/lyrics/parser/index.js","app/pages/lyrics/components/Lyrics.jsx","app/pages/lyrics/containers/LyricsContainer.js","app/pages/lyrics/index.js","app/pages/manage/components/ColorReferenceBar.jsx","app/pages/manage/components/ManageArtist.jsx","app/pages/manage/components/ManageUnit.jsx","app/pages/manage/components/ManageMembers.jsx","app/pages/manage/components/Manage.jsx","app/pages/manage/containers/ManageContainer.js","app/pages/manage/index.js","app/pages/songs/components/SongsTable.jsx","app/pages/songs/components/Songs.jsx","app/pages/songs/containers/SongsContainer.js","app/pages/songs/index.js","app/pages/sync/components/SyncStep1VideoId.jsx","app/pages/sync/components/SyncStep2Info.jsx","app/pages/sync/components/SyncStep3Lyrics.jsx","app/pages/sync/components/SyncStep4Buttons.jsx","app/pages/sync/components/SyncStep4Distribution.jsx","app/pages/sync/components/SyncStep5Verify.jsx","app/pages/sync/components/SyncStep5Save.jsx","app/pages/sync/components/Sync.jsx","app/pages/sync/containers/SyncContainer.js","app/pages/sync/index.js","app/pages/ui-reference/components/ColorSheet.jsx","app/pages/ui-reference/components/ComponentsSheet.jsx","app/pages/ui-reference/components/IconSheet.jsx","app/pages/ui-reference/components/UIReference.jsx","app/pages/ui-reference/containers/UIReferenceContainer.js","app/pages/ui-reference/index.js","components/Lab.jsx","containers/LabContainer.js","components/LearnMore.jsx","containers/LearnMoreContainer.js","components/MyArtists.jsx","containers/MyArtistsContainer.js","components/MyDistributions.jsx","containers/MyDistributionsContainer.js","components/Temp.jsx","containers/TempContainer.js","routes.js","index.js","images/manage-lock.svg","images/manage-plus.svg","images/loading.svg","images/icon-leader.svg","images/icon-main-vocalist.svg","images/icon-main-rapper.svg","images/icon-main-dancer.svg","images/icon-lead-vocalist.svg","images/icon-lead-rapper.svg","images/icon-lead-dancer.svg","images/icon-vocalist.svg","images/icon-dancer.svg","images/icon-rapper.svg","images/icon-center.svg","images/icon-visual.svg","images/icon-maknae.svg","images/icon-all.svg","images/icon-none.svg","images/logo-neg.svg","images/bias-placeholder.svg","images/logo.svg","images/user-placeholder.svg","images/logo-alt.svg"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","types","RESET_ERROR","SET_DATABASE_READY","SET_ERROR","SET_ERROR_INLINE","SET_ERROR_MESSAGE","SET_LOADING","SET_PENDING","SET_SUCCESS","SET_SUCCESS_INLINE","SET_SUCCESS_MESSAGE","initialState","databaseReady","errorInline","errorMessage","pending","loading","actions","payload","dispatch","type","operations","init","handleCloseErrorModal","handleSendBugReport","getState","app","body","timestamp","Date","now","content","setLoading","value","instance","appReducer","prevState","arguments","length","undefined","action","newState","Object","assign","success","admin_types","SET_ARTISTS","SET_ARTISTS_TYPEAHEAD","SET_ARTISTS_TYPEAHEAD_DICT","SET_COLORS","SET_COLORS_IN_USE","SET_CREATE_SUCCESS","SET_EDITING_ARTIST","SET_EDITING_MEMBERS","SET_EDITING_UNIT","SET_MANAGE_RESULT","SET_MEMBERS","SET_MEMBERS_TYPEAHEAD","SET_MEMBERS_TYPEAHEAD_DICT","SET_PANELS","SET_SONGS","SET_SONG_SEARCH_QUERY","SET_UI_REFERENCE_TAB","SET_UNITS_TYPEAHEAD","SET_UNITS_TYPEAHEAD_DICT","artists","artistsTypeahead","artistsTypeaheadDict","colors","colorsInUse","editingArtist","editingMembers","editingUnit","manageResult","members","membersTypeahead","panels","artist","unit","songs","songSearchQuery","uiReferenceTab","unitsTypeahead","unitsTypeaheadDict","constants","COLORS","col000001","col000002","col000003","col000004","col000005","col000006","col000007","col000008","col000009","col000010","col000011","col000012","col000013","col000014","col000015","col000016","col000017","col000018","col000019","col000020","col000021","col000022","col000023","col000024","col000025","col000026","col000027","col000028","col000029","col000030","DEFAULT_COLORS","default","black","blue","gray","green","orange","pink","purple","red","teal","white","yellow","FLAGS_LIST","AMERICAN","BRAZILIAN","CANADIAN","CHINESE","JAPANESE","KOREAN","TAIWANESE","THAI","VIETNAMISE","GENDERS","FEMALE","MALE","UNKOWN","GENRES","CPOP","JPOP","KPOP","OTHER","POP","GENRES_DB","C-Pop","J-Pop","K-Pop","Other","Pop","POSITIONS_LIST","POSITIONS_LIST_OBJ","MAIN_VOCALIST","LEAD_VOCALIST","VOCALIST","MAIN_RAPPER","LEAD_RAPPER","RAPPER","MAIN_DANCER","LEAD_DANCER","DANCER","LEADER","CENTER","VISUAL","NATIONALITIES","BRITISH","NATIONALITY_FLAG_URL","PROFILE_PICTURE_URL","SYNC_KEY_LIST","1","2","3","4","5","SYNC_KEY_COLOR_LIST","YOUTUBE_URLS","admin_actions","admin_operations","handleEditArtist","artistId","objectSpread","admin","new","handleEditMember","memberId","formState","toConsumableArray","memberIndex","_","findIndex","m","id","addedMember","push","forEach","member","colorId","lastMember","values","positions","gender","nationality","handleEditUnit","unitId","units","currentUnit","u","handleResyncDB","loadArtists","loadColors","loadMembers","loadSongs","removeMember","index","resetManage","resetSongSearchQuery","saveManage","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","artistState","unitState","membersState","missingField","editingArtistState","editingUnitState","editingMembersState","wrap","_context2","prev","next","keys","errors","abrupt","name","genre","debutYear","birthdate","some","otherNames","private","memberIds","memberList","map","createdBy","official","averages","distributions","distributions_legacy","memberState","newMember","replace","initials","altColorId","referenceArtist","key","includes","stop","_x2","_x3","apply","this","switchUIReferenceTab","event","_ref","_callee","_context","target","_x","unlockUnit","unlockMembers","updateManageForm","updateMemberColor","updateMemberPositions","updateSongSearchQuery","adminReducer","membersTypeaheadDict","artists_types","SET_ARTIST_LIST","SET_ARTIST_PAGE_TAB","SET_BIAS","SET_SEARCH_QUERY","SET_SELECTED_ARTIST","SET_SELECTED_UNIT","SET_SHOW_FAVORITE_ARTISTS_ONLY","artistList","artistPageTab","bias","searchQuery","selectedArtist","selectedUnit","showFavoriteArtistsOnly","userFavoriteArtists","userLatestArtists","artists_actions","findUnitIndex","artists_operations","getBias","biases","auth","user","concat","loadUserArtists","loadArtist","queryParams","updateSearchQuery","toLowerCase","updateLatestUnits","_x4","showFavoriteArtistsOnlyToggle","switchArtistPageTab","_ref3","_callee3","unitIndex","_context3","parentNode","complete","_x5","_x6","artistsReducer","auth_types","SET_ADMIN","SET_AUTHENTICATED","SET_BIASES","SET_USER","isAuthenticated","isAdmin","auth_actions","auth_operations","login","logout","updateBias","_getState$artists$sel","biasId","currentBias","userId","updateFavoriteArtists","favoriteArtists","updateFavoriteMembers","userFavoriteMembers","favoriteMembers","authReducer","distribute_types","SET_ACTIVE_MEMBER_PILL","SET_ACTIVE_SONG","SET_ACTIVE_UNIT","SET_DISTRIBUTION_LINES","SET_RATES","activeMemberPill","activeSong","activeUnit","distributionLines","rates","distribute_actions","calculateRates","total","remaining","max","l","line","p","part","duration","mId","distribute_operations","activateMemberPill","distribute","activateSong","find","activateUnit","artistName","handleSaveDistribution","relationships","songId","features","JSON","stringify","linkMemberToPart","found","filter","prepareSong","distributionString","distribution","buildPartData","data","_data$split","split","_data$split2","slicedToArray","startTime","endTime","parsedLine","insideBracket","i","char","substring","trim","distributeReducer","sync_types","RESET_SYNC","SET_ACTIVE_LINE","SET_ACTIVE_PILL","SET_ARE_LYRICS_LOCKED","SET_FINAL_LYRICS","SET_INFO","SET_IS_DISTRIBUTION_COMPLETE","SET_LINK_SEQUENCE_MODE","SET_LAST_ID_NUM","SET_LYRICS","SET_PILLS","SET_QUEUE","SET_STEP","SET_STEPS","SET_SYNC_DISTRIBUTION_LINES","SET_SYNC_STATS","SET_TIMESTAMPS","SET_VIDEO_ID","activeLine","activePill","areLyricsLocked","finalLyrics","info","isDistributionComplete","linkSequenceMode","lastIdNum","lyrics","pills","queue","step","steps","locked","expanded","stats","lines","linked","timestamps","videoId","sync_actions","unlockNextStep","sync","finalizeLyrics","prepareLines","clearBrackets","preparedLyrics","startsWith","join","parseLyricsToObject","lineCount","link","color","setTimeout","enqueueCapture","newPillId","dequeueCapture","pillId","linksBackUp","connect","lineId","collection","searchId","newValue","nullifyLine","nullifyPill","isComplete","item","partId","k","pill","newLines","toFixed","finalId","timepstamps","bracket","second","Math","round","size","totalSize","intervalId","sync_operations","connectSyncLine","_getState$sync","connectSyncPill","_getState$sync2","deleteSyncPill","handleFormInfo","originalArtist","album","groupSize","single","title","handleLyricsEdit","e","text","handleResetSync","handleSyncBoxMouseDown","player","getPlayerState","getCurrentTime","handleSyncBoxMouseUp","handleSyncKeydown","handleSyncKeyup","handleVideoId","youtubeLink","youtubeLinkQuery","linkPillsSequence","pillList","findNextPill","nextActive","clearInterval","el","setInterval","lockLyrics","s","idNum","resetPillLinks","saveSync","_getState$sync3","originalArtistId","unlockSpecificStep","num","st","syncReducer","temp_types","SET_TEST_1","SET_TEST_2","SET_TEST_3","SET_TEST_4","SET_TEST_5","test1","test2","test3","test4","test5","temp_actions","temp_operations","testFunction1","testFunction2","testFunction3","testFunction4","testFunction5","tempReducer","rootReducer","combineReducers","temp","toastr","appTypes","adminTypes","artistsTypes","authTypes","distributeTypes","syncTypes","tempTypes","NewResponse","classCallCheck","statusCode","dataResponse","errorResponse","createClass","code","HttpStatus","OK","dt","attributes","INTERNAL_SERVER_ERROR","message","throwError","Error","breadcrumble","path","UNAUTHORIZED","BAD_REQUEST","urlSplit","fullPath","queryResult","querySplit","subQuery","queryName","queryValue","root","referenceId","subPath","buildArtistQuery","memberNames","buildSongQuery","buildMemberInitials","floor","toUpperCase","verifyRequirements","uid","fields","missing","field","getNumberFromColorId","Number","getAlternativeColor","list","makeSixDigit","random","pad","isNaN","str","toString","wait","ms","Promise","r","j","mergeMembers","unitMembersArr","membersArr","positionsDict","ensureGenreEnum","C-POP","J-POP","K-POP","TODAY","ageDict","calculateAge","birthday","birthdateString","birthDate","ageDate","getTime","abs","getUTCFullYear","serialize","cloneDeep","modifiedBy","query","b","count","g","hex","number","age","altColor","song","parseUnitMembers","email","latestUnits","latesUnits","session","displayName","photoURL","serializeCollection","object","membersObj","dict","entrySplit","memberName","memberPosition","entry","deserialize","post","reportedBy","photoUrl","put","res","fb","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","googleProvider","GoogleAuthProvider","userSession","onAuthStateChanged","db","users","fullyLoaded","dbRef","API","_authenticated","_admin","_loaded","_loggedInThisSession","_tries","_uid","warn","response","status","authenticated","loaded","resolve","database","dbInfo","emailVerified","get","userRes","NO_CONTENT","setPersistence","Auth","Persistence","LOCAL","signInWithPopup","result","t0","t2","signOut","ok","_context4","syncDB","ref","once","snapshot","val","resyncFunctions","parse","set","throwDBError","route","getFunctions","fetchArtistUnits","fetchArtist","fetchArtists","fetchColor","fetchColors","fetchMember","fetchMembers","fetchSong","fetchSongs","fetchUnitDistributions","fetchUnitMembers","fetchUnit","fetchUser","throwPathError","postFunctions","createArtist","createDistribution","createLogEntry","createMember","createSong","createUnit","createUser","putFunctions","updateArtist","updateDistribution","updateMember","updateSong","updateUnit","updateUserBiases","updateUserFavoriteArtists","updateUserFavoriteMembers","updateUserLatestUnits","updateUser","deleteFunctions","destroyUser","snap","_fetchArtists","_callee13","_context13","_fetchArtist","_callee14","_context14","_x9","_fetchArtistUnits","_callee15","_context15","sent","all","_x10","_fetchColors","_callee16","_context16","_fetchColor","_callee17","_context17","_x11","fetchDistribution","_fetchDistribution","_callee18","_context18","_x12","_fetchMembers","_callee19","_context19","_fetchMember","_callee20","_response","_response$altColorId","_response$colorId","_context20","_x13","_fetchSongs","_callee21","_context21","_fetchSong","_callee22","_context22","_x14","_fetchUnit","_callee23","_context23","_x15","_fetchUnitDistributions","_callee24","_context24","distributionId","_x16","_fetchUnitMembers","_callee25","membersResponse","promiseResponse","_context25","_x17","_fetchUser","_callee26","_context26","_x18","_createArtist","_callee27","_context27","update","_x19","_x20","createColor","_createColor","_callee28","_context28","_x21","_createDistribution","_callee29","_context29","_x22","_x23","_createLogEntry","_callee30","subRoute","_context30","_x24","_x25","_x26","_createMember","_callee31","_context31","_x27","_x28","_createSong","_callee32","_context32","_x29","_x30","_createUnit","_callee33","_context33","_x31","_x32","_createUser","_callee34","_context34","_x33","_x34","_updateArtist","_callee35","_context35","_x35","_x36","_x37","_updateDistribution","_callee36","_context36","_x38","_x39","_x40","_updateMember","_callee37","_context37","_x41","_x42","_x43","_updateSong","_callee38","_context38","_x44","_x45","_x46","_updateUnit","_callee39","_context39","_x47","_x48","_x49","_updateUser","_callee40","_context40","_x50","_x51","_updateUserBiases","_callee41","_context41","_x52","_x53","_updateUserFavoriteArtists","_callee42","_context42","_x54","_x55","_updateUserFavoriteMembers","_callee43","_context43","_x56","_x57","_updateUserLatestUnits","_callee44","_context44","_x58","_x59","_destroyUser","_callee45","_context45","remove","defineProperty","_x60","_x61","resetAristsArrays","resetMemberPositions","parseUnits","parseMembers","parseArtists","parseDistributions","membersPositions","parsePositions","Set","sort","unitDict","year","memberDict","unitMembers","_key$split","_key$split2","position","api","spiralCase","string","utils","bem","block","modifiers","element","extras","hasBlock","hasModifiers","hasElement","hasExtras","classes","camelCase","word","capitalizeWord","separator","charAt","slice","ensureColorUniqueness","membersList","refactoredMembers","oldColor","getColorNumber","getMostImportantPosition","POSITIONS_IMPORTANT_ORDER","humanize","option","captalizeFirstLetter","insertAtCursor","valueToInsert","selectionStart","selectionEnd","startPos","endPos","makePositionsEditable","pos","parseBirthDate","d","date","month","day","parseQueryParams","params","pair","parseArrayToObject","Array","isArray","parseResponse","responseParser","obj","parseResponseToObject","spiralBirthdate","dateStr","spinalCaseWord","initializer","requestArtists","requestArtist","requestColors","requestMembers","requestSongs","requestUnit","requestUnitMembers","resyncDatabase","runLogin","runLogout","sendDistribution","sendLog","sendSong","updateCompleteArtist","test","apiSaga","delay","DELAY_DURATION","dbStart","loggedUser","actionType","_marked","sortedArtistList","sortBy","_marked2","selectedUnitId","indexOf","t1","call","_marked3","colorsList","_marked4","sortedMembersList","_context5","_marked5","songsList","sortedSongsList","_context6","_marked6","_response2","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","logoff","_marked11","receivedSong","_context12","_marked12","logType","_marked13","_marked14","receivedMembers","receivedArtist","receivedUnit","_marked15","_marked16","_marked17","_marked18","_marked19","_marked20","takeLatest","takeEvery","_marked21","clearPending","errorToast","successInline","successToast","warningToast","statusHandlingSaga","localPendingCache","status_handling_marked","status_handling_marked2","err","status_handling_marked3","status_handling_marked4","_ref4","status_handling_marked5","_ref5","status_handling_marked6","_ref6","status_handling_marked7","_ref7","warning","status_handling_marked8","status_handling_marked9","status_handling_marked10","rootSaga","fork","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","thunkMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ActiveSongWidget","inline","inlineClass","react_default","createElement","className","defaultProps","mapDispatchToProps","authOperations","withRouter","ActiveUnitWidget","showMembers","Collapsible","props","_this","possibleConstructorReturn","getPrototypeOf","collapse","bind","assertThisInitialized","enforceProperties","expand","togglePanel","nextProps","synced","collapsed","setState","_this$props","iconComponent","components_Icon","disabled","onClick","children","Component","ErrorModal","appOperations","FavoriteIcon","icons","alert","back-arrow","back-arrow-circle","check","chevron-down","chevron-left","chevron-right","chevron-up","clock","heart","heart-hollow","lock","no","plug","plug-available","plug-connected","question-mark","save","trash","youtube","Icon","styles","svg","display","verticalAlign","margin","fill","style","width","height","viewBox","ICONS","Loading","_ref$message","src","alt","LoadingIcon","MemberNationaltyFlag","flag","flagUrl","MemberPicture","fallback","failed","pictureUrl","colorNumber","profilePlaceholderCode","pictureFallback","onError","MemberPositions","sortedPositions","positionPriority","MAKNAE","iconBank","iconLeader","iconMainVocalist","iconMainRapper","iconMainDancer","iconLeadVocalist","iconLeadRapper","iconLeadDancer","iconVocalist","iconDancer","iconRapper","iconCenter","iconVisual","iconMaknae","positionName","MemberCard","favoriteState","showId","showReferenceArtist","member_MemberPicture","components_FavoriteIcon","MemberNationalityFlag","react","member_MemberPositions","memberID","PositionIcon","ALL","iconAll","NONE","iconNone","RequirementWrapper","authentication","activeArtist","ready","parseRequirements","_this2","requirements","requirement","components_Loading","Link","to","logo","SwitchToggle","labels","checked","left","right","onChange","Tabs","tabs","active","iconCondition","icon","objectWithoutProperties","tab","tabObj","isActive","showIcon","Typeahead","placeholder","suggestions","suggestion","ArtistsTable","favoriteAction","rowAction","filteredArtists","o","emptyTableMessage","colSpan","components_LoadingIcon","Artists","_this$props$artists","_this$props$distribut","handleTableClick","history","RequirementWrapperContainer","ActiveUnitWidgetContainer","ActiveSongWidgetContainer","components_ArtistsTable","REQUEST_ARTISTS","Switch","adminOperations","artistsOperations","ArtistsContainer","BiasPicture","biasPlaceholder","Units","prevProps","page","_this$props$props","_this$props$props$art","isUnitPending","REQUEST_UNIT","components_Tabs","artistRedirect","components_BiasPicture","components_MemberCard","Artist","memberColors","search","getMemberColors","isArtistPending","REQUEST_ARTIST","components_Units","distributeOperations","ArtistContainer","DistributeConnect","activeClass","percentage","percentageWidth","spanWidth","role","tabIndex","components_PositionIcon","partIndex","partKey","lineColors","_colors","background","fontStyle","mKey","Distribute","getMembers","components_Collapsible","components_DistributeConnect","DistributeContainer","Menu","pathname","authHideClass","adminHideClass","activeUnitHideClass","userPlaceholder","href","LoadingBar","App","components_Menu","components_LoadingBar","HeaderContainer","Header","Home","youtubeUrl","frameBorder","allowFullScreen","HomeContainer","Idols","order","favorite","_this$props$auth","REQUEST_MEMBERS","filteredMembers","evaluation","sortedMembers","orderBy","esm","updateFilters","autoComplete","initialValue","maxLength","entries","nationalitie","onlyFavorite","IdolsContainer","colorDict","keyNumber","Verse","verse","LyricsOutput_Line","Line","adlib","LyricsOutput_Bracket","LyricsOutput_Part","Part","bitStyle","getBitStyle","Bracket","omit","hasSingers","singers","hasSubSingers","subSingers","omitSub","hasChoirSingers","choirSingers","omitChoir","colorHexes","c","subColors","choirColors","LyricsOutput","colorsDB","col000000","LyricsOutput_Verse","COLOR_BANK","latestUnitId","lastSingers","lastColors","lastSubsingers","lastSubColors","lastChoirSingers","lastChoirColors","wasLastLineEmpty","lastLineHadSubSingers","lastLineHadChoirSings","uses","updateUses","addEntry","n","cleanUpPart","empty","parseLine","insideParentheses","insideCurly","names","currentString","lastCharacter","currentPart","parseLyrics","input","paragraphedResult","paragraphIndex","currentLine","Lyrics","REQUEST_COLORS","dist","cols","rows","components_LyricsOutput","LyricsContainer","ColorReferenceBar","isInUse","PropTypes","ManageArtist","validateTypeahead","isValid","defaultValues","_props$admin","manageLock","managePlus","components_Typeahead","isRequired","isValidName","scope","validateOnBlur","validate","required","ManageUnit","isValidDebutYear","getFullYear","ManageMembers","Manage","validArtist","validUnit","validMember","handleEditMemberAndState","resetAll","validateArtist","validateUnit","validateMembers","_this$props$admin","isSaveable","RESYNC_DATABASE","UPDATE_COMPLETE_ARTIST","components_ColorReferenceBar","components_ManageArtist","components_ManageUnit","components_ManageMembers","ManageContainer","SongsTable","filteredSongs","Songs","components_SongsTable","REQUEST_SONGS","SongsContainer","SyncStep1VideoId","loadYoutubeVideo","SyncStep2Info","addToOriginalArtistForm","min","SyncStep3Lyrics","document","getElementById","newEl","SyncStep4Buttons","addEventListener","pillColors","boxId","box","onMouseDown","onMouseUp","ICON_COLOR_CODE_HASH","8","12","20","26","SyncStep4Distributions","linesOn","SyncStep5Verify","currentTime","timestampsList","tsObj","SyncStep5Save","loadYT","animationInterval","Sync","onPlayerStateChange","setHeight","clientWidth","_this3","tag","firstScriptTag","getElementsByTagName","insertBefore","onYouTubeIframeAPIReady","YT","Player","youtubePlayerAnchor","events","onStateChange","_this4","_this$props$sync","components_SyncStep4Buttons","components_SyncStep5Save","SEND_SONG","components_SyncStep1VideoId","components_SyncStep2Info","components_SyncStep3Lyrics","SyncStep4Distribution","components_SyncStep5Verify","syncOperations","SyncContainer","ColorSheet","colorObj","NOOP","ComponentSheet","IconSheet","UIReference","tabContent","ComponentsSheet","components_IconSheet","components_ColorSheet","UIReferenceContainer","Lab","LearnMore","MyArtists","MyDistributions","Test","json","readOnly","tempOperations","Temp","routes","HashRouter","header","ErrorModalContainer","Route","component","exact","LabContainer","LearnMoreContainer","TempContainer","MyArtistsContainer","MyDistributionsContainer","ReactDOM","render","es","lib_default","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","URL","origin","fetch","headers","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.525b062a.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const RESET_ERROR = 'RESET_ERROR';\nconst SET_DATABASE_READY = 'SET_DATABASE_READY';\nconst SET_ERROR = 'SET_ERROR';\nconst SET_ERROR_INLINE = 'SET_ERROR_INLINE';\nconst SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\nconst SET_LOADING = 'SET_LOADING';\nconst SET_PENDING = 'SET_PENDING';\nconst SET_SUCCESS = 'SET_SUCCESS';\nconst SET_SUCCESS_INLINE = 'SET_SUCCESS_INLINE';\nconst SET_SUCCESS_MESSAGE = 'SET_SUCCESS_MESSAGE';\n\nexport default {\n  RESET_ERROR,\n  SET_DATABASE_READY,\n  SET_ERROR,\n  SET_ERROR_INLINE,\n  SET_ERROR_MESSAGE,\n  SET_LOADING,\n  SET_PENDING,\n  SET_SUCCESS,\n  SET_SUCCESS_INLINE,\n  SET_SUCCESS_MESSAGE,\n};\n","import types from './types';\n\nconst initialState = {\n  databaseReady: false,\n  error: false,\n  errorInline: false,\n  errorMessage: '',\n  pending: {},\n  loading: false,\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_ERROR:\n      newState.error = false;\n      newState.errorInline = false;\n      newState.errorMessage = '';\n      break;\n\n    case types.SET_DATABASE_READY:\n      newState.databaseReady = action.payload;\n      break;\n\n    case types.SET_ERROR:\n      newState.error = action.payload;\n      break;\n\n    case types.SET_ERROR_INLINE:\n      newState.errorInline = action.payload;\n      break;\n\n    case types.SET_ERROR_MESSAGE:\n      newState.errorMessage = action.payload;\n      break;\n\n    case types.SET_PENDING:\n      newState.pending = action.payload;\n      break;\n\n    case types.SET_SUCCESS:\n      newState.success = action.payload;\n      break;\n\n    case types.SET_LOADING:\n      newState.loading = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetError = payload => dispatch =>\n  dispatch({ type: types.RESET_ERROR, payload });\nconst setDatabaseReady = payload => dispatch =>\n  dispatch({ type: types.SET_DATABASE_READY, payload });\nconst setLoading = payload => dispatch =>\n  dispatch({ type: types.SET_LOADING, payload });\n\nexport default {\n  resetError,\n  setDatabaseReady,\n  setLoading,\n};\n","import actions from './actions';\n\nconst init = () => dispatch => dispatch({ type: 'INITIALIZER' });\n\nconst setLoading = (value, instance) => dispatch => {\n  // TO-DO: Delete this when no internal operation is using this function\n};\n\nconst handleCloseErrorModal = () => dispatch => {\n  dispatch(actions.resetError());\n};\nconst handleSendBugReport = () => (dispatch, getState) => {\n  const { errorMessage } = getState().app;\n  const today = Date.now();\n\n  const body = {\n    type: 'error',\n    timestamp: today,\n    content: errorMessage,\n  };\n\n  dispatch({ type: 'SEND_LOG', body });\n  dispatch(actions.resetError());\n};\n\nexport default {\n  init,\n  handleCloseErrorModal,\n  handleSendBugReport,\n  setLoading,\n};\n","import appReducer from './reducers';\n\nexport { default as appOperations } from './operations';\nexport { default as appTypes } from './types';\nexport default appReducer;\n","const SET_ARTISTS = 'SET_ARTISTS';\nconst SET_ARTISTS_TYPEAHEAD = 'SET_ARTISTS_TYPEAHEAD';\nconst SET_ARTISTS_TYPEAHEAD_DICT = 'SET_ARTISTS_TYPEAHEAD_DICT';\nconst SET_COLORS = 'SET_COLORS';\nconst SET_COLORS_IN_USE = 'SET_COLORS_IN_USE';\nconst SET_CREATE_SUCCESS = 'SET_CREATE_SUCCESS';\nconst SET_EDITING_ARTIST = 'SET_EDITING_ARTIST';\nconst SET_EDITING_MEMBERS = 'SET_EDITING_MEMBERS';\nconst SET_EDITING_UNIT = 'SET_EDITING_UNIT';\nconst SET_MANAGE_RESULT = 'SET_MANAGE_RESULT';\nconst SET_MEMBERS = 'SET_MEMBERS';\nconst SET_MEMBERS_TYPEAHEAD = 'SET_MEMBERS_TYPEAHEAD';\nconst SET_MEMBERS_TYPEAHEAD_DICT = 'SET_MEMBERS_TYPEAHEAD_DICT';\nconst SET_PANELS = 'SET_PANELS';\nconst SET_SONGS = 'SET_SONGS';\nconst SET_SONG_SEARCH_QUERY = 'SET_SONG_SEARCH_QUERY';\nconst SET_UI_REFERENCE_TAB = 'SET_UI_REFERENCE_TAB';\nconst SET_UNITS_TYPEAHEAD = 'SET_UNITS_TYPEAHEAD';\nconst SET_UNITS_TYPEAHEAD_DICT = 'SET_UNITS_TYPEAHEAD_DICT';\n\nexport default {\n  SET_ARTISTS,\n  SET_ARTISTS_TYPEAHEAD,\n  SET_ARTISTS_TYPEAHEAD_DICT,\n  SET_COLORS,\n  SET_COLORS_IN_USE,\n  SET_CREATE_SUCCESS,\n  SET_EDITING_ARTIST,\n  SET_EDITING_MEMBERS,\n  SET_EDITING_UNIT,\n  SET_MANAGE_RESULT,\n  SET_MEMBERS,\n  SET_MEMBERS_TYPEAHEAD,\n  SET_MEMBERS_TYPEAHEAD_DICT,\n  SET_PANELS,\n  SET_SONGS,\n  SET_SONG_SEARCH_QUERY,\n  SET_UI_REFERENCE_TAB,\n  SET_UNITS_TYPEAHEAD,\n  SET_UNITS_TYPEAHEAD_DICT,\n};\n","import types from './types';\n\nconst initialState = {\n  artists: [],\n  artistsTypeahead: [],\n  artistsTypeaheadDict: {},\n  colors: {},\n  colorsInUse: {},\n  editingArtist: {},\n  editingMembers: [],\n  editingUnit: {},\n  manageResult: null,\n  members: [],\n  membersTypeahead: [],\n  panels: {\n    artist: 'open',\n    unit: 'locked',\n    members: 'locked',\n  },\n  songs: [],\n  songSearchQuery: '',\n  uiReferenceTab: null,\n  unitsTypeahead: [],\n  unitsTypeaheadDict: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ARTISTS:\n      newState.artists = action.payload;\n      break;\n\n    case types.SET_ARTISTS_TYPEAHEAD:\n      newState.artistsTypeahead = action.payload;\n      break;\n\n    case types.SET_ARTISTS_TYPEAHEAD_DICT:\n      newState.artistsTypeaheadDict = action.payload;\n      break;\n\n    case types.SET_COLORS:\n      newState.colors = action.payload;\n      break;\n\n    case types.SET_COLORS_IN_USE:\n      newState.colorsInUse = action.payload;\n      break;\n\n    case types.SET_EDITING_ARTIST:\n      newState.editingArtist = action.payload;\n      break;\n\n    case types.SET_EDITING_MEMBERS:\n      newState.editingMembers = action.payload;\n      break;\n\n    case types.SET_EDITING_UNIT:\n      newState.editingUnit = action.payload;\n      break;\n\n    case types.SET_MANAGE_RESULT:\n      newState.manageResult = action.payload;\n      break;\n\n    case types.SET_MEMBERS:\n      newState.members = action.payload;\n      break;\n\n    case types.SET_MEMBERS_TYPEAHEAD:\n      newState.membersTypeahead = action.payload;\n      break;\n\n    case types.SET_MEMBERS_TYPEAHEAD_DICT:\n      newState.membersTypeaheadDict = action.payload;\n      break;\n\n    case types.SET_PANELS:\n      newState.panels = action.payload;\n      break;\n\n    case types.SET_SONGS:\n      newState.songs = action.payload;\n      break;\n\n    case types.SET_SONG_SEARCH_QUERY:\n      newState.songSearchQuery = action.payload;\n      break;\n\n    case types.SET_UI_REFERENCE_TAB:\n      newState.uiReferenceTab = action.payload;\n      break;\n\n    case types.SET_UNITS_TYPEAHEAD:\n      newState.unitsTypeahead = action.payload;\n      break;\n\n    case types.SET_UNITS_TYPEAHEAD_DICT:\n      newState.unitsTypeaheadDict = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","const COLORS = {\n  col000001: 'red',\n  col000002: 'blood',\n  col000003: 'coral',\n  col000004: 'peach',\n  col000005: 'brown',\n  col000006: 'orange',\n  col000007: 'gold',\n  col000008: 'yellow',\n  col000009: 'olive',\n  col000010: 'lemon',\n  col000011: 'lime',\n  col000012: 'green',\n  col000013: 'basil',\n  col000014: 'forest',\n  col000015: 'jade',\n  col000016: 'teal',\n  col000017: 'cyan',\n  col000018: 'turquoise',\n  col000019: 'navy',\n  col000020: 'blue',\n  col000021: 'sky',\n  col000022: 'purple',\n  col000023: 'violet',\n  col000024: 'rose',\n  col000025: 'mauve',\n  col000026: 'magenta',\n  col000027: 'jam',\n  col000028: 'pink',\n  col000029: 'burgundy',\n  col000030: 'salmon',\n};\n\nconst DEFAULT_COLORS = {\n  default: '#000000',\n  black: '#000000',\n  blue: '#598ffd',\n  gray: '#707070',\n  green: '#49d156',\n  orange: '#fea245',\n  pink: '#fb9cf0',\n  purple: '#9e8ef0',\n  red: '#d14949',\n  teal: '#34ac9e',\n  white: 'FFFFFF',\n  yellow: '#ffd700',\n};\n\nconst FLAGS_LIST = {\n  AMERICAN: 'usa',\n  BRAZILIAN: 'brazil',\n  CANADIAN: 'canada',\n  CHINESE: 'china',\n  JAPANESE: 'japan',\n  KOREAN: 'korea',\n  TAIWANESE: 'taiwan',\n  THAI: 'thailand',\n  VIETNAMISE: 'vietnamise',\n};\n\nconst GENDERS = {\n  FEMALE: 'Female',\n  MALE: 'Male',\n  UNKOWN: 'Unknown',\n};\n\nconst GENRES = {\n  CPOP: 'C-Pop',\n  JPOP: 'J-Pop',\n  KPOP: 'K-Pop',\n  OTHER: 'Other',\n  POP: 'Pop',\n};\n\nconst GENRES_DB = {\n  'C-Pop': 'CPOP',\n  'J-Pop': 'JPOP',\n  'K-Pop': 'KPOP',\n  Other: 'OTHER',\n  Pop: 'POP',\n};\n\nconst POSITIONS_LIST = [\n  'MAIN_VOCALIST',\n  'MAIN_RAPPER',\n  'MAIN_DANCER',\n  'LEAD_VOCALIST',\n  'LEAD_RAPPER',\n  'LEAD_DANCER',\n  'VOCALIST',\n  'RAPPER',\n  'DANCER',\n  'LEADER',\n  'CENTER',\n  'VISUAL',\n];\n\nconst POSITIONS_LIST_OBJ = {\n  MAIN_VOCALIST: 'Main Vocalist',\n  LEAD_VOCALIST: 'Lead Vocalist',\n  VOCALIST: 'Vocalist',\n  MAIN_RAPPER: 'Main Rapper',\n  LEAD_RAPPER: 'Lead Rapper',\n  RAPPER: 'Rapper',\n  MAIN_DANCER: 'Main Dancer',\n  LEAD_DANCER: 'Lead Dancer',\n  DANCER: 'Dancer',\n  LEADER: 'Leader',\n  CENTER: 'Center',\n  VISUAL: 'Visual',\n};\n\nconst NATIONALITIES = {\n  AMERICAN: 'American',\n  BRAZILIAN: 'Brazilian',\n  BRITISH: 'British',\n  CANADIAN: 'Canadian',\n  CHINESE: 'Chinese',\n  JAPANESE: 'Japanese',\n  KOREAN: 'Korean',\n  OTHER: 'Other',\n  TAIWANESE: 'Taiwanese',\n  THAI: 'Thai',\n  VIETNAMISE: 'Vietnamise',\n};\n\nconst NATIONALITY_FLAG_URL = '/images/flags/';\n\nconst PROFILE_PICTURE_URL = '/images/profiles/';\n\nconst SYNC_KEY_LIST = {\n  1: true,\n  2: true,\n  3: true,\n  4: true,\n  5: true,\n};\n\nconst SYNC_KEY_COLOR_LIST = {\n  1: '1',\n  2: '8',\n  3: '12',\n  4: '20',\n  5: '26',\n};\n\nconst YOUTUBE_URLS = ['cudssvDuOpc'];\n\nexport default {\n  COLORS,\n  DEFAULT_COLORS,\n  FLAGS_LIST,\n  GENDERS,\n  GENRES,\n  GENRES_DB,\n  POSITIONS_LIST,\n  POSITIONS_LIST_OBJ,\n  NATIONALITIES,\n  NATIONALITY_FLAG_URL,\n  PROFILE_PICTURE_URL,\n  SYNC_KEY_LIST,\n  SYNC_KEY_COLOR_LIST,\n  YOUTUBE_URLS,\n};\n","import types from './types';\n\nconst setColors = payload => dispatch =>\n  dispatch({ type: types.SET_COLORS, payload });\nconst setColorsInUse = payload => dispatch =>\n  dispatch({ type: types.SET_COLORS_IN_USE, payload });\nconst setEditingArtist = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_ARTIST, payload });\nconst setEditingMembers = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_MEMBERS, payload });\nconst setEditingUnit = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_UNIT, payload });\nconst setManageResult = payload => dispatch =>\n  dispatch({ type: types.SET_MANAGE_RESULT, payload });\nconst setPanels = payload => dispatch =>\n  dispatch({ type: types.SET_PANELS, payload });\nconst setSongs = payload => dispatch =>\n  dispatch({ type: types.SET_SONGS, payload });\nconst setSongSearchQuery = payload => dispatch =>\n  dispatch({ type: types.SET_SONG_SEARCH_QUERY, payload });\nconst setUIReferenceTab = payload => dispatch =>\n  dispatch({ type: types.SET_UI_REFERENCE_TAB, payload });\nconst setUnitsTypeahead = payload => dispatch =>\n  dispatch({ type: types.SET_UNITS_TYPEAHEAD, payload });\nconst setUnitsTypeaheadDict = payload => dispatch =>\n  dispatch({ type: types.SET_UNITS_TYPEAHEAD_DICT, payload });\n\nexport default {\n  setColors,\n  setColorsInUse,\n  setEditingArtist,\n  setEditingMembers,\n  setEditingUnit,\n  setManageResult,\n  setPanels,\n  setSongs,\n  setSongSearchQuery,\n  setUIReferenceTab,\n  setUnitsTypeahead,\n  setUnitsTypeaheadDict,\n};\n","import _ from 'lodash';\n\nimport constants from '../../utils/constants';\n\nimport actions from './actions';\n\nconst loadArtists = () => dispatch => dispatch({ type: 'REQUEST_ARTISTS' });\n\nconst loadColors = () => dispatch => dispatch({ type: 'REQUEST_COLORS' });\n\nconst loadMembers = () => dispatch => dispatch({ type: 'REQUEST_MEMBERS' });\n\nconst loadSongs = () => dispatch => dispatch({ type: 'REQUEST_SONGS' });\n\nconst switchUIReferenceTab = event => async dispatch => {\n  const { id } = event.target;\n\n  if (!id) return null;\n\n  return dispatch(actions.setUIReferenceTab(id));\n};\n\nconst handleResyncDB = () => dispatch => dispatch({ type: 'RESYNC_DATABASE' });\n\nconst handleEditArtist = artistId => (dispatch, getState) => {\n  const panels = { ...getState().admin.panels };\n\n  panels.artist = 'edit';\n\n  if (artistId) {\n    dispatch({ type: 'REQUEST_ARTIST', artistId, panels, state: 'edit' });\n  } else {\n    dispatch(actions.setEditingArtist({ new: true }));\n    dispatch(actions.setPanels(panels));\n  }\n};\n\nconst handleEditUnit = unitId => (dispatch, getState) => {\n  const panels = { ...getState().admin.panels };\n\n  panels.unit = 'edit';\n\n  if (unitId) {\n    const units = [...getState().admin.editingArtist.units];\n    const unitIndex = _.findIndex(units, u => u.id === unitId);\n    const currentUnit = units[unitIndex];\n\n    dispatch(actions.setEditingUnit(currentUnit));\n  } else {\n    dispatch(actions.setEditingUnit({ new: true }));\n  }\n\n  dispatch(actions.setPanels(panels));\n};\n\nconst handleEditMember = (memberId, formState) => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  if (memberId) {\n    const { members } = getState().admin;\n    const memberIndex = _.findIndex(members, m => m.id === memberId);\n    const addedMember = { ...members[memberIndex] };\n    editingMembers.push(addedMember);\n    dispatch(actions.setEditingMembers(editingMembers));\n\n    // Also update colors in use\n    const colorsInUse = {};\n    editingMembers.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n    dispatch(actions.setColorsInUse(colorsInUse));\n  } else {\n    let lastMember = editingMembers[editingMembers.length - 1] || false;\n    if (lastMember && formState.values.members) {\n      lastMember =\n        formState.values.members[formState.values.members.length - 1];\n    }\n\n    editingMembers.push({\n      new: true,\n      positions: [],\n      gender: lastMember.gender || undefined,\n      nationality: lastMember.nationality || undefined,\n    });\n    dispatch(actions.setEditingMembers(editingMembers));\n  }\n};\n\nconst updateMemberColor = (value, index) => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  editingMembers[index].colorId = value;\n  dispatch(actions.setEditingMembers(editingMembers));\n\n  // Also update colors in use\n  const colorsInUse = {};\n  editingMembers.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n  dispatch(actions.setColorsInUse(colorsInUse));\n};\n\nconst updateMemberPositions = () => {};\n\n// const updateMemberPositions = (value, position, index) => (\n//   dispatch,\n//   getState\n// ) => {\n//   const editingMembers = [...getState().admin.editingMembers];\n//   const positionsObj = {};\n//   editingMembers[index].positions.forEach(pos => (positionsObj[pos] = true));\n//   if (value === false) {\n//     delete positionsObj[position];\n//   } else {\n//     positionsObj[position] = true;\n//     switch (position) {\n//       case 'MAIN_VOCALIST':\n//         delete positionsObj.LEAD_VOCALIST;\n//         delete positionsObj.VOCALIST;\n//         break;\n//       case 'LEAD_VOCALIST':\n//         delete positionsObj.MAIN_VOCALIST;\n//         delete positionsObj.VOCALIST;\n//         break;\n//       case 'VOCALIST':\n//         delete positionsObj.MAIN_VOCALIST;\n//         delete positionsObj.LEAD_VOCALIST;\n//         break;\n//       case 'MAIN_DANCER':\n//         delete positionsObj.LEAD_DANCER;\n//         delete positionsObj.DANCER;\n//         break;\n//       case 'LEAD_DANCER':\n//         delete positionsObj.MAIN_DANCER;\n//         delete positionsObj.DANCER;\n//         break;\n//       case 'DANCER':\n//         delete positionsObj.MAIN_DANCER;\n//         delete positionsObj.LEAD_DANCER;\n//         break;\n//       case 'MAIN_RAPPER':\n//         delete positionsObj.LEAD_RAPPER;\n//         delete positionsObj.RAPPER;\n//         break;\n//       case 'LEAD_RAPPER':\n//         delete positionsObj.MAIN_RAPPER;\n//         delete positionsObj.RAPPER;\n//         break;\n//       case 'RAPPER':\n//         delete positionsObj.MAIN_RAPPER;\n//         delete positionsObj.LEAD_RAPPER;\n//         break;\n//       default:\n//       // do nothing\n//     }\n//   }\n//   editingMembers[index].positions = Object.keys(positionsObj);\n//   dispatch(actions.setEditingMembers(editingMembers));\n// };\n\nconst updateManageForm = () => () => {\n  // // console.log(formObj);\n  // if (formObj.dirty) {\n  //   // console.log('DIRTY');\n  //   // console.log(formObj);\n  // } else {\n  //   // console.log('CLEAN');\n  // }\n};\n\nconst unlockUnit = formState => (dispatch, getState) => {\n  const artistState = formState.values.artist;\n\n  // Only unlock if required fields are filled.\n  if (!artistState || !artistState.name || !artistState.genre) return;\n\n  const panels = { ...getState().admin.panels };\n  panels.unit = 'open';\n\n  const editingArtistState = getState().admin.editingArtist;\n  const editingArtist = {\n    genre: artistState.genre,\n    name: artistState.name,\n    otherNames: artistState.otherNames || '',\n    private: artistState.private || false,\n    new: editingArtistState.new || false,\n    memberIds: editingArtistState.memberIds || false,\n    memberList: editingArtistState.memberList || false,\n    units: editingArtistState.units || false,\n    id: editingArtistState.id,\n    createdBy: editingArtistState.createdBy,\n  };\n\n  dispatch(actions.setEditingArtist(editingArtist));\n  dispatch(actions.setPanels(panels));\n};\n\nconst unlockMembers = formState => (dispatch, getState) => {\n  const unitState = formState.values.unit;\n\n  // Only unlock if required fields are filled.\n  if (!unitState || !unitState.name || !unitState.debutYear) return;\n\n  const panels = { ...getState().admin.panels };\n  panels.members = 'open';\n\n  const editingUnitState = getState().admin.editingUnit;\n  const editingUnit = {\n    debutYear: unitState.debutYear,\n    name: unitState.name,\n    official: unitState.official,\n    private: unitState.private || false,\n    new: editingUnitState.new || false,\n    averages: editingUnitState.averages || false,\n    distributions: editingUnitState.distributions || false,\n    distributions_legacy: editingUnitState.distributions_legacy || false,\n    members: editingUnitState.members || false,\n    id: editingUnitState.id,\n    createdBy: editingUnitState.createdBy,\n  };\n\n  dispatch(actions.setEditingUnit(editingUnit));\n  dispatch({\n    type: 'REQUEST_UNIT_MEMBERS',\n    unitId: editingUnitState.id,\n    panels,\n  });\n};\n\nconst removeMember = index => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  // editingMembers.splice(index, 1);\n  editingMembers[index] = null;\n  dispatch(actions.setEditingMembers(editingMembers));\n};\n\nconst resetManage = () => dispatch => {\n  dispatch(actions.setEditingArtist({}));\n  dispatch(actions.setEditingMembers([]));\n  dispatch(actions.setEditingUnit({}));\n  dispatch(actions.setUnitsTypeahead([]));\n  dispatch(actions.setUnitsTypeaheadDict({}));\n  dispatch(actions.setManageResult(null));\n  dispatch(actions.setColorsInUse({}));\n  dispatch(\n    actions.setPanels({\n      artist: 'open',\n      unit: 'locked',\n      members: 'locked',\n    })\n  );\n};\n\nconst saveManage = formState => async (dispatch, getState) => {\n  const artistState = formState.values.artist;\n  const unitState = formState.values.unit;\n  const membersState = formState.values.members;\n\n  // Check formState\n  if (Object.keys(formState.errors).length) return;\n\n  // Check artist required fields\n  if (!artistState || !artistState.name || !artistState.genre) return;\n\n  // Check unit required fields\n  if (!unitState || !unitState.name || !unitState.debutYear) return;\n\n  if (!membersState || membersState.length < 2) return;\n\n  // Check members required fields\n  let missingField = false;\n  membersState.forEach(member => {\n    if (\n      !member.name ||\n      !member.birthdate ||\n      !member.colorId ||\n      !member.gender ||\n      !member.nationality\n    ) {\n      missingField = true;\n    }\n    const hasPositions = Object.keys(member).some(\n      m => constants.POSITIONS_LIST_OBJ[m]\n    );\n    if (!hasPositions) missingField = true;\n  });\n  if (missingField) return;\n\n  // Prepare Artist\n  const editingArtistState = getState().admin.editingArtist;\n  const editingArtist = {\n    genre: artistState.genre,\n    name: artistState.name,\n    otherNames: artistState.otherNames || '',\n    private: artistState.private || false,\n    new: editingArtistState.new || false,\n    memberIds: editingArtistState.memberIds || [],\n    memberList: editingArtistState.memberList || [],\n    units: editingArtistState.units\n      ? editingArtistState.units.map(unit => unit.id)\n      : [],\n    id: editingArtistState.id || null,\n    createdBy: editingArtistState.createdBy || null,\n  };\n\n  // Prepare Unit\n  const editingUnitState = getState().admin.editingUnit;\n  const editingUnit = {\n    debutYear: unitState.debutYear,\n    name: unitState.name,\n    official: unitState.official,\n    private: unitState.private || false,\n    new: editingUnitState.new || false,\n    averages: editingUnitState.averages || false,\n    distributions: editingUnitState.distributions || false,\n    distributions_legacy: editingUnitState.distributions_legacy || false,\n    artistId: editingUnitState.id || null,\n    id: editingUnitState.id || null,\n    createdBy: editingUnitState.createdBy || null,\n  };\n\n  // Prepare Members\n  const editingMembersState = getState().admin.editingMembers;\n  const editingMembers = [];\n  membersState.forEach((memberState, index) => {\n    if (memberState) {\n      const newMember = {\n        birthdate: +memberState.birthdate.replace(/(-)/g, ''),\n        colorId: memberState.colorId,\n        gender: memberState.gender,\n        initials: memberState.initials || '',\n        name: memberState.name,\n        nationality: memberState.nationality,\n        private: memberState.private || false,\n      };\n      // Handle existing database member\n      if (editingMembersState[index].id) {\n        newMember.altColorId = editingMembersState[index].altColorId || null;\n        newMember.createdBy = editingMembersState[index].createdBy || null;\n        newMember.id = editingMembersState[index].id || null;\n        newMember.referenceArtist =\n          editingMembersState[index].referenceArtist || null;\n      }\n      // Handle positions\n      const positions = [];\n      Object.keys(memberState).forEach(key => {\n        if (constants.POSITIONS_LIST.includes(key)) positions.push(key);\n      });\n      newMember.positions = positions;\n\n      editingMembers.push(newMember);\n    }\n  });\n\n  dispatch({\n    type: 'UPDATE_COMPLETE_ARTIST',\n    artist: editingArtist,\n    unit: editingUnit,\n    members: editingMembers,\n  });\n};\n\nconst resetSongSearchQuery = () => dispatch =>\n  dispatch(actions.setSongSearchQuery(''));\n\nconst updateSongSearchQuery = value => dispatch =>\n  dispatch(actions.setSongSearchQuery(value));\n\nexport default {\n  handleEditArtist,\n  handleEditMember,\n  handleEditUnit,\n  handleResyncDB,\n  loadArtists,\n  loadColors,\n  loadMembers,\n  loadSongs,\n  removeMember,\n  resetManage,\n  resetSongSearchQuery,\n  saveManage,\n  switchUIReferenceTab,\n  unlockUnit,\n  unlockMembers,\n  updateManageForm,\n  updateMemberColor,\n  updateMemberPositions,\n  updateSongSearchQuery,\n};\n","import adminReducer from './reducers';\n\nexport { default as adminOperations } from './operations';\nexport { default as adminTypes } from './types';\nexport default adminReducer;\n","const SET_ARTIST_LIST = 'SET_ARTIST_LIST';\nconst SET_ARTIST_PAGE_TAB = 'SET_ARTIST_PAGE_TAB';\nconst SET_BIAS = 'SET_BIAS';\nconst SET_SEARCH_QUERY = 'SET_SEARCH_QUERY';\nconst SET_SELECTED_ARTIST = 'SET_SELECTED_ARTIST';\nconst SET_SELECTED_UNIT = 'SET_SELECTED_UNIT';\nconst SET_SHOW_FAVORITE_ARTISTS_ONLY = 'SET_SHOW_FAVORITE_ARTISTS_ONLY';\n\nexport default {\n  SET_ARTIST_LIST,\n  SET_ARTIST_PAGE_TAB,\n  SET_BIAS,\n  SET_SEARCH_QUERY,\n  SET_SELECTED_ARTIST,\n  SET_SELECTED_UNIT,\n  SET_SHOW_FAVORITE_ARTISTS_ONLY,\n};\n","import types from './types';\n\nconst initialState = {\n  artistList: [],\n  artistPageTab: '',\n  bias: {},\n  searchQuery: '',\n  selectedArtist: {},\n  selectedUnit: {},\n  showFavoriteArtistsOnly: false,\n  userFavoriteArtists: {},\n  userLatestArtists: [],\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ARTIST_LIST:\n      newState.artistList = action.payload;\n      break;\n\n    case types.SET_ARTIST_PAGE_TAB:\n      newState.artistPageTab = action.payload;\n      break;\n\n    case types.SET_BIAS:\n      newState.bias = action.payload;\n      break;\n\n    case types.SET_SEARCH_QUERY:\n      newState.searchQuery = action.payload;\n      break;\n\n    case types.SET_SELECTED_ARTIST:\n      newState.selectedArtist = action.payload;\n      break;\n\n    case types.SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      break;\n\n    case types.SET_SHOW_FAVORITE_ARTISTS_ONLY:\n      newState.showFavoriteArtistsOnly = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setArtistList = payload => dispatch =>\n  dispatch({ type: types.SET_ARTIST_LIST, payload });\nconst setArtistPageTab = payload => dispatch =>\n  dispatch({ type: types.SET_ARTIST_PAGE_TAB, payload });\nconst setBias = payload => dispatch =>\n  dispatch({ type: types.SET_BIAS, payload });\nconst setSearchQuery = payload => dispatch =>\n  dispatch({ type: types.SET_SEARCH_QUERY, payload });\nconst setSelectedArtist = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_ARTIST, payload });\nconst setSelectedUnit = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_UNIT, payload });\nconst setShowFavoriteArtistsOnly = payload => dispatch =>\n  dispatch({ type: types.SET_SHOW_FAVORITE_ARTISTS_ONLY, payload });\n\nexport default {\n  setArtistList,\n  setArtistPageTab,\n  setBias,\n  setSearchQuery,\n  setSelectedArtist,\n  setSelectedUnit,\n  setShowFavoriteArtistsOnly,\n};\n","import actions from './actions';\n\nconst loadArtist = (artistId, queryParams) => dispatch =>\n  dispatch({ type: 'REQUEST_ARTIST', artistId, queryParams });\n\nconst loadUserArtists = () => async (dispatch, getState) => {};\n\nconst findUnitIndex = (units, unitId) => units.findIndex(u => u.id === unitId);\n\nconst updateSearchQuery = value => dispatch => {\n  if (value === '' || value.length > 2) {\n    dispatch(actions.setSearchQuery(value.toLowerCase()));\n  }\n};\n\nconst showFavoriteArtistsOnlyToggle = () => (dispatch, getState) => {\n  const { showFavoriteArtistsOnly } = getState().artists;\n  dispatch(actions.setShowFavoriteArtistsOnly(!showFavoriteArtistsOnly));\n};\n\nconst updateLatestUnits = id => async (dispatch, getState) => {};\n\nconst switchArtistPageTab = event => async (dispatch, getState) => {\n  let { id } = event.target;\n\n  // When clicking on the tab icon, the id is lost\n  if (!id) {\n    id = event.target.parentNode.parentNode.id; // eslint-disable-line\n  }\n  if (!id) return null;\n\n  dispatch(actions.setArtistPageTab(id));\n\n  const selectedArtist = { ...getState().artists.selectedArtist };\n  const unitIndex = findUnitIndex(selectedArtist.units, id);\n  const currentUnit = selectedArtist.units[unitIndex];\n\n  // If unit has the complete flag, use it, else request a new complete one\n  if (currentUnit.complete) {\n    dispatch(actions.setSelectedUnit(currentUnit));\n  } else {\n    await dispatch({\n      type: 'REQUEST_UNIT',\n      unitId: id,\n      selectedArtist,\n      unitIndex,\n    });\n  }\n};\n\nconst getBias = () => (dispatch, getState) => {\n  const { biases } = getState().auth.user;\n  const { selectedUnit } = getState().artists;\n  const { id, members } = selectedUnit;\n  let bias = null;\n  if (id && Object.keys(members).length) {\n    Object.keys(members).forEach(key => {\n      if (biases[`${id}:${key}`]) {\n        bias = { ...selectedUnit.members[key] };\n      }\n    });\n  }\n\n  if (bias) {\n    dispatch(actions.setBias(bias));\n  } else {\n    dispatch(actions.setBias({}));\n  }\n};\n\nexport default {\n  getBias,\n  loadUserArtists,\n  loadArtist,\n  updateSearchQuery,\n  updateLatestUnits,\n  showFavoriteArtistsOnlyToggle,\n  switchArtistPageTab,\n};\n","import artistsReducer from './reducers';\n\nexport { default as artistsOperations } from './operations';\nexport { default as artistsTypes } from './types';\nexport default artistsReducer;\n","const SET_ADMIN = 'SET_ADMIN';\nconst SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nconst SET_BIASES = 'SET_BIASES';\nconst SET_USER = 'SET_USER';\n\nexport default {\n  SET_ADMIN,\n  SET_AUTHENTICATED,\n  SET_BIASES,\n  SET_USER,\n};\n","import types from './types';\n\nconst initialState = {\n  isAuthenticated: false,\n  isAdmin: false,\n  user: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ADMIN:\n      newState.isAdmin = action.payload;\n      break;\n\n    case types.SET_AUTHENTICATED:\n      newState.isAuthenticated = action.payload;\n      break;\n\n    case types.SET_BIASES:\n      newState.user.biases = action.payload;\n      break;\n\n    case types.SET_USER:\n      newState.user = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setAdmin = payload => dispatch =>\n  dispatch({ type: types.SET_ADMIN, payload });\nconst setAuthenticated = payload => dispatch =>\n  dispatch({ type: types.SET_AUTHENTICATED, payload });\nconst setUser = payload => dispatch =>\n  dispatch({ type: types.SET_USER, payload });\n\nexport default {\n  setAdmin,\n  setAuthenticated,\n  setUser,\n};\n","import actions from './actions';\n\nconst login = () => dispatch => dispatch({ type: 'RUN_LOGIN' });\n\nconst logout = () => dispatch => dispatch({ type: 'RUN_LOGOUT' });\n\nconst updateFavoriteArtists = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteArtists = { ...user.favoriteArtists } || {};\n  if (user.id) {\n    if (userFavoriteArtists[id]) {\n      userFavoriteArtists[id] = false;\n    } else {\n      userFavoriteArtists[id] = true;\n    }\n\n    await dispatch({\n      type: 'UPDATE_USER_FAVORITE_ARTISTS',\n      userFavoriteArtists,\n      userId: user.id,\n    });\n\n    user.favoriteArtists = userFavoriteArtists;\n    dispatch(actions.setUser(user));\n  }\n};\n\nconst updateFavoriteMembers = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteMembers = { ...user.favoriteMembers } || {};\n  if (user.id) {\n    if (userFavoriteMembers[id]) {\n      userFavoriteMembers[id] = false;\n    } else {\n      userFavoriteMembers[id] = true;\n    }\n\n    await dispatch({\n      type: 'UPDATE_USER_FAVORITE_MEMBERS',\n      userFavoriteMembers,\n      userId: user.id,\n    });\n\n    user.favoriteMembers = userFavoriteMembers;\n    dispatch(actions.setUser(user));\n  }\n};\n\nconst updateBias = event => async (dispatch, getState) => {\n  const { value } = event.target;\n  const { id, members } = getState().artists.selectedUnit;\n\n  if (value && id && members && members[value]) {\n    const user = { ...getState().auth.user };\n    const biases = { ...user.biases } || {};\n\n    const biasId = `${id}:${value}`;\n\n    // Stop if member is already the bias\n    if (biases[biasId]) return;\n\n    // Remove any biases within this unit\n    Object.keys(members).forEach(key => {\n      const currentBias = `${id}:${key}`;\n      if (biases[currentBias]) {\n        delete biases[`${id}:${key}`];\n      }\n    });\n\n    biases[biasId] = true;\n\n    const bias = { ...members[value] };\n\n    await dispatch({\n      type: 'UPDATE_USER_BIASES',\n      bias,\n      biases,\n      userId: user.id,\n    });\n  }\n};\n\nexport default {\n  login,\n  logout,\n  updateBias,\n  updateFavoriteArtists,\n  updateFavoriteMembers,\n};\n","import authReducer from './reducers';\n\nexport { default as authOperations } from './operations';\nexport { default as authTypes } from './types';\nexport default authReducer;\n","const SET_ACTIVE_MEMBER_PILL = 'SET_ACTIVE_MEMBER_PILL';\nconst SET_ACTIVE_SONG = 'SET_ACTIVE_SONG';\nconst SET_ACTIVE_UNIT = 'SET_ACTIVE_UNIT';\nconst SET_DISTRIBUTION_LINES = 'SET_DISTRIBUTION_LINES';\nconst SET_RATES = 'SET_RATES';\n\nexport default {\n  SET_ACTIVE_MEMBER_PILL,\n  SET_ACTIVE_SONG,\n  SET_ACTIVE_UNIT,\n  SET_DISTRIBUTION_LINES,\n  SET_RATES,\n};\n","import types from './types';\n\nconst initialState = {\n  activeMemberPill: '',\n  activeSong: {},\n  activeUnit: {},\n  // activeSong: {\n  //   id: '-L_4OOhzdx5L1qgyuyoU',\n  //   album: 'The Story Begins',\n  //   createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   distribution:\n  //     '[1:13.31:3.09] modu nareul gajigo maeil gaman an dujo\\n[2:16.51:1.6]  naega neomu yeppeujo\\n[3:18.23:1.67]  na ttaemune da himdeuljo\\n[4:19.95:3.23]  eodil geotgo isseodo ppalgan badagingeojo\\n[5:23.24:1.98]  Red carpet gateun gibun\\n[6:25.31:1.74]  modu nal cheoda bojo\\n\\n[7:27.08:3.4]  eotteon sarameun eomeonimi nugunyago\\n[8:30.47:1.46]  shinseonhage mal georeodo\\n[9:32.04:2.68]  amu neukkimi an deuljo Oh\\n[10:33.87:3.54]  hajiman nado nugunga hago sarange\\n[11:37.43:1.32]  ppajeobogo shipeo Baby\\n[12:38.83:1.8]  jal deureoyo nae Boy\\n\\n[13:40.66:3.04]  dan hanbeondo neukkyeobon jeok eomneun geol\\n[14:43.92:1.26]  alge haejuneun\\n[15:45.26:1.99]  (saram gidarigo inneun geol)\\n[16:47.35:1.42]  eolmaga dwaedo [17:49.05:1.8]  gidarigo shipeo\\n[18:51.07:1.84]  (I just wanna fall in love)\\n\\n[19:53.46:3.73]  eotteoke naega umjigil su eopge\\n[20:57.31:1.72]  nal Ooh ahh ooh ahh [21:59.17:1.98]  hage mandeureo jweo\\n[22:61.25:3.11]  gajja gajja jinshim eomneun gajja\\n[23:64.5:1.36]  jal ga jal ga [24:65.94:1.72]  (Huh OOH-AHH-hage)\\n[25:67:3.67]  eotteoke ije deo halmari eopge\\n[26:70.74:1.73]  nal Ooh ahh ooh ahh [27:72.61:2.04]  hage mandeureo jweo\\n[28:74.76:3.2]  Bla la la la malmanhaji malgo\\n[29:78.12:1.22]  neukkyeojige [30:79.47:1.61]  (Huh OOH-AHH-hage)\\n\\n[31:82.58:3.07]  nal bwa geobwa tto du beon bwa\\n[32:85.77:3.13]  hanbeon jinachigo deungeul dollyeo cheodabwa [33:88.98:0.38]  (TWICE)\\n[34:89.14:0.38]  eodil [35:89.67:1.47]  gadeorado hangsang min nat\\n[36:91.22:1.64]  hajiman naega jeil binna\\n[37:92.97:2.94]  najeun shinbal shineodo gachineun High\\n\\n[38:96.36:4.02]  meorissogen neul yeonghwa sok gateun La la la\\n[39:99.78:1.7]  jangmyeondeuri jinagane\\n[40:101.55:2.26]  saenggangmanhaedo tteolline Yeah\\n[41:103.15:3.72]  ijeneun nado nugunga hago sarange\\n[42:106.76:1.37]  ppajeo bogo shipeo Baby\\n[43:108.25:1.66]  jal deureoyo nae Boy\\n\\n[44:109.95:3]  dan hanbeondo neukkyeobon jeok eomneun geol\\n[45:113.25:1.24]  alge haejuneun\\n[46:114.53:1.96]  (saram gidarigo inneun geol)\\n[47:116.65:1.43]  eolmaga dwaedo [48:118.26:1.87]  gidarigo shipeo\\n[49:120.34:1.78]  (I just wanna fall in love)\\n\\n[50:122.77:3.69]  eotteoke naega umjigil su eopge\\n[51:126.55:1.94]  nal Ooh ahh ooh ahh [52:128.59:1.81]  hage mandeureo jweo\\n[53:130.51:3.16]  gajja gajja jinshim eomneun gajja\\n[54:133.87:1.32]  jal ga jal ga [55:135.27:1.69]  (Huh OOH-AHH-hage)\\n[56:136.29:3.66]  eotteoke ije deo halmari eopge\\n[57:140.08:1.72]  nal Ooh ahh ooh ahh [58:141.93:2.03]  hage mandeureo jweo\\n[59:144.07:3.13]  Bla la la la malmanhaji malgo\\n[60:147.39:1.3]  neukkyeojige [61:148.74:1.68]  (Huh OOH-AHH-hage)\\n\\n[62:150.42:2.89]  amuhago [63:153.58:1.01]  manna [64:155.04:2.59]  shijakagi shireo\\n[65:158.43:2.66]  shwipji aneun yeoja [66:161.83:2.43]  geuge naingeol\\n\\n[67:166.05:0.9]  Let me see [68:167.36:1.73]  how you gon’ treat me\\n[69:169.28:1.16]  I ain’t no easy\\n[70:170.57:1.65]  Better think about it TWICE\\n[71:172.81:0.89]  Let me see [72:174.08:1.74]  how you gon’ treat me\\n[73:176.01:1.18]  I ain’t no easy\\n[74:177.32:1.89]  Better think about it TWICE\\n\\n[75:179.19:3.19]  (Yeah) [76:178.53:3.72]  eotteoke naega umjigil su eopge\\n[77:182.35:1.75]  nal Ooh ahh ooh ahh [78:184.22:2.04]  hage mandeureo jweo\\n[79:186.39:3.11]  gajja gajja jinshim eomneun gajja [80:188.9:3.02]  (Oh yeah)\\n[81:189.65:1.36]  jal ga jal ga [82:191.07:1.74]  (Huh OOH-AHH-hage)\\n[83:192.03:3.7]  eotteoke ije deo halmari eopge\\n[84:195.85:1.71]  nal Ooh ahh ooh ahh [85:197.69:2.03]  hage mandeureo jweo\\n[86:199.85:3.1]  Bla la la la malmanhaji malgo\\n[87:203.11:1.33]  neukkyeojige [88:204.55:1.73]  (Huh OOH-AHH-hage)\\n\\n[89:218.8:1.24]  OOH-AHH-hage\\n',\n  //   groupSize: 9,\n  //   modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   originalArtist: 'TWICE',\n  //   originalArtistId: '-LZDwKklI8YGlhmy0KJ2',\n  //   private: false,\n  //   query: 'like ooh-ahh twice the story begins',\n  //   single: true,\n  //   title: 'Like Ooh-ahh',\n  //   videoId: '0rtV5esQT6I',\n  // },\n  // activeUnit: {\n  //   id: '-LZJ7AZJOR0ehcrPecgO',\n  //   artistId: '-LZJ7AQQhyOk5w_TAD4u',\n  //   averages: [],\n  //   createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   debutYear: 2018,\n  //   distributions: [],\n  //   distributions_legacy: [],\n  //   members: {\n  //     '-LZJ7AGyuXFDjXz1ECb2': {\n  //       age: 20,\n  //       altColorId: 'col000004',\n  //       altColor: {\n  //         b: 122,\n  //         count: 6,\n  //         g: 160,\n  //         hex: '#FFA07A',\n  //         name: 'peach',\n  //         number: 4,\n  //         r: 255,\n  //         id: 'col000004',\n  //       },\n  //       birthdate: 19980826,\n  //       colorId: 'col000018',\n  //       color: {\n  //         b: 221,\n  //         count: 8,\n  //         g: 186,\n  //         hex: '#39BADD',\n  //         name: 'turquoise',\n  //         number: 18,\n  //         r: 57,\n  //         id: 'col000018',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'SY',\n  //       name: 'Soyeon',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'KOREAN',\n  //       positions: [\n  //         'CENTER',\n  //         'LEADER',\n  //         'LEAD_RAPPER',\n  //         'MAIN_DANCER',\n  //         'VOCALIST',\n  //       ],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AGyuXFDjXz1ECb2',\n  //     },\n  //     '-LZJ7AH22seM59PQ977M': {\n  //       age: 22,\n  //       altColorId: 'col000010',\n  //       altColor: {\n  //         b: 82,\n  //         count: 4,\n  //         g: 255,\n  //         hex: '#FFFF52',\n  //         name: 'lemon',\n  //         number: 10,\n  //         r: 225,\n  //         id: 'col000010',\n  //       },\n  //       birthdate: 19970131,\n  //       colorId: 'col000023',\n  //       color: {\n  //         b: 239,\n  //         count: 10,\n  //         g: 119,\n  //         hex: '#A177EF',\n  //         name: 'violet',\n  //         number: 23,\n  //         r: 161,\n  //         id: 'col000023',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'MY',\n  //       name: 'Miyeon',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'KOREAN',\n  //       positions: ['MAIN_VOCALIST'],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AH22seM59PQ977M',\n  //     },\n  //     '-LZJ7AH7krbGtR-yZyhT': {\n  //       age: 21,\n  //       altColorId: 'col000019',\n  //       altColor: {\n  //         b: 134,\n  //         count: 6,\n  //         g: 89,\n  //         hex: '#285986',\n  //         name: 'navy',\n  //         number: 19,\n  //         r: 40,\n  //         id: 'col000019',\n  //       },\n  //       birthdate: 19971023,\n  //       colorId: 'col000002',\n  //       color: {\n  //         b: 27,\n  //         count: 6,\n  //         g: 49,\n  //         hex: '#CE311B',\n  //         name: 'blood',\n  //         number: 2,\n  //         r: 206,\n  //         id: 'col000002',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'MN',\n  //       name: 'Minnie',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'KOREAN',\n  //       positions: ['MAIN_VOCALIST'],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AH7krbGtR-yZyhT',\n  //     },\n  //     '-LZJ7AHDQIEw5VM1mI3C': {\n  //       age: 20,\n  //       altColorId: 'col000023',\n  //       altColor: {\n  //         b: 239,\n  //         count: 10,\n  //         g: 119,\n  //         hex: '#A177EF',\n  //         name: 'violet',\n  //         number: 23,\n  //         r: 161,\n  //         id: 'col000023',\n  //       },\n  //       birthdate: 19980309,\n  //       colorId: 'col000006',\n  //       color: {\n  //         b: 42,\n  //         count: 14,\n  //         g: 142,\n  //         hex: '#FF8E2A',\n  //         name: 'orange',\n  //         number: 6,\n  //         r: 255,\n  //         id: 'col000006',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'SJ',\n  //       name: 'Soojin',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'KOREAN',\n  //       positions: ['LEAD_RAPPER', 'MAIN_DANCER', 'VOCALIST'],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AHDQIEw5VM1mI3C',\n  //     },\n  //     '-LZJ7AHM3LgaoxdPJphc': {\n  //       age: 19,\n  //       altColorId: 'col000027',\n  //       altColor: {\n  //         b: 101,\n  //         count: 5,\n  //         g: 20,\n  //         hex: '#9C1465',\n  //         name: 'jam',\n  //         number: 27,\n  //         r: 156,\n  //         id: 'col000027',\n  //       },\n  //       birthdate: 19990923,\n  //       colorId: 'col000014',\n  //       color: {\n  //         b: 20,\n  //         count: 5,\n  //         g: 125,\n  //         hex: '#147D14',\n  //         name: 'forest',\n  //         number: 14,\n  //         r: 20,\n  //         id: 'col000014',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'YQ',\n  //       name: 'Yuqi',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'CHINESE',\n  //       positions: ['LEAD_DANCER', 'LEAD_RAPPER', 'LEAD_VOCALIST'],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AHM3LgaoxdPJphc',\n  //     },\n  //     '-LZJ7AHNENioOO_v3cE5': {\n  //       age: 19,\n  //       altColorId: 'col000024',\n  //       altColor: {\n  //         b: 255,\n  //         count: 2,\n  //         g: 208,\n  //         hex: '#F7D0FF',\n  //         name: 'rose',\n  //         number: 24,\n  //         r: 247,\n  //         id: 'col000024',\n  //       },\n  //       birthdate: 20000106,\n  //       colorId: 'col000008',\n  //       color: {\n  //         b: 0,\n  //         count: 10,\n  //         g: 228,\n  //         hex: '#FFE400',\n  //         name: 'yellow',\n  //         number: 8,\n  //         r: 255,\n  //         id: 'col000008',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'SH',\n  //       name: 'Shuhua',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'TAIWANESE',\n  //       positions: ['VISUAL', 'VOCALIST'],\n  //       private: false,\n  //       referenceArtist: '(G)I-DLE',\n  //       id: '-LZJ7AHNENioOO_v3cE5',\n  //     },\n  //   },\n  //   modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   name: 'OT6',\n  //   official: true,\n  //   private: false,\n  //   complete: true,\n  //   artistName: '(G)I-DLE',\n  //   genre: 'K-Pop',\n  // },\n  distributionLines: [],\n  rates: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ACTIVE_MEMBER_PILL:\n      newState.activeMemberPill = action.payload;\n      break;\n\n    case types.SET_ACTIVE_SONG:\n      newState.activeSong = action.payload;\n      break;\n\n    case types.SET_ACTIVE_UNIT:\n      newState.activeUnit = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_LINES:\n      newState.distributionLines = action.payload;\n      break;\n\n    case types.SET_RATES:\n      newState.rates = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setActiveMemberPill = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_MEMBER_PILL, payload });\nconst setActiveSong = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_SONG, payload });\nconst setActiveUnit = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_UNIT, payload });\nconst setDistibutionLines = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_LINES, payload });\nconst setRates = payload => dispatch =>\n  dispatch({ type: types.SET_RATES, payload });\n\nexport default {\n  setActiveMemberPill,\n  setActiveSong,\n  setActiveUnit,\n  setDistibutionLines,\n  setRates,\n};\n","import _ from 'lodash';\n\nimport actions from './actions';\n\nconst activateSong = id => (dispatch, getState) => {\n  const activeSong = _.find(getState().admin.songs, { id });\n  dispatch(actions.setActiveSong(activeSong));\n};\n\nconst activateUnit = () => (dispatch, getState) => {\n  const selectedArtist = { ...getState().artists.selectedArtist };\n  const activeUnit = { ...getState().artists.selectedUnit };\n\n  activeUnit.artistName = selectedArtist.name;\n  activeUnit.genre = selectedArtist.genre;\n\n  dispatch(actions.setActiveUnit(activeUnit));\n};\n\nconst prepareSong = () => (dispatch, getState) => {\n  const { activeSong } = getState().distribute;\n  if (activeSong.id) {\n    const distributionString = activeSong.distribution;\n\n    const buildPartData = data => {\n      const [id, startTime, duration] = data.split(':');\n      return {\n        id,\n        startTime: +startTime,\n        duration: +duration,\n        endTime: +startTime + +duration,\n      };\n    };\n\n    // Iterate through lines\n    const distributionLines = distributionString.split('\\n').map(line => {\n      if (line.length < 2) {\n        return [];\n      }\n      const parsedLine = [];\n      let insideBracket = false;\n      let id = '';\n      let content = '';\n\n      for (let i = 0; i < line.length; i++) {\n        const char = line[i];\n        if (char === '[' && i > 0) {\n          content = content[0] === ' ' ? content.substring(1) : content;\n          parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n        }\n\n        if (char === '[') {\n          insideBracket = true;\n          id = '';\n          content = content.trim();\n        } else if (char === ']') {\n          insideBracket = false;\n          content = '';\n        } else if (insideBracket) {\n          id += char;\n        } else {\n          content += char;\n        }\n      }\n      content = content[0] === ' ' ? content.substring(1) : content;\n      parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n\n      return parsedLine;\n    });\n\n    dispatch(actions.setDistibutionLines(distributionLines));\n  }\n};\n\nconst activateMemberPill = id => (dispatch, getState) => {\n  const { activeMemberPill } = getState().distribute;\n\n  if (id === activeMemberPill) {\n    dispatch(actions.setActiveMemberPill(''));\n  } else {\n    dispatch(actions.setActiveMemberPill(id));\n  }\n};\n\nconst linkMemberToPart = id => (dispatch, getState) => {\n  const { activeMemberPill } = getState().distribute;\n\n  if (!activeMemberPill) return;\n\n  const distributionLines = [...getState().distribute.distributionLines];\n\n  // console.log(distributionLines);\n  for (let l = 0; l < distributionLines.length; l++) {\n    const line = distributionLines[l];\n    let found = false;\n    for (let p = 0; p < line.length; p++) {\n      const part = line[p];\n\n      if (part.id === id) {\n        // If it already has the member, remove it\n        if (part.memberId.includes(activeMemberPill)) {\n          part.memberId = part.memberId.filter(m => m !== activeMemberPill);\n        }\n        // If the active pill is NONE, replace it by NONE\n        else if (activeMemberPill === 'NONE') {\n          part.memberId = ['NONE'];\n        }\n        // If there was already a none, only add the new member\n        else if (part.memberId[0] === 'NONE') {\n          part.memberId = [activeMemberPill];\n        }\n        // Any other case, just push the member\n        else {\n          part.memberId.push(activeMemberPill);\n        }\n\n        found = true;\n        break;\n      }\n    }\n    if (found) break;\n  }\n  dispatch(actions.setDistibutionLines(distributionLines));\n  dispatch(calculateRates(distributionLines));\n};\n\nconst calculateRates = distributionLines => dispatch => {\n  const rates = {\n    total: 0,\n    remaining: 0,\n    max: 0,\n  };\n\n  for (let l = 0; l < distributionLines.length; l++) {\n    const line = distributionLines[l];\n    for (let p = 0; p < line.length; p++) {\n      const part = line[p];\n      if (part.memberId.length) {\n        for (let m = 0; m < part.memberId.length; m++) {\n          rates.total += part.duration;\n          const mId = part.memberId[m];\n          if (rates[mId] === undefined) {\n            rates[mId] = 0;\n          }\n          rates[mId] += part.duration;\n          // Add max if greater than previous max\n          if (rates[mId] > rates.max) rates.max = rates[mId];\n        }\n      } else {\n        rates.remaining += part.duration;\n      }\n    }\n  }\n\n  dispatch(actions.setRates(rates));\n};\n\nconst handleSaveDistribution = () => async (dispatch, getState) => {\n  const body = {\n    songId: getState().distribute.activeSong.id,\n    rates: getState().distribute.rates,\n    relationships: '',\n    features: [],\n  };\n\n  // Build relationships\n  const relationships = {};\n  getState().distribute.distributionLines.forEach(line =>\n    line.forEach(part => {\n      relationships[part.id] = part.memberId;\n    })\n  );\n\n  body.relationships = JSON.stringify(relationships);\n\n  // TO-DO: add featuring artists\n\n  console.log(body);\n\n  await dispatch({ type: 'SEND_DISTRIBUTION', body });\n};\n\nexport default {\n  activateMemberPill,\n  activateSong,\n  activateUnit,\n  handleSaveDistribution,\n  linkMemberToPart,\n  prepareSong,\n};\n","import distributeReducer from './reducers';\n\nexport { default as distributeOperations } from './operations';\nexport { default as distributeTypes } from './types';\nexport default distributeReducer;\n","const RESET_SYNC = 'RESET_SYNC';\nconst SET_ACTIVE_LINE = 'SET_ACTIVE_LINE';\nconst SET_ACTIVE_PILL = 'SET_ACTIVE_PILL';\nconst SET_ARE_LYRICS_LOCKED = 'SET_ARE_LYRICS_LOCKED';\nconst SET_FINAL_LYRICS = 'SET_FINAL_LYRICS';\nconst SET_INFO = 'SET_INFO';\nconst SET_IS_DISTRIBUTION_COMPLETE = 'SET_IS_DISTRIBUTION_COMPLETE';\nconst SET_LINK_SEQUENCE_MODE = 'SET_LINK_SEQUENCE_MODE';\nconst SET_LAST_ID_NUM = 'SET_LAST_ID_NUM';\nconst SET_LYRICS = 'SET_LYRICS';\nconst SET_PILLS = 'SET_PILLS';\nconst SET_QUEUE = 'SET_QUEUE';\nconst SET_STEP = 'SET_STEP';\nconst SET_STEPS = 'SET_STEPS';\nconst SET_SYNC_DISTRIBUTION_LINES = 'SET_SYNC_DISTRIBUTION_LINES';\nconst SET_SYNC_STATS = 'SET_SYNC_STATS';\nconst SET_TIMESTAMPS = 'SET_TIMESTAMPS';\nconst SET_VIDEO_ID = 'SET_VIDEO_ID';\n\nexport default {\n  RESET_SYNC,\n  SET_ACTIVE_LINE,\n  SET_ACTIVE_PILL,\n  SET_ARE_LYRICS_LOCKED,\n  SET_FINAL_LYRICS,\n  SET_INFO,\n  SET_IS_DISTRIBUTION_COMPLETE,\n  SET_LINK_SEQUENCE_MODE,\n  SET_LAST_ID_NUM,\n  SET_LYRICS,\n  SET_PILLS,\n  SET_QUEUE,\n  SET_STEP,\n  SET_STEPS,\n  SET_SYNC_DISTRIBUTION_LINES,\n  SET_SYNC_STATS,\n  SET_TIMESTAMPS,\n  SET_VIDEO_ID,\n};\n","import types from './types';\n\nconst initialState = {\n  activeLine: null,\n  activePill: null,\n  areLyricsLocked: false,\n  distributionLines: [],\n  finalLyrics: '',\n  info: {},\n  isDistributionComplete: false,\n  linkSequenceMode: false,\n  lastIdNum: 0,\n  lyrics: '',\n  pills: {},\n  queue: {},\n  step: 1,\n  steps: {\n    1: {\n      locked: false,\n      expanded: true,\n    },\n    2: {\n      locked: true,\n      expanded: false,\n    },\n    3: {\n      locked: true,\n      expanded: false,\n    },\n    4: {\n      locked: true,\n      expanded: false,\n    },\n    5: {\n      locked: true,\n      expanded: false,\n    },\n  },\n  stats: {\n    lines: 0,\n    pills: 0,\n    linked: 0,\n  },\n  timestamps: {},\n  videoId: '',\n};\n\nexport default function reducer(prevState = initialState, action) {\n  let newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_SYNC:\n      newState = Object.assign({}, initialState);\n      break;\n\n    case types.SET_ACTIVE_LINE:\n      newState.activeLine = action.payload;\n      break;\n\n    case types.SET_ACTIVE_PILL:\n      newState.activePill = action.payload;\n      break;\n\n    case types.SET_ARE_LYRICS_LOCKED:\n      newState.areLyricsLocked = action.payload;\n      break;\n\n    case types.SET_FINAL_LYRICS:\n      newState.finalLyrics = action.payload;\n      break;\n\n    case types.SET_INFO:\n      newState.info = action.payload;\n      break;\n\n    case types.SET_IS_DISTRIBUTION_COMPLETE:\n      newState.isDistributionComplete = action.payload;\n      break;\n\n    case types.SET_LINK_SEQUENCE_MODE:\n      newState.linkSequenceMode = action.payload;\n      break;\n\n    case types.SET_LAST_ID_NUM:\n      newState.lastIdNum = action.payload;\n      break;\n\n    case types.SET_LYRICS:\n      newState.lyrics = action.payload;\n      break;\n\n    case types.SET_PILLS:\n      newState.pills = action.payload;\n      break;\n\n    case types.SET_QUEUE:\n      newState.queue = action.payload;\n      break;\n\n    case types.SET_STEP:\n      newState.step = action.payload;\n      break;\n\n    case types.SET_STEPS:\n      newState.steps = action.payload;\n      break;\n\n    case types.SET_SYNC_DISTRIBUTION_LINES:\n      newState.distributionLines = action.payload;\n      break;\n\n    case types.SET_SYNC_STATS:\n      newState.stats = action.payload;\n      break;\n\n    case types.SET_TIMESTAMPS:\n      newState.timestamps = action.payload;\n      break;\n\n    case types.SET_VIDEO_ID:\n      newState.videoId = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetSync = payload => dispatch =>\n  dispatch({ type: types.RESET_SYNC, payload });\nconst setActiveLine = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_LINE, payload });\nconst setActivePill = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_PILL, payload });\nconst setAreLyricsLocked = payload => dispatch =>\n  dispatch({ type: types.SET_ARE_LYRICS_LOCKED, payload });\nconst setFinalLyrics = payload => dispatch =>\n  dispatch({ type: types.SET_FINAL_LYRICS, payload });\nconst setInfo = payload => dispatch =>\n  dispatch({ type: types.SET_INFO, payload });\nconst setIsDistributionComplete = payload => dispatch =>\n  dispatch({ type: types.SET_IS_DISTRIBUTION_COMPLETE, payload });\nconst setLinkSequenceMode = payload => dispatch =>\n  dispatch({ type: types.SET_LINK_SEQUENCE_MODE, payload });\nconst setLastIdNum = payload => dispatch =>\n  dispatch({ type: types.SET_LAST_ID_NUM, payload });\nconst setLyrics = payload => dispatch =>\n  dispatch({ type: types.SET_LYRICS, payload });\nconst setPills = payload => dispatch =>\n  dispatch({ type: types.SET_PILLS, payload });\nconst setQueue = payload => dispatch =>\n  dispatch({ type: types.SET_QUEUE, payload });\nconst setStep = payload => dispatch =>\n  dispatch({ type: types.SET_STEP, payload });\nconst setSteps = payload => dispatch =>\n  dispatch({ type: types.SET_STEPS, payload });\nconst setSyncDistributionLines = payload => dispatch =>\n  dispatch({ type: types.SET_SYNC_DISTRIBUTION_LINES, payload });\nconst setSyncStats = payload => dispatch =>\n  dispatch({ type: types.SET_SYNC_STATS, payload });\nconst setTimestamps = payload => dispatch =>\n  dispatch({ type: types.SET_TIMESTAMPS, payload });\nconst setVideoId = payload => dispatch =>\n  dispatch({ type: types.SET_VIDEO_ID, payload });\n\nexport default {\n  resetSync,\n  setActiveLine,\n  setActivePill,\n  setAreLyricsLocked,\n  setFinalLyrics,\n  setInfo,\n  setIsDistributionComplete,\n  setLinkSequenceMode,\n  setLastIdNum,\n  setLyrics,\n  setPills,\n  setQueue,\n  setStep,\n  setSteps,\n  setSyncDistributionLines,\n  setSyncStats,\n  setTimestamps,\n  setVideoId,\n};\n","import actions from './actions';\n\nimport constants from '../../utils/constants';\n\nconst handleVideoId = e => dispatch => {\n  const { value } = e.target;\n\n  let videoId = '';\n  // TO-DO: Check if value is one of the placeholders and assign correct video id\n\n  // Parse youtube link\n  if (value.startsWith('https://youtu.be/')) {\n    videoId = value.substring(17);\n  } else if (value && !videoId) {\n    const youtubeLink = value.split('v=');\n    if (youtubeLink.length === 1) {\n      [videoId] = youtubeLink;\n    } else if (youtubeLink.length === 2) {\n      const youtubeLinkQuery = youtubeLink[1].split('&');\n      [videoId] = youtubeLinkQuery;\n    }\n  }\n\n  dispatch(actions.setVideoId(videoId));\n};\n\nconst handleFormInfo = (formState, originalArtist) => (dispatch, getState) => {\n  // Original Artist is required\n  if (!originalArtist) return;\n\n  const info = {};\n\n  const { artistsTypeaheadDict } = getState().admin;\n  if (artistsTypeaheadDict[originalArtist]) {\n    info.artistId = artistsTypeaheadDict[originalArtist];\n    info.originalArtist = originalArtist;\n  }\n\n  if (Object.values(formState.values)) {\n    info.album = formState.values.album;\n    info.groupSize = formState.values.groupSize;\n    info.single = formState.values.single || false;\n    info.title = formState.values.title;\n  }\n\n  info.videoId = getState().sync.videoId;\n\n  dispatch(actions.setInfo(info));\n  dispatch(unlockNextStep());\n};\n\nconst unlockNextStep = () => (dispatch, getState) => {\n  let { step } = getState().sync;\n  const steps = { ...getState().sync.steps };\n\n  steps[step].locked = true;\n  steps[step].expanded = false;\n  steps[step + 1].locked = false;\n  steps[step + 1].expanded = true;\n\n  step++;\n\n  if (step === 5) {\n    dispatch(finalizeLyrics());\n  }\n  dispatch(actions.setStep(step));\n  dispatch(actions.setSteps(steps));\n};\n\nconst unlockSpecificStep = num => (dispatch, getState) => {\n  if (!num) return;\n\n  let { step } = getState().sync;\n  const steps = { ...getState().sync.steps };\n\n  Object.values(steps).forEach(st => {\n    st.locked = true;\n    st.expanded = false;\n  });\n\n  steps[+num].locked = false;\n  steps[+num].expanded = true;\n\n  step = +num;\n\n  dispatch(actions.setStep(step));\n  dispatch(actions.setSteps(steps));\n\n  if (+num === 3) {\n    dispatch(actions.setAreLyricsLocked(false));\n  }\n};\n\n// Adds []s in the beginning of every line and remove diplicated spaces\nconst prepareLines = (clearBrackets = false) => (dispatch, getState) => {\n  const { lyrics } = getState().sync;\n\n  let preparedLyrics = lyrics;\n\n  if (clearBrackets) {\n    preparedLyrics = preparedLyrics.replace(/\\[(.*?)\\]/g, '[]');\n  }\n\n  preparedLyrics = preparedLyrics\n    .split('\\n')\n    .map(line => {\n      if (line.length > 0 && !line.startsWith('[')) {\n        return `[] ${line}`;\n      }\n      return line;\n    })\n    .join('\\n')\n    .replace(/ +(?= )/g, '');\n\n  dispatch(actions.setLyrics(preparedLyrics));\n};\n\n// Verify lyrics and add ids to all []s\nconst prepareLyrics = () => (dispatch, getState) => {\n  // Add spaces between ending and opening braces\n  // Remove spaces between opening and ending braces\n  let lyrics = getState().sync.lyrics.replace(/\\]\\(|\\)\\[|\\[ \\]|\\( \\)/g, s => {\n    if (s === '](') return '] (';\n    if (s === ')[') return ') [';\n    if (s === '( )') return '()';\n    if (s === '[ ]') return '[]';\n    return s;\n  });\n  // Add spaces between characters and opening braces\n  // Add spaces between ending braces and characters\n  lyrics = lyrics.replace(\n    /[A-Za-z0-9][(]|[A-Za-z0-9][[]|[)][A-Za-z0-9]|[\\]][A-Za-z0-9]/g,\n    s => `${s[0]} ${s[1]}`\n  );\n  // Add brackets before any parentheses\n  lyrics = lyrics.replace(\n    /[A-Za-z0-9?!][ ][(]|[)][ ][(]|[)][ ][A-Za-z0-9]/g,\n    s => `${s[0]}${s[1]}[] ${s[2]}`\n  );\n  // Add a unique idNum inside each []\n  let idNum = getState().sync.lastIdNum;\n  lyrics = lyrics.replace(/\\[\\]/g, () => {\n    idNum++;\n    return `[${idNum}]`;\n  });\n  dispatch(actions.setLastIdNum(idNum));\n  dispatch(actions.setLyrics(lyrics));\n  dispatch(actions.setAreLyricsLocked(true));\n};\n\nconst lockLyrics = (locked = true) => (dispatch, getState) => {\n  dispatch(prepareLines());\n  dispatch(prepareLyrics());\n  dispatch(actions.setAreLyricsLocked(locked));\n  const { lyrics } = getState().sync;\n  dispatch(parseLyricsToObject(lyrics));\n};\n\nconst handleLyricsEdit = e => dispatch => {\n  let text = '';\n  if (typeof e === 'string') {\n    text = e;\n  } else {\n    text = e.target.value || '';\n  }\n  dispatch(actions.setLyrics(text.replace(/ +(?= )/g, '')));\n  dispatch(actions.setAreLyricsLocked(false));\n};\n\nconst parseLyricsToObject = lyrics => (dispatch, getState) => {\n  let lineCount = 0;\n  const lines = lyrics.split('\\n').map(line => {\n    if (line.length < 2) {\n      return [];\n    }\n    const parsedLine = [];\n    let insideBracket = false;\n    let id = '';\n    let content = '';\n\n    for (let i = 0; i < line.length; i++) {\n      const char = line[i];\n      if (char === '[' && i > 0) {\n        content = content[0] === ' ' ? content.substring(1) : content;\n        parsedLine.push({ id, content, link: null });\n      }\n\n      if (char === '[') {\n        insideBracket = true;\n        id = '';\n        content = content.trim();\n        lineCount++;\n      } else if (char === ']') {\n        insideBracket = false;\n        content = '';\n      } else if (insideBracket) {\n        id += char;\n      } else {\n        content += char;\n      }\n    }\n    content = content[0] === ' ' ? content.substring(1) : content;\n    parsedLine.push({ id, content, link: null, color: null });\n\n    return parsedLine;\n  });\n  dispatch(actions.setSyncDistributionLines(lines));\n\n  const stats = { ...getState().sync.stats };\n  stats.lines = lineCount;\n\n  dispatch(actions.setSyncStats(stats));\n\n  setTimeout(() => {\n    dispatch(unlockNextStep());\n  }, 1000);\n};\n\nconst handleSyncKeydown = (event, player) => dispatch => {\n  // Only trigger if it is an allowed key and the video is playing\n  const { key } = event;\n  if (constants.SYNC_KEY_LIST[key] && player && player.getPlayerState() === 1) {\n    const timestamp = player.getCurrentTime();\n    dispatch(enqueueCapture(key, timestamp));\n  }\n};\n\nconst handleSyncKeyup = (event, player) => dispatch => {\n  const { key } = event;\n  if (constants.SYNC_KEY_LIST[key]) {\n    const timestamp = player.getCurrentTime();\n    dispatch(\n      dequeueCapture(key, timestamp, constants.SYNC_KEY_COLOR_LIST[key])\n    );\n  }\n};\n\nconst handleSyncBoxMouseDown = (key, player) => dispatch => {\n  // Only trigger if it is an allowed key and the video is playing\n  if (constants.SYNC_KEY_LIST[key] && player && player.getPlayerState() === 1) {\n    const timestamp = player.getCurrentTime();\n    dispatch(enqueueCapture(key, timestamp));\n  }\n};\n\nconst handleSyncBoxMouseUp = (key, player, color) => dispatch => {\n  if (constants.SYNC_KEY_LIST[key]) {\n    const timestamp = player.getCurrentTime();\n    dispatch(dequeueCapture(key, timestamp, color));\n  }\n};\n\nconst enqueueCapture = (id, timestamp) => (dispatch, getState) => {\n  const queue = Object.assign({}, getState().sync.queue);\n  if (queue[id] === undefined) {\n    queue[id] = timestamp;\n    dispatch(actions.setQueue(queue));\n  }\n};\n\nlet newPillId = 0;\n\nconst dequeueCapture = (id, timestamp, color) => (dispatch, getState) => {\n  const queue = Object.assign({}, getState().sync.queue);\n\n  if (queue[id]) {\n    const pills = Object.assign({}, getState().sync.pills);\n    const startTime = queue[id];\n    const duration = timestamp - startTime;\n    delete queue[id];\n\n    newPillId++;\n    pills[newPillId] = {\n      pillId: newPillId,\n      timestamp: startTime,\n      duration,\n      link: null,\n      key: id,\n      color,\n    };\n\n    dispatch(actions.setQueue(queue));\n    dispatch(actions.setPills(pills));\n\n    const stats = { ...getState().sync.stats };\n    stats.pills = Object.keys(pills).length;\n    dispatch(actions.setSyncStats(stats));\n  }\n};\n\nconst connectSyncLine = id => (dispatch, getState) => {\n  const { activeLine, activePill } = getState().sync;\n  if (activeLine === id) {\n    dispatch(actions.setActiveLine(null));\n  } else if (activePill) {\n    dispatch(\n      connect(\n        id,\n        activePill\n      )\n    );\n  } else {\n    dispatch(actions.setActiveLine(id));\n  }\n};\n\nconst connectSyncPill = id => (dispatch, getState) => {\n  const { activeLine, activePill } = getState().sync;\n  if (activePill === id) {\n    dispatch(actions.setActivePill(null));\n  } else if (activeLine) {\n    dispatch(\n      connect(\n        activeLine,\n        id\n      )\n    );\n  } else {\n    dispatch(actions.setActivePill(id));\n  }\n};\n\nlet linksBackUp = {};\nconst connect = (lineId, pillId) => (dispatch, getState) => {\n  let lines = [...getState().sync.distributionLines];\n  let pills = Object.assign({}, getState().sync.pills);\n\n  // Nullify any line with pillId as a link\n  lines = nullifyLine(lines, pillId, lineId);\n  // Nullify any pill with lineId as a link\n  pills = nullifyPill(pills, lineId);\n  // Link each other\n  function modifyPart(collection, searchId, id, key, newValue, color) {\n    return collection.map(l =>\n      l.map(part => {\n        if (+part[searchId] === +id) {\n          part[key] = newValue;\n          part.color = color;\n        }\n        return part;\n      })\n    );\n  }\n\n  pills[pillId].link = lineId;\n  modifyPart(lines, 'id', lineId, 'link', pillId, pills[pillId].color);\n\n  // Add to the linksBackUp for when user needs to edit lyrics\n  linksBackUp[lineId] = pillId;\n\n  dispatch(actions.setActiveLine(null));\n  dispatch(actions.setActivePill(null));\n\n  dispatch(actions.setPills(pills));\n  dispatch(actions.setSyncDistributionLines(lines));\n\n  // Check if distribution is complete\n  function isDistributionComplete(collection) {\n    let isComplete = true;\n\n    collection.forEach(l =>\n      l.forEach(part => {\n        if (part.link === null) isComplete = false;\n      })\n    );\n    return isComplete;\n  }\n\n  const stats = { ...getState().sync.stats };\n  stats.linked = Object.keys(linksBackUp).length;\n  dispatch(actions.setSyncStats(stats));\n\n  dispatch(actions.setIsDistributionComplete(isDistributionComplete(lines)));\n};\n\nconst deleteSyncPill = () => (dispatch, getState) => {\n  const { activePill } = getState().sync;\n\n  if (activePill) {\n    const pills = Object.assign({}, getState().sync.pills);\n    let lines = [...getState().sync.distributionLines];\n\n    // Nullify any line with activePill as a link\n    lines = nullifyLine(lines, activePill);\n\n    delete pills[activePill];\n\n    dispatch(actions.setActivePill(null));\n    dispatch(actions.setPills(pills));\n    dispatch(actions.setSyncDistributionLines(lines));\n    dispatch(actions.setLinkSequenceMode(false));\n\n    const stats = { ...getState().sync.stats };\n    stats.linked = Object.keys(linksBackUp).length;\n    dispatch(actions.setSyncStats(stats));\n  }\n};\n\nconst nullifyLine = (collection, item, partId = null) => {\n  collection.forEach(l =>\n    l.forEach(part => {\n      if (+part.link === +item) {\n        part.link = null;\n        part.color = null;\n      }\n      if (+linksBackUp[part.id] === +item) {\n        delete linksBackUp[part.id];\n      }\n    })\n  );\n\n  // Also remove from backup if part was provided\n  if (partId) {\n    delete linksBackUp[partId];\n  }\n\n  return collection;\n};\n\nconst nullifyPill = (collection, item) => {\n  Object.keys(collection).forEach(k => {\n    const pill = collection[k];\n    if (+pill.link === +item) pill.link = null;\n  });\n  return collection;\n};\n\nconst finalizeLyrics = () => (dispatch, getState) => {\n  const lines = [...getState().sync.distributionLines];\n  const pills = Object.assign({}, getState().sync.pills);\n\n  const newLines = lines.map(line =>\n    line.map(part => {\n      part.startTime = +pills[part.link].timestamp.toFixed(2);\n      part.duration = +pills[part.link].duration.toFixed(2);\n      part.endTime = part.startTime + part.duration;\n      return part;\n    })\n  );\n\n  // Build string\n  let finalId = 1;\n  let finalLyrics = '';\n  const timepstamps = {};\n\n  newLines.forEach(line => {\n    if (line.length > 0) {\n      line.forEach(part => {\n        // Join parts\n        const bracket = `[${finalId}:${part.startTime}:${part.duration}] `;\n        finalLyrics += `${bracket} ${part.content}`;\n        finalId++;\n        // Create karaoke-line object\n        const second = Math.round(part.startTime);\n        if (timepstamps[second] === undefined) timepstamps[second] = [];\n        timepstamps[second].push({\n          partId: `part-${part.id}`,\n          duration: part.duration,\n          endTime: part.endTime,\n          size: 0,\n          totalSize: part.content.length,\n          content: part.content,\n        });\n      });\n    }\n    finalLyrics += '\\n';\n  });\n  finalLyrics = finalLyrics.replace('  ', ' ');\n  dispatch(actions.setFinalLyrics(finalLyrics));\n  dispatch(actions.setTimestamps(timepstamps));\n};\n\nconst resetPillLinks = () => (dispatch, getState) => {\n  const pills = { ...getState().sync.pills };\n  const distributionLines = [...getState().sync.distributionLines];\n\n  Object.keys(pills).forEach(k => {\n    const pill = pills[k];\n    pill.link = null;\n  });\n\n  distributionLines.forEach(line => line.forEach(part => (part.link = null)));\n\n  dispatch(actions.setPills(pills));\n};\n\nlet intervalId = null;\n\nconst linkPillsSequence = () => async (dispatch, getState) => {\n  let isOn = getState().sync.linkSequenceMode;\n\n  if (isOn) {\n    dispatch(actions.setLinkSequenceMode(false));\n    clearInterval(intervalId);\n    dispatch(actions.setActivePill(null));\n  } else {\n    dispatch(actions.setLinkSequenceMode(true));\n    let { pills } = getState().sync;\n    const pillList = Object.keys(pills);\n\n    const findNextPill = () => pillList.find(el => pills[el].link === null);\n\n    let nextActive = findNextPill();\n\n    // While is on mode is turned on, perform every one second\n    intervalId = setInterval(() => {\n      pills = getState().sync.pills; // eslint-disable-line\n      isOn = getState().sync.linkSequenceMode;\n\n      const { activePill } = getState().sync;\n      if (activePill === null) {\n        nextActive = findNextPill();\n        dispatch(actions.setActivePill(nextActive));\n      }\n      if (nextActive === undefined) {\n        clearInterval(intervalId);\n        dispatch(actions.setLinkSequenceMode(false));\n        dispatch(actions.setActivePill(null));\n      }\n    }, 250);\n  }\n};\n\nconst saveSync = () => async (dispatch, getState) => {\n  const { info, finalLyrics } = getState().sync;\n  const body = {\n    album: info.album || null,\n    distribution: finalLyrics,\n    groupSize: info.groupSize,\n    originalArtist: info.originalArtist,\n    originalArtistId: info.artistId || null,\n    private: info.private || false,\n    single: info.single || false,\n    title: info.title,\n    videoId: info.videoId,\n  };\n\n  await dispatch({ type: 'SEND_SONG', body });\n\n  dispatch(actions.setStep(6));\n};\n\nconst handleResetSync = () => dispatch => {\n  newPillId = 0;\n  linksBackUp = {};\n  dispatch(actions.resetSync());\n};\n\nexport default {\n  connectSyncLine,\n  connectSyncPill,\n  deleteSyncPill,\n  handleFormInfo,\n  handleLyricsEdit,\n  handleResetSync,\n  handleSyncBoxMouseDown,\n  handleSyncBoxMouseUp,\n  handleSyncKeydown,\n  handleSyncKeyup,\n  handleVideoId,\n  linkPillsSequence,\n  lockLyrics,\n  prepareLines,\n  resetPillLinks,\n  saveSync,\n  unlockNextStep,\n  unlockSpecificStep,\n};\n","import syncReducer from './reducers';\n\nexport { default as syncOperations } from './operations';\nexport { default as syncTypes } from './types';\nexport default syncReducer;\n","const SET_TEST_1 = 'SET_TEST_1';\nconst SET_TEST_2 = 'SET_TEST_2';\nconst SET_TEST_3 = 'SET_TEST_3';\nconst SET_TEST_4 = 'SET_TEST_4';\nconst SET_TEST_5 = 'SET_TEST_5';\n\nexport default {\n  SET_TEST_1,\n  SET_TEST_2,\n  SET_TEST_3,\n  SET_TEST_4,\n  SET_TEST_5,\n};\n","import types from './types';\n\nconst initialState = {\n  test1: '',\n  test2: 0,\n  test3: true,\n  test4: [],\n  test5: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_TEST_1:\n      newState.test1 = action.payload;\n      break;\n\n    case types.SET_TEST_2:\n      newState.test2 = action.payload;\n      break;\n\n    case types.SET_TEST_3:\n      newState.test3 = action.payload;\n      break;\n\n    case types.SET_TEST_4:\n      newState.test4 = action.payload;\n      break;\n\n    case types.SET_TEST_5:\n      newState.test5 = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setTest1 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_1, payload });\nconst setTest2 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_2, payload });\nconst setTest3 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_3, payload });\nconst setTest4 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_4, payload });\nconst setTest5 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_5, payload });\n\nexport default {\n  setTest1,\n  setTest2,\n  setTest3,\n  setTest4,\n  setTest5,\n};\n","import actions from './actions';\n\nconst testFunction1 = () => dispatch => {\n  console.log('testFunction1');\n\n  dispatch(actions.setTest1('Ran testFunction1'));\n};\n\nconst testFunction2 = () => dispatch => {\n  console.log('testFunction2');\n\n  dispatch(actions.setTest1('Ran testFunction2'));\n};\n\nconst testFunction3 = () => dispatch => {\n  console.log('testFunction3');\n\n  dispatch(actions.setTest1('Ran testFunction3'));\n};\n\nconst testFunction4 = () => dispatch => {\n  console.log('testFunction4');\n\n  dispatch(actions.setTest1('Ran testFunction4'));\n};\n\nconst testFunction5 = () => dispatch => {\n  console.log('testFunction5');\n\n  dispatch(actions.setTest1('Ran testFunction5'));\n};\n\nexport default {\n  testFunction1,\n  testFunction2,\n  testFunction3,\n  testFunction4,\n  testFunction5,\n};\n","import tempReducer from './reducers';\n\nexport { default as tempOperations } from './operations';\nexport { default as tempTypes } from './types';\nexport default tempReducer;\n","import { combineReducers } from 'redux';\n\nimport { reducer as toastr } from 'react-redux-toastr';\n\nimport app, { appTypes } from './app';\nimport admin, { adminTypes } from './admin';\nimport artists, { artistsTypes } from './artists';\nimport auth, { authTypes } from './auth';\nimport distribute, { distributeTypes } from './distribute';\nimport sync, { syncTypes } from './sync';\nimport temp, { tempTypes } from './temp';\n\nconst rootReducer = combineReducers({\n  app,\n  admin,\n  auth,\n  artists,\n  distribute,\n  sync,\n  temp,\n  toastr,\n});\n\nexport const types = {\n  ...appTypes,\n  ...adminTypes,\n  ...artistsTypes,\n  ...authTypes,\n  ...distributeTypes,\n  ...syncTypes,\n  ...tempTypes,\n};\n\nexport default rootReducer;\n","import HttpStatus from 'http-status-codes';\n\nexport class NewResponse {\n  constructor() {\n    this.statusCode = null;\n    this.dataResponse = null;\n    this.errorResponse = null;\n  }\n\n  status(code) {\n    this.statusCode = code;\n  }\n\n  ok() {\n    this.statusCode = HttpStatus.OK;\n  }\n\n  data(dt, code = HttpStatus.OK) {\n    this.statusCode = code;\n    if (dt && dt.id && dt.type && dt.attributes) {\n      this.dataResponse = {\n        id: dt.id,\n        type: dt.type,\n        attributes: dt.attributes,\n      };\n    } else {\n      this.dataResponse = dt;\n    }\n  }\n\n  error(code = HttpStatus.INTERNAL_SERVER_ERROR, message = 'Unknown Error') {\n    this.statusCode = code;\n    this.errorResponse = {\n      code: this.statusCode,\n      message,\n    };\n  }\n\n  resolve() {\n    if (this.errorResponse) {\n      return this.throwError();\n    }\n\n    if (!this.statusCode) {\n      this.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'No status provided by the api'\n      );\n      return this.throwError();\n    }\n\n    if (!this.dataResponse) {\n      this.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'No data provided by the api'\n      );\n      return this.throwError();\n    }\n\n    return {\n      data: this.dataResponse,\n    };\n  }\n\n  throwError() {\n    throw new Error(\n      `${this.errorResponse.code}: ${this.errorResponse.message}`\n    );\n  }\n}\n\nexport const breadcrumble = path => {\n  if (!path) {\n    throw new Error(\n      `${HttpStatus.UNAUTHORIZED}: A path is required to make api requests`\n    );\n  }\n\n  if (typeof path !== 'string') {\n    throw new Error(\n      `${HttpStatus.BAD_REQUEST}: Breadcrumble path argument must be a string`\n    );\n  }\n\n  const urlSplit = path.split('?');\n  const fullPath = urlSplit[0].split('/');\n  const queryParams = urlSplit[1] || null;\n  const queryResult = {};\n\n  if (queryParams) {\n    const querySplit = queryParams.split('&');\n    for (let i = 0; i < querySplit.length; i++) {\n      const subQuery = querySplit[i].split('=');\n      if (subQuery.length === 2) {\n        const queryName = subQuery[0];\n        let queryValue = subQuery[1];\n        if (queryValue.includes(',')) {\n          queryValue = queryValue.split(',');\n        }\n        queryResult[queryName] = queryValue;\n      }\n    }\n  }\n\n  return {\n    length: fullPath.length - 1,\n    root: fullPath[1],\n    referenceId: fullPath[2] || null,\n    subPath: fullPath[3] || null,\n    queryParams: Object.keys(queryResult).length > 0 ? queryResult : null,\n  };\n};\n\nexport const buildArtistQuery = data => {\n  const { name } = data;\n  const otherNames = data.otherNames || '';\n  const memberList = data.memberList || [];\n  const memberNames = memberList.join(' ');\n  return `${name} ${otherNames} ${memberNames}`.toLowerCase();\n};\n\nexport const buildSongQuery = data => {\n  const { title } = data;\n  const originalArtist = data.originalArtist || '';\n  const album = data.album || '';\n  return `${title} ${originalArtist} ${album}`.toLowerCase();\n};\n\nexport const buildMemberInitials = name =>\n  `${name[0]}${name[Math.floor(name.length / 2)]}`.toUpperCase();\n\nexport const verifyRequirements = (data, id, uid, fields) => {\n  const missing = [];\n  fields.forEach(field => {\n    if (field === 'id' && (id === undefined || id === null)) {\n      missing.push('id');\n    } else if (field === 'uid' && (id === undefined || uid === null)) {\n      missing.push('user uid');\n    } else if (field !== 'id' && field !== 'uid' && data[field] === undefined) {\n      missing.push(field);\n    }\n  });\n\n  if (missing.length > 0) {\n    throw new Error(\n      `${HttpStatus.BAD_REQUEST}: Can NOT perform post request for ${id ||\n        null}, missing the following data: ${missing.join(', ')}`\n    );\n  }\n};\n\nexport const getNumberFromColorId = colorId => Number(colorId.split('0000')[1]);\n\nexport const getAlternativeColor = colorId => {\n  const oni = getNumberFromColorId(colorId);\n  const num = oni + 15;\n  let list = [num, num - 2, num - 1, num + 1, num + 2];\n  list = list.map(item => (item > 30 ? item - 30 : item));\n  return makeSixDigit(list[Math.floor(Math.random() * list.length)]);\n};\n\nexport const makeSixDigit = num => {\n  const pad = '000000';\n\n  // if it's not a number nor a stringified number\n  if (Number.isNaN(Number(num)) || typeof num === 'boolean') {\n    return pad;\n  }\n  const str = num.toString();\n\n  return pad.substring(0, pad.length - str.length) + str;\n};\n\nexport const wait = ms => new Promise((r, j) => setTimeout(r, ms)); // eslint-disable-line\n\nexport const mergeMembers = (unitMembersArr, membersArr) => {\n  const positionsDict = {};\n\n  unitMembersArr.forEach(member => {\n    positionsDict[member.memberId] = member.positions;\n  });\n\n  return membersArr.map(member => ({\n    ...member.attributes,\n    positions: positionsDict[member.id],\n  }));\n};\n\nexport const ensureGenreEnum = genre => {\n  const GENRES_TRANSFORM = {\n    CPOP: 'CPOP',\n    JPOP: 'JPOP',\n    KPOP: 'KPOP',\n    OTHER: 'OTHER',\n    POP: 'POP',\n    'C-POP': 'CPOP',\n    'J-POP': 'JPOP',\n    'K-POP': 'KPOP',\n  };\n\n  return GENRES_TRANSFORM[genre.toUpperCase()];\n};\n\nconst TODAY = Date.now();\nconst ageDict = {};\nexport const calculateAge = birthday => {\n  if (ageDict[birthday]) return ageDict[birthday];\n\n  const birthdateString = birthday.toString();\n  const birthDate = new Date(\n    +birthdateString.substring(0, 4),\n    +birthdateString.substring(4, 6),\n    +birthdateString.substring(6)\n  );\n  const ageDate = new Date(TODAY - birthDate.getTime());\n  ageDict[birthday] = Math.abs(ageDate.getUTCFullYear() - 1970);\n  return ageDict[birthday];\n};\n","export const GENDERS = {\n  FEMALE: 'Female',\n  MALE: 'Male',\n  UNKOWN: 'Unknown',\n};\n\nexport const GENRES = {\n  CPOP: 'C-Pop',\n  JPOP: 'J-Pop',\n  KPOP: 'K-Pop',\n  OTHER: 'Other',\n  POP: 'Pop',\n};\n\nexport const NATIONALITIES = {\n  AMERICAN: 'American',\n  BRAZILIAN: 'Brazilian',\n  BRITISH: 'British',\n  CANADIAN: 'Canadian',\n  CHINESE: 'Chinese',\n  JAPANESE: 'Japanese',\n  KOREAN: 'Korean',\n  OTHER: 'Other',\n  TAIWANESE: 'Taiwanese',\n  THAI: 'Thai',\n  VIETNAMISE: 'Vietnamise',\n};\n\nexport const POSITIONS = {\n  LEADER: 'Leader',\n  MAIN_VOCALIST: 'Main Vocalist',\n  MAIN_RAPPER: 'Main Rapper',\n  MAIN_DANCER: 'Main Dancer',\n  LEAD_VOCALIST: 'Lead Vocalist',\n  LEAD_RAPPER: 'Lead Rapper',\n  LEAD_DANCER: 'Lead Dancer',\n  VOCALIST: 'Vocalist',\n  RAPPER: 'Rapper',\n  DANCER: 'Dancer',\n  CENTER: 'Center',\n  FACE: 'Face of the Group',\n  VISUAL: 'Visual',\n  MAKNAE: 'Maknae',\n};\n\nexport default {\n  GENDERS,\n  GENRES,\n  NATIONALITIES,\n  POSITIONS,\n};\n","/* eslint arrow-body-style: 0 */\nimport _ from 'lodash';\n\nimport {\n  buildArtistQuery,\n  buildMemberInitials,\n  calculateAge,\n  getNumberFromColorId,\n  buildSongQuery,\n} from './utils';\nimport { GENRES } from './enums';\n\nconst UNKNOWN = 'UNKNOWN';\n\nexport const serialize = {\n  artist: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'artist',\n      attributes: {\n        createdBy: data.createdBy || null,\n        genre: GENRES[data.genre] || UNKNOWN,\n        memberIds: data.memberIds || [],\n        memberList: data.memberList || [],\n        modifiedBy: data.modifiedBy || null,\n        name: data.name,\n        otherNames: data.otherNames || '',\n        private: data.private || false,\n        query: data.query || buildArtistQuery(data),\n        units: data.units || [],\n      },\n    };\n  },\n  color: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'color',\n      attributes: {\n        b: data.b,\n        count: data.count || 0,\n        g: data.g,\n        hex: data.hex,\n        name: data.name,\n        number: data.id\n          ? getNumberFromColorId(data.id)\n          : getNumberFromColorId(id),\n        r: data.r,\n      },\n    };\n  },\n  distribution: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'distribution',\n      attributes: {\n        createdBy: data.createdBy || null,\n        features: data.features || [],\n        modifiedBy: data.modifiedBy || null,\n        rates: data.rates,\n        relationships: data.relationships,\n        songId: data.songId,\n      },\n    };\n  },\n  member: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'member',\n      attributes: {\n        age: data.birthdate ? calculateAge(data.birthdate) : 0,\n        altColorId: data.altColorId || null,\n        altColor: data.altColor || null,\n        birthdate: data.birthdate || 0,\n        colorId: data.colorId,\n        color: data.color || null,\n        createdBy: data.createdBy || null,\n        gender: data.gender || UNKNOWN,\n        initials: data.initials || buildMemberInitials(data.name),\n        name: data.name,\n        modifiedBy: data.modifiedBy || null,\n        nationality: data.nationality || UNKNOWN,\n        positions: data.positions || [],\n        private: data.private || false,\n        referenceArtist: data.referenceArtist || UNKNOWN,\n      },\n    };\n  },\n  song: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'song',\n      attributes: {\n        album: data.album || UNKNOWN,\n        createdBy: data.createdBy || null,\n        distribution: data.distribution,\n        groupSize: data.groupSize || 0,\n        modifiedBy: data.modifiedBy || null,\n        originalArtist: data.originalArtist || '',\n        originalArtistId: data.originalArtistId || null,\n        private: data.private || false,\n        query: data.query || buildSongQuery(data),\n        single: data.single || false,\n        title: data.title,\n        videoId: data.videoId || null,\n      },\n    };\n  },\n  unit: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'unit',\n      attributes: {\n        artistId: data.artistId,\n        averages: data.averages || [],\n        createdBy: data.createdBy || null,\n        debutYear: data.debutYear,\n        distributions: data.distributions || [],\n        distributions_legacy: data.distributions_legacy || [],\n        members: data.members ? parseUnitMembers(data.members) : [],\n        modifiedBy: data.modifiedBy || null,\n        name: data.name,\n        official: data.official || false,\n        private: data.private || false,\n      },\n    };\n  },\n  user: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'user',\n      attributes: {\n        email: data.email,\n        favoriteArtists: data.favoriteArtists || {}, // Oject(Reference(Artist):Boolean)\n        favoriteMembers: data.favoriteMembers || {}, // Oject(Reference(Member):Boolean)\n        biases: data.biases || {}, // Object(Reference(Artist):Reference(Member))\n        isAdmin: data.isAdmin || false,\n        latestUnits: data.latesUnits || [],\n        session: data.session || {},\n        displayName: null, // merged from auth\n        photoURL: null, // merged from auth\n      },\n    };\n  },\n};\n\nexport const serializeCollection = (object, type) =>\n  Object.keys(object).map(key => serialize[type](object[key], key));\n\n// Utils\n\nconst parseUnitMembers = membersObj => {\n  const dict = {};\n  Object.keys(membersObj).forEach(key => {\n    const entrySplit = key.split(':');\n    const memberId = entrySplit[0];\n    const memberName = entrySplit[1];\n    const memberPosition = entrySplit[2];\n\n    if (dict[memberId] === undefined) {\n      dict[memberId] = {\n        positions: {},\n      };\n    }\n\n    dict[memberId].memberId = memberId;\n    dict[memberId].name = memberName;\n\n    dict[memberId].positions[memberPosition] = true;\n  });\n\n  return Object.keys(dict).map(entry => {\n    const result = {\n      memberId: dict[entry].memberId,\n      name: dict[entry].name,\n      positions: Object.keys(dict[entry].positions),\n    };\n    return result;\n  });\n};\n","/* eslint arrow-body-style: 0 */\n\nimport {\n  buildMemberInitials,\n  ensureGenreEnum,\n  getAlternativeColor,\n  verifyRequirements,\n} from './utils';\n\nexport const deserialize = {\n  post: {\n    artist: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'uid', 'name']);\n      return {\n        id,\n        createdBy: uid,\n        genre: ensureGenreEnum(data.genre) || 'OTHER',\n        modifiedBy: uid,\n        name: data.name,\n        otherNames: data.otherNames || null,\n        private: data.private || false,\n        units: data.units || [],\n      };\n    },\n    color: (data, id) => {\n      verifyRequirements(data, id, null, ['id', 'name', 'hex', 'r', 'g', 'b']);\n      return {\n        id,\n        b: data.b,\n        g: data.g,\n        hex: data.hex,\n        name: data.name,\n        r: data.r,\n      };\n    },\n    distribution: (data, id, uid) => {\n      verifyRequirements(data, id, uid, [\n        'uid',\n        'songId',\n        'relationships',\n        'rates',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        features: data.features || null,\n        modifiedBy: uid,\n        rates: data.rates,\n        relationships: data.relationships,\n        songId: data.songId,\n      };\n    },\n    log: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'timestamp', 'content']);\n      return {\n        reportedBy: uid || 'ANONYMOUS',\n        timestamp: data.timestamp,\n        content: data.content,\n      };\n    },\n    member: (data, id, uid) => {\n      verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'name',\n        'birthdate',\n        'colorId',\n        'gender',\n        'nationality',\n        'referenceArtist',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        altColorId:\n          data.altColorId || `col${getAlternativeColor(data.colorId)}`,\n        birthdate: data.birthdate,\n        colorId: data.colorId,\n        gender: data.gender,\n        initials: data.initials || buildMemberInitials(data.name),\n        modifiedBy: uid,\n        name: data.name,\n        nationality: data.nationality,\n        private: data.private || false,\n        referenceArtist: data.referenceArtist,\n      };\n    },\n    song: (data, id, uid) => {\n      verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'distribution',\n        'groupSize',\n        'originalArtist',\n        'title',\n        'videoId',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        album: data.album || null,\n        distribution: data.distribution,\n        groupSize: data.groupSize,\n        modifiedBy: uid,\n        originalArtist: data.originalArtist || '',\n        originalArtistId: data.originalArtistId || null,\n        private: data.private || false,\n        single: data.single || false,\n        title: data.title,\n        videoId: data.videoId,\n      };\n    },\n    unit: (data, id, uid) => {\n      verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'artistId',\n        'debutYear',\n        'name',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        artistId: data.artistId,\n        debutYear: data.debutYear,\n        distributions: data.distributions || [],\n        distributions_legacy: data.distributions_legacy || [],\n        modifiedBy: uid,\n        name: data.name,\n        members: data.members || {},\n        official: data.official || false,\n        private: data.private || false,\n      };\n    },\n    user: (data, id) => {\n      verifyRequirements(data, id, null, ['id', 'email']);\n      return {\n        uid: id,\n        email: data.email,\n        favoriteArtists: data.favoriteArtists || {}, // Oject(Reference(Artist):Boolean)\n        favoriteMembers: data.favoriteMembers || {}, // Oject(Reference(Member):Boolean)\n        biases: data.biases || {}, // Object(Reference(Artist):Reference(Member))\n        isAdmin: data.isAdmin || false,\n        latestUnits: data.latesUnits || [],\n        session: data.session || {},\n        displayName: null, // merged from auth\n        photoUrl: null, // merged from auth\n      };\n    },\n  },\n  put: {\n    artist: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n      if (uid) res.modifiedBy = uid;\n      if (data.genre) res.genre = ensureGenreEnum(data.genre);\n      if (data.memberList) res.memberList = data.memberList;\n      if (data.name) res.name = data.name;\n      if (data.otherNames) res.otherNames = data.otherNames;\n      if (data.private) res.private = data.private;\n      if (data.units) res.units = data.units;\n\n      return res;\n    },\n    distribution: (data, id, uid) => {\n      verifyRequirements(data, id, uid, [\n        'uid',\n        'songId',\n        'relationships',\n        'rates',\n      ]);\n      const res = {};\n      if (uid) res.modifiedBy = uid;\n      if (data.songId) res.songId = data.songId;\n      if (data.relationships) res.relationships = data.relationships;\n      if (data.rates) res.rates = data.rates;\n      if (data.features) res.features = data.features;\n\n      return res;\n    },\n    member: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.colorId) {\n        res.colorId = data.colorId;\n        res.altColorId = `col${getAlternativeColor(data.colorId)}`;\n      }\n      if (data.altColorId) res.altColorId = data.altColorId;\n\n      if (data.birthdate) res.birthdate = data.birthdate;\n      if (data.gender) res.gender = data.gender;\n\n      if (data.name) {\n        res.name = data.name;\n        res.initials = buildMemberInitials(data.name);\n      }\n      if (data.initials) res.initials = data.initials;\n\n      if (data.nationality) res.nationality = data.nationality;\n      if (data.positions) res.positions = data.positions;\n\n      if (data.private) res.private = data.private;\n      if (data.referenceArtist) res.referenceArtist = data.referenceArtist;\n\n      return res;\n    },\n    song: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.album) res.album = data.album;\n      if (data.distribution) res.distribution = data.distribution;\n      if (data.groupSize) res.groupSize = data.groupSize;\n      if (data.originalArtist) res.originalArtist = data.originalArtist;\n      if (data.originalArtistId) res.originalArtistId = data.originalArtistId;\n      if (data.single) res.single = data.single;\n      if (data.private) res.private = data.private;\n      if (data.title) res.title = data.title;\n      if (data.videoId) res.videoId = data.videoId;\n\n      return res;\n    },\n    unit: (data, id, uid) => {\n      verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.artistId) res.artistId = data.artistId;\n      if (data.distributions) res.distributions = data.distributions;\n      if (data.distributions_legacy)\n        res.distributions_legacy = data.distributions_legacy;\n      if (data.members) res.members = data.members;\n      if (data.name) res.name = data.name;\n      if (data.official) res.official = data.official;\n      if (data.private) res.private = data.private;\n      if (data.artistId) res.artistId = data.artistId;\n\n      return res;\n    },\n    user: (data, id) => {\n      verifyRequirements(data, id, null, ['id']);\n      const res = {};\n\n      if (data.email) res.email = data.email;\n      if (data.favoriteArtists) res.favoriteArtists = data.favoriteArtists;\n      if (data.favoriteMembers) res.favoriteMembers = data.favoriteMembers;\n      if (data.biases) res.biases = data.biases;\n      if (data.isAdmin) res.isAdmin = data.isAdmin;\n      if (data.latesUnits) res.latesUnits = data.latesUnits;\n      if (data.session) res.session = data.session;\n\n      return res;\n    },\n  },\n};\n\nexport default deserialize;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\n\nexport const fb = firebase.initializeApp(config);\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const userSession = { user: {} };\n\n// Verify user auth session presence\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    userSession.user = user;\n  }\n});\n\nexport default fb;\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_authenticated\", \"_admin\", _loaded, _loggedInThisSession, _uid, _tries] }] */\n/* eslint class-methods-use-this: 0 */\n\nimport firebase from 'firebase';\nimport HttpStatus from 'http-status-codes';\nimport { NewResponse, breadcrumble, wait, mergeMembers } from './utils';\n\nimport { serialize, serializeCollection } from './serializers';\nimport { deserialize } from './deserializers';\n\nimport { fb, googleProvider, userSession } from './firebase';\n\nconst WAIT_DB_TIME = 3500;\nconst WAIT_AUTH_TIME = 2000;\n\nexport const db = {\n  artists: {},\n  colors: {},\n  distributions: {},\n  members: {},\n  positions: {},\n  songs: {},\n  units: {},\n  users: {},\n};\n\nexport const fullyLoaded = {\n  artists: false,\n  colors: false,\n  distributions: false,\n  members: false,\n  positions: false,\n  songs: false,\n  units: false,\n};\n\nexport let dbRef = null; // eslint-disable-line\n\nclass API {\n  constructor() {\n    // const db = {};\n    this._authenticated = false;\n    this._admin = false;\n    this._loaded = false;\n    this._loggedInThisSession = false;\n    this._tries = 0;\n    this._uid = null;\n  }\n\n  dbRef() {\n    return this._loaded ? dbRef : null;\n  }\n\n  /**\n   * Gets basic information about database\n   * @category Getter\n   * @returns {Object}\n   */\n  dbInfo() {\n    console.warn('Fetching DB info...'); // eslint-disable-line\n    const response = new NewResponse();\n\n    response.status(HttpStatus.OK);\n    response.data({\n      admin: this._authenticated ? this._admin : false,\n      authenticated: this._authenticated,\n      loaded: this._loaded,\n    });\n\n    return response.resolve();\n  }\n\n  /**\n   * Creates a reference to the firebase database and updates api loaded status\n   * @category Method\n   * @returns {Boolean}\n   */\n  async init() {\n    console.warn('Running init...'); // eslint-disable-line\n    const response = new NewResponse();\n\n    dbRef = await fb.database();\n\n    if (dbRef) {\n      this._loaded = true;\n      response.status(HttpStatus.OK);\n      response.data(this.dbInfo().data);\n      this._loaded = true;\n    } else {\n      response.error(\n        HttpStatus.BAD_REQUEST,\n        'Failed to load firebase database'\n      );\n    }\n\n    response.resolve();\n    return this;\n  }\n\n  /**\n   * Verifies if the users is still logged from a previous session\n   * @category Method\n   * @returns {Object} user\n   */\n  async auth() {\n    console.warn('Running auth...'); // eslint-disable-line\n    const response = new NewResponse();\n\n    if (!this._loaded) {\n      await wait(WAIT_AUTH_TIME);\n    }\n\n    const { user } = userSession;\n\n    if (user.emailVerified) {\n      this._authenticated = true;\n      this._uid = user.uid;\n\n      let userRes;\n      try {\n        userRes = await this.get(`/users/${user.uid}`);\n      } catch (_) {\n        userRes = await this.post(`/users/${user.uid}`);\n      }\n\n      userRes.data.attributes.displayName = user.displayName;\n      userRes.data.attributes.photoURL = user.photoURL;\n\n      this._admin = userRes.data.attributes.isAdmin;\n      response.data(userRes.data);\n    } else {\n      this._authenticated = false;\n      this._uid = null;\n      response.data({}, HttpStatus.NO_CONTENT);\n    }\n    return response.resolve();\n  }\n\n  async login() {\n    console.warn('Running login...'); // eslint-disable-line\n    const response = new NewResponse();\n\n    let result;\n\n    try {\n      await fb.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n      result = await fb.auth().signInWithPopup(googleProvider);\n    } catch (error) {\n      response.error(error.code, error.message);\n      return response.resolve();\n    }\n\n    try {\n      const { user } = result;\n      if (user.emailVerified) {\n        this._authenticated = true;\n        this._uid = user.uid;\n\n        let userRes;\n        try {\n          userRes = await this.get(`/users/${user.uid}`);\n        } catch (_) {\n          userRes = await this.post(`/users/${user.uid}`);\n        }\n\n        userRes.data.attributes.displayName = user.displayName;\n        userRes.data.attributes.photoURL = user.photoURL;\n\n        this._admin = userRes.data.attributes.isAdmin;\n        response.data(userRes.data);\n      }\n    } catch (error) {\n      response.error(error.code, error.message);\n    }\n\n    return response.resolve();\n  }\n\n  async logoff() {\n    console.warn('Running logout...'); // eslint-disable-line\n    const response = new NewResponse();\n\n    try {\n      await fb.auth().signOut();\n      this._authenticated = false;\n      this._uid = null;\n      response.ok();\n      response.data(true);\n    } catch (error) {\n      response.error(error.code, error.message);\n    }\n\n    return response.resolve();\n  }\n\n  async resyncDatabase() {\n    console.warn('Resyncing database...'); // eslint-disable-line\n\n    // Reset fullyLodaded\n    fullyLoaded.artists = false;\n    fullyLoaded.colors = false;\n    fullyLoaded.distributions = false;\n    fullyLoaded.members = false;\n    fullyLoaded.songs = false;\n    fullyLoaded.units = false;\n\n    const syncDB = {\n      artists: {},\n      positions: {},\n      colors: {},\n      members: {},\n      units: {},\n    };\n\n    // Request DB tables\n    await dbRef.ref(`/artists`).once('value', snapshot => {\n      syncDB.artists = snapshot.val();\n    });\n    await dbRef.ref(`/colors`).once('value', snapshot => {\n      syncDB.colors = snapshot.val();\n    });\n    await dbRef.ref(`/members`).once('value', snapshot => {\n      syncDB.members = snapshot.val();\n    });\n    await dbRef.ref(`/units`).once('value', snapshot => {\n      syncDB.units = snapshot.val();\n    });\n    // TO-DO: Add distributions resync\n\n    // Resync\n    resyncFunctions.parse(syncDB);\n\n    // Post new DB tables\n    await dbRef.ref(`/artists`).set(syncDB.artists, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/colors`).set(syncDB.colors, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/members`).set(syncDB.members, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/positions`).set(syncDB.positions, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/units`).set(syncDB.units, error => {\n      if (error) throw new Error(error);\n    });\n\n    return true;\n  }\n\n  async get(path) {\n    console.warn('Fetching data...', path); // eslint-disable-line\n    /*\n     * List of possible get calls:\n     * /artists\n     * /artists/<id>\n     * /artists/<id>/units\n     * /colors\n     * /colors/<id>\n     * /members\n     * /members/<id>\n     * /positions\n     * /songs\n     * /songs/<id>\n     * /units/<id>\n     * /units/<id>/distribution\n     * /units/<id>/members\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      await wait(WAIT_DB_TIME);\n\n      if (!this._loaded || !this._authenticated) {\n        return this.throwDBError('GET');\n      }\n    }\n\n    const route = breadcrumble(path);\n    let result;\n\n    switch (route.root) {\n      // API/artists\n      case 'artists':\n        // API/artists/<id>/units\n        if (route.referenceId && route.subPath === 'units') {\n          result = await getFunctions.fetchArtistUnits(route.referenceId);\n        }\n        // API/artists/<id>\n        else if (route.referenceId) {\n          result = await getFunctions.fetchArtist(route.referenceId);\n        }\n        // API/aritsts\n        else {\n          result = await getFunctions.fetchArtists();\n        }\n        break;\n      // API/colors\n      case 'colors':\n        // API/colors/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchColor(route.referenceId);\n        }\n        // API/colors\n        else {\n          result = await getFunctions.fetchColors();\n        }\n        break;\n      case 'members':\n        // API/members/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchMember(route.referenceId);\n        }\n        // API/members\n        else {\n          result = await getFunctions.fetchMembers();\n        }\n        break;\n      // API/positions\n      case 'positions':\n        // TO-DO: fetch all positions\n        break;\n      // API/songs\n      case 'songs':\n        // API/songs/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchSong(route.referenceId);\n        }\n        // API/songs\n        else {\n          result = await getFunctions.fetchSongs();\n        }\n        break;\n      // API/units\n      case 'units':\n        // API/units/<id>/distributions\n        if (route.referenceId && route.subPath === 'distributions') {\n          result = await getFunctions.fetchUnitDistributions(route.referenceId);\n        }\n        // API/units/<id>/members\n        else if (route.referenceId && route.subPath === 'members') {\n          result = await getFunctions.fetchUnitMembers(route.referenceId);\n        }\n        // API/units/<id>\n        else if (route.referenceId) {\n          result = await getFunctions.fetchUnit(route.referenceId);\n        }\n        break;\n      // API/users\n      case 'users':\n        // API/users/<id>\n        result = await getFunctions.fetchUser(route.referenceId);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async post(path, body) {\n    console.warn('Writting data...', path); // eslint-disable-line\n    /*\n     * List of possible post calls:\n     * /artists\n     * /distributions\n     * /members\n     * /songs\n     * /units\n     * /users\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('POST');\n    }\n\n    const route = breadcrumble(path);\n    let result;\n\n    switch (route.root) {\n      // API/artists/<id>\n      case 'artists':\n        result = await postFunctions.createArtist(body, this._uid);\n        break;\n      // API/distributions/<id>\n      case 'distributions':\n        result = await postFunctions.createDistribution(body, this._uid);\n        break;\n      // API/log/<id>\n      case 'log':\n        result = await postFunctions.createLogEntry(\n          body,\n          this._uid,\n          route.referenceId\n        );\n        break;\n      // API/members/<id>\n      case 'members':\n        result = await postFunctions.createMember(body, this._uid);\n        break;\n      // API/songs/<id>\n      case 'songs':\n        result = await postFunctions.createSong(body, this._uid);\n        break;\n      // API/units/<id>\n      case 'units':\n        result = await postFunctions.createUnit(body, this._uid);\n        break;\n      // API/users/<id>\n      case 'users':\n        result = await postFunctions.createUser(body, this._uid);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async put(path, body) {\n    console.warn('Updating data...', path); // eslint-disable-line\n    /*\n     * List of possible put calls:\n     * /artists/<id>\n     * /distributions/<id>\n     * /members/<id>\n     * /songs/<id>\n     * /units/<id>\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('PUT');\n    }\n\n    const route = breadcrumble(path);\n    let result;\n\n    if (!route.referenceId) {\n      // TO-DO: throw error\n    }\n\n    switch (route.root) {\n      // API/artists/<id>\n      case 'artists':\n        result = await putFunctions.updateArtist(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/distributions/<id>\n      case 'distributions':\n        result = await putFunctions.updateDistribution(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/members/<id>\n      case 'members':\n        result = await putFunctions.updateMember(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/songs/<id>\n      case 'songs':\n        result = await putFunctions.updateSong(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/units/<id>\n      case 'units':\n        result = await putFunctions.updateUnit(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/users/<id>\n      case 'users':\n        if (route.subPath === 'biases') {\n          result = await putFunctions.updateUserBiases(route.referenceId, body);\n        } else if (route.subPath === 'favorite-artists') {\n          result = await putFunctions.updateUserFavoriteArtists(\n            route.referenceId,\n            body\n          );\n        } else if (route.subPath === 'favorite-members') {\n          result = await putFunctions.updateUserFavoriteMembers(\n            route.referenceId,\n            body\n          );\n        } else if (route.subPath === 'latest-units') {\n          result = await putFunctions.updateUserLatestUnits(\n            route.referenceId,\n            body\n          );\n        } else {\n          result = await putFunctions.updateUser(route.referenceId, body);\n        }\n\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async delete(path) {\n    console.warn('Deleting data...', path); // eslint-disable-line\n    /*\n     * List of possible delete calls:\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('DELETE');\n    }\n\n    if (!path) {\n      return this.throwPathError('DELETE', 'path');\n    }\n\n    const route = breadcrumble(path);\n    let result;\n\n    if (!route.referenceId) {\n      // TO-DO: throw error\n    }\n\n    switch (route.root) {\n      // API/users/<id>\n      case 'users':\n        result = await deleteFunctions.destroyUser(route.referenceId);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  /**\n   * Throws database related errors\n   * @category Method\n   * @param {String} action\n   * @throws Error\n   */\n  throwDBError(action = '') {\n    const response = new NewResponse();\n    if (!this._loaded) {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, database is not ready`\n      );\n    } else if (!this._authenticated) {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, you are not logged in`\n      );\n    }\n\n    return response.resolve();\n  }\n\n  /**\n   * Throws api methods related errors\n   * @category Method\n   * @param {String} action\n   * @param {String} type\n   * @throws Error\n   */\n  throwPathError(action = '', type = 'path') {\n    const response = new NewResponse();\n    if (this._loaded && type === 'body') {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, data was not provided`\n      );\n    } else if (this._loaded && type === 'path') {\n      response.error(\n        HttpStatus.BAD_REQUEST,\n        `Unable to perform ${action} action, path doesn't exist`\n      );\n    } else {\n      response.error();\n    }\n\n    return response.resolve();\n  }\n\n  async test() {\n    let r = 'bola';\n    await this.dbRef().once('value', snap => {\n      r = snap.val();\n      return r;\n    });\n\n    return r;\n  }\n\n  async getDB() {\n    return db;\n  }\n\n  async setter(key, value) {\n    this[key] = value;\n    return value;\n  }\n}\n\nconst getFunctions = {\n  // Fetches all artists\n  fetchArtists: async () => {\n    if (fullyLoaded.artists === false) {\n      // TO-DO: Add 00 id to database, remove it in the serializer collection for a better cache check\n      let response = {};\n      await dbRef.ref(`/artists`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists = response;\n      fullyLoaded.artists = true;\n    }\n    return serializeCollection(db.artists, 'artist');\n  },\n  // Fetches single artist\n  fetchArtist: async id => {\n    if (!db.artists[id]) {\n      let response = {};\n      await dbRef.ref(`/artists/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists[id] = response;\n    }\n    return serialize.artist(db.artists[id], id);\n  },\n  // Fetches units from a single artist\n  fetchArtistUnits: async id => {\n    const artist = await getFunctions.fetchArtist(id);\n    const response = await artist.attributes.units.map(unitId =>\n      getFunctions.fetchUnit(unitId)\n    );\n    return Promise.all(response);\n  },\n  // Fetches all colors\n  fetchColors: async () => {\n    if (fullyLoaded.colors === false) {\n      let response = {};\n      await dbRef.ref(`/colors`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.colors = response;\n      fullyLoaded.artists = true;\n    }\n    return serializeCollection(db.colors, 'color');\n  },\n  // Fetches single color\n  fetchColor: async id => {\n    if (!db.colors[id]) {\n      let response = {};\n      await dbRef.ref(`/colors/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.colors[id] = response;\n    }\n    return serialize.color(db.colors[id], id);\n  },\n  // Fetches single distribution\n  fetchDistribution: async id => {\n    if (!db.distributions[id]) {\n      let response = {};\n      await dbRef.ref(`/distributions/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.distributions[id] = response;\n    }\n    return serialize.distribution(db.distributions[id], id);\n  },\n  // Fetches all members\n  fetchMembers: async () => {\n    if (fullyLoaded.members === false) {\n      let response = {};\n      await dbRef.ref(`/members`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.members = response;\n      fullyLoaded.members = true;\n    }\n    return serializeCollection(db.members, 'member');\n  },\n  // Fetches single member\n  fetchMember: async id => {\n    if (!db.members[id]) {\n      let response = {};\n      await dbRef.ref(`/members/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n\n      const { altColorId = 'default', colorId = 'default' } = response;\n      if (colorId) {\n        const color = await getFunctions.fetchColor(colorId);\n        response.color = {\n          ...color.attributes,\n          id: color.id,\n        };\n      }\n      if (altColorId) {\n        const altColor = await getFunctions.fetchColor(altColorId);\n        response.altColor = {\n          ...altColor.attributes,\n          id: altColor.id,\n        };\n      }\n\n      db.members[id] = response;\n    }\n    return serialize.member(db.members[id], id);\n  },\n  // Fetches all songs\n  fetchSongs: async () => {\n    if (fullyLoaded.songs === false) {\n      // TO-DO: Add 00 id to database, remove it in the serializer collection for a better cache check\n      let response = {};\n      await dbRef.ref(`/songs`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs = response;\n      fullyLoaded.songs = true;\n    }\n    return serializeCollection(db.songs, 'song');\n  },\n  // Fetches single song\n  fetchSong: async id => {\n    if (!db.songs[id]) {\n      let response = {};\n      await dbRef.ref(`/songs/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs[id] = response;\n    }\n    return serialize.song(db.songs[id], id);\n  },\n  // Fetches single unit\n  fetchUnit: async id => {\n    if (!db.units[id]) {\n      let response = {};\n      await dbRef.ref(`/units/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.units[id] = response;\n    }\n    return serialize.unit(db.units[id], id);\n  },\n  // Fetches units from a single artist\n  fetchUnitDistributions: async id => {\n    const unit = await getFunctions.fetchUnit(id);\n    const response = await unit.attributes.distributions.map(distributionId =>\n      getFunctions.fetchDistribution(distributionId)\n    );\n    return Promise.all(response);\n  },\n  // Fetches units from a single artist\n  fetchUnitMembers: async id => {\n    const unit = await getFunctions.fetchUnit(id);\n    const membersResponse = await unit.attributes.members.map(member =>\n      getFunctions.fetchMember(member.memberId)\n    );\n\n    const promiseResponse = await Promise.all(membersResponse);\n\n    const response = promiseResponse.map((member, index) => {\n      member.attributes.id = member.id;\n      member.attributes.positions = unit.attributes.members[index].positions;\n      return member;\n    });\n    return mergeMembers(unit.attributes.members, response);\n  },\n  // Fetches single user\n  fetchUser: async id => {\n    if (!db.users[id]) {\n      let response = {};\n      await dbRef.ref(`/users/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.users[id] = response;\n    }\n    return serialize.user(db.users[id], id);\n  },\n};\n\nconst postFunctions = {\n  // Creates single artist\n  createArtist: async (body, uid) => {\n    const key = await dbRef.ref(`/artists`).push().key;\n    const data = deserialize.post.artist(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/artists/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Artist ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.artists[key] = response;\n    fullyLoaded.artists = false;\n    return serialize.artist(db.artists[key]);\n  },\n  // Creates single color\n  // TO-DO: Delete this after feeding firebase\n  createColor: async body => {\n    const key = await dbRef.ref(`/colors`).push().key;\n    const data = deserialize.post.color(body, key);\n    let response = {};\n    await dbRef.ref(`/colors/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Color ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.colors[key] = response;\n    fullyLoaded.colors = false;\n    return serialize.color(db.colors[key]);\n  },\n  // Creates single distribution\n  createDistribution: async (body, uid) => {\n    const key = await dbRef.ref(`/distributions`).push().key;\n    const data = deserialize.post.distribution(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/distributions/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create distribution ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.distributions[key] = response;\n    return serialize.distribution(db.distributions[key]);\n  },\n  // Creates single log entry\n  createLogEntry: async (body, uid, subRoute) => {\n    const key = await dbRef.ref(`/log/${subRoute}`).push().key;\n    const data = deserialize.post.log(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/log/${subRoute}/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to log entry ${key}: ${data.content}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    return response;\n  },\n  // Creates single member\n  createMember: async (body, uid) => {\n    const key = await dbRef.ref(`/members`).push().key;\n    const data = deserialize.post.member(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/members/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Member ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.members[key] = response;\n    fullyLoaded.members = false;\n    return serialize.member(db.members[key]);\n  },\n  // Creates single song\n  createSong: async (body, uid) => {\n    const key = await dbRef.ref(`/songs`).push().key;\n    const data = deserialize.post.song(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/songs/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Song ${key}: ${data.title}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.songs[key] = response;\n    fullyLoaded.songs = false;\n    return serialize.song(db.songs[key]);\n  },\n  // Creates single unit\n  createUnit: async (body, uid) => {\n    const key = await dbRef.ref(`/units`).push().key;\n    const data = deserialize.post.unit(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/units/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Unit ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.units[key] = response;\n    fullyLoaded.units = false;\n    return serialize.unit(db.units[key]);\n  },\n  // Creates single user\n  createUser: async (body, uid) => {\n    const key = uid;\n    const data = deserialize.post.user(body, key);\n    let response = {};\n    await dbRef.ref(`/users/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create User ${key}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.users[key] = response;\n    return serialize.user(db.users[key]);\n  },\n};\n\nconst putFunctions = {\n  // Updates single artist\n  updateArtist: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.artist(body, key, uid);\n    await dbRef.ref(`/artists/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Artist ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/artists/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.artists[key] = response;\n    fullyLoaded.artists = false;\n    return serialize.artist(db.artists[key]);\n  },\n  // Updates single distribution\n  updateDistribution: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.distribution(body, key, uid);\n    await dbRef.ref(`/distributions/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update distribution ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/distributions/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.distributions[key] = response;\n    return serialize.distribution(db.distributions[key]);\n  },\n  // Updates single member\n  updateMember: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.member(body, key, uid);\n    await dbRef.ref(`/members/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Member ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/members/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.members[key] = response;\n    fullyLoaded.members = false;\n    return serialize.member(db.members[key]);\n  },\n  // Updates single song\n  updateSong: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.song(body, key, uid);\n    await dbRef.ref(`/songs/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Song ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/songs/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.songs[key] = response;\n    fullyLoaded.songs = false;\n    return serialize.song(db.songs[key]);\n  },\n  // Updates single unit\n  updateUnit: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.unit(body, key, uid);\n    await dbRef.ref(`/units/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Unit ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/units/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.units[key] = response;\n    fullyLoaded.units = false;\n    return serialize.unit(db.units[key]);\n  },\n  // Updates single user\n  updateUser: async (id, body) => {\n    const key = id;\n    const data = deserialize.put.user(body, key);\n    await dbRef.ref(`/users/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update User ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/users/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.users[key] = response;\n    return serialize.user(db.users[key]);\n  },\n  updateUserBiases: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/biases`).set(body, error => {\n      if (error) {\n        const message = `Failed to update User's Biases ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserFavoriteArtists: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/favoriteArtists`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Artists ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserFavoriteMembers: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/favoriteMembers`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Members ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserLatestUnits: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/latestUnits`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Members ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n};\n\nconst deleteFunctions = {\n  // Destroys single user\n  destroyUser: async (id, uid) => {\n    if (id === uid) {\n      await dbRef.ref(`/users/${uid}`).remove();\n      return { [id]: true };\n    }\n  },\n};\n\nconst resyncFunctions = {\n  parse: database => {\n    // Run reseters\n    resyncFunctions.resetAristsArrays(database);\n    resyncFunctions.resetMemberPositions(database);\n    // Run parsers\n    resyncFunctions.parseUnits(database);\n    resyncFunctions.parseMembers(database);\n    resyncFunctions.parseArtists(database);\n    resyncFunctions.parseDistributions(database);\n  },\n  resetAristsArrays: database => {\n    Object.values(database.artists).forEach(artist => {\n      artist.units = [];\n      artist.memberIds = [];\n      artist.memberList = [];\n    });\n  },\n  resetMemberPositions: database => {\n    Object.values(database.members).forEach(member => (member.positions = []));\n  },\n  parseUnits: database => {\n    Object.keys(database.units).forEach(unitId => {\n      const unit = database.units[unitId];\n      // Add artistId to artist\n      const artist = database.artists[unit.artistId];\n      if (artist.units) {\n        artist.units.push(unitId);\n      } else {\n        artist.units = [unitId];\n      }\n\n      // Parse positions\n      const membersPositions = resyncFunctions.parsePositions(\n        database,\n        unit.members\n      );\n\n      // Add members to artist memberIds and memberList\n      const memberIds = [];\n      const memberList = [];\n      Object.values(membersPositions).forEach(value => {\n        memberIds.push(value.memberId);\n        memberList.push(value.name);\n        // Add positions to each member\n        database.members[value.memberId].positions = database.members[\n          value.memberId\n        ].positions.concat(value.positions);\n      });\n      if (artist.memberIds) {\n        artist.memberIds = artist.memberIds.concat(memberIds);\n        artist.memberList = artist.memberList.concat(memberList);\n      } else {\n        artist.memberIds = memberIds;\n        artist.memberList = memberList;\n      }\n    });\n  },\n  parseMembers: database => {\n    // Reset all color counts\n    Object.values(database.colors).forEach(color => {\n      color.count = 0;\n    });\n\n    Object.values(database.members).forEach(member => {\n      // Add member color to color count\n      const { colorId } = member;\n      database.colors[colorId].count++;\n\n      // Sort and make positions unique\n      member.positions = [...new Set(member.positions)].sort();\n    });\n  },\n  parseArtists: database => {\n    Object.values(database.artists).forEach(artist => {\n      // Order units by debutYear\n      const unitDict = {};\n      artist.units.forEach(unitId => {\n        const currentUnit = database.units[unitId];\n        let key = currentUnit.debutYear;\n        if (unitDict[key]) {\n          key = Number(`${key}1`);\n        }\n        unitDict[key] = unitId;\n      });\n      // Sort by year\n      artist.units = Object.keys(unitDict)\n        .sort()\n        .map(year => unitDict[year]);\n\n      // Sort memberList by name and make it unique, same with memberIds\n      const memberDict = {};\n      artist.memberList.forEach((name, index) => {\n        if (memberDict[name] === undefined) {\n          memberDict[name] = artist.memberIds[index];\n        }\n      });\n      // Make names unique\n      artist.memberList = [...new Set(artist.memberList)];\n      // Sort names\n      artist.memberList.sort();\n      // Parse ids\n      artist.memberIds = artist.memberList.map(name => memberDict[name]);\n    });\n  },\n  parseDistributions: () => {\n    //\n  },\n  parsePositions: (database, unitMembers) => {\n    const memberDict = {};\n\n    Object.keys(unitMembers).forEach(key => {\n      const [memberId, name, position] = key.split(':');\n      // Parse member dict to be returned\n      if (memberDict[memberId]) {\n        memberDict[memberId].positions.push(position);\n      } else {\n        memberDict[memberId] = {\n          memberId,\n          name,\n          positions: [position],\n        };\n      }\n      // Refactor positions (action parsePositions)\n      if (database.positions[position] === undefined) {\n        database.positions[position] = {};\n      }\n      database.positions[position][memberId] = true;\n    });\n\n    return memberDict;\n  },\n};\n\nexport default new API();\n","/* eslint wrap-iife: 0 */\n/* eslint func-names: 0 */\n\nimport _ from 'lodash';\n\n/**\n * Parsers bem classes accepting two or more arguments\n * @param {String} block\n * @param {String} modifiers\n * @param {String} element\n * @param {extra} extras\n * @returns {string} bem-class\n */\nconst bem = (...args) => {\n  const block = args[0];\n  let modifiers = args[1] || '';\n  let element = args[2];\n  let extras = args[3] || [];\n\n  const hasBlock = block !== undefined && block !== null && block !== '';\n  const hasModifiers =\n    modifiers !== undefined &&\n    modifiers !== null &&\n    modifiers !== '' &&\n    modifiers.length > 0;\n  const hasElement =\n    element !== undefined && element !== null && element !== '';\n  const hasExtras =\n    extras !== undefined &&\n    extras !== null &&\n    extras !== '' &&\n    extras.length > 0;\n\n  // Prepare modifiers\n  if (hasModifiers) {\n    if (typeof modifiers === 'string') {\n      modifiers = [modifiers];\n    }\n    modifiers = modifiers.map(m => `--${m}`);\n  }\n  // Prepare element\n  if (hasElement) {\n    element = `__${element}`;\n  }\n  // Prepare Extras\n  if (hasExtras) {\n    if (typeof extras === 'string') {\n      extras = [extras];\n    }\n  }\n\n  // No Block\n  if (!hasBlock) {\n    throw new Error('Block string missing');\n  }\n\n  let classes = block;\n\n  // Only Modifiers\n  if (hasModifiers && !hasElement) {\n    modifiers.forEach(m => {\n      classes += ` ${block}${m}`;\n    });\n  }\n\n  // Only Element\n  if (hasElement && !hasModifiers) {\n    classes = ` ${block}${element}`;\n  }\n\n  // Modifiers and Element\n  if (hasElement && hasModifiers) {\n    classes += `${element}`;\n    modifiers.forEach(m => {\n      classes += ` ${block}${element}${m}`;\n    });\n  }\n\n  return `${classes} ${extras.join(' ')}`.trim();\n};\n\n/**\n * Loops through members and reassign colors if they are duplicated\n * @param {Array} members\n * @returns {Array} members with unique colors\n */\nconst ensureColorUniqueness = members => {\n  const membersList = _.cloneDeep(members);\n  const dict = {};\n  const refactoredMembers = [];\n  // Loop through members and make color dict\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    if (dict[colorId] === undefined) {\n      dict[colorId] = 1;\n    } else {\n      dict[colorId] += 1;\n    }\n  });\n\n  // Loop again and check for uniqueness, unique stays\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    const altColorId = member.altColor.id;\n    if (dict[colorId] > 1) {\n      if (dict[altColorId] === undefined) {\n        const oldColor = member.color;\n        member.color = member.altColor;\n        member.altColor = oldColor;\n      } else {\n        console.warn(`Duplicated color for member ${member.id}`);\n      }\n    }\n    refactoredMembers.push(member);\n  });\n  return refactoredMembers;\n};\n\nconst capitalizeWord = (str, separator = ' ') =>\n  str\n    .toString()\n    .split(separator)\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(separator);\n\nconst spinalCaseWord = str =>\n  str\n    .toLowerCase()\n    .split(' ')\n    .join('-');\n\nconst parseBirthDate = d => {\n  const date = `${d}`;\n  if (date.length < 5) {\n    return date;\n  }\n  if (date.length === 8) {\n    const year = date.substring(0, 4);\n    const month = date.substring(4, 6);\n    const day = date.substring(6);\n    return `${month}/${day}/${year}`;\n  }\n  return '?';\n};\n\nconst parseResponse = response => {\n  const responseParser = obj => {\n    return {\n      id: obj.id,\n      ...obj.attributes,\n    };\n  };\n\n  // Response has a single object instance without the \"data\" object\n  if (response && response.id && response.attributes) {\n    return responseParser(response);\n  }\n\n  // Response has a \"data\" object\n  if (response && response.data) {\n    response = response.data;\n\n    // If response.data is not an array\n    if (response && response.id && response.attributes) {\n      return responseParser(response);\n    }\n\n    if (Array.isArray(response)) {\n      const result = [];\n      for (let i = 0; i < response.length; i++) {\n        result.push(responseParser(response[i]));\n      }\n      return result;\n    }\n  }\n\n  throw new Error('parserResponse failed. Object is not a response');\n};\n\nconst parseResponseToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = {\n          id: instance.id,\n          ...instance.attributes,\n        };\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseArrayToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = instance;\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseQueryParams = query => {\n  if (!query) return null;\n\n  if (query[0] === '?') {\n    query = query.substring(1);\n  }\n\n  const params = {};\n  query.split('&').forEach(item => {\n    const pair = item.split('=');\n    const key = pair[0];\n    if (key) {\n      params[key] = pair[1] || null;\n    }\n  });\n\n  return params;\n};\n\nconst humanize = (string, option = 'Sentence') => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or -\n  string = string.replace(/([\\-|\\_])/g, ' '); // eslint-disable-line\n\n  function captalizeFirstLetter(word) {\n    return word[0].toUpperCase() + word.substring(1);\n  }\n\n  switch (option) {\n    case 'Sentence':\n      return captalizeFirstLetter(string);\n    case 'Capital':\n      return string\n        .split(' ')\n        .map(word => captalizeFirstLetter(word))\n        .join(' ');\n    default:\n      return string;\n  }\n};\n\nconst camelCase = string => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or -\n  string = string.replace(/([\\-|\\_])/g, ' '); // eslint-disable-line\n\n  return string\n    .split(' ')\n    .map((word, index) => {\n      if (index === 0) return word;\n      return word[0].toUpperCase() + word.substring(1);\n    })\n    .join('');\n};\n\nconst spiralCase = string => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or ' ' or :\n  return string.replace(/([\\-\\_\\ \\:])/g, '-'); // eslint-disable-line\n};\n\nconst getColorNumber = (colorId = 'col000000') => Number(colorId.substring(7));\n\nconst spiralBirthdate = date => {\n  const dateStr = date.toString();\n  return `${dateStr.substring(0, 4)}-${dateStr.substring(\n    4,\n    6\n  )}-${dateStr.substring(6)}`;\n};\n\nconst makePositionsEditable = positions => {\n  const result = {};\n  positions.forEach(position => {\n    const pos = spiralCase(position);\n    result[pos] = pos;\n  });\n  return result;\n};\n\nconst insertAtCursor = (field, valueToInsert) => {\n  if (\n    (field.selectionStart || field.selectionStart === 0) &&\n    field.selectionStart === field.selectionEnd\n  ) {\n    const startPos = field.selectionStart;\n    const endPos = field.selectionEnd;\n    field.value =\n      field.value.substring(0, startPos) +\n      valueToInsert +\n      field.value.substring(endPos, field.value.length);\n  }\n  return field.value;\n};\n\nconst getMostImportantPosition = positions => {\n  const POSITIONS_IMPORTANT_ORDER = [\n    'ALL',\n    'NONE',\n    'MAIN_VOCALIST',\n    'MAIN_RAPPER',\n    'MAIN_DANCER',\n    'LEAD_VOCALIST',\n    'LEAD_RAPPER',\n    'LEAD_DANCER',\n    'VOCALIST',\n    'RAPPER',\n    'DANCER',\n  ];\n\n  for (let i = 0; i < POSITIONS_IMPORTANT_ORDER.length; i++) {\n    if (positions.includes(POSITIONS_IMPORTANT_ORDER[i])) {\n      return POSITIONS_IMPORTANT_ORDER[i];\n    }\n  }\n\n  return 'VOCALIST';\n};\n\nexport default {\n  bem,\n  camelCase,\n  capitalizeWord,\n  ensureColorUniqueness,\n  getColorNumber,\n  getMostImportantPosition,\n  humanize,\n  insertAtCursor,\n  makePositionsEditable,\n  parseBirthDate,\n  parseQueryParams,\n  parseArrayToObject,\n  parseResponse,\n  parseResponseToObject,\n  spiralBirthdate,\n  spiralCase,\n  spinalCaseWord,\n};\n","import { all, call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport _ from 'lodash';\n\nimport API from '../api';\n\nimport { types } from '../reducers';\nimport utils from '../utils';\nimport constants from '../utils/constants';\n\n// Delay helper to make API look more realistic\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nconst DELAY_DURATION = process.env.NODE_ENV === 'development' ? 500 : 0;\n\n// API Workers\n\n/**\n * Initializes database, check for existing auth session, and load colors\n * @param {object} action\n */\nfunction* initializer(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const dbStart = yield API.init();\n    const status = dbStart.dbInfo();\n    yield put({ type: types.SET_DATABASE_READY, payload: status.data.loaded });\n\n    yield delay(DELAY_DURATION);\n\n    let loggedUser = yield API.auth();\n    loggedUser = loggedUser.data.attributes ? loggedUser.data : null;\n    if (loggedUser) {\n      const user = utils.parseResponse(loggedUser);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Welcome back!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: error,\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestArtists(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/artists');\n    const artistList = utils.parseResponse(response);\n    const sortedArtistList = _.sortBy(artistList, [a => a.name.toLowerCase()]);\n    yield put({ type: types.SET_ARTISTS, payload: sortedArtistList });\n\n    const artistsTypeahead = [];\n    const artistsTypeaheadDict = {};\n\n    sortedArtistList.forEach(artist => {\n      artistsTypeahead.push(artist.name);\n      artistsTypeaheadDict[artist.name] = artist.id;\n    });\n    yield put({ type: types.SET_ARTISTS_TYPEAHEAD, payload: artistsTypeahead });\n    yield put({\n      type: types.SET_ARTISTS_TYPEAHEAD_DICT,\n      payload: artistsTypeaheadDict,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load artists database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestArtist(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { artistId, panels, state } = action;\n  let { queryParams } = action;\n\n  let selectedArtist = {};\n\n  // Fetch Artist\n  try {\n    const response = yield API.get(`/artists/${artistId}`);\n    selectedArtist = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load artist ${artistId} from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  // Select default unit id\n  queryParams = utils.parseQueryParams(queryParams);\n  let selectedUnitId = selectedArtist.units[0];\n  let unitIndex = 0;\n  if (\n    queryParams &&\n    queryParams.unit &&\n    selectedArtist.units.includes(queryParams.unit)\n  ) {\n    selectedUnitId = queryParams.unit;\n    unitIndex = selectedArtist.units.indexOf(selectedUnitId);\n  }\n\n  // Fetch Artist's Units\n  try {\n    const response = yield API.get(`/artists/${artistId}/units`);\n    selectedArtist.units = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load artist ${artistId}'s units from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  // Just send artist if dealing with Manage Artist\n  if (state === 'edit') {\n    selectedArtist.state = 'edit';\n\n    const unitsTypeahead = [];\n    const unitsTypeaheadDict = {};\n\n    selectedArtist.units.forEach(unit => {\n      unitsTypeahead.push(unit.name);\n      unitsTypeaheadDict[unit.name] = unit.id;\n    });\n    yield put({ type: types.SET_UNITS_TYPEAHEAD, payload: unitsTypeahead });\n    yield put({\n      type: types.SET_UNITS_TYPEAHEAD_DICT,\n      payload: unitsTypeaheadDict,\n    });\n\n    selectedArtist.genre = constants.GENRES_DB[selectedArtist.genre];\n\n    yield put({ type: types.SET_EDITING_ARTIST, payload: selectedArtist });\n    yield put({ type: types.SET_PANELS, payload: panels });\n  } else {\n    // Fetch complete unit for default unit\n    const selectedUnit = yield call(requestUnit, {\n      unitId: selectedUnitId,\n    });\n\n    selectedArtist.units[unitIndex] = selectedUnit;\n\n    yield put({ type: types.SET_ARTIST_PAGE_TAB, payload: selectedUnitId });\n    yield put({ type: types.SET_SELECTED_ARTIST, payload: selectedArtist });\n    yield put({ type: types.SET_SELECTED_UNIT, payload: selectedUnit });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestColors(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/colors');\n    const colorsList = utils.parseResponseToObject(response);\n    yield put({ type: types.SET_COLORS, payload: colorsList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load colors database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestMembers(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/members');\n    const membersList = utils.parseResponse(response);\n    const sortedMembersList = _.sortBy(membersList, [\n      m => m.name.toLowerCase(),\n    ]);\n    yield put({ type: types.SET_MEMBERS, payload: sortedMembersList });\n\n    const membersTypeahead = [];\n    const membersTypeaheadDict = {};\n\n    sortedMembersList.forEach(member => {\n      const key = `${member.name} (${member.referenceArtist})`;\n      membersTypeahead.push(key);\n      membersTypeaheadDict[key] = member.id;\n    });\n    yield put({ type: types.SET_MEMBERS_TYPEAHEAD, payload: membersTypeahead });\n    yield put({\n      type: types.SET_MEMBERS_TYPEAHEAD_DICT,\n      payload: membersTypeaheadDict,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load members database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestSongs(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/songs');\n    const songsList = utils.parseResponse(response);\n    const sortedSongsList = _.sortBy(songsList, [s => s.title.toLowerCase()]);\n    yield put({ type: types.SET_SONGS, payload: sortedSongsList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load songs database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestUnit({ type, unitId, selectedArtist, unitIndex }) {\n  const actionType = 'REQUEST_UNIT';\n  yield put({ type: 'PENDING', actionType });\n  yield delay(DELAY_DURATION);\n\n  let unit = {};\n  try {\n    const response = yield API.get(`/units/${unitId}`);\n    unit = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n\n  // Fetch members\n  let members = {};\n  try {\n    const response = yield API.get(`/units/${unitId}/members`);\n    members = utils.parseArrayToObject(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load members from unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n  unit.members = members;\n\n  // Fetch distributions and merge\n\n  // Fetch legacy distributions and merge\n\n  // Calculate averages\n\n  // Flag unit as complete\n  unit.complete = true;\n\n  // The following if statements are used when the unit tab is updated in the UI\n  if (type) {\n    yield put({ type: types.SET_SELECTED_UNIT, payload: unit });\n  }\n  if (selectedArtist) {\n    selectedArtist.units[unitIndex] = unit;\n    yield put({ type: types.SET_SELECTED_ARTIST, payload: selectedArtist });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType });\n  return unit;\n}\n\nfunction* requestUnitMembers({ type, unitId, panels }) {\n  yield put({ type: 'PENDING', actionType: type });\n  yield delay(DELAY_DURATION);\n\n  let members = [];\n  if (unitId) {\n    try {\n      const response = yield API.get(`/units/${unitId}/members`);\n      members = response.data;\n    } catch (error) {\n      yield put({\n        type: 'ERROR',\n        message: [\n          `Unable to load members from unit ${unitId} from database`,\n          error.toString(),\n        ],\n        actionType: type,\n      });\n    }\n  }\n\n  // Make colors in use dict\n  const colorsInUse = {};\n  members.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n\n  yield put({ type: types.SET_COLORS_IN_USE, payload: colorsInUse });\n  yield put({ type: types.SET_EDITING_MEMBERS, payload: members });\n  yield put({ type: types.SET_PANELS, payload: panels });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: type });\n  return members;\n}\n\nfunction* resyncDatabase(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.resyncDatabase();\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [`Unable to resync database`, error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  // When done, re-request artists, colors, and members\n  yield put({ type: 'REQUEST_ARTISTS' });\n  yield put({ type: 'REQUEST_COLORS' });\n  yield put({ type: 'REQUEST_MEMBERS' });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* runLogin(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    let loggedUser = yield API.login();\n    loggedUser = loggedUser.data.attributes ? loggedUser.data : null;\n\n    if (loggedUser) {\n      const user = utils.parseResponse(loggedUser);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Hello!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\nfunction* runLogout(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    yield API.logoff();\n\n    yield put({ type: types.SET_USER, payload: {} });\n    yield put({ type: types.SET_AUTHENTICATED, payload: false });\n    yield put({ type: types.SET_ADMIN, payload: false });\n\n    yield put({\n      type: 'WARNING_TOAST',\n      message: 'You are logged out',\n      actionType: action.type,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\nfunction* sendDistribution(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  // Save song\n  let receivedSong;\n  try {\n    receivedSong = yield API.post('/distributions', action.body);\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing distribution: ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedSong;\n}\n\nfunction* sendLog(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const logType = action.body.type === 'error' ? 'errors' : 'general';\n\n  // Save song\n  try {\n    yield API.post(`/log/${logType}`, action.body);\n  } catch (e) {\n    // do nothing\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* sendSong(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  // Save song\n  let receivedSong;\n  try {\n    receivedSong = yield API.post('/songs', action.body);\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing song: ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedSong;\n}\n\nfunction* updateCompleteArtist(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { artist, members, unit } = action;\n\n  // Save Members\n  const receivedMembers = yield all(\n    members.map((member, index) =>\n      call(updateMember, {\n        type: `UPDATE_MEMBER_${index}`,\n        member,\n        referenceArtist: artist.name,\n      })\n    )\n  );\n\n  // Prepare Unit Members Data\n  let unitMembers = {};\n  receivedMembers.forEach(member => {\n    unitMembers = {\n      ...unitMembers,\n      ...member.positions,\n    };\n  });\n\n  yield delay(DELAY_DURATION);\n\n  // Save Artist\n  let receivedArtist;\n  try {\n    if (artist.id) {\n      // Update member if it has an id\n      receivedArtist = yield API.put(`/artists/${artist.id}`, artist);\n    } else {\n      // Create member if it does not have an id\n      receivedArtist = yield API.post('/artists', artist);\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing artist ${\n        artist.id ? artist.id : artist.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  // Save unit\n  unit.members = unitMembers;\n  unit.artistId = receivedArtist.data.id;\n  let receivedUnit;\n\n  try {\n    if (unit.id) {\n      // Update member if it has an id\n      receivedUnit = yield API.put(`/units/${unit.id}`, unit);\n    } else {\n      // Create member if it does not have an id\n      receivedUnit = yield API.post('/units', unit);\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing unit ${\n        unit.id ? unit.id : artist.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'SET_MANAGE_RESULT', payload: 'SUCCESS' });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedUnit;\n}\n\nfunction* updateMember(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { member, referenceArtist } = action;\n\n  let response;\n  try {\n    if (member.id) {\n      // Update member if it has an id\n      response = yield API.put(`/members/${member.id}`, member);\n    } else {\n      // Create member if it does not have an id\n      response = yield API.post('/members', {\n        ...member,\n        referenceArtist,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing member ${\n        member.id ? member.id : member.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  response.data.positions = {};\n  member.positions.forEach(pos => {\n    response.data.positions[`${response.data.id}:${member.name}:${pos}`] = true;\n  });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return response.data;\n}\n\nfunction* updateUserBiases(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(`/users/${action.userId}/biases`, action.biases);\n    yield put({ type: types.SET_BIASES, payload: action.biases });\n    yield put({ type: types.SET_BIAS, payload: action.bias });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* updateUserFavoriteArtists(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(\n      `/users/${action.userId}/favorite-artists`,\n      action.userFavoriteArtists\n    );\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* updateUserFavoriteMembers(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(\n      `/users/${action.userId}/favorite-members`,\n      action.userFavoriteMembers\n    );\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* apiSaga() {\n  yield takeLatest('INITIALIZER', initializer);\n  yield takeLatest('REQUEST_ARTISTS', requestArtists);\n  yield takeLatest('REQUEST_ARTIST', requestArtist);\n  yield takeLatest('REQUEST_COLORS', requestColors);\n  yield takeLatest('REQUEST_MEMBERS', requestMembers);\n  yield takeLatest('REQUEST_SONGS', requestSongs);\n  yield takeLatest('REQUEST_UNIT', requestUnit);\n  yield takeLatest('REQUEST_UNIT_MEMBERS', requestUnitMembers);\n  yield takeLatest('RESYNC_DATABASE', resyncDatabase);\n  yield takeLatest('RUN_LOGIN', runLogin);\n  yield takeLatest('RUN_LOGOUT', runLogout);\n  yield takeLatest('SEND_DISTRIBUTION', sendDistribution);\n  yield takeLatest('SEND_LOG', sendLog);\n  yield takeLatest('SEND_SONG', sendSong);\n  yield takeLatest('UPDATE_COMPLETE_ARTIST', updateCompleteArtist);\n  yield takeLatest('UPDATE_USER_BIASES', updateUserBiases);\n  yield takeLatest('UPDATE_USER_FAVORITE_ARTISTS', updateUserFavoriteArtists);\n  yield takeLatest('UPDATE_USER_FAVORITE_MEMBERS', updateUserFavoriteMembers);\n\n  yield takeEvery('TEST', test);\n}\n\nexport default apiSaga;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { toastr } from 'react-redux-toastr';\n\nimport { types } from '../reducers';\n\n// PENDING WORKERS\nconst localPendingCache = {};\n\n/**\n * Removes action type from pendingCache and updates pending if pendingCache is empty\n * @param {string} actionType\n */\nfunction* clearPending(actionType) {\n  if (typeof actionType === 'object') {\n    actionType = actionType.actionType; // eslint-disable-line\n  }\n  if (localPendingCache[actionType]) {\n    delete localPendingCache[actionType];\n  }\n\n  if (Object.keys(localPendingCache).length === 0) {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: false });\n  }\n}\n\n/**\n * Adds action type to pendingInlineCache and updates pending based on pendingInlineCache values\n * @param {string} actionType\n */\nfunction* pending({ actionType }) {\n  if (localPendingCache[actionType] === undefined) {\n    localPendingCache[actionType] = true;\n  }\n\n  if (Object.keys(localPendingCache).length > 0) {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: true });\n  } else {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: false });\n  }\n}\n\n// ERROR WORKERS\n\n/**\n * Dispatches an error message and an error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* error({ message, actionType }) {\n  const errorMessage = typeof err === 'string' ? message : message.join(': ');\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield toastr.error(errorMessage);\n  yield call(clearPending, actionType);\n}\n\n/**\n * Dispatches an error message and and an inline error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* errorInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR_INLINE, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops an error toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* errorToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.error(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.error(message);\n  }\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n// SUCCESS WORKERS\n\n/**\n * Dispatches a success message and and an inline sucess flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* successInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_SUCCESS_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_SUCCESS_INLINE, payload: true });\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops a sucess toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* successToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.success(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.success(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// WARNING WORKERS\n\n/**\n * Pops a warning toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* warningToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.warning(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.warning(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* statusHandlingSaga() {\n  yield takeEvery('CLEAR_PENDING', clearPending);\n  yield takeEvery('ERROR', error);\n  yield takeEvery('ERROR_INLINE', errorInline);\n  yield takeEvery('ERROR_TOAST', errorToast);\n  yield takeEvery('PENDING', pending);\n  yield takeEvery('SUCCESS_INLINE', successInline);\n  yield takeEvery('SUCCESS_TOAST', successToast);\n  yield takeEvery('WARNING_TOAST', warningToast);\n  yield takeEvery('TEST', test);\n}\n\nexport default statusHandlingSaga;\n","import { all, fork } from 'redux-saga/effects';\nimport apiSaga from './api-saga';\nimport statusHandlingSaga from './status-handling';\n\nexport default function* rootSaga() {\n  yield all([fork(apiSaga), fork(statusHandlingSaga)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, thunkMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger({ collapsed: true }));\n}\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ActiveSongWidget = ({ activeSong, inline }) => {\n  // Return nothing if currentUnit is not available\n  if (!activeSong.id) {\n    return null;\n  }\n\n  const inlineClass = inline ? 'inline' : '';\n\n  return (\n    <section className={`active-widget ${inlineClass}`}>\n      <h3>Active Song:</h3>\n      <div className=\"active-widget__content\">\n        <h1>\n          {activeSong.title.toUpperCase()}{' '}\n          <span className=\"active-widget__unit\">\n            (by {activeSong.originalArtist})\n          </span>\n        </h1>\n      </div>\n    </section>\n  );\n};\n\nActiveSongWidget.propTypes = {\n  activeSong: PropTypes.object,\n  inline: PropTypes.bool,\n};\n\nActiveSongWidget.defaultProps = {\n  activeSong: {},\n  inline: false,\n};\n\nexport default ActiveSongWidget;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ActiveSongWidget from '../components/ActiveSongWidget';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribution: state.distribution,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ActiveSongWidget)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../utils';\n\nconst ActiveUnitWidget = ({ activeUnit, showMembers, inline }) => {\n  // Return nothing if currentUnit is not available\n  if (!activeUnit.id) {\n    return null;\n  }\n\n  const inlineClass = inline ? 'inline' : '';\n\n  return (\n    <section className={`active-widget ${inlineClass}`}>\n      <h3>Active Unit:</h3>\n      <div className=\"active-widget__content\">\n        <h1>\n          {activeUnit.artistName.toUpperCase()}{' '}\n          <span className=\"active-widget__unit\">({activeUnit.name})</span>\n          <span className=\"active-widget__genre\">\n            {activeUnit.genre} - {Object.values(activeUnit.members).length}{' '}\n            members\n          </span>\n        </h1>\n        {showMembers ? (\n          <ul className=\"active-widget__members\">\n            {Object.values(activeUnit.members).map(member => (\n              <li\n                key={member.id}\n                className={`pill background-color-${utils.getColorNumber(\n                  member.colorId\n                )}`}\n              >\n                {member.name}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className=\"active-widget__members-count\">3</p>\n        )}\n      </div>\n    </section>\n  );\n};\n\nActiveUnitWidget.propTypes = {\n  activeUnit: PropTypes.object,\n  inline: PropTypes.bool,\n  showMembers: PropTypes.bool,\n};\n\nActiveUnitWidget.defaultProps = {\n  activeUnit: {},\n  inline: false,\n  showMembers: false,\n};\n\nexport default ActiveUnitWidget;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ActiveUnitWidget from '../components/ActiveUnitWidget';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribution: state.distribution,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ActiveUnitWidget)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon } from '../../common';\n\nclass Collapsible extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n\n    this.collapse = this.collapse.bind(this);\n    this.enforceProperties = this.enforceProperties.bind(this);\n    this.expand = this.expand.bind(this);\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  componentDidMount() {\n    this.enforceProperties();\n  }\n\n  componentDidUpdate(nextProps) {\n    if (\n      this.props.synced &&\n      (nextProps.expanded !== this.props.expanded ||\n        nextProps.collapsed !== this.props.collapsed)\n    ) {\n      this.enforceProperties();\n    }\n  }\n\n  enforceProperties() {\n    if (this.props.expanded) {\n      this.expand();\n    }\n    if (this.props.collapsed) {\n      this.collapse();\n    }\n  }\n\n  togglePanel() {\n    if (!this.props.locked) {\n      this.setState({\n        expanded: !this.state.expanded,\n      });\n    }\n  }\n\n  expand() {\n    this.setState({\n      expanded: true,\n    });\n  }\n\n  collapse() {\n    this.setState({\n      expanded: false,\n    });\n  }\n\n  render() {\n    const { title, locked } = this.props;\n\n    let iconComponent = null;\n    if (locked) {\n      iconComponent = <Icon type=\"lock\" color=\"gray\" />;\n    } else if (this.state.expanded) {\n      iconComponent = <Icon type=\"chevron-up\" color=\"gray\" />;\n    } else {\n      iconComponent = <Icon type=\"chevron-down\" color=\"gray\" />;\n    }\n\n    return (\n      <section className=\"collapsible\">\n        <button\n          className={`collapsible__header ${locked ? 'locked' : ''}`}\n          disabled={locked}\n          onClick={this.togglePanel}\n        >\n          <h3 className=\"collapsible__title\">{title}</h3>\n          <span className=\"collapsible__icon\">{iconComponent}</span>\n        </button>\n        <div\n          className={`collapsible__content ${\n            this.state.expanded ? 'expanded' : 'collapsed'\n          }`}\n        >\n          {this.state.expanded ? this.props.children : null}\n        </div>\n      </section>\n    );\n  }\n}\n\nCollapsible.propTypes = {\n  children: PropTypes.object.isRequired,\n  collapsed: PropTypes.bool,\n  expanded: PropTypes.bool,\n  locked: PropTypes.bool,\n  synced: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n};\n\nCollapsible.defaultProps = {\n  collapsed: false,\n  expanded: false,\n  locked: false,\n  synced: false,\n};\n\nexport default Collapsible;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../index';\n\nconst ErrorModal = ({ app, handleCloseErrorModal, handleSendBugReport }) => {\n  if (app.error) {\n    return (\n      <div className=\"modal-error\">\n        <main className=\"modal-error__content\">\n          <button className=\"close\" onClick={handleCloseErrorModal}>\n            ×\n          </button>\n          <Icon type=\"error\" color=\"red\" size=\"96\" />\n          <h1>AN ERROR HAS OCURRED</h1>\n          <h3 className=\"modal-error__error-message\">{app.errorMessage}</h3>\n          <h4>\n            You may close this modal, but the website might not work as\n            expected.\n          </h4>\n          <button className=\"btn\" onClick={handleSendBugReport}>\n            Send Bug Report\n          </button>\n        </main>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nErrorModal.propTypes = {\n  app: PropTypes.object.isRequired,\n  handleCloseErrorModal: PropTypes.func.isRequired,\n  handleSendBugReport: PropTypes.func.isRequired,\n};\n\nexport default ErrorModal;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ErrorModal from '../components/ErrorModal';\n\nimport { appOperations } from '../../../reducers/app';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n});\n\nconst mapDispatchToProps = {\n  ...appOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ErrorModal)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon } from '../../common';\n\nconst FavoriteIcon = ({ action, className, id, size, state }) => (\n  <button\n    className={`btn btn-transparent ${className}`}\n    onClick={() => action(id)}\n  >\n    {state ? (\n      <Icon type=\"heart\" color=\"red\" size={size} />\n    ) : (\n      <Icon type=\"heart-hollow\" color=\"gray\" size={size} />\n    )}\n  </button>\n);\n\nFavoriteIcon.propTypes = {\n  action: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  state: PropTypes.bool,\n};\n\nFavoriteIcon.defaultProps = {\n  className: '',\n  size: 12,\n  state: false,\n};\n\nexport default FavoriteIcon;\n","// When pasting SVG from illustrator, use helper to convert svg string into a inline string: https://repl.it/@kavispires/ConvertSVGtoInlineString\n\nexport default {\n  alert:\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M57,78c0,1.2-1,2.2-2.2,2.2h-9.6 c-1.2,0-2.2-1-2.2-2.2v-9.6c0-1.2,1-2.2,2.2-2.2h9.6c1.2,0,2.2,1,2.2,2.2V78z M56.6,57.8c-0.2,1.1-1.5,2-3.2,2h-6.9 c-1.6,0-3-0.9-3.2-2L38,22.2c-0.1-0.6,0.2-1.2,0.8-1.7c0.6-0.5,1.5-0.7,2.4-0.7h17.6c0.9,0,1.8,0.3,2.4,0.7c0.6,0.5,0.9,1.1,0.8,1.7 L56.6,57.8z',\n  'back-arrow':\n    'M87.4,37.1C76.6,28,63.8,23.3,50.2,20.5c-3.9-0.8-7.9-1.3-12-2c0-3.7,0-7.2,0-10.8c0-1.9-0.5-3.4-2.3-4.3 c-1.8-0.9-3.4-0.3-4.9,1c-9.7,8.5-19.4,17-29.1,25.6c-2.5,2.2-2.5,4.5,0,6.8c9.7,8.5,19.4,17,29.1,25.6c1.5,1.3,3.1,1.8,4.9,1 c1.8-0.8,2.2-2.4,2.2-4.3c-0.1-3.7,0-7.4,0-11.9c6.4,1.3,12.4,2.2,18.3,3.8c7,1.8,13.4,4.9,18.6,10.1c3.6,3.7,5.8,8,5.1,13.3 c-0.6,4.4-2.8,8.1-6.1,10.9c-3.1,2.6-6.6,4.6-10,6.8c-1.2,0.8-2.4,1.6-1.7,3.2c0.7,1.8,2.2,1.6,3.6,1.1c1.7-0.7,3.3-1.3,5-2 c9.1-4.1,17.4-9.2,23.4-17.4c5-6.8,7-14.4,4.8-22.7C97.3,47.3,93,41.7,87.4,37.1z',\n  'back-arrow-circle':\n    'M50,0c27.7,0,50,22.4,50,50c0,27.6-22.5,50-50.1,50C22.3,100-0.1,77.5,0,49.9C0.1,22.3,22.5,0,50,0z M41.9,49.6 c4.3,0.9,8.4,1.5,12.4,2.5c4.7,1.2,9.1,3.3,12.6,6.9c2.5,2.5,3.9,5.4,3.5,9c-0.4,3-1.9,5.5-4.1,7.4c-2.1,1.7-4.5,3.1-6.8,4.6 c-0.8,0.5-1.6,1.1-1.2,2.2c0.5,1.2,1.5,1.1,2.5,0.7c1.1-0.4,2.3-0.9,3.4-1.4c6.1-2.8,11.8-6.2,15.8-11.8c3.4-4.6,4.7-9.7,3.2-15.4 c-1.3-4.8-4.2-8.6-7.9-11.7c-7.3-6.2-16-9.3-25.2-11.2c-2.7-0.5-5.4-0.9-8.1-1.3c0-2.5,0-4.9,0-7.3c0-1.3-0.3-2.3-1.5-2.9 c-1.2-0.6-2.3-0.2-3.3,0.7C30.5,26.5,23.9,32.2,17.3,38c-1.7,1.5-1.7,3.1,0,4.6c6.6,5.8,13.1,11.5,19.7,17.3c1,0.9,2.1,1.2,3.3,0.7 c1.2-0.6,1.5-1.6,1.5-2.9C41.8,55.2,41.9,52.7,41.9,49.6z',\n  check:\n    'M50,0C22.5,0,0,22.5,0,50s22.5,50,50,50s50-22.5,50-50S77.5,0,50,0z M75.6,41.2L47.5,73.1 c-1.2,1.2-3.1,1.2-4.4,0.6L23.1,60c-1.9-1.3-1.9-3.1-0.6-4.4l6.2-8.8c0.6-1.9,2.5-1.9,4.4-1.2l6.9,5c1.2,1.2,3.1,0.6,4.4-0.6 l18.1-20c1.2-1.2,3.1-1.2,4.4,0l8.1,6.9C76.2,38.1,76.2,40,75.6,41.2z',\n  'chevron-down':\n    'M49.8,75c-1.6,0-3.1-0.6-4.4-1.8L6.8,35.7c-2.5-2.4-2.5-6.4-0.1-8.8c2.4-2.5,6.4-2.5,8.8-0.1l34.3,33.3l34.7-33.3 c2.5-2.4,6.4-2.3,8.8,0.2c2.4,2.5,2.3,6.4-0.2,8.8L54.1,73.3C52.9,74.4,51.4,75,49.8,75z',\n  'chevron-left':\n    'M25,49.8c0-1.6,0.6-3.1,1.8-4.4L64.3,6.8c2.4-2.5,6.4-2.5,8.8-0.1c2.5,2.4,2.5,6.4,0.1,8.8L39.9,49.8l33.3,34.7 c2.4,2.5,2.3,6.4-0.2,8.8c-2.5,2.4-6.4,2.3-8.8-0.2L26.7,54.1C25.6,52.9,25,51.4,25,49.8z',\n  'chevron-right':\n    'M75,50.2c0,1.6-0.6,3.1-1.8,4.4L35.7,93.2c-2.4,2.5-6.4,2.5-8.8,0.1c-2.5-2.4-2.5-6.4-0.1-8.8l33.3-34.3L26.7,15.5 C24.4,13,24.4,9,26.9,6.6c2.5-2.4,6.4-2.3,8.8,0.2l37.5,39.1C74.4,47.1,75,48.6,75,50.2z',\n  'chevron-up':\n    'M50.2,25c1.6,0,3.1,0.6,4.4,1.8l38.7,37.5c2.5,2.4,2.5,6.4,0.1,8.8c-2.4,2.5-6.4,2.5-8.8,0.1L50.2,39.9L15.5,73.3 C13,75.6,9,75.6,6.6,73.1c-2.4-2.5-2.3-6.4,0.2-8.8l39.1-37.5C47.1,25.6,48.6,25,50.2,25z',\n  clock:\n    'M100,50c0,9.4-2.2,17.8-6.6,25.1c-4.6,7.6-10.7,13.7-18.3,18.3C67.8,97.8,59.4,100,50,100s-17.8-2.2-25.1-6.6 c-7.6-4.6-13.7-10.7-18.3-18.3C2.2,67.8,0,59.4,0,50s2.2-17.8,6.6-25.1c4.6-7.6,10.7-13.7,18.3-18.3C32.2,2.2,40.6,0,50,0 s17.8,2.2,25.1,6.6c7.6,4.6,13.7,10.7,18.3,18.3C97.8,32.2,100,40.6,100,50z M85.4,50c0-6.2-1.5-12.2-4.6-17.8 c-3.2-5.5-7.5-9.8-13-13c-5.6-3-11.6-4.6-17.8-4.6s-12.2,1.5-17.8,4.6c-5.5,3.2-9.8,7.5-13,13c-3,5.6-4.6,11.6-4.6,17.8 s1.5,12.2,4.6,17.8c3.2,5.5,7.5,9.8,13,13c5.6,3,11.6,4.6,17.8,4.6s12.2-1.5,17.8-4.6c5.5-3.2,9.8-7.5,13-13 C83.9,62.2,85.4,56.2,85.4,50z M58.4,26.9v29.2c0,0.6-0.2,1.1-0.7,1.6c-0.5,0.5-1,0.7-1.6,0.7H35.4c-0.6,0-1.1-0.2-1.6-0.7 c-0.3-0.6-0.5-1.1-0.5-1.6v-4.1c0-0.6,0.2-1.1,0.5-1.4c0.5-0.5,1-0.7,1.6-0.7H50V26.9c0-0.5,0.2-0.9,0.7-1.4 c0.2-0.5,0.6-0.7,1.4-0.7h4.1c0.6,0,1.1,0.2,1.6,0.7C58.2,26,58.4,26.5,58.4,26.9z',\n  default:\n    'M81.2,12.5c3.8,0,6.2,2.5,6.2,6.2v62.5c0,3.8-2.5,6.2-6.2,6.2H18.8c-3.7,0-6.2-2.5-6.2-6.2V18.8 c0-3.7,2.5-6.2,6.2-6.2H81.2 M81.2,0H18.8C8.1,0,0,8.1,0,18.8v62.5C0,91.9,8.1,100,18.8,100h62.5c10.6,0,18.8-8.1,18.8-18.8V18.8 C100,8.1,91.9,0,81.2,0L81.2,0z M35.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,35.7,35.3,33.6,35.3,31.1z M58.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,35.7,58.3,33.6,58.3,31.1z M81.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,35.7,81.3,33.6,81.3,31.1z M35.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,58.3,35.3,56.3,35.3,53.8z M58.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,58.3,58.3,56.3,58.3,53.8z M81.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,58.3,81.3,56.3,81.3,53.8z M35.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,81,35.3,79,35.3,76.5z M58.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,81,58.3,79,58.3,76.5z M81.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,81,81.3,79,81.3,76.5z',\n  error:\n    'M70.7,0H29.3L0,29.3v41.4L29.3,100h41.4L100,70.7V29.3L70.7,0z M45.1,69.6v-6.7c0-0.8,0.7-1.5,1.5-1.5h6.7 c0.8,0,1.5,0.7,1.5,1.5v6.7c0,0.8-0.7,1.5-1.5,1.5h-6.7C45.8,71.2,45.1,70.5,45.1,69.6z M54.6,55.5c-0.1,0.8-1.1,1.4-2.2,1.4h-4.8 c-1.2,0-2.1-0.6-2.2-1.4l-3.7-24.9c-0.1-0.4,0.1-0.9,0.6-1.2c0.4-0.3,1-0.5,1.7-0.5h12.3c0.6,0,1.2,0.2,1.7,0.5 c0.4,0.3,0.6,0.8,0.6,1.2L54.6,55.5z',\n  heart:\n    'M50,85.5c-1,0-1.9-0.3-2.5-1L12.7,51c-0.1,0-0.4-0.2-0.7-0.6s-0.6-0.7-0.9-0.8c-0.7-0.8-1.7-2-3.1-3.7 c-1.3-1.6-2.5-3.4-3.7-5.5c-1-1.7-2-3.9-2.9-6.6C0.5,31.2,0,28.6,0,26c0-8.1,2.3-14.5,7-19.1C11.6,2.3,18.2,0,26.8,0 c2.2,0,4.6,0.4,7,1.2s4.7,1.8,6.6,3.1c1.8,1.2,3.6,2.5,5.3,3.9c1.6,1.2,3,2.4,4.3,3.7c1.3-1.3,2.7-2.5,4.3-3.7 c1.7-1.4,3.5-2.7,5.3-3.9c2-1.3,4.2-2.3,6.6-3.1C68.7,0.4,71,0,73.2,0C81.8,0,88.4,2.3,93,6.8c4.7,4.7,7,11.1,7,19.1 s-4.2,16.5-12.7,25.2L52.5,84.6C51.9,85.2,51,85.5,50,85.5z',\n  'heart-hollow':\n    'M73.2,8c6.4,0,11,1.5,14.1,4.5C90.5,15.6,92,20.1,92,26c0,5.9-3.5,12.4-10.3,19.5L50,75.9L18.3,45.2 c-0.2-0.2-0.4-0.4-0.6-0.5c-0.3-0.3-0.7-0.7-1-1c-0.6-0.8-1.5-1.7-2.5-3c-1-1.2-1.9-2.6-2.9-4.2c-0.1-0.1-0.1-0.2-0.2-0.3 c-0.5-0.8-1.3-2.3-2.2-5c0,0,0-0.1,0-0.1C8.3,29.4,8,27.7,8,26c0-5.9,1.5-10.3,4.7-13.5c3-3,7.6-4.5,14.1-4.5 c1.4,0,2.9,0.3,4.6,0.8c1.7,0.6,3.3,1.3,4.6,2.2c0,0,0.1,0,0.1,0.1c1.5,1,3,2.1,4.4,3.3c0.1,0.1,0.2,0.2,0.4,0.3 c1.3,0.9,2.4,1.9,3.4,3c1.5,1.5,3.5,2.3,5.7,2.3s4.2-0.8,5.7-2.3c1-1,2.2-2,3.4-3c0.1-0.1,0.2-0.2,0.4-0.3c1.4-1.2,2.9-2.3,4.4-3.3 c0,0,0.1,0,0.1-0.1c1.3-0.9,2.9-1.6,4.6-2.2C70.3,8.3,71.9,8,73.2,8 M73.2,0c-2.2,0-4.6,0.4-7,1.2C63.7,2,61.5,3,59.6,4.3 c-1.8,1.2-3.6,2.5-5.3,3.9c-1.6,1.2-3,2.4-4.3,3.7c-1.3-1.3-2.7-2.5-4.3-3.7c-1.7-1.4-3.5-2.7-5.3-3.9c-2-1.3-4.2-2.3-6.6-3.1 C31.3,0.4,29,0,26.8,0C18.2,0,11.6,2.3,7,6.8C2.3,11.5,0,17.9,0,26c0,2.6,0.5,5.2,1.4,7.8c0.9,2.7,1.9,4.9,2.9,6.6 c1.2,2.1,2.4,3.9,3.7,5.5c1.4,1.7,2.5,2.9,3.1,3.7c0.3,0.1,0.6,0.4,0.9,0.8c0.3,0.4,0.6,0.6,0.7,0.6l34.8,33.6c0.7,0.7,1.5,1,2.5,1 s1.9-0.3,2.5-1l34.8-33.4C95.8,42.4,100,34,100,26c0-8.1-2.3-14.5-7-19.1C88.4,2.3,81.8,0,73.2,0L73.2,0z',\n  info:\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M57.9,78.3c0,1.7-1.3,3-3,3h-9.9 c-1.7,0-3-1.3-3-3V43.6c0-1.7,1.3-3,3-3h9.9c1.7,0,3,1.3,3,3V78.3z M57.9,30.6c0,1.7-1.3,3-3,3h-9.9c-1.7,0-3-1.3-3-3v-9.9 c0-1.7,1.3-3,3-3h9.9c1.7,0,3,1.3,3,3V30.6z',\n  lock:\n    'M20.2,100h59.6c3.5,0,6.4-2.9,6.4-6.4V44.7c0-3.5-2.9-6.4-6.4-6.4h-3.2V26.6C76.6,11.9,64.7,0,50,0S23.4,11.9,23.4,26.6 v11.7h-3.2c-3.5,0-6.4,2.9-6.4,6.4v48.9C13.8,97.1,16.7,100,20.2,100z M50,77.7c-4.7,0-8.5-3.8-8.5-8.5c0-4.7,3.8-8.5,8.5-8.5 s8.5,3.8,8.5,8.5C58.5,73.8,54.7,77.7,50,77.7z M40.4,26.6c0-5.3,4.3-9.6,9.6-9.6s9.6,4.3,9.6,9.6v11.7H40.4V26.6z',\n  login:\n    'M77.2,50c0,1.1-0.5,2.1-1.4,3L40.4,88.4c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H4.1 c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3 c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L75.8,47C76.7,47.9,77.2,48.9,77.2,50z M82,8H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20 c1.7,0,10,0.7,10,11v21v4v21c0,10.3-8.4,11-10,11H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20c0.5,0,4.6-0.1,8.9-2.3C95,87.4,100,82.7,100,73 V52v-4V27C100,11.4,87,8,82,8z',\n  logout:\n    'M0,27l0,21l0,4l0,21c0,9.7,5,14.4,9.1,16.7c4.3,2.3,8.4,2.3,8.9,2.3h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18c-1.6,0-10-0.7-10-11 V52v-4V27c0-10.3,8.4-11,10-11h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18C13,8,0,11.4,0,27z M100.2,50c0,1.1-0.5,2.1-1.4,3L63.4,88.4 c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H27.1c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4 c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L98.8,47 C99.7,47.9,100.2,48.9,100.2,50z',\n  no:\n    '    M50,0C22.5,0,0,22.5,0,50s22.5,50,50,50s50-22.5,50-50S77.5,0,50,0z M72.5,65.6L65,73.1c-1.2,1.2-3.1,1.2-4.4,0L52.5,65 c-1.2-1.2-3.1-1.2-4.4,0L40,73.1c-1.2,1.2-3.1,1.2-4.4,0l-7.5-7.5c-1.2-1.2-1.2-3.1,0-4.4l8.1-8.1c1.2-1.2,1.2-3.1,0-4.4L26.9,40 c-1.2-1.2-1.2-3.1,0-4.4l7.5-7.5c1.2-1.2,3.1-1.2,4.4,0l8.1,8.1c1.9,1.2,3.8,1.2,5,0l8.1-8.1c1.2-1.2,3.1-1.2,4.4,0l7.5,7.5 c1.2,1.2,1.2,3.1,0,4.4l-8.1,8.1c-1.2,1.2-1.2,3.1,0,4.4l8.1,8.1C73.8,62.5,73.8,64.4,72.5,65.6z',\n  plug:\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,90.5 C27.6,90.5,9.5,72.4,9.5,50C9.5,27.6,27.6,9.5,50,9.5S90.5,27.6,90.5,50C90.5,72.4,72.4,90.5,50,90.5z M34,66H33 c-2.5,0-4.5-2-4.5-4.5V38.5c0-2.5,2-4.5,4.5-4.5H34c2.5,0,4.5,2,4.5,4.5v23.1C38.5,64,36.5,66,34,66z M70,66H69 c-2.5,0-4.5-2-4.5-4.5V38.5c0-2.5,2-4.5,4.5-4.5H70c2.5,0,4.5,2,4.5,4.5v23.1C74.5,64,72.5,66,70,66z',\n  'plug-available':\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,90.5 c-10.3,0-19.7-3.8-26.8-10.1c1.4,0,3.3,0.4,5.6,1.2c0.9,0.3,1.8,0.7,2.7,1.1c2.5,1,5.2,2.1,8.1,2.6c0.6,0.1,1.3,0.2,2.2,0.2 c0.9,0,1.8-0.1,2.8-0.4c3.3-1,5.1-3.7,4.8-7c-0.2-1.8-1-3.6-2.4-5.4c-2.5-3-6.2-5.1-10.2-5.7c-1.6-0.2-3.1-0.1-4.4,0 c-1.7,0.1-2.8,0.2-3.7-0.2c-1.2-0.6-2.1-2.4-2.2-4.6c-0.1-1.5,0.1-2.7,0.6-3.4c0.2-0.2,0.3-0.4,0.4-0.5c1,0.4,2.9,2.8,3.8,3.8 c0.7,0.8,1.3,1.6,1.9,2.2c1.6,1.7,3.3,2,4.4,2c1,0,2.7-0.3,4.2-1.9l1.3-1.3l0.3,0.3c6.3,6.3,16.7,6.3,23.1,0l9.8-9.8 c1.8-1.8,1.8-4.7,0-6.5l-2.9-2.9l6.8-6.8c1.1-1.1,1.1-3,0-4.1h0c-1.1-1.1-3-1.1-4.1,0l-6.8,6.8l-6.8-6.8l6.8-6.8 c1.1-1.1,1.1-3,0-4.1c-1.1-1.1-3-1.1-4.1,0l-6.8,6.8l-2.9-2.9c-1.8-1.8-4.7-1.8-6.5,0L39.1,36c-6,6-6.3,15.7-0.9,22.1 c-0.2,0.2-0.4,0.4-0.6,0.6c-0.3-0.3-0.6-0.7-0.9-1.1c-2.2-2.7-5.2-6.5-9.3-6.5c0,0,0,0-0.1,0c-1.5,0-3.8,0.6-5.8,3.2 c-1.6,2.1-2.3,4.8-2,8.2c0.4,4.8,2.7,8.7,6.2,10.4c2.6,1.2,5.2,1.1,7.2,0.9c1-0.1,2-0.1,2.8,0c2.3,0.3,4.4,1.5,5.8,3.2 c0.5,0.6,0.7,1,0.8,1.3c-0.4,0.1-1,0.1-1.7,0c-2.1-0.3-4.3-1.2-6.6-2.2c-1-0.4-2-0.8-3-1.2c-5.6-2.1-10.1-2.2-13.3-0.4 C12.6,67.8,9.5,59.3,9.5,50C9.5,27.6,27.6,9.5,50,9.5S90.5,27.6,90.5,50C90.5,72.4,72.4,90.5,50,90.5z',\n  'plug-connected':\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,9.5c10.1,0,19.4,3.7,26.4,9.8 l-7,7c-5.2-4.1-12.9-3.8-17.7,1l-8,8c-1.5,1.5-1.5,3.9,0,5.3l2,2l-3,3l-2.4-2.4c-1.5-1.5-3.9-1.5-5.3,0l-8,8 c-4.8,4.8-5.2,12.4-1,17.7l-7,7c-5.9-7-9.5-16.1-9.5-26C9.5,27.6,27.6,9.5,50,9.5z M46.3,49.3l3-3l5,5l-3,3L46.3,49.3z M50,90.5 c-10.1,0-19.3-3.7-26.4-9.8l7-7c5.2,5.2,13.7,5.2,18.8,0l8-8c1.5-1.5,1.5-3.9,0-5.3l-2.6-2.6l3-3l3,3c1.5,1.5,3.9,1.5,5.3,0l8-8 c5.2-5.2,5.2-13.6,0-18.8L81,24c5.9,7,9.5,16.1,9.5,26C90.5,72.4,72.4,90.5,50,90.5z',\n  private:\n    'M41,0C18.4,0,0,18.4,0,41s18.4,41,41,41s41-18.4,41-41S63.6,0,41,0z M58,59.5c0,1.6-1.3,3-3,3H27c-1.7,0-3-1.4-3-3v-23 c0-1.7,1.3-3,3-3h1.5V28c0-6.9,5.6-12.5,12.5-12.5S53.5,21.1,53.5,28v5.5H55c1.7,0,3,1.3,3,3V59.5z M45.5,28v5.5h-9V28 c0-2.5,2-4.5,4.5-4.5S45.5,25.5,45.5,28z M45,48c0,2.2-1.8,4-4,4s-4-1.8-4-4c0-2.2,1.8-4,4-4S45,45.8,45,48z',\n  'question-mark':\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M56.5,76.4c0,1-0.8,1.8-1.8,1.8h-9.5 c-1,0-1.8-0.8-1.8-1.8v-9.5c0-1,0.8-1.8,1.8-1.8h9.5c1,0,1.8,0.8,1.8,1.8V76.4z M66,38.3c0,0.9-0.1,1.6-0.3,2.3 c-0.2,0.7-0.3,1.3-0.6,1.8c-0.3,0.6-0.6,1.1-1,1.6l-6.4,7.7c-0.4,0.4-0.7,0.9-0.9,1.3c-0.2,0.3-0.2,0.5-0.2,0.8v5.2 c0,1-0.8,1.8-1.8,1.8h-9.5c-1,0-1.8-0.8-1.8-1.8v-6.1c0-1.2,0.3-2.4,0.8-3.6c0.5-1,1.1-2,1.9-2.9l6-6.9c0.3-0.3,0.5-0.7,0.6-1.1 c0.1-0.5,0.2-1,0.2-1.6v-3.5c0-0.1,0-0.5-0.6-0.9c-0.6-0.4-1.3-0.6-2.2-0.6c-0.8,0-1.6,0.2-2.4,0.6c-0.6,0.3-0.6,0.6-0.6,0.9v3.8 c0,1-0.8,1.8-1.8,1.8h-9.5c-1,0-1.8-0.8-1.8-1.8v-3.9c0-1.7,0.5-3.3,1.4-4.8c0.9-1.4,2.1-2.7,3.6-3.8c1.5-1,3.2-1.8,5.1-2.4 c1.9-0.6,3.9-0.9,6.1-0.9c2.5,0,4.8,0.4,6.9,1.1c2.1,0.7,3.9,1.8,5.3,3.2c0.7,0.7,1.2,1.3,1.7,1.9c0.5,0.6,0.9,1.4,1.2,2.1 c0.5,1.3,0.8,3.1,0.8,5.3C66,36.5,66,37.5,66,38.3z',\n  save:\n    'M100,90c0,1.5-0.5,2.8-1.5,3.8s-2.2,1.5-3.8,1.5H5.2H5c-1.3,0-2.5-0.5-3.5-1.5S0,91.5,0,90V28.2V28c0-1.5,0.3-2.7,1-3.5 l10.5-18c0.8-1.2,1.8-1.8,3-1.8h70.8h0.2c1.8,0,2.9,0.8,3.2,2.5l10,17.2v0.2c0.8,0.8,1.2,1.9,1.2,3.2v0.2V90z M90.5,22.8L83.8,11 H16.2L9.5,22.8H90.5z M67.2,58c-0.2-0.5-0.6-0.8-1.2-0.8h-7.5V37c0-1-0.5-1.5-1.5-1.5H43c-1,0-1.5,0.5-1.5,1.5v20.2H34 c-0.7,0-1.1,0.2-1.2,0.8s-0.2,1,0,1.5l16,22.5c0.3,0.3,0.8,0.5,1.2,0.5s0.9-0.2,1.2-0.5l16-22.5C67.4,59,67.4,58.5,67.2,58z',\n  stop:\n    'M68.3,90.5H31.7c-4.4,0-9.5-3-11.7-6.8L1.6,52c-2.2-3.8-2.2-9.7,0-13.5L20,6.8C22.2,3,27.3,0,31.7,0h36.6 c4.4,0,9.5,3,11.7,6.8l18.3,31.7c2.2,3.8,2.2,9.7,0,13.5L80,83.8C77.9,87.6,72.7,90.5,68.3,90.5z M31.7,5.9c-2.3,0-5.5,1.8-6.6,3.8\tL6.7,41.4c-1.2,2-1.2,5.6,0,7.6l18.3,31.7c1.2,2,4.3,3.8,6.6,3.8h36.6c2.3,0,5.5-1.8,6.6-3.8l18.3-31.7c1.1-2,1.1-5.6,0-7.6 L74.9,9.7c-1.1-2-4.3-3.8-6.6-3.8H31.7z M70.9,30.5c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.8-3.6,4.6c0,4.8,0,9.6,0,14.3 c0,0.7-0.4,1.3-0.7,2c-0.3-0.7-0.9-1.3-0.9-2c-0.1-6,0-11.9-0.1-17.9c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.7-3.6,4.6 c0,6,0,11.9,0,17.9c0,0.6-0.5,1.3-0.8,1.9c-0.3-0.6-0.7-1.2-0.9-1.9c-0.1-0.5,0-1.1,0-1.6c0-7.8,0-15.5,0-23.3 c0-2.1-0.5-3.8-2.8-4.3c-2.5-0.6-4.4,1.1-4.4,4c0,8,0,16,0,24c0,1-0.5,2-0.8,3c-0.3-1-0.8-2-0.8-3.1c-0.1-5.8,0.1-11.6-0.1-17.4 c0-1.2-1.1-2.8-2.1-3.4c-0.8-0.5-2.8-0.2-3.6,0.5c-0.9,0.8-1.3,2.4-1.3,3.7c-0.1,10.6,0,21.2-0.1,31.8c0,0.7-0.5,1.3-0.7,2 c-0.5-0.4-1.1-0.8-1.5-1.3c-2.3-3.6-4.4-7.2-6.7-10.8c-1.5-2.5-3.5-3.2-5.4-2c-2,1.2-2.3,3.2-0.8,5.7c3.2,5.3,6.5,10.5,9.7,15.8 c2.6,4.3,6.4,6.3,11.4,6.3c4.9,0,9.9,0,14.8,0c8.1,0,13.2-5.1,13.3-13.2c0-5,0-10,0-15.1C70.9,41.2,70.9,35.8,70.9,30.5z',\n  trash:\n    'M91.8,18.7v4.1c0,0.5-0.2,1-0.5,1.6c-0.6,0.3-1.1,0.5-1.6,0.5h-6.2v61.9c0,3.7-1.1,6.8-3.2,9.4c-2,2.6-4.4,3.9-7.3,3.9 H18.7c-2.9,0-5.3-1.2-7.3-3.7c-2.1-2.6-3.2-5.7-3.2-9.4V24.9H2.1c-0.5,0-1-0.2-1.6-0.5C0.2,23.8,0,23.3,0,22.8v-4.1 c0-0.5,0.2-1,0.5-1.6c0.6-0.3,1.1-0.5,1.6-0.5h20.1l4.6-11c0.8-1.7,2-3,3.7-4.1c1.5-1.1,3.2-1.6,5-1.6h21c1.8,0,3.5,0.5,5,1.6 c1.7,1.1,2.9,2.4,3.7,4.1l4.6,11h20.1c0.5,0,1,0.2,1.6,0.5C91.6,17.7,91.8,18.3,91.8,18.7z M33.3,81.3V35.4c0-0.5-0.2-1-0.5-1.6 c-0.6-0.3-1.1-0.5-1.6-0.5h-4.1c-0.5,0-1,0.2-1.6,0.5c-0.3,0.3-0.5,0.8-0.5,1.6v45.9c0,0.8,0.2,1.3,0.5,1.6 c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5C33.2,82.3,33.3,81.7,33.3,81.3z M31.3,16.7h29.2l-3.2-7.8 c-0.2-0.2-0.5-0.4-1.1-0.7H35.6c-0.6,0.3-1,0.5-1.1,0.7L31.3,16.7z M50,81.3V35.4c0-0.5-0.2-1-0.5-1.6c-0.6-0.3-1.1-0.5-1.6-0.5 h-4.1c-0.5,0-1,0.2-1.6,0.5c-0.3,0.6-0.5,1.1-0.5,1.6v45.9c0,0.5,0.2,1,0.5,1.6c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5 C49.8,82.3,50,81.7,50,81.3z M66.7,81.3V35.4c0-0.8-0.2-1.3-0.5-1.6c-0.6-0.3-1.1-0.5-1.6-0.5h-4.1c-0.5,0-1,0.2-1.6,0.5 c-0.3,0.6-0.5,1.1-0.5,1.6v45.9c0,0.5,0.2,1,0.5,1.6c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5C66.5,82.6,66.7,82,66.7,81.3 z',\n  youtube:\n    'M16.1,83.3c-2.8-0.2-5.8-1.1-8.3-2.4c-5-2.5-6.4-7.3-6.9-12.5c-1.2-11.2-1.1-22.4-0.3-33.5c0.2-2.7,0.6-5.3,1.2-7.9 c1.2-5.4,6-9.6,12.1-10c10.7-0.7,21.4-1.4,32-1.5C56.9,15.4,68,15.9,79,16.2c2.8,0.1,5.7,0.4,8.5,0.9c6.2,1.1,9.7,4.8,10.8,11 c1.4,7.9,1.8,16,1.5,24c-0.2,6.5-0.7,13-1.6,19.5c-0.8,6.4-5.5,10.9-12,11.3c-11,0.8-22.1,1.1-33.2,1.6c-2,0.1-4,0-6,0 C47.2,84.6,26.4,84,16.1,83.3z M40.6,34.6c0,10.3,0,20.4,0,30.6c8.4-5.2,16.5-10.2,24.9-15.3C57.1,44.8,48.9,39.8,40.6,34.6z',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport constants from '../../../utils/constants';\nimport ICONS from '../../../utils/icons';\n\nconst Icon = ({ type, size, color, inline, title }) => {\n  const margin = inline ? '0 3px' : 0;\n\n  if (!title) title = type;\n\n  const styles = {\n    svg: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      margin,\n    },\n    path: {\n      fill: constants.DEFAULT_COLORS[color],\n    },\n  };\n\n  return (\n    <svg\n      title={title}\n      style={styles.svg}\n      width={`${size}px`}\n      height={`${size}px`}\n      viewBox=\"0 0 100 100\"\n    >\n      <path style={styles.path} d={ICONS[type]} className={`icon-${type}`}>\n        <title>{title}</title>\n      </path>\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  color: PropTypes.string,\n  inline: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, null]),\n};\n\nIcon.defaultProps = {\n  type: 'default',\n  size: 12,\n  color: 'default',\n  inline: false,\n  title: null,\n};\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst Loading = ({ message = '' }) => (\n  <main className=\"container container--flex container--center container--requirement-wrapper\">\n    <div className=\"requirement-wrapper__container\">\n      <img\n        className=\"requirement-wrapper__loading-icon\"\n        src={loading}\n        alt=\"Loading Icon\"\n      />\n      <p>{message}</p>\n    </div>\n  </main>\n);\n\nLoading.propTypes = {\n  message: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  message: '',\n};\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst LoadingIcon = ({ size }) => (\n  <span className={`loading-icon loading-icon--${size}`}>\n    <img className=\"loading-icon__image\" src={loading} alt=\"Loading Icon\" />\n  </span>\n);\n\nLoadingIcon.propTypes = {\n  size: PropTypes.string,\n};\n\nLoadingIcon.defaultProps = {\n  size: 'medium',\n};\n\nexport default LoadingIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport constants from '../../../../utils/constants';\n\nconst MemberNationaltyFlag = ({ nationality }) => {\n  const flag = constants.FLAGS_LIST[nationality];\n\n  let flagUrl = `${process.env.PUBLIC_URL}${\n    constants.NATIONALITY_FLAG_URL\n  }unknown.jpg`;\n\n  if (flag) {\n    flagUrl = `${process.env.PUBLIC_URL}${\n      constants.NATIONALITY_FLAG_URL\n    }${flag}.jpg`;\n  }\n\n  return (\n    <img\n      className=\"card__flag\"\n      src={flagUrl}\n      alt={nationality}\n      title={nationality}\n    />\n  );\n};\n\nMemberNationaltyFlag.propTypes = {\n  nationality: PropTypes.string,\n};\n\nMemberNationaltyFlag.defaultProps = {\n  nationality: 'unknown',\n};\n\nexport default MemberNationaltyFlag;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport constants from '../../../../utils/constants';\nimport utils from '../../../../utils';\n\nclass MemberPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.fallback = () => {\n      this.setState({ failed: true });\n    };\n  }\n\n  render() {\n    const pictureUrl = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }${this.props.name.toLowerCase()}${this.props.memberId}.jpg`;\n\n    const gender = this.props.gender === 'FEMALE' ? 'f' : 'm';\n\n    const colorNumber = utils.getColorNumber(this.props.colorId);\n    const profilePlaceholderCode = (colorNumber % 5) + 1;\n\n    const pictureFallback = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }profile-${gender}-${profilePlaceholderCode}.png`;\n\n    if (this.state.failed) {\n      return (\n        <img\n          className={`${this.props.className} background-color-${colorNumber}`}\n          src={pictureFallback}\n          alt=\"Member\"\n        />\n      );\n    }\n    return (\n      <img\n        className={this.props.className}\n        src={pictureUrl}\n        onError={this.fallback}\n        alt=\"Member\"\n      />\n    );\n  }\n}\n\nMemberPicture.propTypes = {\n  className: PropTypes.string,\n  colorId: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  memberId: PropTypes.string.isRequired,\n  name: PropTypes.string,\n};\n\nMemberPicture.defaultProps = {\n  className: 'card__profile-image',\n  name: 'Unkown',\n};\n\nexport default MemberPicture;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import position icons\nimport iconLeader from '../../../../images/icon-leader.svg';\nimport iconMainVocalist from '../../../../images/icon-main-vocalist.svg';\nimport iconMainRapper from '../../../../images/icon-main-rapper.svg';\nimport iconMainDancer from '../../../../images/icon-main-dancer.svg';\nimport iconLeadVocalist from '../../../../images/icon-lead-vocalist.svg';\nimport iconLeadRapper from '../../../../images/icon-lead-rapper.svg';\nimport iconLeadDancer from '../../../../images/icon-lead-dancer.svg';\nimport iconVocalist from '../../../../images/icon-vocalist.svg';\nimport iconDancer from '../../../../images/icon-dancer.svg';\nimport iconRapper from '../../../../images/icon-rapper.svg';\nimport iconCenter from '../../../../images/icon-center.svg';\nimport iconVisual from '../../../../images/icon-visual.svg';\nimport iconMaknae from '../../../../images/icon-maknae.svg';\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst MemberPositions = ({ memberId, positions }) => {\n  // Sort positions by importance\n  const sortedPositions = [];\n\n  const positionPriority = {\n    LEADER: 0,\n    MAIN_VOCALIST: 1,\n    MAIN_RAPPER: 2,\n    MAIN_DANCER: 3,\n    LEAD_VOCALIST: 4,\n    LEAD_RAPPER: 5,\n    LEAD_DANCER: 6,\n    VOCALIST: 7,\n    RAPPER: 8,\n    DANCER: 9,\n    CENTER: 10,\n    VISUAL: 11,\n    MAKNAE: 12,\n  };\n\n  positions.forEach(position => {\n    sortedPositions[positionPriority[position]] = position;\n  });\n\n  const iconBank = {\n    LEADER: iconLeader,\n    MAIN_VOCALIST: iconMainVocalist,\n    MAIN_RAPPER: iconMainRapper,\n    MAIN_DANCER: iconMainDancer,\n    LEAD_VOCALIST: iconLeadVocalist,\n    LEAD_RAPPER: iconLeadRapper,\n    LEAD_DANCER: iconLeadDancer,\n    VOCALIST: iconVocalist,\n    RAPPER: iconDancer,\n    DANCER: iconRapper,\n    CENTER: iconCenter,\n    VISUAL: iconVisual,\n    MAKNAE: iconMaknae,\n  };\n\n  return (\n    <ul className=\"card__positions\">\n      {sortedPositions.map(position => {\n        const positionName = utils.humanize(position, 'Capital');\n        return (\n          <li key={`${memberId}-${position}`} className=\"card__position\">\n            <img\n              className=\"card__position-icon\"\n              src={iconBank[position]}\n              alt={`Position: ${positionName}`}\n              title={position}\n            />\n            {positionName}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMemberPositions.propTypes = {\n  memberId: PropTypes.string.isRequired,\n  positions: PropTypes.array.isRequired,\n};\n\nexport default MemberPositions;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import Member components\nimport MemberNationaltyFlag from './member/MemberNationalityFlag';\nimport MemberPicture from './member/MemberPicture';\nimport MemberPositions from './member/MemberPositions';\n// Import utility functions\nimport utils from '../../../utils';\nimport { FavoriteIcon, Icon } from '..';\n\nconst MemberCard = ({\n  favoriteState,\n  member,\n  updateFavoriteMembers,\n  averages,\n  showId,\n  showReferenceArtist,\n}) => (\n  <div className=\"card\">\n    {showId ? (\n      <p className=\"member-id\">\n        {member.name.toLowerCase()}\n        {member.id}\n      </p>\n    ) : null}\n    <MemberPicture\n      className={\n        showReferenceArtist ? 'card__profile-full-image' : 'card__profile-image'\n      }\n      colorId={member.colorId}\n      gender={member.gender}\n      memberId={member.id}\n      name={member.name}\n    />\n    <span className=\"card__color-bar\">\n      <span\n        className={`card__color-bar--main background-color-${utils.getColorNumber(\n          member.colorId\n        )}`}\n      />\n      <span\n        className={`card__color-bar--alt background-color-${utils.getColorNumber(\n          member.altColorId\n        )}`}\n      />\n    </span>\n    <h3 className=\"card__name\">\n      {member.name}\n      <FavoriteIcon\n        action={updateFavoriteMembers}\n        id={member.id}\n        size=\"20\"\n        state={favoriteState}\n      />\n    </h3>\n    {showReferenceArtist ? (\n      <p>\n        {member.private ? (\n          <Icon type=\"private\" color=\"red\" inline title=\"private\" size=\"18\" />\n        ) : null}\n        <b>From </b> {member.referenceArtist}\n      </p>\n    ) : null}\n\n    <p>\n      <b>Date of Birth:</b> {utils.parseBirthDate(member.birthdate)} ({\n        member.age\n      }yo)\n    </p>\n    <p>\n      <b>Nationality: </b>\n      <MemberNationaltyFlag nationality={member.nationality} />\n    </p>\n    {averages ? (\n      <Fragment>\n        <p>\n          <b>Avg Official Songs: </b>0%\n        </p>\n        <p>\n          <b>Avg Custom Songs: </b>0%\n        </p>\n        <p>\n          <b>Avg All Songs: </b>0%\n        </p>\n      </Fragment>\n    ) : null}\n    <p>\n      <b>Positions:</b>\n    </p>\n    <MemberPositions memberID={member.memberId} positions={member.positions} />\n  </div>\n);\n\nMemberCard.propTypes = {\n  averages: PropTypes.oneOfType(PropTypes.object, null),\n  showId: PropTypes.bool,\n  showReferenceArtist: PropTypes.bool,\n  favoriteState: PropTypes.bool,\n  member: PropTypes.object.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n};\n\nMemberCard.defaultProps = {\n  averages: null,\n  showId: false,\n  showReferenceArtist: false,\n  favoriteState: false,\n};\n\nexport default MemberCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import position icons\nimport iconLeader from '../../../images/icon-leader.svg';\nimport iconMainVocalist from '../../../images/icon-main-vocalist.svg';\nimport iconMainRapper from '../../../images/icon-main-rapper.svg';\nimport iconMainDancer from '../../../images/icon-main-dancer.svg';\nimport iconLeadVocalist from '../../../images/icon-lead-vocalist.svg';\nimport iconLeadRapper from '../../../images/icon-lead-rapper.svg';\nimport iconLeadDancer from '../../../images/icon-lead-dancer.svg';\nimport iconVocalist from '../../../images/icon-vocalist.svg';\nimport iconDancer from '../../../images/icon-dancer.svg';\nimport iconRapper from '../../../images/icon-rapper.svg';\nimport iconCenter from '../../../images/icon-center.svg';\nimport iconVisual from '../../../images/icon-visual.svg';\nimport iconMaknae from '../../../images/icon-maknae.svg';\nimport iconAll from '../../../images/icon-all.svg';\nimport iconNone from '../../../images/icon-none.svg';\n\nconst PositionIcon = ({ className, position }) => {\n  const iconBank = {\n    LEADER: iconLeader,\n    MAIN_VOCALIST: iconMainVocalist,\n    MAIN_RAPPER: iconMainRapper,\n    MAIN_DANCER: iconMainDancer,\n    LEAD_VOCALIST: iconLeadVocalist,\n    LEAD_RAPPER: iconLeadRapper,\n    LEAD_DANCER: iconLeadDancer,\n    VOCALIST: iconVocalist,\n    RAPPER: iconDancer,\n    DANCER: iconRapper,\n    CENTER: iconCenter,\n    VISUAL: iconVisual,\n    MAKNAE: iconMaknae,\n    ALL: iconAll,\n    NONE: iconNone,\n  };\n\n  return (\n    <span className={className}>\n      <img\n        className=\"position-icon\"\n        src={iconBank[position]}\n        alt={`Position: ${position}`}\n        title={position}\n      />\n    </span>\n  );\n};\n\nPositionIcon.propTypes = {\n  className: PropTypes.string,\n  position: PropTypes.string.isRequired,\n};\n\nPositionIcon.defaultProps = {\n  className: 'position-icon-container--inline',\n};\n\nexport default PositionIcon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon, Loading } from '..';\n// Import images\nimport logo from '../../../images/logo-neg.svg';\n\nclass RequirementWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: true,\n      authentication: true,\n      admin: false,\n      activeArtist: false,\n      ready: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.ready) {\n      this.parseRequirements();\n    }\n  }\n\n  parseRequirements() {\n    this.props.requirements.forEach(requirement => {\n      this.setState({ [requirement]: true });\n    });\n    this.setState({ ready: true });\n  }\n\n  render() {\n    if (!this.state.ready) {\n      return <Loading message=\"Loading...\" />;\n    }\n\n    // Verify Database\n    if (this.state.database && !this.props.app.databaseReady) {\n      return <Loading message=\"Fecthing database...\" />;\n    }\n\n    // Verify Authentication\n    if (\n      !this.props.app.loading &&\n      this.state.authentication &&\n      !this.props.auth.isAuthenticated\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <img className=\"login-logo\" src={logo} alt=\"Line Distribution\" />\n            <p>You must be logged in to access this page.</p>\n            <button className=\"btn btn-simple\" onClick={this.props.login}>\n              Sign-in now <Icon type=\"login\" color=\"black\" inline />\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Admin\n    if (\n      !this.props.app.loading &&\n      this.state.admin &&\n      !this.props.auth.isAdmin\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <div className=\"requirement-wrapper__big-icon\">\n              <Icon type=\"stop\" color=\"red\" size={120} />\n            </div>\n            <p>You must be an administrator to access this page.</p>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Selected Artist\n    if (\n      !this.props.app.loading &&\n      this.state.selectedArtist &&\n      (!this.props.artists.selectedArtist ||\n        !this.props.artists.selectedArtist.id)\n    ) {\n      if (this.props.app.loading) {\n        return <Loading message=\"Fecthing artist...\" />;\n      }\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group.\n          </p>\n        </main>\n      );\n    }\n\n    // Verify Active Artist\n    if (\n      !this.props.app.loading &&\n      this.state.activeArtist &&\n      this.props.artists.activeArtist &&\n      !this.props.artists.activeArtist.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Required</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group and then\n            a unit.\n          </p>\n        </main>\n      );\n    }\n\n    // Verify Active Active\n    if (\n      !this.props.app.loading &&\n      this.state.activeUnit &&\n      this.props.distribute.activeUnit &&\n      !this.props.distribute.activeUnit.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Active Unit Required</h1>\n          <p>\n            No unit has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group and then\n            a unit.\n          </p>\n        </main>\n      );\n    }\n\n    if (\n      !this.props.app.loading &&\n      this.state.activeSong &&\n      this.props.distribute.activeSong &&\n      !this.props.distribute.activeSong.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Active Song Required</h1>\n          <p>\n            No song has been selected. Go to the{' '}\n            <Link to=\"/songs\">Songs Page</Link> and select a song.\n          </p>\n        </main>\n      );\n    }\n\n    return <div className=\"wrapper\">{this.props.children}</div>;\n  }\n}\n\nRequirementWrapper.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  children: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  requirements: PropTypes.array,\n};\n\nRequirementWrapper.defaultProps = {\n  requirements: [],\n};\n\nexport default RequirementWrapper;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport RequirementWrapper from '../components/RequirementWrapper';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RequirementWrapper)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SwitchToggle = ({ action, labels, checked }) => {\n  if (!labels) {\n    labels = { left: '', right: '' };\n  } else if (Array.isArray(labels)) {\n    labels = { left: labels[0], right: labels[1] };\n  } else if (typeof labels !== 'object') {\n    labels = { left: 'A', right: 'B' };\n  }\n\n  return (\n    <span>\n      <span className=\"slide-text-left\">{labels.left}</span>\n      <label className=\"switch\">\n        <input type=\"checkbox\" onChange={action} checked={checked} />\n        <span className=\"slider\" />\n      </label>\n      <span className=\"slide-text-right\">{labels.right}</span>\n    </span>\n  );\n};\n\nSwitchToggle.propTypes = {\n  action: PropTypes.func.isRequired,\n  labels: PropTypes.object, // eslint-disable-line\n  checked: PropTypes.bool,\n};\n\nSwitchToggle.defaultProps = {\n  checked: false,\n};\n\nexport default SwitchToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../utils';\n\nconst Tabs = ({ tabs, active, action, iconCondition, icon, ...props }) => {\n  // Check for names and ids\n  tabs = tabs.map((tab, index) => {\n    const tabObj = {\n      name: tab.name || tab,\n      id: tab.id || tab,\n    };\n    if (tab.id !== undefined && tab.name === undefined) {\n      tabObj.name = utils.capitalizeWord(tab.id);\n    }\n    if (tab.id === undefined && tab.name !== undefined) {\n      tabObj.id = utils.spinalCaseWord(tab.name);\n    }\n\n    tabObj.key = `${tab.id}-${index}`;\n    tabObj.isActive = active === tab.id || active === tab ? 'selected' : '';\n    tabObj.showIcon = tab[iconCondition] || false;\n    return tabObj;\n  });\n\n  // Build icon component\n  let iconComponent;\n  if (iconCondition) {\n    iconComponent = icon;\n  }\n\n  // Activate first tab if action paramenter is not available\n  if (!active) {\n    tabs[0].isActive = 'selected';\n  }\n\n  return (\n    <section className=\"tabs-container\">\n      <ul className=\"tabs\" onClick={action}>\n        {tabs.map(tab => (\n          <li\n            key={tab.key}\n            className={utils.bem('tabs', tab.isActive, 'tab')}\n            id={tab.id}\n          >\n            {tab.name} {tab.showIcon ? iconComponent : null}\n          </li>\n        ))}\n      </ul>\n      <div className=\"tabs-content\">{props.children}</div>\n    </section>\n  );\n};\n\nTabs.propTypes = {\n  action: PropTypes.func.isRequired,\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any.isRequired,\n  iconCondition: PropTypes.string,\n  icon: PropTypes.object,\n  tabs: PropTypes.array.isRequired,\n};\n\nTabs.defaultProps = {\n  active: 0,\n  iconCondition: '',\n  icon: null,\n};\n\nexport default Tabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Typeahead = ({ action, className, name, placeholder, suggestions }) => (\n  <div className={`typeahead ${className}`}>\n    <input\n      className=\"typeahead-input\"\n      list={`list-${name}`}\n      onChange={action}\n      placeholder={placeholder}\n    />\n    <datalist className=\"typeahead-datalist\" id={`list-${name}`}>\n      {suggestions.map(suggestion => (\n        <option\n          key={suggestion}\n          className=\"typeahead-option\"\n          value={suggestion}\n        />\n      ))}\n    </datalist>\n  </div>\n);\n\nTypeahead.propTypes = {\n  action: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  suggestions: PropTypes.array,\n};\n\nTypeahead.defaultProps = {\n  className: '',\n  placeholder: 'Search...',\n  suggestions: [],\n};\n\nexport default Typeahead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import shared components\nimport { FavoriteIcon, LoadingIcon } from '../../../common';\n\nconst ArtistsTable = ({\n  artists,\n  favoriteAction,\n  pending,\n  rowAction,\n  searchQuery,\n  user,\n}) => {\n  // Filter table rows based on searchQuery\n  let filteredArtists = artists;\n  if (searchQuery && filteredArtists[0]) {\n    filteredArtists = _.filter(artists, o => o.query.includes(searchQuery));\n  }\n  // Message to be display when table has no rows\n  const emptyTableMessage =\n    searchQuery.length > 0\n      ? 'No artists available within your search'\n      : 'No artists available';\n\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"5\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"5\">{emptyTableMessage}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th className=\"artists-table__favorite-col\" />\n          <th>Name</th>\n          <th>Genre</th>\n          <th>Units</th>\n          <th>Members</th>\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {filteredArtists.length > 0\n          ? filteredArtists.map(entry => (\n              <tr key={`all-artists-${entry.id}`} id={`a-${entry.id}`}>\n                <td\n                  className=\"artists-cell-favorite\"\n                  onClick={() => favoriteAction(entry.id)}\n                >\n                  <FavoriteIcon\n                    action={() => {}}\n                    id={entry.id}\n                    size=\"12\"\n                    state={\n                      user.favoriteArtists && user.favoriteArtists[entry.id]\n                    }\n                  />\n                </td>\n                <td>{entry.name}</td>\n                <td>{entry.genre}</td>\n                <td>{entry.units ? entry.units.length : 0}</td>\n                <td>\n                  {entry.memberList.join(', ')} ({entry.memberList.length})\n                </td>\n              </tr>\n            ))\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nArtistsTable.propTypes = {\n  artists: PropTypes.array.isRequired,\n  favoriteAction: PropTypes.func.isRequired,\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string,\n  user: PropTypes.object.isRequired,\n};\n\nArtistsTable.defaultProps = {\n  pending: false,\n  searchQuery: '',\n};\n\nexport default ArtistsTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import common components\nimport {\n  ActiveUnit,\n  Icon,\n  Switch,\n  RequirementWrapper,\n  ActiveSong,\n} from '../../../common';\nimport ArtistsTable from './ArtistsTable';\n\nclass Artists extends Component {\n  componentDidMount() {\n    this.props.loadArtists();\n    this.props.updateSearchQuery('');\n  }\n  render() {\n    const {\n      admin,\n      app: { pending },\n      artists: { searchQuery, showFavoriteArtistsOnly, userLatestArtists },\n      auth: { user },\n      distribute: { activeSong, activeUnit },\n    } = this.props;\n\n    const artistList = admin.artists;\n\n    let filteredArtists = artistList;\n    if (showFavoriteArtistsOnly) {\n      filteredArtists = _.filter(artistList, o => user.favoriteArtists[o.id]);\n    }\n\n    // Row click should send user to the selected artist page\n    const handleTableClick = e => {\n      const { id } = e.target.parentNode;\n      const { className } = e.target;\n      if (id && className !== 'artists-cell-favorite') {\n        const artistId = id.substring(2);\n        this.props.history.push(`/artists/${artistId}`);\n      }\n    };\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--artists\">\n          <h1>Artists</h1>\n\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n\n          {userLatestArtists.length > 0 ? (\n            <section className=\"artists__section\">\n              <h2>\n                <Icon type=\"clock\" size=\"20\" color=\"blue\" /> Your Recently Used\n                Artists\n              </h2>\n\n              <ArtistsTable\n                artists={filteredArtists}\n                rowAction={handleTableClick}\n                favoriteAction={this.props.updateFavoriteArtists}\n                pending={pending.REQUEST_ARTISTS}\n                user={user}\n              />\n            </section>\n          ) : null}\n\n          <section className=\"artists__section\">\n            <h2>All Artists</h2>\n            <input\n              className=\"artists__search-bar\"\n              type=\"text\"\n              placeholder=\"Filter...\"\n              onChange={e => this.props.updateSearchQuery(e.target.value)}\n            />{' '}\n            Show Favorite Artists Only:{' '}\n            <Switch\n              action={this.props.showFavoriteArtistsOnlyToggle}\n              checked={showFavoriteArtistsOnly}\n            />\n            <ArtistsTable\n              artists={filteredArtists}\n              searchQuery={searchQuery}\n              pending={pending.REQUEST_ARTISTS}\n              rowAction={handleTableClick}\n              favoriteAction={this.props.updateFavoriteArtists}\n              user={user}\n            />\n          </section>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtists.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  showFavoriteArtistsOnlyToggle: PropTypes.func.isRequired,\n  updateSearchQuery: PropTypes.func.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtists.defaultProps = {};\n\nexport default Artists;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artists from '../components/Artists';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...artistsOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artists)\n);\n","import ArtistsContainer from './containers/ArtistsContainer';\n\nexport default ArtistsContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import constants\nimport constants from '../../../../utils/constants';\n// Import images\nimport biasPlaceholder from '../../../../images/bias-placeholder.svg';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass BiasPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.fallback = () => {\n      this.setState({ failed: true });\n    };\n  }\n\n  render() {\n    const { bias } = this.props;\n    // If no bias, display placeholder\n    if (!Object.keys(bias).length) {\n      return (\n        <img\n          className=\"unit-section__bias-placeholder\"\n          src={biasPlaceholder}\n          alt=\"Bias\"\n        />\n      );\n    }\n\n    const pictureUrl = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }${bias.name}${bias.id}.jpg`;\n\n    // If picture is not found\n    if (this.state.failed) {\n      return (\n        <div\n          className={`unit-section__bias-no-picture background-color-${utils.getColorNumber(\n            bias.colorId\n          )}`}\n        >\n          <span>{bias.name}</span>\n        </div>\n      );\n    }\n\n    return (\n      <img\n        className=\"unit-section__bias-picture\"\n        src={pictureUrl}\n        onError={this.fallback}\n        alt=\"Bias\"\n      />\n    );\n  }\n}\n\nBiasPicture.propTypes = {\n  bias: PropTypes.object.isRequired,\n};\n\nBiasPicture.defaultProps = {};\n\nexport default BiasPicture;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport BiasPicture from './BiasPicture';\n// Import common components\nimport { Tabs, Icon, LoadingIcon, MemberCard } from '../../../common';\n\nclass Units extends Component {\n  componentDidMount() {\n    this.props.props.getBias();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.props.artists.selectedUnit.id !==\n      this.props.props.artists.selectedUnit.id\n    ) {\n      this.props.props.getBias();\n    }\n  }\n\n  artistRedirect(page) {\n    this.props.props.activateUnit();\n\n    this.props.props.history.push(`/${page}`);\n  }\n\n  render() {\n    const {\n      props: {\n        app,\n        artists: { artistPageTab, bias, selectedArtist, selectedUnit },\n        auth,\n        switchArtistPageTab,\n        updateBias,\n        updateFavoriteMembers,\n      },\n    } = this.props;\n\n    // If Artist has no unit\n    if (!app.loading && !Object.keys(selectedUnit).length) {\n      return (\n        <section className=\"artist__section\">\n          <div className=\"tabs-container\">\n            <p className=\"tabs-content--empty\">\n              This artist has no units available.\n            </p>\n          </div>\n        </section>\n      );\n    }\n\n    const isUnitPending = app.pending.REQUEST_UNIT;\n\n    return (\n      <section className=\"artist__section\">\n        <Tabs\n          tabs={selectedArtist.units || []}\n          action={switchArtistPageTab}\n          active={artistPageTab}\n          icon={<Icon type=\"check\" color=\"blue\" />}\n          iconCondition=\"official\"\n        >\n          {selectedUnit.id ? (\n            <div className=\"unit-section\">\n              <div className=\"unit-section__info\">\n                <div className=\"unit-section__summary\">\n                  <p>\n                    <b>Debut Year:</b> {selectedUnit.debutYear || '?'}\n                  </p>\n                  <p>\n                    <b>Official Distributions:</b>{' '}\n                    {selectedUnit.distributions.length || 0}\n                  </p>\n                  <p>\n                    <b>Custom Distributions:</b>{' '}\n                    {selectedUnit.distributions.length || 0}\n                  </p>\n                  {selectedUnit.distributions_legacy &&\n                  selectedUnit.distributions_legacy.length ? (\n                    <p>\n                      <b>Legacy Distributions:</b>{' '}\n                      {selectedUnit.distributions_legacy.length || 0}\n                    </p>\n                  ) : null}\n\n                  {isUnitPending ? (\n                    <LoadingIcon size=\"small\" />\n                  ) : (\n                    <div className=\"unit-section__actions\">\n                      <button\n                        className=\"btn\"\n                        onClick={() => this.artistRedirect('songs')}\n                      >\n                        Distribute\n                      </button>\n                      <button\n                        className=\"btn\"\n                        onClick={() => this.artistRedirect('lyrics')}\n                      >\n                        Play with Lyrics <span className=\"restriction\">*</span>\n                      </button>\n                      <button className=\"btn\" disabled>\n                        Random Song\n                      </button>\n                      <p>\n                        <small>* You won&apos;t be able to save this.</small>\n                      </p>\n                    </div>\n                  )}\n                </div>\n                <div className=\"unit-section__bias\">\n                  {isUnitPending ? (\n                    <LoadingIcon size=\"medium\" />\n                  ) : (\n                    <div className=\"unit-section__bias-wrapper\">\n                      <BiasPicture bias={bias} />\n                      <select className=\"select\" onChange={updateBias}>\n                        <option value=\"\">Select your bias...</option>\n                        {Object.values(selectedUnit.members).map(member => (\n                          <option\n                            key={`bias-option-${member.id}`}\n                            value={member.id}\n                          >\n                            Bias: {member.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <hr className=\"unit-section__ruler\" />\n              <h2>Members:</h2>\n              {isUnitPending ? (\n                <LoadingIcon />\n              ) : (\n                <div className=\"unit-section__members\">\n                  {Object.values(selectedUnit.members).map(member => (\n                    <MemberCard\n                      averages={{}}\n                      key={member.id}\n                      member={member}\n                      favoriteState={\n                        auth.user.favoriteMembers &&\n                        auth.user.favoriteMembers[member.id]\n                      }\n                      updateFavoriteMembers={updateFavoriteMembers}\n                    />\n                  ))}\n                </div>\n              )}\n              <hr />\n              <h2>Distributions for the unit go here</h2>\n              <hr />\n              <h2>Legacy Distributions for the unit go here</h2>\n            </div>\n          ) : (\n            <p>The selected Artist has no units.</p>\n          )}\n        </Tabs>\n      </section>\n    );\n  }\n}\n\nUnits.propTypes = {\n  props: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n};\n\nexport default Units;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport Units from './Units';\n// Import common components\nimport { FavoriteIcon, LoadingIcon, RequirementWrapper } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Artist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      memberColors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { artistId } = this.props.match.params;\n    if (\n      this.props.artists.selectedArtist &&\n      this.props.artists.selectedArtist.id !== artistId\n    ) {\n      this.props.loadArtist(artistId, this.props.location.search);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.artists.selectedUnit.id !== this.props.artists.selectedUnit.id\n    ) {\n      this.getMemberColors();\n    }\n  }\n\n  getMemberColors() {\n    const memberColors = { ...this.state.memberColors };\n    Object.values(this.props.artists.selectedUnit.members).forEach(member => {\n      memberColors[member.id] = utils.getColorNumber(member.colorId);\n    });\n    this.setState({ memberColors });\n  }\n\n  render() {\n    const {\n      app,\n      artists: { selectedArtist },\n      auth,\n    } = this.props;\n\n    const isArtistPending = app.pending.REQUEST_ARTIST;\n\n    return (\n      <RequirementWrapper requirements={['selectedArtist']}>\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          {isArtistPending ? (\n            <LoadingIcon />\n          ) : (\n            <section className=\"artist__section\">\n              <h2 className=\"artist-page__name\">\n                {selectedArtist.name}\n                <FavoriteIcon\n                  action={this.props.updateFavoriteArtists}\n                  id={selectedArtist.id || ''}\n                  className=\"artist-page__name--fav-icon\"\n                  size=\"20\"\n                  state={\n                    selectedArtist &&\n                    selectedArtist.id &&\n                    auth.user &&\n                    auth.user.favoriteArtists[selectedArtist.id]\n                  }\n                />\n              </h2>\n              <p className=\"artist-page__genre\">{selectedArtist.genre}</p>\n              <ul className=\"artist-page__members-list\">\n                {selectedArtist.memberList &&\n                  selectedArtist.memberList.map((memberName, index) => (\n                    <li\n                      className={`artist-page__member-pill background-color-${\n                        this.state.memberColors[selectedArtist.memberIds[index]]\n                      }`}\n                      key={`mp-${memberName}`}\n                    >\n                      {memberName}\n                    </li>\n                  ))}\n              </ul>\n              <Units props={this.props} />\n            </section>\n          )}\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtist.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  loadArtist: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtist.defaultProps = {};\n\nexport default Artist;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artist from '../components/Artist';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artist)\n);\n","import ArtistContainer from './containers/ArtistContainer';\n\nexport default ArtistContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon, PositionIcon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst DistributeConnect = ({\n  activeMemberPill,\n  activateMemberPill,\n  distributionLines,\n  linkMemberToPart,\n  members,\n  rates,\n}) => (\n  <section className=\"distribute__section distribute__section--connect\">\n    <div className=\"distribute__section-left\">\n      <div className=\"distribute__content\">\n        <h3>Instructions</h3>\n        <p>\n          Assign members to every single part in the lyrics. You can instantly\n          see the overall percentage. You can overwrite a member by assigning a\n          new one to that part.\n        </p>\n      </div>\n      <div className=\"distribute__content\">\n        <h3>Members &amp; Live Distribution Rates</h3>\n        <p>\n          Click on the member pill then in a lyric connection icon on the right.\n        </p>\n        <ul className=\"distribute__rates\">\n          {Object.values(members).map(member => {\n            const colorNumber = utils.getColorNumber(member.colorId);\n            const activeClass = activeMemberPill === member.id ? 'active' : '';\n            const percentage = rates[member.id]\n              ? Math.round((100 * rates[member.id]) / rates.total)\n              : 0;\n            const percentageWidth = rates[member.id]\n              ? Math.round((100 * rates[member.id]) / rates.max)\n              : 0;\n            const spanWidth = {\n              width: `${percentageWidth}%`,\n            };\n\n            return (\n              <li className=\"distribute__pill-group\" key={member.id}>\n                <div\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`pill distribute__member-pill background-color-${colorNumber} border-color-${colorNumber} ${activeClass}`}\n                  onClick={() => activateMemberPill(member.id)}\n                >\n                  <PositionIcon\n                    position={utils.getMostImportantPosition(member.positions)}\n                  />{' '}\n                  {member.name}\n                </div>\n                <div className=\"pill distribute__rates__percentage-bar-group\">\n                  <span className=\"distribute__rates__percentage-value\">\n                    {percentage}%\n                  </span>\n                  <span\n                    style={spanWidth}\n                    className={`distribute__rates__percentage-bar background-color-${utils.getColorNumber(\n                      member.colorId\n                    )}`}\n                  />\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n\n        <p>\n          Remaining:{' '}\n          {rates.remaining === 0 && rates.total === 0 ? '100%' : null}\n          {rates.remaining > 0 && rates.total > 0\n            ? `${Math.round(\n                (100 * rates.remaining) / (rates.total + rates.remaining)\n              )}%`\n            : null}\n          {rates.remaining === 0 && rates.total > 0 ? '0%' : null}\n        </p>\n      </div>\n    </div>\n    <div className=\"distribute__section-right\">\n      <div className=\"distribute__content--lyrics\">\n        {distributionLines.map((line, index) => {\n          const key = `line-${index}`;\n          return line.length > 0 ? (\n            <div className=\"distribution__lyrics__line\" key={key}>\n              {line.map((part, partIndex) => {\n                const partKey = `${key}-${partIndex}`;\n\n                const colors = part.memberId.map(mId => members[mId].color.hex);\n\n                const lineColors = {};\n                if (colors.length === 1) {\n                  [lineColors.background] = colors;\n                  if (colors[0] === '#ebebf2') {\n                    lineColors.fontStyle = 'italic';\n                    lineColors.color = '#7e7e82';\n                  }\n                } else if (colors.length > 1) {\n                  lineColors.background = `linear-gradient(${colors.join(\n                    ', '\n                  )})`;\n                }\n\n                return (\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"distribution__lyrics__line--part\"\n                    style={lineColors}\n                    key={`${partKey}-new`}\n                    onClick={() => linkMemberToPart(part.id)}\n                  >\n                    {part.memberId.map(m => {\n                      const mKey = `${partKey}-${m}`;\n                      return (\n                        <span\n                          key={mKey}\n                          className=\"distribution__lyrics__line--icon\"\n                        >\n                          <Icon type=\"plug-connected\" size=\"12\" color=\"black\" />\n                        </span>\n                      );\n                    })}\n                    <span className=\"distribution__lyrics__line--icon\">\n                      <Icon type=\"plug-available\" size=\"12\" color=\"gray\" />\n                    </span>\n                    <span className=\"distribution__lyrics__line--content\">\n                      {part.content}\n                    </span>\n                  </span>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"distribution__lyrics\" key={key}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  </section>\n);\n\nDistributeConnect.propTypes = {\n  activeMemberPill: PropTypes.string,\n  activateMemberPill: PropTypes.func.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  members: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n};\n\nDistributeConnect.defaultProps = {\n  activeMemberPill: '',\n};\n\nexport default DistributeConnect;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport {\n  ActiveSong,\n  ActiveUnit,\n  Collapsible,\n  RequirementWrapper,\n} from '../../../common';\nimport DistributeConnect from './DistributeConnect';\n\nclass Distribute extends Component {\n  componentDidMount() {\n    this.props.prepareSong();\n  }\n\n  render() {\n    const {\n      distribute: {\n        activeMemberPill,\n        activeSong,\n        activeUnit,\n        distributionLines,\n        rates,\n      },\n      activateMemberPill,\n      handleSaveDistribution,\n      linkMemberToPart,\n    } = this.props;\n\n    const getMembers = () => {\n      const members = { ...activeUnit.members };\n      members.ALL = {\n        id: 'ALL',\n        name: 'ALL',\n        colorId: 'col000000',\n        color: { number: 0, hex: '#b5b5ba' },\n        positions: ['ALL'],\n      };\n      members.NONE = {\n        id: 'NONE',\n        name: 'NONE',\n        colorId: 'col000031',\n        color: { number: 0, hex: '#ebebf2' },\n        positions: ['NONE'],\n      };\n      return members;\n    };\n\n    const members = getMembers();\n\n    return (\n      <RequirementWrapper requirements={['activeUnit', 'activeSong']}>\n        <main className=\"container container--distribute\">\n          <h1>Distribute</h1>\n\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n\n          <div className=\"distribute__container\">\n            <Collapsible title=\"1. Connect Lines\" expanded>\n              <DistributeConnect\n                distributionLines={distributionLines}\n                members={members}\n                activateMemberPill={activateMemberPill}\n                activeMemberPill={activeMemberPill}\n                linkMemberToPart={linkMemberToPart}\n                rates={rates}\n              />\n            </Collapsible>\n            <Collapsible title=\"2. Play\" locked>\n              Play distribution with youtube video\n            </Collapsible>\n            <Collapsible title=\"3. Results\" locked>\n              Results Visualization\n            </Collapsible>\n            <Collapsible title=\"4. Save\" expanded>\n              Save distriution\n              <button className=\"btn\" onClick={handleSaveDistribution}>\n                Save\n              </button>\n            </Collapsible>\n          </div>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nDistribute.propTypes = {\n  activateMemberPill: PropTypes.func.isRequired,\n  distribute: PropTypes.object.isRequired,\n  handleSaveDistribution: PropTypes.func.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  prepareSong: PropTypes.func.isRequired,\n};\n\nDistribute.defaultProps = {};\n\nexport default Distribute;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Distribute from '../components/Distribute';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Distribute)\n);\n","import DistributeContainer from './containers/DistributeContainer';\n\nexport default DistributeContainer;\n","/* eslint react/require-default-props: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon } from '../../../common';\n// Import images\nimport logo from '../../../../images/logo.svg';\nimport userPlaceholder from '../../../../images/user-placeholder.svg';\n\nconst Menu = ({ activeUnit, auth, history, location, login, logout }) => {\n  const handleLogoClick = () => {\n    history.push('/');\n  };\n\n  const { pathname } = location;\n\n  // Hide parts of the menu if user is not authenticaded\n  const authHideClass = auth.isAuthenticated ? '' : 'hidden';\n\n  // Hide parts of the menu if user is not an administrator\n  const adminHideClass = auth.isAdmin ? '' : 'hidden';\n\n  // Hide parts of the menu if user hasn't selected an active unit\n  const activeUnitHideClass = activeUnit.id ? '' : 'hidden';\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-nav\">\n        <img\n          className=\"header-nav__logo\"\n          src={logo}\n          alt=\"Logo\"\n          onClick={() => handleLogoClick()}\n        />\n        <nav className={`header-nav__links ${authHideClass}`}>\n          <Link\n            to=\"/artists\"\n            className={pathname === '/artists' ? 'active' : ''}\n          >\n            Artists\n          </Link>\n          <Link\n            to=\"/distribute\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/distribute' ? 'active' : ''\n            }`}\n          >\n            Distribute\n          </Link>\n          <Link\n            to=\"/lyrics\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/lyrics' ? 'active' : ''\n            }`}\n          >\n            Lyrics\n          </Link>\n          <Link\n            to=\"/songs\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/songs' ? 'active' : ''\n            }`}\n          >\n            Songs\n          </Link>\n          <Link to=\"/idols\" className={pathname === '/idols' ? 'active' : ''}>\n            Idols\n          </Link>\n          <Link to=\"/lab\" className={pathname === '/lab' ? 'active' : ''}>\n            Lab\n          </Link>\n          <div className={`header-admin ${adminHideClass}`}>\n            <button\n              className={\n                pathname.includes('/admin')\n                  ? 'header-admin__nav active'\n                  : 'header-admin__nav'\n              }\n            >\n              Admin Tools\n            </button>\n            <div className=\"header-admin__dropdown\">\n              <Link to=\"/admin/manage\">Manage</Link>\n              <Link to=\"/admin/sync\">Sync</Link>\n              <Link to=\"/admin/temp\">Test/Temp</Link>\n              <Link to=\"/admin/ui-reference\">UI Reference</Link>\n            </div>\n          </div>\n        </nav>\n      </div>\n      {auth.isAuthenticated ? (\n        <div className=\"header-user\">\n          <button className=\"header-user__nav\">\n            <img\n              className=\"header-user__photo\"\n              src={auth.user.photoURL || userPlaceholder}\n              alt=\"user\"\n            />\n            {auth.user.displayName}\n          </button>\n          <div className=\"header-user__dropdown\">\n            <Link to=\"/user/my-artists\">My Artists</Link>\n            <Link to=\"/user/my-distributions\">My Distributions</Link>\n            <hr />\n            <a href=\"/\" onClick={logout}>\n              Sign out <Icon type=\"logout\" inline />\n            </a>\n          </div>\n        </div>\n      ) : (\n        <div className=\"header-user\">\n          <button className=\"btn btn-hollow header-user__btn\" onClick={login}>\n            Sign-in<Icon type=\"login\" color=\"white\" inline />\n          </button>\n        </div>\n      )}\n    </header>\n  );\n};\n\nMenu.propTypes = {\n  activeUnit: PropTypes.object,\n  auth: PropTypes.object,\n  history: PropTypes.object,\n  location: PropTypes.object,\n  login: PropTypes.func,\n  logout: PropTypes.func,\n};\n\nMenu.defaultProps = {\n  activeUnit: {},\n  auth: {},\n  history: {},\n  location: {},\n  login: () => {},\n  logout: () => {},\n};\n\nexport default Menu;\n","import React from 'react';\n\nconst LoadingBar = () => (\n  <div className=\"loading-bar\">\n    <div className=\"bar-container\">\n      <span className=\"bar bar-0\" />\n      <span className=\"bar bar-1\" />\n      <span className=\"bar bar-2\" />\n      <span className=\"bar bar-3\" />\n      <span className=\"bar bar-4\" />\n      <span className=\"bar bar-5\" />\n      <span className=\"bar bar-6\" />\n      <span className=\"bar bar-7\" />\n      <span className=\"bar bar-8\" />\n    </div>\n  </div>\n);\n\nexport default LoadingBar;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport Menu from './Menu';\nimport LoadingBar from './LoadingBar';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.init();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Menu\n          activeUnit={this.props.distribute.activeUnit}\n          auth={this.props.auth}\n          history={this.props.history}\n          location={this.props.location}\n          login={this.props.login}\n          logout={this.props.logout}\n        />\n        {this.props.app.loading ? <LoadingBar /> : null}\n      </Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  distribute: PropTypes.object,\n  history: PropTypes.object.isRequired,\n  init: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nApp.defaultProps = {\n  distribute: { activeUnit: {} },\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Header from '../components/Header';\n\nimport { appOperations } from '../../../../reducers/app';\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...appOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Header)\n);\n","import HeaderContainer from './containers/HeaderContainer';\n\nexport default HeaderContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport logo from '../../../../images/logo-alt.svg';\n\nimport constants from '../../../../utils/constants';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nconst Home = props => {\n  // Randomly choose one video in the playlist\n  const youtubeUrl =\n    constants.YOUTUBE_URLS[\n      Math.floor(Math.random() * constants.YOUTUBE_URLS.length)\n    ];\n\n  const handleLearnMoreClick = () => {\n    props.history.push('/learn-more');\n  };\n\n  return (\n    <main className=\"container container--no-padding\">\n      <div className=\"home__video\">\n        <iframe\n          className=\"home__iframe\"\n          title=\"home__video\"\n          src={`https://www.youtube.com/embed/${youtubeUrl}?controls=0&showinfo=0&rel=0&autoplay=1&loop=1&mute=1&playlist=${youtubeUrl}`}\n          frameBorder=\"0\"\n          allowFullScreen\n        />\n      </div>\n      <div className=\"home__content\">\n        <img className=\"home__logo\" src={logo} alt=\"Line Distribution\" />\n        <div className=\"home__buttons\">\n          {!props.auth.isAuthenticated ? (\n            <button className=\"btn-home\" onClick={props.login}>\n              Sign-in <Icon type=\"logout\" color=\"white\" inline />\n            </button>\n          ) : null}\n          <button className=\"btn-home\" onClick={() => handleLearnMoreClick()}>\n            Learm more\n          </button>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nHome.propTypes = {\n  auth: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default Home;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Home from '../components/Home';\n\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = {\n  login: authOperations.login,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Home)\n);\n","import HomeContainer from './containers/HomeContainer';\n\nexport default HomeContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { Checkbox, Form, Option, Select, Text } from 'informed';\n\n// Import common components\nimport { Loading, MemberCard, RequirementWrapper } from '../../../common';\n// Import constants\nimport constants from '../../../../utils/constants';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Idols extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      age: '',\n      color: '',\n      gender: '',\n      name: '',\n      nationality: '',\n      position: '',\n      sort: 'name',\n      order: 'asc',\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadMembers();\n  }\n\n  updateFilters(formState) {\n    this.setState({\n      age: formState.values.age,\n      color: formState.values.color,\n      gender: formState.values.gender,\n      favorite: formState.values.favorite,\n      name: formState.values.name,\n      nationality: formState.values.nationality,\n      position: formState.values.position,\n      sort: formState.values.sort || 'name',\n      order: formState.values.order || 'asc',\n    });\n  }\n\n  render() {\n    const {\n      app: { pending },\n      auth: { isAdmin, user },\n      admin: { members },\n      updateFavoriteMembers,\n    } = this.props;\n\n    if (pending.REQUEST_MEMBERS) {\n      return <Loading message=\"Fecthing Idols...\" />;\n    }\n\n    const filteredMembers = _.filter(members, member => {\n      let evaluation = true;\n      if (this.state.color) evaluation = member.colorId === this.state.color;\n      if (this.state.gender) evaluation = member.gender === this.state.gender;\n      if (this.state.nationality)\n        evaluation = member.nationality === this.state.nationality;\n      if (this.state.position)\n        evaluation = member.positions.includes(this.state.position);\n      if (this.state.name)\n        evaluation = member.name\n          .toLowerCase()\n          .startsWith(this.state.name.toLowerCase());\n      if (this.state.favorite) evaluation = user.favoriteMembers[member.id];\n      if (this.state.age) {\n        if (this.state.age === '<18') {\n          evaluation = member.age < 18;\n        } else if (this.state.age === '18-28') {\n          evaluation = member.age < 17 && member.age < 28;\n        } else {\n          evaluation = member.age > 28;\n        }\n      }\n      return evaluation;\n    });\n\n    const sortedMembers = _.orderBy(\n      filteredMembers,\n      [this.state.sort],\n      [this.state.order]\n    );\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--idols\">\n          <h1>Idols</h1>\n          <Form\n            onChange={formState => this.updateFilters(formState)}\n            autoComplete=\"off\"\n            className=\"idols__filter-group\"\n          >\n            <span className=\"idols__filter-name\">Filters: </span>\n            <label className=\"idols__filter-label\">\n              Name starts with:{' '}\n              <Text\n                className=\"idols__filter-input-text\"\n                field=\"name\"\n                initialValue={this.state.name}\n                maxLength=\"3\"\n              />\n            </label>\n            <label className=\"idols__filter-label\">\n              Gender:{' '}\n              <Select\n                className=\"idols__filter-select\"\n                field=\"gender\"\n                initialValue={this.state.gender}\n              >\n                <Option value=\"\">Any</Option>\n                {Object.entries(constants.GENDERS).map(gender => (\n                  <Option key={gender[0]} value={gender[0]}>\n                    {gender[1]}\n                  </Option>\n                ))}\n              </Select>\n            </label>\n            <label className=\"idols__filter-label\">\n              Nationality:{' '}\n              <Select\n                className=\"idols__filter-select\"\n                field=\"nationality\"\n                initialValue={this.state.nationality}\n              >\n                <Option value=\"\">Any</Option>\n                {Object.entries(constants.NATIONALITIES).map(nationalitie => (\n                  <Option key={nationalitie[0]} value={nationalitie[0]}>\n                    {nationalitie[1]}\n                  </Option>\n                ))}\n              </Select>\n            </label>\n            <label className=\"idols__filter-label\">\n              Age Range:{' '}\n              <Select\n                className=\"idols__filter-select\"\n                field=\"age\"\n                initialValue={this.state.age}\n              >\n                <Option value=\"\">Any</Option>\n                <Option value=\"<18\">&lt;18</Option>\n                <Option value=\"18-28\">18-28</Option>\n                <Option value=\"28+\">28+</Option>\n              </Select>\n            </label>\n            <label className=\"idols__filter-label\">\n              Position:{' '}\n              <Select\n                className=\"idols__filter-select\"\n                field=\"position\"\n                initialValue={this.state.position}\n              >\n                <Option value=\"\">Any</Option>\n                {constants.POSITIONS_LIST.map(position => (\n                  <Option key={position} value={position}>\n                    {constants.POSITIONS_LIST_OBJ[position]}\n                  </Option>\n                ))}\n              </Select>\n            </label>\n            <label className=\"idols__filter-label\">\n              Color:{' '}\n              <Select\n                className=\"idols__filter-select\"\n                field=\"color\"\n                initialValue={this.state.color}\n              >\n                <Option value=\"\">Any</Option>\n                {Object.entries(constants.COLORS).map(color => (\n                  <Option key={color[0]} value={color[0]}>\n                    {utils.humanize(color[1], 'Capital')}\n                  </Option>\n                ))}\n              </Select>\n            </label>\n            <label className=\"idols__filter-label\">\n              Show only favorites:{' '}\n              <Checkbox\n                field=\"favorite\"\n                initialValue={this.state.onlyFavorite}\n              />\n            </label>\n            <label className=\"idols__filter-label\">\n              Sort by:{' '}\n              <Select\n                className=\"idols__filter-select\"\n                field=\"sort\"\n                initialValue={this.state.sort}\n              >\n                <Option value=\"age\">Age</Option>\n                <Option value=\"colorId\">Color</Option>\n                <Option value=\"gender\">Gender</Option>\n                <Option value=\"referenceArtist\">Group</Option>\n                <Option value=\"name\">Name</Option>\n                <Option value=\"nationality\">Nationality</Option>\n              </Select>\n            </label>\n            <label className=\"idols__filter-label\">\n              Order:{'  '}\n              <Select\n                className=\"idols__filter-select\"\n                field=\"order\"\n                initialValue={this.state.order}\n              >\n                <Option value=\"asc\">Ascending</Option>\n                <Option value=\"desc\">Descending</Option>\n              </Select>\n            </label>\n          </Form>\n          <h3 className=\"member-count\">\n            Displaying {sortedMembers.length} members\n          </h3>\n          <div className=\"idols__list\">\n            {sortedMembers.map(member => (\n              <MemberCard\n                key={member.id}\n                member={member}\n                showId={isAdmin}\n                showReferenceArtist\n                favoriteState={\n                  user.favoriteMembers && user.favoriteMembers[member.id]\n                }\n                updateFavoriteMembers={updateFavoriteMembers}\n              />\n            ))}\n          </div>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nIdols.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  loadMembers: PropTypes.func.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n};\n\nexport default Idols;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Idols from '../components/Idols';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...artistsOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Idols)\n);\n","import IdolsContainer from './containers/IdolsContainer';\n\nexport default IdolsContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nlet colorDict = null;\nlet keyNumber = 0;\n\nconst LyricsOutput = ({ lyrics, colorsDB }) => {\n  if (!colorDict || !Object.keys(colorDict).length) {\n    colorDict = colorsDB;\n    colorDict.col000000 = {\n      number: 0,\n      hex: '#b1b1b1',\n    };\n  }\n\n  return (\n    <div className=\"lyrics__output\">\n      {lyrics.map(verse => {\n        keyNumber++;\n        return <Verse key={`verse-${keyNumber}`} verse={verse} />;\n      })}\n    </div>\n  );\n};\n\nLyricsOutput.propTypes = {\n  lyrics: PropTypes.array.isRequired,\n  colorsDB: PropTypes.object.isRequired,\n};\n\nconst Verse = ({ verse }) => (\n  <p className=\"lyrics__verse\">\n    {verse.map(line => {\n      keyNumber++;\n      return (\n        <Fragment key={`line-${keyNumber}`}>\n          <Line line={line} />\n          <br />\n        </Fragment>\n      );\n    })}\n  </p>\n);\n\nVerse.propTypes = {\n  verse: PropTypes.array.isRequired,\n};\n\nconst Line = ({ line }) => (\n  <span className=\"lyrics__line\">\n    {line.map(part => {\n      keyNumber++;\n      if (!part.line || !part.line[0] || !part.adlib) return null;\n\n      return (\n        <Fragment key={`part-${keyNumber}`}>\n          <Bracket part={part} />\n          <Part part={part} />\n        </Fragment>\n      );\n    })}\n  </span>\n);\n\nLine.propTypes = {\n  line: PropTypes.array.isRequired,\n};\n\nconst Part = ({ part }) => (\n  <Fragment>\n    {part.adlib.map((type, index) => {\n      keyNumber++;\n\n      const bitStyle = getBitStyle(part, type, index);\n\n      switch (type) {\n        case 0:\n          // colored line (colors)\n          return (\n            <span\n              key={`bit-${keyNumber}`}\n              className=\"lyrics__bit-normal\"\n              style={bitStyle}\n            >\n              {part.line[index]}\n            </span>\n          );\n        case 1:\n          // colored line with parentheses (subColors)\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              (\n              <span className=\"lyrics__bit-sub\" style={bitStyle}>\n                {part.line[index]}\n              </span>\n              )\n            </Fragment>\n          );\n        case 2:\n          // greyed italic line with parentheses\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              <i>(</i>\n              <span className=\"lyrics__bit-grey\">{part.line[index]}</span>\n              <i>)</i>\n            </Fragment>\n          );\n        case 3:\n          // greyed italitc line\n          return (\n            <span key={`bit-${keyNumber}`} className=\"lyrics__bit-all\">\n              {part.line[index]}\n            </span>\n          );\n        case 4:\n          // colored line with parentheses (choirColors)\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              <i>(</i>\n              <span className=\"lyrics__bit-choir\" style={bitStyle}>\n                {part.line[index]}\n              </span>\n              <i>)</i>\n            </Fragment>\n          );\n        default:\n          return (\n            <span\n              key={`bit-${keyNumber}`}\n              className=\"lyrics__bit-normal\"\n              style={bitStyle}\n            >\n              {part.line[index]}\n            </span>\n          );\n      }\n    })}\n  </Fragment>\n);\n\nPart.propTypes = {\n  part: PropTypes.object.isRequired,\n};\n\nconst Bracket = ({ part }) => {\n  if (part.omit) return null;\n\n  const hasSingers = part.singers && !part.omit;\n  const hasSubSingers = part.subSingers && !part.omitSub;\n  const hasChoirSingers = part.choirSingers && !part.omitChoir;\n\n  if (!hasSingers && !hasSubSingers && !hasChoirSingers) return null;\n\n  return (\n    <span className=\"lyrics__bracket\">\n      {' ['}\n      {hasSingers ? part.singers.join('/') : null}\n      {hasSubSingers ? (\n        <span className=\"lyrics__parenthesis\">\n          {' ('}\n          {part.subSingers.join('/')}\n          {')'}\n        </span>\n      ) : null}\n      {hasChoirSingers ? (\n        <span className=\"lyrics__braces\">\n          {' {'}\n          {part.choirSingers.join('/')}\n          {'}'}\n        </span>\n      ) : null}\n      {'] '}\n    </span>\n  );\n};\n\nBracket.propTypes = {\n  part: PropTypes.object.isRequired,\n};\n\nconst getBitStyle = (part, type) => {\n  const BASE_COLOR = '#b5b5ba';\n  const styles = {\n    background: '#b1b1b1',\n  };\n\n  if (type === 0 && part.colors && part.colors.length) {\n    if (part.colors.length > 1) {\n      const colorHexes = part.colors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.colors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  if (type === 1 && part.subColors && part.subColors.length) {\n    if (part.subColors.length > 1) {\n      const colorHexes = part.subColors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.subColors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  if (type === 4 && part.choirColors && part.choirColors.length) {\n    if (part.choirColors.length > 1) {\n      const colorHexes = part.choirColors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.choirColors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  return styles;\n};\n\nexport default LyricsOutput;\n","// Global variables\nconst COLOR_BANK = {\n  ALL: 'col000000',\n};\nlet latestUnitId = null;\nlet errors = [];\n\nlet lastSingers = [];\nlet lastColors = [];\nlet lastSubsingers = [];\nlet lastSubColors = [];\nlet lastChoirSingers = [];\nlet lastChoirColors = [];\nlet wasLastLineEmpty = false;\nlet lastLineHadSubSingers = false;\nlet lastLineHadChoirSings = false;\n\nlet uses = {};\n\nconst updateUses = entry => {\n  function addEntry(name) {\n    if (uses[name]) {\n      uses[name]++;\n    } else {\n      uses[name] = 1;\n    }\n  }\n\n  if (typeof entry === 'string') {\n    addEntry(entry.trim().toUpperCase());\n  } else if (Array.isArray(entry)) {\n    entry.forEach(n => addEntry(n.trim().toUpperCase()));\n  }\n};\n\nclass Part {\n  constructor() {\n    this.singers = null; // type: array\n    this.subSingers = null; // type: array\n    this.line = []; // type: array\n    this.adlib = []; // type: array\n    /**\n     * adlib code reference\n     * 0: regular line colored\n     * 1: surrounded by parenthesis colored\n     * 2: italic greyed surrouneded by parenthesis\n     * 3: italic greyed\n     * 4: italic colored\n     */\n    this.colors = null; // type: array\n    this.subColors = null; // type: array\n    this.omit = false; // type: bool\n    this.omitSub = false; // type: bool\n  }\n}\n\nconst cleanUpPart = part => {\n  if (lastSubsingers.length) lastLineHadSubSingers = true;\n  if (lastChoirSingers.length) lastLineHadChoirSings = true;\n\n  // Keep singer state when not preceeded by an empty line\n  if (part.adlib.includes(0)) {\n    if (!part.singers && wasLastLineEmpty) {\n      part.adlib = part.adlib.map(() => 3);\n    } else if (!part.singers) {\n      updateUses(lastSingers);\n      part.singers = [...lastSingers];\n      part.colors = [...lastColors];\n      part.omit = true;\n    }\n  }\n\n  // Keep subSinger state when not preceeded by an empty line\n  if (part.adlib.includes(1)) {\n    if (!part.subSingers && (wasLastLineEmpty || !lastLineHadSubSingers)) {\n      part.adlib = part.adlib.map(a => (a === 1 ? 2 : a));\n    } else if (!part.subSingers) {\n      updateUses(lastSubsingers);\n      part.subSingers = [...lastSubsingers];\n      part.subColors = [...lastSubColors];\n      part.omitSub = true;\n      lastLineHadSubSingers = true;\n    }\n  }\n\n  if (part.adlib.includes(1)) {\n    lastLineHadSubSingers = true;\n  }\n\n  // Keep choirSinger state when not preceeded by an empty line\n  if (part.adlib.includes(4)) {\n    if (!part.choirSingers && (wasLastLineEmpty || !lastLineHadChoirSings)) {\n      part.adlib = part.adlib.map(a => (a === 4 ? 2 : a));\n    } else if (!part.choirSingers && lastChoirSingers.length) {\n      updateUses(lastChoirSingers);\n      part.choirSingers = [...lastChoirSingers];\n      part.choirColors = [...lastChoirColors];\n      part.omitChoir = true;\n      lastLineHadChoirSings = true;\n    }\n  }\n\n  if (part.adlib.includes(4)) {\n    lastLineHadChoirSings = true;\n  }\n\n  // Clean up unused keys\n  if (!part.singers) delete part.singers;\n  if (Array.isArray(part.singers) && !part.singers.length) delete part.singers;\n  if (!part.subSingers) delete part.subSingers;\n  if (Array.isArray(part.subSingers) && !part.subSingers.length)\n    delete part.subSingers;\n  if (!part.line) delete part.line;\n  if (Array.isArray(part.line) && !part.line.length) delete part.line;\n  if (!part.adlib) delete part.adlib;\n  if (Array.isArray(part.adlib) && !part.adlib.length) delete part.adlib;\n  if (!part.colors) delete part.colors;\n  if (Array.isArray(part.colors) && !part.colors.length) delete part.colors;\n  if (!part.subColors) delete part.subColors;\n  if (Array.isArray(part.subColors) && !part.subColors.length)\n    delete part.subColors;\n  if (!part.omit) delete part.omit;\n  if (!part.omitSub) delete part.omitSub;\n\n  if (Object.keys(part).length) {\n    wasLastLineEmpty = false;\n  } else {\n    part.empty = true;\n    wasLastLineEmpty = true;\n    lastLineHadSubSingers = false;\n    lastLineHadChoirSings = false;\n  }\n\n  // Save last\n  if (!part.empty) {\n    if (part.singers) lastSingers = [...part.singers];\n    if (part.colors) lastColors = [...part.colors];\n    if (part.subSingers) lastSubsingers = [...part.subSingers];\n    if (part.subColors) lastSubColors = [...part.subColors];\n    if (part.choirSingers) lastChoirSingers = [...part.choirSingers];\n    if (part.choirColors) lastChoirColors = [...part.choirColors];\n  } else {\n    lastSingers = [];\n    lastColors = [];\n    lastSubsingers = [];\n    lastSubColors = [];\n    lastChoirSingers = [];\n    lastChoirSingers = [];\n    lastLineHadSubSingers = false;\n    lastLineHadChoirSings = false;\n  }\n  return part;\n};\n\nconst parseLine = line => {\n  const result = [];\n  let insideBracket = false;\n  let insideParentheses = false;\n  let insideCurly = false;\n\n  let names = [];\n  let colors = [];\n\n  let currentString = '';\n  let lastCharacter = '';\n  let currentPart = new Part();\n  for (let i = 0; i < line.length; i++) {\n    const char = line[i];\n\n    // Analyse each character\n    switch (char) {\n      case '[':\n        if (insideBracket) {\n          errors.push(\n            'You should not place an opening square bracket inside another square bracket'\n          );\n        }\n        insideBracket = true;\n        // Push Part and reset variabes\n        if (i !== 0) {\n          if (currentString.trim()) {\n            currentPart.line.push(currentString.trim());\n            currentPart.adlib.push(0);\n          }\n          result.push(cleanUpPart(currentPart));\n          insideParentheses = false;\n          names = [];\n          colors = [];\n          currentString = '';\n          lastCharacter = '';\n        }\n        // Start new Part\n        currentPart = new Part();\n        break;\n\n      case ']':\n        if (!insideBracket) {\n          errors.push(\n            'You should not place an closing square bracket inside another square bracket'\n          );\n        }\n        if (insideBracket && lastCharacter !== ')' && lastCharacter !== '}') {\n          const entry = currentString.trim().toUpperCase();\n          names.push(entry);\n          colors.push(COLOR_BANK[entry] || 'col000000');\n          updateUses(names);\n          currentPart.singers = names;\n          currentPart.colors = colors;\n          names = [];\n          colors = [];\n          currentString = '';\n        }\n        insideBracket = false;\n        break;\n\n      case '(':\n        if (insideParentheses) {\n          errors.push(\n            'You should not place a opening parenthesis inside another parenthesis'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.singers = names;\n            currentPart.colors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(0);\n          currentString = '';\n        }\n        insideParentheses = true;\n        break;\n\n      case ')':\n        if (!insideParentheses) {\n          errors.push(\n            'You should not place a closing parenthesis inside another parenthesis'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.subSingers = names;\n            currentPart.subColors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(1);\n          currentString = '';\n        }\n        insideParentheses = false;\n        break;\n\n      case '{':\n        if (insideCurly) {\n          errors.push(\n            'You should not place a opening curly braces inside another curly braces'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.singers = names;\n            currentPart.colors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(0);\n          currentString = '';\n        }\n        insideCurly = true;\n        break;\n\n      case '}':\n        if (!insideCurly) {\n          errors.push(\n            'You should not place a closing curly braces inside another curly braces'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.choirSingers = names;\n            currentPart.choirColors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(4);\n          currentString = '';\n        }\n        insideCurly = false;\n        break;\n\n      case '/':\n        // TO-DO\n        if (insideBracket) {\n          const entry = currentString.trim().toUpperCase();\n          names.push(entry);\n          colors.push(COLOR_BANK[entry] || 'col000000');\n          currentString = '';\n        } else {\n          currentString += char;\n        }\n        break;\n      default:\n        currentString += char;\n      // do nothing\n    }\n    lastCharacter = char;\n  }\n  // Push the last part to the result\n  if (currentString) {\n    currentPart.line.push(currentString.trim());\n    currentPart.adlib.push(0);\n  }\n  result.push(cleanUpPart(currentPart));\n\n  if (result.length === 1 && result[0].empty) {\n    return null;\n  }\n  return result;\n};\n\nconst parseLyrics = (input, members, unitId) => {\n  const result = [];\n\n  // Build member color bank if it's a new unitId\n  if (unitId !== latestUnitId) {\n    Object.values(members).forEach(member => {\n      COLOR_BANK[member.name.toUpperCase()] = member.colorId || 'col000000';\n    });\n    latestUnitId = unitId;\n  }\n\n  // Split in linebreaks\n  const lines = input.split('\\n').map(l => l.trim());\n  // Keep track of previous information\n\n  // Iterate through lines\n  for (let i = 0; i < lines.length; i++) {\n    result.push(parseLine(lines[i]));\n  }\n\n  // Reset all variabes\n  lastSingers = [];\n  lastColors = [];\n  lastSubsingers = [];\n  lastSubColors = [];\n  lastChoirSingers = [];\n  lastChoirSingers = [];\n  wasLastLineEmpty = false;\n  lastLineHadSubSingers = false;\n  lastLineHadChoirSings = false;\n\n  // Group lyrics in paragraphs\n  const paragraphedResult = [[]];\n  let paragraphIndex = 0;\n  result.forEach(currentLine => {\n    if (!currentLine) {\n      paragraphedResult.push([]);\n      paragraphIndex++;\n    } else {\n      paragraphedResult[paragraphIndex].push(currentLine);\n    }\n  });\n\n  const response = {\n    result: paragraphedResult,\n    uses: { ...uses },\n  };\n\n  // Add any errors\n  if (errors.length) {\n    response.errors = [...errors];\n  }\n\n  errors = [];\n  uses = [];\n\n  return response;\n};\n\nexport default parseLyrics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\n\n// Import lyrics components\nimport LyricsOutput from './LyricsOutput';\n// Import common components\nimport { Loading, RequirementWrapper } from '../../../common';\n// Import lyric parser\nimport parseLyrics from '../parser';\n\nclass Lyrics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lyrics: {\n        result: [],\n        uses: {},\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadColors();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      admin: { colors },\n      distribute: { activeUnit },\n    } = this.props;\n\n    if (pending.REQUEST_COLORS) {\n      return <Loading message=\"Fecthing Colors...\" />;\n    }\n\n    const handleLyricsInput = event => {\n      const { value } = event.target;\n\n      this.setState({\n        lyrics: parseLyrics(value, activeUnit.members || [], activeUnit.id),\n      });\n    };\n\n    return (\n      <RequirementWrapper requirements={['activeUnit']}>\n        <main className=\"container container--lyrics\">\n          <h1>Lyrics</h1>\n          {activeUnit.members ? (\n            <ul className=\"lyrics__members-list\">\n              {Object.values(activeUnit.members).map(member => (\n                <li\n                  className={`pill background-color-${member.color.number ||\n                    0}`}\n                  key={member.id}\n                >\n                  {member.name.toUpperCase()}{' '}\n                  {this.state.lyrics.uses[member.name.toUpperCase()]\n                    ? `(${this.state.lyrics.uses[member.name.toUpperCase()]})`\n                    : null}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <section className=\"lyrics__members-list--empty\">\n              There is no Active Unit Selected.\n            </section>\n          )}\n          <ScrollSync>\n            <section className=\"lyrics__group\">\n              <ScrollSyncPane>\n                <textarea\n                  name=\"lyrics\"\n                  id=\"\"\n                  cols=\"30\"\n                  rows=\"10\"\n                  className=\"lyrics__input\"\n                  onChange={handleLyricsInput}\n                />\n              </ScrollSyncPane>\n              <ScrollSyncPane>\n                <LyricsOutput\n                  lyrics={this.state.lyrics.result}\n                  colorsDB={colors}\n                />\n              </ScrollSyncPane>\n            </section>\n          </ScrollSync>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nLyrics.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  loadColors: PropTypes.func.isRequired,\n};\n\nexport default Lyrics;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Lyrics from '../components/Lyrics';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...artistsOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Lyrics)\n);\n","import LyricsContainer from './containers/LyricsContainer';\n\nexport default LyricsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ColorReferenceBar = ({ colors, colorsInUse }) => (\n  <ul className=\"color-reference-bar\">\n    {Object.values(colors).map(color => {\n      const isInUse = colorsInUse[color.id]\n        ? 'color-reference-item--in-use'\n        : '';\n      return (\n        <li\n          className={`color-reference-item background-color-${\n            color.number\n          } ${isInUse}`}\n          key={color.id}\n        >\n          {color.name}\n          <br />\n          {color.count}\n        </li>\n      );\n    })}\n  </ul>\n);\n\nColorReferenceBar.propTypes = {\n  colors: PropTypes.object,\n  colorsInUse: PropTypes.object,\n};\n\nColorReferenceBar.defaultProps = {\n  colors: {},\n  colorsInUse: PropTypes.object,\n};\n\nexport default ColorReferenceBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Select, Option, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n// Import constants\nimport constants from '../../../../utils/constants';\n\nconst ManageArtist = ({\n  formState,\n  props,\n  validateTypeahead,\n  isValid,\n  artistId,\n  defaultValues,\n  next,\n}) => {\n  const {\n    admin: { artistsTypeahead, panels },\n    handleEditArtist,\n  } = props;\n\n  // Locked Panel\n  if (panels.artist === 'locked') {\n    return (\n      <section className=\"manage-form__artist\">\n        <h3 className=\"manage-form__button-title\">Artist</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Lock Artist\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Open Panel\n  if (panels.artist === 'open') {\n    return (\n      <section className=\"manage-form__artist\">\n        <h3 className=\"manage-form__button-title\">Artist</h3>\n        <button\n          className=\"manage-form__button-add\"\n          onClick={() => handleEditArtist(artistId)}\n        >\n          <img\n            className=\"manage-form__button-add-image\"\n            src={managePlus}\n            alt=\"Add Artist\"\n          />\n        </button>\n        <Typeahead\n          action={e => validateTypeahead(e)}\n          name=\"artists\"\n          placeholder=\"Search existing artist...\"\n          suggestions={artistsTypeahead}\n        />\n        {isValid ? (\n          <p className=\"manage-form__valid\">\n            <Icon type=\"check\" color=\"green\" inline />\n            Selected Artist is valid. Click on the plus button to add it.\n          </p>\n        ) : null}\n      </section>\n    );\n  }\n\n  // Validation classes\n  const isRequired = value => (!value ? 'This field is required' : undefined);\n\n  const isValidName =\n    formState.errors.artist && formState.errors.artist.name\n      ? 'manage-form__input--invalid'\n      : '';\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__artist manage-form__artist-edit\">\n      <div className=\"manage-form__form-group\">\n        <Scope scope=\"artist\">\n          <h3>Artist</h3>\n          <label className=\"manage-form__label\">\n            Name*<Text\n              className={`manage-form__input ${isValidName}`}\n              field=\"name\"\n              validateOnBlur\n              validate={isRequired}\n              required\n              initialValue={defaultValues.name}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Other Names<Text\n              className=\"manage-form__input\"\n              field=\"otherNames\"\n              initialValue={defaultValues.otherNames}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Genre*\n            <Select\n              className=\"manage-form__input\"\n              field=\"genre\"\n              validate={isRequired}\n              initialValue={defaultValues.genre}\n              required\n            >\n              <Option value=\"\" disabled>\n                Select One...\n              </Option>\n              {Object.entries(constants.GENRES).map(genre => (\n                <Option key={genre[0]} value={genre[0]}>\n                  {genre[1]}\n                </Option>\n              ))}\n            </Select>\n          </label>\n          <label className=\"manage-form__label\">\n            Private{' '}\n            <Checkbox field=\"private\" initialValue={defaultValues.private} />\n          </label>\n        </Scope>\n      </div>\n      <div className=\"manage-form__navigation\">\n        <button className=\"btn\" onClick={() => next(formState)}>\n          Unlock Unit\n        </button>\n      </div>\n    </section>\n  );\n};\n\nManageArtist.propTypes = {\n  admin: PropTypes.object,\n  artistId: PropTypes.string,\n  defaultValues: PropTypes.object.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditArtist: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n  props: PropTypes.object.isRequired,\n  validateTypeahead: PropTypes.func.isRequired,\n};\n\nManageArtist.defaultProps = {\n  admin: {},\n  artistId: null,\n  handleEditArtist: () => {},\n};\n\nexport default ManageArtist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n\nconst ManageUnit = ({\n  formState,\n  props,\n  validateTypeahead,\n  isValid,\n  unitId,\n  defaultValues,\n  next,\n}) => {\n  const {\n    admin: { unitsTypeahead, panels },\n    handleEditUnit,\n  } = props;\n\n  // Locked Panel\n  if (panels.unit === 'locked') {\n    return (\n      <section className=\"manage-form__unit\">\n        <h3 className=\"manage-form__button-title\">Unit</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Locked Unit\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Open Panel\n  if (panels.unit === 'open') {\n    return (\n      <section className=\"manage-form__unit\">\n        <h3 className=\"manage-form__button-title\">Unit</h3>\n        <button\n          className=\"manage-form__button-add\"\n          onClick={() => handleEditUnit(unitId)}\n        >\n          <img\n            className=\"manage-form__button-add-image\"\n            src={managePlus}\n            alt=\"Add Unit\"\n          />\n        </button>\n        {unitsTypeahead.length ? (\n          <Typeahead\n            action={e => validateTypeahead(e)}\n            name=\"units\"\n            placeholder=\"Search existing unit...\"\n            suggestions={unitsTypeahead}\n          />\n        ) : null}\n        {isValid ? (\n          <p className=\"manage-form__valid\">\n            <Icon type=\"check\" color=\"green\" inline />\n            Selected Unit is valid. Click on the plus button to add it.\n          </p>\n        ) : null}\n      </section>\n    );\n  }\n\n  // Validation classes\n  const isRequired = value => (!value ? 'This field is required' : undefined);\n  const isYear = value =>\n    value < 1900 || value > new Date().getFullYear()\n      ? 'Value must be a four digit year'\n      : undefined;\n\n  const isValidName =\n    formState.errors.unit && formState.errors.unit.name\n      ? 'manage-form__input--invalid'\n      : '';\n\n  const isValidDebutYear =\n    formState.errors.unit && formState.errors.unit.debutYear\n      ? 'manage-form__input--invalid'\n      : '';\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__unit manage-form__unit-edit\">\n      <div className=\"manage-form__form-group\">\n        <Scope scope=\"unit\">\n          <h3>Unit</h3>\n          <label className=\"manage-form__label\">\n            Unit Name* (e.g. OT4)<Text\n              className={`manage-form__input ${isValidName}`}\n              field=\"name\"\n              validateOnBlur\n              validate={isRequired}\n              required\n              initialValue={defaultValues.name}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Debut Year*<Text\n              className={`manage-form__input ${isValidDebutYear}`}\n              field=\"debutYear\"\n              validateOnBlur\n              validate={isYear}\n              required\n              initialValue={defaultValues.debutYear}\n              type=\"number\"\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Official{' '}\n            <Checkbox field=\"official\" initialValue={defaultValues.official} />\n          </label>\n          <label className=\"manage-form__label\">\n            Private{' '}\n            <Checkbox field=\"private\" initialValue={defaultValues.private} />\n          </label>\n        </Scope>\n      </div>\n      <div className=\"manage-form__navigation\">\n        <button className=\"btn\" onClick={() => next(formState)}>\n          Unlock Members\n        </button>\n      </div>\n    </section>\n  );\n};\n\nManageUnit.propTypes = {\n  admin: PropTypes.object,\n  defaultValues: PropTypes.object.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditUnit: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n  props: PropTypes.object.isRequired,\n  validateTypeahead: PropTypes.func.isRequired,\n  unitId: PropTypes.string,\n};\n\nManageUnit.defaultProps = {\n  admin: {},\n  handleEditUnit: () => {},\n  unitId: null,\n};\n\nexport default ManageUnit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Select, Option, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n// Import utils\nimport utils from '../../../../utils';\n// Import constants\nimport constants from '../../../../utils/constants';\n\nconst ManageMembers = ({\n  formState,\n  props,\n  colorsInUse,\n  defaultValues,\n  handleEditMember,\n  isValid,\n  memberId,\n  validateTypeahead,\n}) => {\n  const {\n    admin: { membersTypeahead, panels },\n    removeMember,\n    updateMemberColor,\n    // updateMemberPositions,\n  } = props;\n\n  // Locked Panel\n  if (panels.members === 'locked') {\n    return (\n      <section className=\"manage-form__members\">\n        <h3 className=\"manage-form__button-title\">Members</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Locked Unit\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__members manage-form__members-edit\">\n      <div className=\"manage-form__form-group-member\">\n        {defaultValues.map((member, index) => {\n          const key = index;\n\n          // Validation classes\n          const isRequired = value =>\n            !value ? 'This field is required' : undefined;\n          const isName = value => {\n            // isRequired\n            if (!value) return 'This field is required';\n            // Cannot have spaces\n            if (value.match(/(\\.|:| |,|;|\\?)/g))\n              return 'Name cannot contain spaces, commas, ., :, ;, or ?';\n            // Max 12 characters\n            if (value.length > 12)\n              return 'Name cannot be longer than 12 characters';\n            return undefined;\n          };\n\n          const isValidName =\n            formState.errors.members &&\n            formState.errors.members[index] &&\n            formState.errors.members[index].name\n              ? 'manage-form__input--invalid'\n              : '';\n\n          if (member) {\n            return (\n              <Scope scope={`members[${index}]`} key={`member-${key}`}>\n                <div className=\"manage-form__form-member manage-member\">\n                  <span\n                    className={`manage-member__title background-color-${utils.getColorNumber(\n                      member.colorId\n                    )}`}\n                  >\n                    Member {index + 1}{' '}\n                    <button\n                      className=\"btn-remove-user\"\n                      onClick={() => removeMember(index)}\n                    >\n                      ×\n                    </button>\n                  </span>\n                  <div className=\"manage-form__inline\">\n                    <label\n                      className=\"manage-form__label\"\n                      title=\"Member names must be less than 12 characters without spaces, commas, colors, semicolons, questions marks or periods\"\n                    >\n                      Name*<Text\n                        className={`manage-form__input ${isValidName}`}\n                        field=\"name\"\n                        validateOnBlur\n                        validate={isName}\n                        required\n                        initialValue={member.name}\n                      />\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--30\">\n                      Initials<Text\n                        className=\"manage-form__input\"\n                        field=\"initials\"\n                        initialValue={member.initials}\n                        maxLength=\"2\"\n                      />\n                    </label>\n                  </div>\n                  <div className=\"manage-form__inline\">\n                    <label className=\"manage-form__label manage-form__label--70\">\n                      Birthdate*<Text\n                        className=\"manage-form__input\"\n                        field=\"birthdate\"\n                        validate={isRequired}\n                        required\n                        initialValue={member.birthdate}\n                        type=\"date\"\n                      />\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--30\">\n                      Color*\n                      <Select\n                        className={`manage-form__input background-color-${utils.getColorNumber(\n                          member.colorId\n                        )}`}\n                        field=\"colorId\"\n                        validate={isRequired}\n                        initialValue={member.colorId}\n                        required\n                        onChange={e => updateMemberColor(e.target.value, index)}\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.COLORS).map(color => (\n                          <Option\n                            key={`${key}-${color[0]}`}\n                            value={color[0]}\n                            disabled={colorsInUse[color[0]]}\n                          >\n                            {color[1]}\n                          </Option>\n                        ))}\n                      </Select>\n                    </label>\n                  </div>\n                  <div className=\"manage-form__inline\">\n                    <label className=\"manage-form__label manage-form__label--50\">\n                      Gender*\n                      <Select\n                        className=\"manage-form__input\"\n                        field=\"gender\"\n                        validate={isRequired}\n                        initialValue={member.gender}\n                        required\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.GENDERS).map(gender => (\n                          <Option key={`${key}-${gender[0]}`} value={gender[0]}>\n                            {gender[1]}\n                          </Option>\n                        ))}\n                      </Select>\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--50\">\n                      Nationality*\n                      <Select\n                        className=\"manage-form__input\"\n                        field=\"nationality\"\n                        validate={isRequired}\n                        initialValue={member.nationality}\n                        required\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.NATIONALITIES).map(\n                          nationality => (\n                            <Option\n                              key={`${key}-${nationality[0]}`}\n                              value={nationality[0]}\n                            >\n                              {nationality[1]}\n                            </Option>\n                          )\n                        )}\n                      </Select>\n                    </label>\n                  </div>\n                  <label className=\"manage-form__label\">Positions* </label>\n                  <div className=\"position-buttons\">\n                    {constants.POSITIONS_LIST.map(position => (\n                      <Checkbox\n                        key={`${key}-${position}`}\n                        field={position}\n                        initialValue={member[utils.spiralCase(position)]}\n                        className={`position-checkbox position-checkbox-${utils.spiralCase(\n                          position\n                        )}`}\n                        title={position}\n                        // onChange={e =>\n                        //   updateMemberPositions(\n                        //     e.target.checked,\n                        //     position,\n                        //     index\n                        //   )\n                        // }\n                      />\n                    ))}\n                  </div>\n                  <label className=\"manage-form__label\">\n                    Private{' '}\n                    <Checkbox field=\"private\" initialValue={member.private} />\n                  </label>\n                </div>\n              </Scope>\n            );\n          }\n          return null;\n        })}\n        <div className=\"manage-form__form-member manage-member-new\">\n          <h3 className=\"manage-form__button-title\">Add new member</h3>\n          <button\n            className=\"manage-form__button-add\"\n            onClick={() => handleEditMember(memberId, formState)}\n          >\n            <img\n              className=\"manage-form__button-add-image\"\n              src={managePlus}\n              alt=\"Add Unit\"\n            />\n          </button>\n          <Typeahead\n            action={e => validateTypeahead(e)}\n            name=\"members\"\n            placeholder=\"Search existing members...\"\n            suggestions={membersTypeahead}\n          />\n          {isValid ? (\n            <p className=\"manage-form__valid\">\n              <Icon type=\"check\" color=\"green\" inline />\n              Selected Member is valid. Click on the plus button to add it.\n            </p>\n          ) : null}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nManageMembers.propTypes = {\n  admin: PropTypes.object,\n  colorsInUse: PropTypes.object,\n  defaultValues: PropTypes.array.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditMember: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  memberId: PropTypes.string,\n  props: PropTypes.object.isRequired,\n  removeMember: PropTypes.func,\n  updateMemberColor: PropTypes.func,\n  // updateMemberPositions: PropTypes.func,\n  validateTypeahead: PropTypes.func.isRequired,\n};\n\nManageMembers.defaultProps = {\n  admin: {},\n  colorsInUse: {},\n  handleEditMember: () => {},\n  memberId: null,\n  removeMember: () => {},\n  updateMemberColor: () => {},\n  // updateMemberPositions: () => {},\n};\n\nexport default ManageMembers;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'informed';\n\n// Import components\nimport ColorReferenceBar from './ColorReferenceBar';\nimport ManageArtist from './ManageArtist';\nimport ManageUnit from './ManageUnit';\nimport ManageMembers from './ManageMembers';\n// Import common components\nimport { RequirementWrapper, Loading, Icon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Manage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artistId: null,\n      validArtist: false,\n      unitId: null,\n      validUnit: false,\n      memberId: null,\n      validMember: false,\n    };\n\n    this.handleEditMemberAndState = this.handleEditMemberAndState.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n    this.validateArtist = this.validateArtist.bind(this);\n    this.validateUnit = this.validateUnit.bind(this);\n    this.validateMembers = this.validateMembers.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.loadArtists();\n    this.props.loadColors();\n    this.props.loadMembers();\n  }\n\n  validateArtist(event) {\n    const { value } = event.target;\n    const dict = this.props.admin.artistsTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ artistId: dict[value], validArtist: true });\n    } else {\n      this.setState({ artistId: null, validArtist: false });\n    }\n  }\n\n  validateUnit(event) {\n    const { value } = event.target;\n    const dict = this.props.admin.unitsTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ unitId: dict[value], validUnit: true });\n    } else {\n      this.setState({ unitId: null, validUnit: false });\n    }\n  }\n\n  validateMembers(event) {\n    const { value } = event.target;\n    const dict = this.props.admin.membersTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ memberId: dict[value], validMember: true });\n    } else {\n      this.setState({ memberId: null, validMember: false });\n    }\n  }\n\n  handleEditMemberAndState(memberId, formState) {\n    if (memberId) {\n      this.setState({ memberId: null, validMember: false });\n    }\n    this.props.handleEditMember(memberId, formState);\n  }\n\n  resetAll() {\n    this.setState({\n      artistId: null,\n      validArtist: false,\n      unitId: null,\n      validUnit: false,\n      memberId: null,\n      validMember: false,\n    });\n    this.props.resetManage();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      admin: {\n        colors,\n        colorsInUse,\n        editingArtist,\n        editingMembers,\n        editingUnit,\n        manageResult,\n      },\n      handleResyncDB,\n      saveManage,\n      updateManageForm,\n      unlockUnit,\n      unlockMembers,\n    } = this.props;\n\n    const isSaveable =\n      Object.keys(editingArtist).length &&\n      Object.keys(editingUnit).length &&\n      editingMembers.length;\n\n    // Build default values for form\n    const defaultValues = {\n      artist: {\n        name: undefined,\n        otherNames: undefined,\n        genre: undefined,\n        private: undefined,\n      },\n      unit: {\n        debutYear: undefined,\n        name: undefined,\n        official: undefined,\n        private: undefined,\n      },\n      members: [],\n    };\n\n    if (editingArtist && editingArtist.id) {\n      defaultValues.artist = {\n        name: editingArtist.name,\n        otherNames: editingArtist.otherNames,\n        genre: editingArtist.genre,\n        private: editingArtist.private,\n      };\n    }\n\n    if (editingUnit && editingUnit.id) {\n      defaultValues.unit = {\n        debutYear: editingUnit.debutYear,\n        name: editingUnit.name,\n        official: editingUnit.official,\n        private: editingUnit.private,\n      };\n    }\n\n    if (editingMembers.length) {\n      editingMembers.forEach(member => {\n        if (member) {\n          defaultValues.members.push({\n            colorId: member.colorId || undefined,\n            gender: member.gender || undefined,\n            initials: member.initials || undefined,\n            name: member.name || undefined,\n            nationality: member.nationality || undefined,\n            private: member.private || undefined,\n            referenceArtist: member.referenceArtist || undefined,\n            birthdate: member.birthdate\n              ? utils.spiralBirthdate(member.birthdate)\n              : undefined,\n            ...utils.makePositionsEditable(member.positions || []),\n          });\n        } else {\n          defaultValues.members.push(null);\n        }\n      });\n    }\n\n    // If database is still loading\n    if (\n      pending.REQUEST_ARTISTS ||\n      pending.REQUEST_COLORS ||\n      pending.REQUEST_MEMBERS\n    ) {\n      return <Loading message=\"Preparing manage...\" />;\n    }\n\n    // If database is being resynced\n    if (pending.RESYNC_DATABASE) {\n      return <Loading message=\"Resyncing database...\" />;\n    }\n\n    // If save is in progress\n    if (pending.UPDATE_COMPLETE_ARTIST) {\n      return <Loading message=\"Saving...\" />;\n    }\n\n    // If save is in progress\n    if (manageResult === 'SUCCESS') {\n      return (\n        <main className=\"container container--manage\">\n          <h1>Manage</h1>\n          <div className=\"manage-section--manage-success\">\n            <Icon type=\"check\" color=\"green\" size={96} />\n            <p>Complete Artists Successfully Created/Updated</p>\n            <button className=\"btn\" onClick={this.resetAll}>\n              Create New Artist\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--manage\">\n          <h1>Manage</h1>\n          <button className=\"btn btn-resync-db\" onClick={handleResyncDB}>\n            Resync Database\n          </button>\n          <p>\n            A complete group is required to save with ONE Artist, ONE Unit, and\n            at least TWO members (no solo artists)\n          </p>\n          <ColorReferenceBar colors={colors} colorsInUse={colorsInUse} />\n          <Form\n            onChange={formState => updateManageForm(formState)}\n            autoComplete=\"off\"\n            className=\"manage-section\"\n          >\n            {({ formState }) => (\n              <Fragment>\n                <div className=\"manage-form\">\n                  <ManageArtist\n                    formState={formState}\n                    props={this.props}\n                    validateTypeahead={this.validateArtist}\n                    isValid={this.state.validArtist}\n                    artistId={this.state.artistId}\n                    defaultValues={defaultValues.artist}\n                    next={unlockUnit}\n                  />\n                  <ManageUnit\n                    formState={formState}\n                    props={this.props}\n                    validateTypeahead={this.validateUnit}\n                    isValid={this.state.validUnit}\n                    unitId={this.state.unitId}\n                    defaultValues={defaultValues.unit}\n                    next={unlockMembers}\n                  />\n                  <ManageMembers\n                    formState={formState}\n                    props={this.props}\n                    defaultValues={defaultValues.members}\n                    validateTypeahead={this.validateMembers}\n                    isValid={this.state.validMember}\n                    memberId={this.state.memberId}\n                    colorsInUse={colorsInUse}\n                    handleEditMember={this.handleEditMemberAndState}\n                  />\n                </div>\n                <div className=\"manage-form-nav\">\n                  <button className=\"btn\" onClick={() => this.resetAll()}>\n                    Reset\n                  </button>\n                  <button\n                    className=\"btn\"\n                    onClick={() => saveManage(formState)}\n                    disabled={!isSaveable}\n                  >\n                    Save\n                  </button>\n                </div>\n              </Fragment>\n            )}\n          </Form>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nManage.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  loadColors: PropTypes.func.isRequired,\n  loadMembers: PropTypes.func.isRequired,\n  handleEditMember: PropTypes.func.isRequired,\n  handleResyncDB: PropTypes.func.isRequired,\n  resetManage: PropTypes.func.isRequired,\n  saveManage: PropTypes.func.isRequired,\n  updateManageForm: PropTypes.func.isRequired,\n  unlockMembers: PropTypes.func.isRequired,\n  unlockUnit: PropTypes.func.isRequired,\n};\n\nManage.defaultProps = {};\n\nexport default Manage;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Manage from '../components/Manage';\n\nimport { adminOperations } from '../../../../reducers/admin';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Manage)\n);\n","import ManageContainer from './containers/ManageContainer';\n\nexport default ManageContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import shared components\nimport { LoadingIcon, Icon } from '../../../common';\n\nconst SongsTable = ({ songs, pending, rowAction, songSearchQuery }) => {\n  // Filter table rows based on searchQuery\n  let filteredSongs = songs;\n  if (songSearchQuery && filteredSongs[0]) {\n    filteredSongs = _.filter(songs, o => o.query.includes(songSearchQuery));\n  }\n  // Message to be display when table has no rows\n  const emptyTableMessage =\n    songSearchQuery.length > 0\n      ? 'No songs available within your search'\n      : 'No songs available';\n\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"7\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"7\">{emptyTableMessage}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th />\n          <th>Title</th>\n          <th>Artist</th>\n          <th>Album</th>\n          <th>Group Size</th>\n          <th>Video</th>\n          <th>Title Song</th>\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {filteredSongs.length > 0\n          ? filteredSongs.map(entry => (\n              <tr key={`all-artists-${entry.id}`} id={`a-${entry.id}`}>\n                <td>\n                  {entry.private ? (\n                    <Icon type=\"private\" color=\"red\" title=\"PRivate\" inline />\n                  ) : (\n                    ''\n                  )}\n                </td>\n                <td>{entry.title}</td>\n                <td>\n                  {entry.originalArtist}{' '}\n                  {entry.originalArtistId ? (\n                    <Icon\n                      type=\"check\"\n                      color=\"yellow\"\n                      title=\"Artist in LD\"\n                      inline\n                    />\n                  ) : null}\n                </td>\n                <td>\n                  {entry.album !== 'UNKNOWN' ? (\n                    entry.album\n                  ) : (\n                    <Icon\n                      type=\"question-mark\"\n                      color=\"blue\"\n                      title=\"Unkown Album Title\"\n                      inline\n                    />\n                  )}\n                </td>\n                <td>{entry.groupSize}</td>\n                <td>\n                  {entry.videoId ? (\n                    <Icon\n                      type=\"youtube\"\n                      color=\"red\"\n                      title={entry.videoId}\n                      size=\"18\"\n                      inline\n                    />\n                  ) : (\n                    'Unavailable'\n                  )}\n                </td>\n                <td>\n                  {entry.single ? (\n                    <Icon\n                      type=\"check\"\n                      color=\"green\"\n                      title=\"Title Song\"\n                      inline\n                    />\n                  ) : (\n                    <Icon\n                      type=\"no\"\n                      color=\"red\"\n                      title=\"Not a Title Song\"\n                      inline\n                    />\n                  )}\n                </td>\n              </tr>\n            ))\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nSongsTable.propTypes = {\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func.isRequired,\n  songs: PropTypes.array.isRequired,\n  songSearchQuery: PropTypes.string,\n};\n\nSongsTable.defaultProps = {\n  pending: false,\n  songSearchQuery: '',\n};\n\nexport default SongsTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport SongsTable from './SongsTable';\n// Import common components\nimport { ActiveSong, ActiveUnit, RequirementWrapper } from '../../../common';\n\nclass Songs extends Component {\n  componentDidMount() {\n    this.props.loadSongs();\n    this.props.resetSongSearchQuery();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      admin: { songs, songSearchQuery },\n      distribute: { activeSong, activeUnit },\n    } = this.props;\n\n    // Row click should send user to the selected artist page\n    const handleTableClick = e => {\n      const { id } = e.target.parentNode;\n      if (id) {\n        const songId = id.substring(2);\n        this.props.activateSong(songId);\n        this.props.history.push(`/distribute`);\n      }\n    };\n\n    return (\n      <RequirementWrapper requirements={['activeUnit']}>\n        <main className=\"container container--songs\">\n          <h1>Songs</h1>\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n          <h2>All Songs</h2>\n          <p>To start a distribution, select a song by clicking on its row.</p>\n          <input\n            className=\"artists__search-bar\"\n            type=\"text\"\n            placeholder=\"Filter songs...\"\n            onChange={e => this.props.updateSongSearchQuery(e.target.value)}\n          />\n          <SongsTable\n            songs={songs}\n            songSearchQuery={songSearchQuery}\n            pending={pending.REQUEST_SONGS}\n            rowAction={handleTableClick}\n          />\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nSongs.propTypes = {\n  activateSong: PropTypes.func.isRequired,\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadSongs: PropTypes.func.isRequired,\n  resetSongSearchQuery: PropTypes.func.isRequired,\n  updateSongSearchQuery: PropTypes.func.isRequired,\n};\n\nexport default Songs;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Songs from '../components/Songs';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Songs)\n);\n","import SongsContainer from './containers/SongsContainer';\n\nexport default SongsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SyncStep1VideoId = ({ handleVideoId, loadYoutubeVideo, videoId }) => (\n  <div className=\"sync__step sync__step--1\">\n    <p>Add a youtube link/video id here</p>\n    <input type=\"text\" onChange={handleVideoId} />\n    <p>OR choose a metronome placeholder</p>\n    <select onChange={handleVideoId} disabled>\n      <option value=\"\">Select a btm placeholder</option>\n      <option value=\"90bpm\">90 bpm</option>\n      <option value=\"100bpm\">100 bpm</option>\n      <option value=\"110bpm\">110 bpm</option>\n      <option value=\"120bpm\">120 bpm</option>\n      <option value=\"130bpm\">130 bpm</option>\n    </select>\n\n    <button\n      className=\"btn btn-block\"\n      disabled={!videoId}\n      onClick={() => loadYoutubeVideo()}\n    >\n      Load Video for {videoId}\n    </button>\n  </div>\n);\n\nSyncStep1VideoId.propTypes = {\n  handleVideoId: PropTypes.func.isRequired,\n  loadYoutubeVideo: PropTypes.func.isRequired,\n  videoId: PropTypes.string,\n};\n\nSyncStep1VideoId.defaultProps = {\n  videoId: '',\n};\n\nexport default SyncStep1VideoId;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Form, Text } from 'informed';\n\n// Import common components\nimport { Typeahead } from '../../../common';\n\nclass SyncStep2Info extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalArtist: '',\n    };\n  }\n\n  addToOriginalArtistForm(event) {\n    const { value } = event.target;\n    this.setState({\n      originalArtist: value,\n    });\n  }\n\n  render() {\n    return (\n      <Form autoComplete=\"off\" className=\"sync__step sync__step--2\">\n        {({ formState }) => (\n          <Fragment>\n            <label className=\"sync__form__label\">\n              Song Title*<Text\n                className=\"sync__form__input\"\n                field=\"title\"\n                required\n              />\n            </label>\n            <label className=\"sync__form__label\">\n              Original Artist*{' '}\n              <Typeahead\n                action={e => this.addToOriginalArtistForm(e)}\n                name=\"artists\"\n                placeholder=\"Search existing artist...\"\n                suggestions={this.props.artistsTypeahead}\n              />\n            </label>\n\n            <label className=\"sync__form__label\">\n              Album<Text className=\"sync__form__input\" field=\"album\" />\n            </label>\n            <label className=\"sync__form__label\">\n              Single (Title song){' '}\n              <Checkbox className=\"sync__form__input\" field=\"single\" />\n            </label>\n            <label className=\"sync__form__label\">\n              Original Group Size*<Text\n                className=\"sync__form__input\"\n                field=\"groupSize\"\n                required\n                type=\"number\"\n                min=\"1\"\n                max=\"50\"\n                step=\"1\"\n              />\n            </label>\n            <label className=\"sync__form__label\">\n              Private <Checkbox className=\"sync__form__input\" field=\"private\" />\n            </label>\n\n            <button\n              className=\"btn btn-block\"\n              onClick={() =>\n                this.props.handleFormInfo(formState, this.state.originalArtist)\n              }\n            >\n              Unlock Next Step\n            </button>\n          </Fragment>\n        )}\n      </Form>\n    );\n  }\n}\n\nSyncStep2Info.propTypes = {\n  artistsTypeahead: PropTypes.array.isRequired,\n  handleFormInfo: PropTypes.func.isRequired,\n};\n\nexport default SyncStep2Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst SyncStep3Lyrics = ({\n  handleLyricsEdit,\n  lockLyrics,\n  lyrics,\n  prepareLines,\n}) => {\n  const insertBrackers = () => {\n    const el = document.getElementById('lyrics-editor');\n    const newEl = utils.insertAtCursor(el, ' [] ');\n    handleLyricsEdit(newEl);\n  };\n\n  return (\n    <div className=\"sync__step sync__step--1\">\n      <div className=\"sync__lyrics__controls\">\n        <button className=\"btn btn-50\" onClick={() => prepareLines(true)}>\n          Prepare Lines *\n        </button>{' '}\n        <button className=\"btn btn-50\" onClick={insertBrackers}>\n          Add []\n        </button>\n      </div>\n      <textarea\n        id=\"lyrics-editor\"\n        className=\"sync__lyrics__textarea\"\n        onChange={e => handleLyricsEdit(e)}\n        placeholder=\"Add Lyrics here and press Prepare Lines\"\n        value={lyrics || ''}\n      />\n      <p>\n        <small>\n          * Prepare Lines adds square brackets before each line erasing any\n          numbered id previously created. If you are editing, this will erase\n          any previously linked pill.\n        </small>\n      </p>\n      <button className=\"btn btn-block\" onClick={() => lockLyrics()}>\n        Lock Lyrics &amp; Next Step\n      </button>\n    </div>\n  );\n};\n\nSyncStep3Lyrics.propTypes = {\n  handleLyricsEdit: PropTypes.func.isRequired,\n  lockLyrics: PropTypes.func.isRequired,\n  lyrics: PropTypes.string.isRequired,\n  prepareLines: PropTypes.func.isRequired,\n};\n\nexport default SyncStep3Lyrics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nclass SyncStep4Buttons extends Component {\n  componentDidMount() {\n    if (this.props.location.pathname === '/admin/sync') {\n      window.addEventListener('keydown', event =>\n        this.props.handleSyncKeydown(event, this.props.player)\n      );\n      window.addEventListener('keyup', event =>\n        this.props.handleSyncKeyup(event, this.props.player)\n      );\n    }\n  }\n\n  render() {\n    const boxes = [\n      { color: '1', name: 'Vocal', boxId: '1' },\n      { color: '8', name: 'Sub', boxId: '2' },\n      { color: '12', name: 'Rap', boxId: '3' },\n      { color: '20', name: 'AdLibs', boxId: '4' },\n      { color: '26', name: 'All', boxId: '5' },\n    ];\n\n    const pillColors = {\n      1: '1',\n      2: '8',\n      3: '12',\n      4: '20',\n      5: '26',\n    };\n\n    return (\n      <div className=\"sync__step sync__step--4b\">\n        <p>\n          You can only record distributions when the video is playing, so hit\n          play!\n        </p>\n        <div className=\"sync__distribution__buttons\">\n          {boxes.map((box, index) => (\n            <button\n              key={box.name}\n              className={`box box-25 background-color-${box.color}`}\n              onMouseDown={() =>\n                this.props.handleSyncBoxMouseDown(box.boxId, this.props.player)\n              }\n              onMouseUp={() =>\n                this.props.handleSyncBoxMouseUp(\n                  box.boxId,\n                  this.props.player,\n                  box.color\n                )\n              }\n            >\n              <span className=\"key\">{index + 1}</span>\n              <span className=\"member-name\">{box.name}</span>\n            </button>\n          ))}\n        </div>\n        <div className=\"sync__distribution__pills\">\n          <h3>\n            Log\n            <span\n              role=\"button\"\n              tabIndex={0}\n              className=\"sync__log-trash\"\n              onClick={() => this.props.deleteSyncPill()}\n            >\n              <Icon type=\"trash\" size=\"24\" inline />\n            </span>\n          </h3>\n          <p>\n            When you have enough pills in the log, you can connect them with the\n            lyrics. You will need a pill for each unconnected plug in the\n            lyrics.\n          </p>\n          <div className=\"sync__log\">\n            {Object.keys(this.props.pills).map(key => {\n              const item = this.props.pills[key];\n              const isActive =\n                +this.props.activePill === +item.pillId ? 'active' : '';\n\n              return (\n                <span\n                  key={item.pillId}\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`background-color-${\n                    pillColors[item.key]\n                  } sync__log__pill sync__log__pill--${isActive}`}\n                  onClick={() => this.props.connectSyncPill(item.pillId)}\n                >\n                  <Icon\n                    type={item.link ? 'plug-connected' : 'plug'}\n                    size=\"12\"\n                    inline\n                  />\n                  <span className=\"sync__log__num\">\n                    :{item.timestamp.toFixed(2)}\n                  </span>\n                  <span className=\"sync__log__num\">\n                    :{item.duration.toFixed(2)}\n                  </span>\n                </span>\n              );\n            })}\n          </div>\n          <div className=\"sync__log__controls\">\n            <button className=\"btn btn-50\" onClick={this.props.resetPillLinks}>\n              Reset Links\n            </button>\n            <button\n              className={`btn btn-50 sync__sequence--${\n                this.props.linkSequenceMode\n              }`}\n              onClick={this.props.linkPillsSequence}\n            >\n              Link in Sequence\n            </button>\n          </div>\n          <p className=\"sync__log__stats\">\n            <span>Pills: {this.props.stats.pills} </span>\n            <span>Lines: {this.props.stats.lines} </span>\n            <span>\n              Linked:{' '}\n              {Math.round(\n                (100 * this.props.stats.linked) / this.props.stats.lines\n              )}%{' '}\n            </span>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nSyncStep4Buttons.propTypes = {\n  activePill: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  connectSyncPill: PropTypes.func.isRequired,\n  deleteSyncPill: PropTypes.func.isRequired,\n  handleSyncBoxMouseDown: PropTypes.func.isRequired,\n  handleSyncBoxMouseUp: PropTypes.func.isRequired,\n  handleSyncKeydown: PropTypes.func.isRequired,\n  handleSyncKeyup: PropTypes.func.isRequired,\n  linkPillsSequence: PropTypes.func.isRequired,\n  linkSequenceMode: PropTypes.bool.isRequired,\n  location: PropTypes.object.isRequired,\n  pills: PropTypes.object.isRequired,\n  player: PropTypes.any,\n  resetPillLinks: PropTypes.func.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nSyncStep4Buttons.defaultProps = {\n  activePill: null,\n  player: null,\n};\n\nexport default SyncStep4Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nconst ICON_COLOR_CODE_HASH = {\n  '1': 'red',\n  '8': 'yellow',\n  '12': 'green',\n  '20': 'blue',\n  '26': 'pink',\n};\n\nconst SyncStep4Distributions = ({\n  activeLine,\n  connectSyncLine,\n  distributionLines,\n  isDistributionComplete,\n  unlockSpecificStep,\n  unlockNextStep,\n}) => (\n  <div className=\"sync__step sync__step--4\">\n    <p>\n      This step begins in the left side of this page. You will create\n      syncronizations, then link the pills with each plug in the lyrics here.\n    </p>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(3)}>\n      <Icon type=\"back-arrow\" inline /> Go Back To Lyrics\n    </button>\n    <section className=\"sync__distribution__lyrics\">\n      {distributionLines.map((line, index) => {\n        const key = `line-${index}`;\n        return line.length > 0 ? (\n          <div className=\"sync__distribution__line\" key={key}>\n            {line.map((part, partIndex) => {\n              const partKey = `${key}-${partIndex}`;\n              const isActive = +activeLine === +part.id ? 'active' : '';\n              return (\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`sync__distribution__line--part sync__distribution__line--part-${isActive}`}\n                  key={partKey}\n                  onClick={() => connectSyncLine(part.id)}\n                >\n                  <span className=\"sync__distribution__line--icon\">\n                    <Icon\n                      type={part.link ? 'plug-connected' : 'plug-available'}\n                      size=\"12\"\n                      color={\n                        part.color ? ICON_COLOR_CODE_HASH[part.color] : 'gray'\n                      }\n                    />\n                  </span>\n                  <span className=\"sync__distribution__line--content\">\n                    {part.content}\n                  </span>\n                </span>\n              );\n            })}\n          </div>\n        ) : (\n          <div className=\"sync__distribution__line\" key={key}>\n            &nbsp;\n          </div>\n        );\n      })}\n    </section>\n    <button\n      className=\"btn btn-block\"\n      disabled={!isDistributionComplete}\n      onClick={() => unlockNextStep()}\n    >\n      Next Step\n    </button>\n  </div>\n);\n\nSyncStep4Distributions.propTypes = {\n  activeLine: PropTypes.object,\n  connectSyncLine: PropTypes.func.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  isDistributionComplete: PropTypes.bool,\n  unlockSpecificStep: PropTypes.func.isRequired,\n  unlockNextStep: PropTypes.func.isRequired,\n};\n\nSyncStep4Distributions.defaultProps = {\n  activeLine: null,\n  isDistributionComplete: false,\n};\n\nexport default SyncStep4Distributions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst linesOn = {};\n\nconst SyncStep5Verify = ({ currentTime, distributionLines, timestamps }) => {\n  const timestampsList = Object.keys(timestamps);\n  for (let i = 0; i < timestampsList.length; i++) {\n    const key = timestampsList[i];\n\n    // If current time is smaller than the key, stop loop;\n    if (currentTime < key) {\n      i = timestampsList.length;\n    } else if (currentTime >= key) {\n      const tsArray = timestamps[key];\n      tsArray.forEach(tsObj => {\n        if (tsObj.endTime < currentTime) {\n          linesOn[tsObj.partId.substring(5)] = false;\n        } else {\n          linesOn[tsObj.partId.substring(5)] = true;\n        }\n      });\n    }\n  }\n\n  return (\n    <div className=\"sync__step sync__step--5\">\n      <div className=\"sync__distribution__lyrics\">\n        {distributionLines.map((line, index) => {\n          const key = `line-${index}`;\n          return line.length > 0 ? (\n            <div className=\"sync-lyrics-done__line\" key={key}>\n              {line.map((part, partIndex) => {\n                const partKey = `${key}-${partIndex}`;\n                const isActive = linesOn[part.id]\n                  ? 'sync__distribution__line--part-active'\n                  : '';\n                return (\n                  <span\n                    className={`sync__distribution__line--part ${isActive}`}\n                    key={partKey}\n                  >\n                    <span className=\"sync__distribution__line--content\">\n                      {part.content}\n                    </span>\n                  </span>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"sync__distribution__line\" key={key}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nSyncStep5Verify.propTypes = {\n  currentTime: PropTypes.number.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  timestamps: PropTypes.object.isRequired,\n};\n\nSyncStep5Verify.defaultProps = {};\n\nexport default SyncStep5Verify;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon, LoadingIcon } from '../../../common';\n\nconst SyncStep5Save = ({ info, pending, saveSync, unlockSpecificStep }) => (\n  <div className=\"sync__step sync__step--5\">\n    <h3>Info</h3>\n    <ul className=\"sync__verify__info\">\n      <li className=\"sync__verify__info-item\">Title: {info.title}</li>\n      <li className=\"sync__verify__info-item\">Artist: {info.originalArtist}</li>\n      <li className=\"sync__verify__info-item\">\n        ArtistId: {info.artistId ? info.artistId : 'Unavailable'}\n      </li>\n      <li className=\"sync__verify__info-item\">\n        Album: {info.album ? info.album : 'Unknown'}\n      </li>\n      <li className=\"sync__verify__info-item\">\n        Single: {info.single ? 'Yes' : 'No'}\n      </li>\n      <li className=\"sync__verify__info-item\">Group Size: {info.groupSize}</li>\n      <li className=\"sync__verify__info-item\">Video Id: {info.videoId}</li>\n      <li className=\"sync__verify__info-item\">\n        Private: {info.private ? 'Yes' : 'No'}\n      </li>\n    </ul>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(2)}>\n      <Icon type=\"back-arrow\" inline /> Info is wrong. Let me fix it!\n    </button>\n    <p>\n      Play the video and see your distribution in action to see if anything is\n      wrong.\n    </p>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(3)}>\n      <Icon type=\"back-arrow\" inline /> Lyrics or distribution are wrong. Let me\n      fix it!\n    </button>\n    <p>\n      After everything is good. You can save by clicking on the button below:\n    </p>\n\n    <button className=\"btn btn-block\" onClick={() => saveSync()}>\n      {pending ? (\n        <LoadingIcon size=\"tiny\" />\n      ) : (\n        <Icon type=\"save\" color=\"red\" inline />\n      )}{' '}\n      Save\n    </button>\n  </div>\n);\n\nSyncStep5Save.propTypes = {\n  info: PropTypes.object.isRequired,\n  pending: PropTypes.bool,\n  saveSync: PropTypes.func.isRequired,\n  unlockSpecificStep: PropTypes.func.isRequired,\n};\n\nSyncStep5Save.defaultProps = {\n  pending: false,\n};\n\nexport default SyncStep5Save;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport SyncStep1VideoId from './SyncStep1VideoId';\nimport SyncStep2Info from './SyncStep2Info';\nimport SyncStep3Lyrics from './SyncStep3Lyrics';\nimport SyncStep4Buttons from './SyncStep4Buttons';\nimport SyncStep4Distributions from './SyncStep4Distribution';\nimport SyncStep5Verify from './SyncStep5Verify';\nimport SyncStep5Save from './SyncStep5Save';\n// Import common components\nimport {\n  Collapsible,\n  Loading,\n  RequirementWrapper,\n  Icon,\n} from '../../../common';\n\nlet loadYT;\nlet player;\nlet animationInterval;\n\nclass Sync extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 0,\n      currentTime: 0,\n    };\n\n    this.loadYoutubeVideo = this.loadYoutubeVideo.bind(this);\n    this.onPlayerStateChange = this.onPlayerStateChange.bind(this);\n    this.setHeight = this.setHeight.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.admin.artists.length < 10) {\n      this.props.loadArtists();\n    }\n  }\n\n  componentDidUpdate() {\n    // Determine player height\n    if (!this.state.height && document.getElementById('video-container')) {\n      this.setHeight();\n    }\n  }\n\n  onPlayerStateChange(e) {\n    // If video is playing\n    if (e.data === 1 && this.props.sync.step === 5) {\n      // Lyric Review Animation Interval\n      animationInterval = setInterval(() => {\n        const currentTime = Math.round(player.getCurrentTime());\n        this.setState(() => ({ currentTime }));\n      }, 500);\n    } else {\n      // Kill interval\n      clearInterval(animationInterval);\n    }\n  }\n\n  setHeight() {\n    const width = document.getElementById('video-container').clientWidth;\n    const height = (9 * width) / 16;\n    this.setState(() => ({ width, height }));\n  }\n\n  loadYoutubeVideo() {\n    if (!loadYT && this.props.sync.videoId) {\n      loadYT = new Promise(resolve => {\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => resolve(window.YT);\n      });\n\n      loadYT.then(YT => {\n        player = new YT.Player(this.youtubePlayerAnchor, {\n          height: this.state.height || 390,\n          width: this.state.width || 640,\n          videoId: this.props.sync.videoId,\n          events: {\n            onStateChange: e => this.onPlayerStateChange(e),\n          },\n        });\n        this.props.unlockNextStep();\n      });\n    }\n  }\n\n  render() {\n    const {\n      app: { pending },\n      admin: { artistsTypeahead },\n      sync: {\n        activeLine,\n        activePill,\n        distributionLines,\n        info,\n        isDistributionComplete,\n        linkSequenceMode,\n        lyrics,\n        pills,\n        step,\n        steps,\n        stats,\n        timestamps,\n        videoId,\n      },\n      connectSyncLine,\n      connectSyncPill,\n      deleteSyncPill,\n      handleFormInfo,\n      handleLyricsEdit,\n      handleSyncBoxMouseDown,\n      handleSyncBoxMouseUp,\n      handleSyncKeydown,\n      handleSyncKeyup,\n      handleResetSync,\n      handleVideoId,\n      linkPillsSequence,\n      location,\n      lockLyrics,\n      prepareLines,\n      resetPillLinks,\n      saveSync,\n      unlockNextStep,\n      unlockSpecificStep,\n    } = this.props;\n\n    if (pending.REQUEST_ARTISTS) {\n      return <Loading message=\"Preparing Sync...\" />;\n    }\n\n    // If save is in progress\n    if (step === 6) {\n      return (\n        <main className=\"container container--sync\">\n          <h1>Manage</h1>\n          <div className=\"manage-section--manage-success\">\n            <Icon type=\"check\" color=\"green\" size={96} />\n            <p>Song Successfully Created</p>\n            <button className=\"btn\" onClick={handleResetSync}>\n              Create New Song Distribution\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--sync\">\n          <h1>Sync</h1>\n          <section className=\"sync__container\">\n            <div className=\"sync__group sync__group--left\">\n              <section\n                className=\"sync__video\"\n                id=\"video-container\"\n                ref={r => {\n                  this.youtubePlayerAnchor = r;\n                }}\n              >\n                <Icon type=\"youtube\" color=\"white\" size=\"72\" />\n              </section>\n              <Collapsible\n                title=\"4. Distribution Buttons\"\n                locked={steps[4].locked}\n                expanded={steps[4].expanded}\n                collapsed={!steps[4].expanded}\n                synced\n              >\n                <SyncStep4Buttons\n                  activePill={activePill}\n                  connectSyncPill={connectSyncPill}\n                  deleteSyncPill={deleteSyncPill}\n                  handleSyncBoxMouseDown={handleSyncBoxMouseDown}\n                  handleSyncBoxMouseUp={handleSyncBoxMouseUp}\n                  handleSyncKeydown={handleSyncKeydown}\n                  handleSyncKeyup={handleSyncKeyup}\n                  linkPillsSequence={linkPillsSequence}\n                  linkSequenceMode={linkSequenceMode}\n                  location={location}\n                  pills={pills}\n                  player={player}\n                  resetPillLinks={resetPillLinks}\n                  stats={stats}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"5. Confirm &amp; Save\"\n                locked={steps[5].locked}\n                expanded={steps[5].expanded}\n                collapsed={!steps[5].expanded}\n                synced\n              >\n                <SyncStep5Save\n                  info={info}\n                  pending={pending.SEND_SONG}\n                  saveSync={saveSync}\n                  unlockSpecificStep={unlockSpecificStep}\n                />\n              </Collapsible>\n            </div>\n            <div className=\"sync__group sync__group--right\">\n              <Collapsible\n                title=\"1. Video Id\"\n                locked={steps[1].locked}\n                expanded={steps[1].expanded}\n                collapsed={!steps[1].expanded}\n                synced\n              >\n                <SyncStep1VideoId\n                  handleVideoId={handleVideoId}\n                  loadYoutubeVideo={this.loadYoutubeVideo}\n                  videoId={videoId}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"2. Info\"\n                locked={steps[2].locked}\n                expanded={steps[2].expanded}\n                collapsed={!steps[2].expanded}\n                synced\n              >\n                <SyncStep2Info\n                  artistsTypeahead={artistsTypeahead}\n                  handleFormInfo={handleFormInfo}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"3. Lyrics\"\n                locked={steps[3].locked}\n                expanded={steps[3].expanded}\n                collapsed={!steps[3].expanded}\n                synced\n              >\n                <SyncStep3Lyrics\n                  handleLyricsEdit={handleLyricsEdit}\n                  lockLyrics={lockLyrics}\n                  lyrics={lyrics}\n                  prepareLines={prepareLines}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"4. Distribution\"\n                locked={steps[4].locked}\n                expanded={steps[4].expanded}\n                collapsed={!steps[4].expanded}\n                synced\n              >\n                <SyncStep4Distributions\n                  activeLine={activeLine}\n                  connectSyncLine={connectSyncLine}\n                  distributionLines={distributionLines}\n                  isDistributionComplete={isDistributionComplete}\n                  unlockSpecificStep={unlockSpecificStep}\n                  unlockNextStep={unlockNextStep}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"5. Verify\"\n                locked={steps[5].locked}\n                expanded={steps[5].expanded}\n                collapsed={!steps[5].expanded}\n                synced\n              >\n                <SyncStep5Verify\n                  currentTime={this.state.currentTime}\n                  distributionLines={distributionLines}\n                  timestamps={timestamps}\n                />\n              </Collapsible>\n            </div>\n          </section>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nSync.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  connectSyncLine: PropTypes.func.isRequired,\n  connectSyncPill: PropTypes.func.isRequired,\n  deleteSyncPill: PropTypes.func.isRequired,\n  handleFormInfo: PropTypes.func.isRequired,\n  handleLyricsEdit: PropTypes.func.isRequired,\n  handleSyncBoxMouseDown: PropTypes.func.isRequired,\n  handleSyncBoxMouseUp: PropTypes.func.isRequired,\n  handleSyncKeydown: PropTypes.func.isRequired,\n  handleSyncKeyup: PropTypes.func.isRequired,\n  handleResetSync: PropTypes.func.isRequired,\n  handleVideoId: PropTypes.func.isRequired,\n  linkPillsSequence: PropTypes.func.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  lockLyrics: PropTypes.func.isRequired,\n  prepareLines: PropTypes.func.isRequired,\n  resetPillLinks: PropTypes.func.isRequired,\n  saveSync: PropTypes.func.isRequired,\n  sync: PropTypes.object.isRequired,\n  unlockNextStep: PropTypes.func.isRequired,\n  unlockSpecificStep: PropTypes.func.isRequired,\n};\n\nexport default Sync;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Sync from '../components/Sync';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { syncOperations } from '../../../../reducers/sync';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  artists: state.artists,\n  sync: state.sync,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...artistsOperations,\n  ...syncOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Sync)\n);\n","import SyncContainer from './containers/SyncContainer';\n\nexport default SyncContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst ColorSheet = ({ colors }) => {\n  colors = Object.values(colors);\n  return (\n    <main className=\"container\">\n      <ul className=\"color-palette\">\n        {colors &&\n          colors.map(colorObj => (\n            <li\n              key={colorObj.id}\n              className={`palette background-color-${colorObj.number}`}\n            >\n              {colorObj.id}\n              <br />\n              {utils.humanize(colorObj.name, 'Capital')}\n              <br />\n              {colorObj.count} uses\n            </li>\n          ))}\n      </ul>\n    </main>\n  );\n};\n\nColorSheet.propTypes = {\n  colors: PropTypes.object,\n};\n\nColorSheet.defaultProps = {\n  colors: {},\n};\n\nexport default ColorSheet;\n","import React from 'react';\n\n// Import common components\nimport {\n  FavoriteIcon,\n  Icon,\n  LoadingIcon,\n  Switch,\n  Tabs,\n  Typeahead,\n  Collapsible,\n} from '../../../common';\n\nconst NOOP = () => {};\n\nconst ComponentSheet = () => (\n  <main className=\"container\">\n    <ul className=\"component-list\">\n      <li className=\"component-list__item\">\n        <h3 className=\"component-list__name\">Favorite Icon</h3>\n        <div className=\"component-list__example\">\n          <FavoriteIcon action={NOOP} id=\"1\" />\n          <FavoriteIcon action={NOOP} id=\"2\" state />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Heart shaped favorite icon</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: onClick function\n            </li>\n            <li className=\"component-list__argument\">\n              id: value the action function calls\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              className: additional classes (default: &#39;&#39;)\n            </li>\n            <li className=\"component-list__argument\">\n              size: string or number (default: 12)\n            </li>\n            <li className=\"component-list__argument\">\n              state: boolean that determines if heart is red or gray (default:\n              false)\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Icon</h3>\n        <div className=\"component-list__example\">\n          <Icon size={36} />\n        </div>\n        <div className=\"component-list__description\">\n          <p>See Icon tab for list of icons</p>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              type: the name of the icon (default: default)\n            </li>\n            <li className=\"component-list__argument\">\n              color: one of the default colors (default: default)\n            </li>\n            <li className=\"component-list__argument\">\n              size: string or number (default: 12)\n            </li>\n            <li className=\"component-list__argument\">\n              inline: boolean that determines if icon will be inline with text\n              (default: false)\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Loading Icon</h3>\n        <div className=\"component-list__example\">\n          <LoadingIcon />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Colored loading icon</p>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              size: tiny, small, medium (Default), large\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Switch</h3>\n        <div className=\"component-list__example\">\n          <Switch action={NOOP} /> <Switch action={NOOP} checked />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Switch button to indicate if a feature is on</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: function to be exectued when switch is triggers\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              labels: object with left and right values\n            </li>\n            <li className=\"component-list__argument\">\n              checked: boolean that determines if switch is on\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Tabs</h3>\n        <div className=\"component-list__example\">\n          <Tabs action={NOOP} tabs={['Tab 1', 'Tab 2']}>\n            Content goes here as a component child\n          </Tabs>\n        </div>\n\n        <div className=\"component-list__description\">\n          <p>Wrapper component with selectable tabs</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              active: what tab is active (default: the first tab)\n            </li>\n            <li className=\"component-list__argument\">\n              iconCondition: boolean to display the icon\n            </li>\n            <li className=\"component-list__argument\">\n              icon: icon component to be displayed\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Typeahead</h3>\n        <div className=\"component-list__example\">\n          <Typeahead\n            action={NOOP}\n            name=\"example\"\n            suggestions={['Avocado', 'Banana', 'Cranberry']}\n          />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Input field with autocomplete datalist option</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: function trigged when input is selected\n            </li>\n            <li className=\"component-list__argument\">\n              name: name of the datalist/input\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              className: additional classes (default: &#39;&#39;)\n            </li>\n            <li className=\"component-list__argument\">\n              placeholder: input field placeholder (default: Searching...)\n            </li>\n            <li className=\"component-list__argument\">\n              suggestions: list of suggestions to autocomplete in the datalist\n              (default: [])\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Collapsible</h3>\n        <div className=\"component-list__example\">\n          <Collapsible title=\"Locked Collapsible\" locked>\n            Content\n          </Collapsible>\n          <Collapsible title=\"Locked Expanded Collapsible\" locked expanded>\n            Content\n          </Collapsible>\n          <Collapsible title=\"Collapsed Collapsible\">Content</Collapsible>\n          <Collapsible title=\"Expanded Collapsible\" expanded>\n            Content\n          </Collapsible>\n        </div>\n        <div className=\"component-list__description\">\n          <p>Collapsible panel with children content</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              title: the header of the panel\n            </li>\n            <li className=\"component-list__argument\">\n              children elements to be rendered when expanded\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              collapsed: makes panel collapse (default)\n            </li>\n            <li className=\"component-list__argument\">\n              expanded: makes panel expand\n            </li>\n            <li className=\"component-list__argument\">\n              locked: locks panel action keeping it expanded or collapsed\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>New Component</h3>\n        <div className=\"component-list__example\">\n          {/* Component goes here */}\n        </div>\n        <div className=\"component-list__description\">\n          <p>Description</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n        </div>\n      </li>\n    </ul>\n  </main>\n);\n\nexport default ComponentSheet;\n","import React from 'react';\n\n// Import common components\nimport { Icon } from '../../../common';\n// Import utility functions\nimport ICONS from '../../../../utils/icons';\n\nconst IconSheet = () => (\n  <main className=\"container\">\n    <ul className=\"icon-list\">\n      {Object.keys(ICONS).map(name => (\n        <li key={name} className=\"icon-list__item\">\n          <span className=\"icon-list__name\">{name.toLowerCase()}</span>\n          <Icon type={name} size=\"36\" />\n        </li>\n      ))}\n    </ul>\n  </main>\n);\n\nexport default IconSheet;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport ColorSheet from './ColorSheet';\nimport ComponentSheet from './ComponentsSheet';\nimport IconSheet from './IconSheet';\n// Import common components\nimport { RequirementWrapper, Tabs, LoadingIcon } from '../../../common';\n\nclass UIReference extends Component {\n  componentDidMount() {\n    this.props.loadColors();\n  }\n\n  render() {\n    const {\n      admin: { colors, uiReferenceTab },\n      app,\n    } = this.props;\n\n    const TABS = ['Colors', 'Components', 'Icons'];\n\n    let tabContent = null;\n    switch (uiReferenceTab) {\n      case 'Components':\n        tabContent = <ComponentSheet />;\n        break;\n      case 'Icons':\n        tabContent = <IconSheet />;\n        break;\n      default:\n        tabContent = <ColorSheet colors={colors} />;\n    }\n\n    return (\n      <RequirementWrapper requirements={['admin']}>\n        <main className=\"container container--artists\">\n          <h1>UI Reference</h1>\n          <Tabs\n            tabs={TABS}\n            action={this.props.switchUIReferenceTab}\n            active={uiReferenceTab}\n          >\n            {app.pending.REQUEST_COLORS ? (\n              <LoadingIcon size=\"medium\" />\n            ) : (\n              tabContent\n            )}\n          </Tabs>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nUIReference.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  loadColors: PropTypes.func.isRequired,\n  switchUIReferenceTab: PropTypes.func.isRequired,\n};\n\nUIReference.defaultProps = {};\n\nexport default UIReference;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport UIReference from '../components/UIReference';\n\nimport { adminOperations } from '../../../../reducers/admin';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UIReference)\n);\n","import UIReferenceContainer from './containers/UIReferenceContainer';\n\nexport default UIReferenceContainer;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass Lab extends Component {\n  render() {\n    return <h1>Lab</h1>;\n  }\n}\n\nLab.propTypes = {};\n\nLab.defaultProps = {};\n\nexport default Lab;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Lab from '../components/Lab';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Lab)\n);\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass LearnMore extends Component {\n  render() {\n    return <h1>LearnMore</h1>;\n  }\n}\n\nLearnMore.propTypes = {};\n\nLearnMore.defaultProps = {};\n\nexport default LearnMore;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport LearnMore from '../components/LearnMore';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LearnMore)\n);\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass MyArtists extends Component {\n  render() {\n    return <h1>MyArtists</h1>;\n  }\n}\n\nMyArtists.propTypes = {};\n\nMyArtists.defaultProps = {};\n\nexport default MyArtists;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport MyArtists from '../components/MyArtists';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MyArtists)\n);\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass MyDistributions extends Component {\n  render() {\n    return <h1>MyDistributions</h1>;\n  }\n}\n\nMyDistributions.propTypes = {};\n\nMyDistributions.defaultProps = {};\n\nexport default MyDistributions;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport MyDistributions from '../components/MyDistributions';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MyDistributions)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Test extends Component {\n  componentDidMount() {\n    // nothing\n  }\n  render() {\n    console.log(this.props);\n\n    const stringify = json =>\n      JSON.stringify(JSON.parse(JSON.stringify(json)), null, 2);\n\n    return (\n      <main className=\"container\">\n        <h1>Test/Temp</h1>\n        <div className=\"textareas\">\n          <textarea readOnly value={stringify(this.props.temp.test1)} />\n          <textarea readOnly value={stringify(this.props.temp.test2)} />\n          <textarea readOnly value={stringify(this.props.temp.test3)} />\n          <textarea readOnly value={stringify(this.props.temp.test4)} />\n          <textarea readOnly value={stringify(this.props.temp.test5)} />\n        </div>\n        <div className=\"buttons\">\n          <button onClick={() => this.props.testFunction1()}>\n            Run Test Function1\n          </button>\n          <button onClick={() => this.props.testFunction2()}>\n            Run Test Function2\n          </button>\n        </div>\n      </main>\n    );\n  }\n}\n\nTest.propTypes = {\n  temp: PropTypes.object.isRequired,\n  test1: PropTypes.string.isRequired,\n  test2: PropTypes.number.isRequired,\n  test3: PropTypes.bool.isRequired,\n  test4: PropTypes.array.isRequired,\n  test5: PropTypes.object.isRequired,\n  testFunction1: PropTypes.func.isRequired,\n  testFunction2: PropTypes.func.isRequired,\n};\n\nTest.defaultProps = {};\n\nexport default Test;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Temp from '../components/Temp';\n\nimport { tempOperations } from '../reducers/temp';\n\nconst mapStateToProps = state => ({\n  temp: state.temp,\n});\n\nconst mapDispatchToProps = {\n  ...tempOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Temp)\n);\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Artists from './app/pages/artists';\nimport Artist from './app/pages/artist';\nimport Distribute from './app/pages/distribute';\nimport Header from './app/pages/header';\nimport Home from './app/pages/home';\nimport Idols from './app/pages/idols';\nimport Lyrics from './app/pages/lyrics';\nimport Manage from './app/pages/manage';\nimport Songs from './app/pages/songs';\nimport Sync from './app/pages/sync';\nimport UIReference from './app/pages/ui-reference';\n\nimport { ErrorModal } from './app/common/index';\n\nimport LabContainer from './containers/LabContainer';\nimport LearnMoreContainer from './containers/LearnMoreContainer';\nimport MyArtistsContainer from './containers/MyArtistsContainer';\nimport MyDistributionsContainer from './containers/MyDistributionsContainer';\nimport TempContainer from './containers/TempContainer';\n\nimport './stylesheets/index.css';\n\nconst routes = (\n  <Router className=\"bola\">\n    <div className=\"app\">\n      <Header />\n      <ErrorModal />\n      <Route path=\"/artists/:artistId\" component={Artist} />\n      <Route exact path=\"/artists\" component={Artists} />\n      <Route path=\"/distribute\" component={Distribute} />\n      <Route path=\"/idols\" component={Idols} />\n      <Route path=\"/lab\" component={LabContainer} />\n      <Route path=\"/learn-more\" component={LearnMoreContainer} />\n      <Route path=\"/lyrics\" component={Lyrics} />\n      <Route path=\"/songs\" component={Songs} />\n\n      <Route path=\"/admin/manage\" component={Manage} />\n      <Route path=\"/admin/sync\" component={Sync} />\n      <Route path=\"/admin/temp\" component={TempContainer} />\n      <Route path=\"/admin/ui-reference\" component={UIReference} />\n\n      <Route path=\"/user/my-artists\" component={MyArtistsContainer} />\n      <Route\n        path=\"/user/my-distributions\"\n        component={MyDistributionsContainer}\n      />\n\n      <Route exact path=\"/\" component={Home} />\n    </div>\n  </Router>\n);\n\nexport default routes;\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ReduxToastr from 'react-redux-toastr';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport store from './store';\nimport routes from './routes';\n\nimport './stylesheets/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Fragment>\n      {routes}\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates\n        position=\"bottom-center\"\n        transitionIn=\"bounceIn\"\n        transitionOut=\"bounceOut\"\n        progressBar\n      />\n    </Fragment>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/manage-lock.4e4f8dbd.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-plus.5cbc8658.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.d6605f0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-leader.6a295198.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-vocalist.a995fa3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-rapper.269fbdb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-dancer.581fc18e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-vocalist.7c410976.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-rapper.0735854b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-dancer.b38316e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-vocalist.131d4b70.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-dancer.a9fd47b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rapper.cb032f09.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-center.83737fe1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-visual.187fc8b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-maknae.afb2e497.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-all.c2247d81.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-none.ba42a31e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-neg.048816e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/bias-placeholder.61f71a68.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d7f95990.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-placeholder.94d4fc32.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-alt.6de76e88.svg\";"],"sourceRoot":""}