{"version":3,"sources":["images/icon-all.svg","images/icon-none.svg","images/logo-neg.svg","images/bias-placeholder.svg","images/logo.svg","images/user-placeholder.svg","images/logo-alt.svg","registerServiceWorker.js","reducers/app/types.js","reducers/app/reducers.js","reducers/app/actions.js","reducers/app/operations.js","reducers/app/index.js","reducers/admin/types.js","reducers/admin/reducers.js","utils/constants.js","reducers/admin/actions.js","reducers/admin/operations.js","reducers/admin/index.js","reducers/artists/types.js","reducers/artists/reducers.js","reducers/artists/actions.js","reducers/artists/operations.js","reducers/artists/index.js","reducers/auth/types.js","reducers/auth/reducers.js","reducers/auth/actions.js","reducers/auth/operations.js","reducers/auth/index.js","reducers/db/types.js","reducers/db/reducers.js","reducers/db/actions.js","reducers/db/operations.js","reducers/db/index.js","reducers/distribute/types.js","reducers/distribute/reducers.js","reducers/distribute/actions.js","reducers/distribute/operations.js","reducers/distribute/index.js","reducers/sync/types.js","reducers/sync/reducers.js","reducers/sync/actions.js","reducers/sync/operations.js","reducers/sync/index.js","reducers/temp/types.js","reducers/temp/reducers.js","reducers/temp/actions.js","reducers/temp/operations.js","reducers/temp/index.js","reducers/index.js","api/utils.js","api/response.js","api/enums.js","api/serializers.js","api/deserializers.js","api/firebase.js","api/index.js","utils/index.js","sagas/api-saga.js","sagas/status-handling.js","sagas/index.js","store.js","app/common/components/ActiveSongWidget.jsx","app/common/containers/ActiveSongWidgetContainer.js","app/common/components/ActiveUnitWidget.jsx","app/common/containers/ActiveUnitWidgetContainer.js","app/common/components/ActiveVideoWidget.jsx","app/common/components/Collapsible.jsx","app/common/components/ErrorModal.jsx","app/common/containers/ErrorModalContainer.js","app/common/components/FavoriteIcon.jsx","utils/icons.js","app/common/components/Icon.jsx","app/common/components/Loading.jsx","app/common/components/LoadingIcon.jsx","app/common/components/LoadingWrapper.jsx","app/common/components/member/MemberNationalityFlag.jsx","app/common/components/member/MemberPicture.jsx","app/common/components/member/MemberPositions.jsx","app/common/components/MemberCard.jsx","app/common/components/ModeWidget.jsx","app/common/components/PositionIcon.jsx","app/common/components/RequirementWrapper.jsx","app/common/containers/RequirementWrapperContainer.js","app/common/components/Select.jsx","app/common/components/Switch.jsx","app/common/components/Tabs.jsx","app/common/components/Typeahead.jsx","app/pages/artists/components/ArtistsTable.jsx","app/pages/artists/components/Artists.jsx","app/pages/artists/containers/ArtistsContainer.js","app/pages/artists/index.js","app/pages/artist/components/BiasPicture.jsx","app/pages/artist/components/DistributedSongPreview.jsx","app/pages/artist/components/DistributedSongsTable.jsx","app/pages/artist/components/Units.jsx","app/pages/artist/components/Artist.jsx","app/pages/artist/containers/ArtistContainer.js","app/pages/artist/index.js","app/pages/distribute/components/DistributeConnect.jsx","app/pages/distribute/components/DistributeEdit.jsx","app/pages/distribute/components/DistributeProgressBar.jsx","app/pages/distribute/components/DistributeView.jsx","app/pages/distribute/components/Distribute.jsx","app/pages/distribute/containers/DistributeContainer.js","app/pages/distribute/index.js","app/pages/header/components/Menu.jsx","app/pages/header/components/LoadingBar.jsx","app/pages/header/components/Header.jsx","app/pages/header/containers/HeaderContainer.js","app/pages/header/index.js","app/pages/home/components/Home.jsx","app/pages/home/containers/HomeContainer.js","app/pages/home/index.js","app/pages/idols/components/Idols.jsx","app/pages/idols/containers/IdolsContainer.js","app/pages/idols/index.js","app/pages/lyrics/components/LyricsOutput.jsx","app/pages/lyrics/parser/index.js","app/pages/lyrics/components/Lyrics.jsx","app/pages/lyrics/containers/LyricsContainer.js","app/pages/lyrics/index.js","app/pages/manage/components/ColorReferenceBar.jsx","app/pages/manage/components/ManageArtist.jsx","app/pages/manage/components/ManageUnit.jsx","app/pages/manage/components/ManageMembers.jsx","app/pages/manage/components/Manage.jsx","app/pages/manage/containers/ManageContainer.js","app/pages/manage/index.js","app/pages/songs/components/SongsTable.jsx","app/pages/songs/components/Songs.jsx","app/pages/songs/containers/SongsContainer.js","app/pages/songs/index.js","app/pages/sync/components/SyncStep1VideoId.jsx","app/pages/sync/components/SyncStep2Info.jsx","app/pages/sync/components/SyncStep3Lyrics.jsx","app/pages/sync/components/SyncStep4Buttons.jsx","app/pages/sync/components/SyncStep4Distribution.jsx","app/pages/sync/components/SyncStep5Verify.jsx","app/pages/sync/components/SyncStep5Save.jsx","app/pages/sync/components/Sync.jsx","app/pages/sync/containers/SyncContainer.js","app/pages/sync/index.js","app/pages/ui-reference/components/ColorSheet.jsx","app/pages/ui-reference/components/ComponentsSheet.jsx","app/pages/ui-reference/components/IconSheet.jsx","app/pages/ui-reference/components/UIReference.jsx","app/pages/ui-reference/containers/UIReferenceContainer.js","app/pages/ui-reference/index.js","components/Lab.jsx","containers/LabContainer.js","components/LearnMore.jsx","containers/LearnMoreContainer.js","components/MyArtists.jsx","containers/MyArtistsContainer.js","components/MyDistributions.jsx","containers/MyDistributionsContainer.js","components/Temp.jsx","containers/TempContainer.js","routes.js","index.js","images/loading.svg","images/manage-lock.svg","images/manage-plus.svg","images/icon-leader.svg","images/icon-main-vocalist.svg","images/icon-main-rapper.svg","images/icon-main-dancer.svg","images/icon-lead-vocalist.svg","images/icon-lead-rapper.svg","images/icon-lead-dancer.svg","images/icon-vocalist.svg","images/icon-dancer.svg","images/icon-rapper.svg","images/icon-center.svg","images/icon-visual.svg","images/icon-maknae.svg"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","types","RESET_ERROR","SET_DATABASE_READY","SET_ERROR","SET_ERROR_INLINE","SET_ERROR_MESSAGE","SET_LOADING","SET_PENDING","SET_SUCCESS","SET_SUCCESS_INLINE","SET_SUCCESS_MESSAGE","initialState","databaseReady","errorInline","errorMessage","pending","loading","actions","payload","dispatch","type","operations","init","handleCloseErrorModal","handleSendBugReport","getState","app","body","timestamp","Date","now","content","appReducer","prevState","arguments","length","undefined","action","newState","Object","assign","success","admin_types","SET_COLORS_IN_USE","SET_CREATE_SUCCESS","SET_EDITING_ARTIST","SET_EDITING_MEMBERS","SET_EDITING_UNIT","SET_MANAGE_RESULT","SET_PANELS","SET_UI_REFERENCE_TAB","SET_UNITS_TYPEAHEAD","SET_UNITS_TYPEAHEAD_DICT","colorsInUse","editingArtist","editingMembers","editingUnit","manageResult","panels","artist","unit","members","uiReferenceTab","unitsTypeahead","unitsTypeaheadDict","constants","COLORS","col000001","col000002","col000003","col000004","col000005","col000006","col000007","col000008","col000009","col000010","col000011","col000012","col000013","col000014","col000015","col000016","col000017","col000018","col000019","col000020","col000021","col000022","col000023","col000024","col000025","col000026","col000027","col000028","col000029","col000030","DEFAULT_COLORS","default","black","blue","gray","green","orange","pink","purple","red","teal","white","yellow","FLAGS_LIST","AMERICAN","BRAZILIAN","CANADIAN","CHINESE","JAPANESE","KOREAN","TAIWANESE","THAI","VIETNAMISE","GENDERS","FEMALE","MALE","UNKOWN","GENRES","CPOP","JPOP","KPOP","OTHER","POP","GENRES_DB","C-Pop","J-Pop","K-Pop","Other","Pop","POSITIONS_LIST","POSITIONS_LIST_OBJ","MAIN_VOCALIST","LEAD_VOCALIST","VOCALIST","MAIN_RAPPER","LEAD_RAPPER","RAPPER","MAIN_DANCER","LEAD_DANCER","DANCER","LEADER","CENTER","VISUAL","NATIONALITIES","BRITISH","NATIONALITY_FLAG_URL","PROFILE_PICTURE_URL","SYNC_KEY_LIST","1","2","3","4","5","SYNC_KEY_COLOR_LIST","YOUTUBE_URLS","admin_actions","admin_operations","handleEditArtist","artistId","objectSpread","admin","new","handleEditMember","memberId","formState","toConsumableArray","memberIndex","_","findIndex","m","id","addedMember","push","forEach","member","colorId","lastMember","values","positions","gender","nationality","handleEditUnit","unitId","units","currentUnit","u","handleResyncDB","removeMember","index","resetManage","saveManage","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","artistState","unitState","membersState","missingField","editingArtistState","editingUnitState","editingMembersState","wrap","_context2","prev","next","keys","errors","toastr","warning","toString","abrupt","name","genre","debutYear","concat","birthdate","some","otherNames","private","memberIds","memberList","map","createdBy","official","subUnit","averages","distributions","distributions_legacy","memberState","newMember","replace","initials","referenceArtist","key","includes","stop","_x2","_x3","apply","this","switchUIReferenceTab","event","_ref","_callee","_context","target","_x","unlockUnit","unlockMembers","updateManageForm","updateMemberColor","value","updateMemberPositions","adminReducer","SET_SONGS","songs","SET_SONG_SEARCH_QUERY","songSearchQuery","artists_types","SET_ARTIST_LIST","SET_ARTIST_PAGE_TAB","SET_BIAS","SET_SEARCH_QUERY","SET_SELECTED_ARTIST","SET_SELECTED_UNIT","SET_SHOW_FAVORITE_ARTISTS_ONLY","artistList","artistPageTab","bias","searchQuery","selectedArtist","selectedUnit","showFavoriteArtistsOnly","userFavoriteArtists","userLatestArtists","artists_actions","findUnitIndex","artists_operations","getBias","biases","auth","user","artists","loadUserArtists","loadArtist","queryParams","updateSearchQuery","toLowerCase","updateLatestUnits","_x4","showFavoriteArtistsOnlyToggle","switchArtistPageTab","_ref3","_callee3","unitIndex","_context3","parentNode","complete","_x5","_x6","artistsReducer","auth_types","SET_ADMIN","SET_AUTHENTICATED","SET_BIASES","SET_USER","isAuthenticated","isAdmin","auth_actions","auth_operations","login","logout","updateBias","_getState$artists$sel","biasId","currentBias","userId","updateFavoriteArtists","favoriteArtists","updateFavoriteMembers","userFavoriteMembers","favoriteMembers","authReducer","db_types","SET_ARTISTS","SET_ARTISTS_TYPEAHEAD","SET_ARTISTS_TYPEAHEAD_DICT","SET_COLORS","SET_MEMBERS","SET_MEMBERS_TYPEAHEAD","SET_MEMBERS_TYPEAHEAD_DICT","artistsTypeahead","artistsTypeaheadDict","colors","membersTypeahead","membersTypeaheadDict","db_actions","db_operations","loadArtists","loadColors","loadMembers","loadSongs","resetSongSearchQuery","updateSongSearchQuery","dbReducer","distribute_types","RESET_DISTRIBUTE","RESET_DISTRIBUTE_SONG","SET_ACTIVE_DISTRIBUTION","SET_ACTIVE_MEMBER_PILL","SET_ACTIVE_SONG","SET_ACTIVE_UNIT","SET_DISTRIBUTE_VIEW","SET_DISTRIBUTION_CATEGORY","SET_DISTRIBUTION_LINES","SET_DISTRIBUTION_REMAINDER","SET_RATES","SET_TIMESTAMPS_DICT","activeMemberPill","activeDistribution","activeSong","activeUnit","category","distributeView","distributionLines","rates","remainder","timestampsDict","distribute_actions","calculateRates","total","remaining","max","l","line","part","duration","mId","_rates$mId","slicedToArray","rate","Number","toFixed","Math","round","calculateRemainder","parseTimestamps","dLines","distribute","membersDict","timestampDict","distributionLine","distributionPart","startTime","floor","endTime","ceil","start","distribute_operations","activateMemberPill","activateSong","find","db","songsDict","distributionId","activateUnit","artistName","handleDistributeView","label","handleDistributionCategory","handleSaveDistribution","ratesToSave","relationships","entries","entry","Array","isArray","songId","features","JSON","stringify","linkMemberToPart","found","filter","mergeActiveDistribution","distributionRelationships","cloneDeep","prepareSong","distributionString","distribution","buildPartData","data","_data$split","split","_data$split2","parsedLine","insideBracket","i","char","substring","trim","distributeReducer","sync_types","RESET_SYNC","SET_ACTIVE_LINE","SET_ACTIVE_PILL","SET_ARE_LYRICS_LOCKED","SET_FINAL_LYRICS","SET_INFO","SET_IS_DISTRIBUTION_COMPLETE","SET_LINK_SEQUENCE_MODE","SET_LAST_ID_NUM","SET_LYRICS","SET_PILLS","SET_QUEUE","SET_STEP","SET_STEPS","SET_SYNC_DISTRIBUTION_LINES","SET_SYNC_STATS","SET_TIMESTAMPS","SET_VIDEO_ID","activeLine","activePill","areLyricsLocked","finalLyrics","info","isDistributionComplete","linkSequenceMode","lastIdNum","lyrics","pills","queue","step","steps","locked","expanded","stats","lines","linked","timestamps","videoId","sync_actions","unlockNextStep","sync","finalizeLyrics","prepareLines","clearBrackets","preparedLyrics","startsWith","join","parseLyricsToObject","lineCount","link","color","setTimeout","enqueueCapture","newPillId","dequeueCapture","pillId","linksBackUp","connect","lineId","collection","searchId","newValue","nullifyLine","nullifyPill","isComplete","item","partId","k","pill","newLines","finalId","timepstamps","bracket","second","size","totalSize","intervalId","sync_operations","connectSyncLine","_getState$sync","connectSyncPill","_getState$sync2","deleteSyncPill","clearInterval","handleFormInfo","originalArtist","album","groupSize","single","title","handleLyricsEdit","e","text","handleResetSync","handleSyncBoxMouseDown","player","getPlayerState","getCurrentTime","handleSyncBoxMouseUp","handleSyncKeydown","handleSyncKeyup","handleVideoId","youtubeLink","youtubeLinkQuery","linkPillsSequence","pillList","findNextPill","nextActive","el","setInterval","lockLyrics","s","idNum","resetPillLinks","saveSync","_getState$sync3","originalArtistId","unlockSpecificStep","num","st","syncReducer","temp_types","SET_TEST_1","SET_TEST_2","SET_TEST_3","SET_TEST_4","SET_TEST_5","test1","test2","test3","test4","test5","temp_actions","temp_operations","testFunction1","testFunction2","testFunction3","testFunction4","testFunction5","tempReducer","rootReducer","combineReducers","temp","appTypes","adminTypes","artistsTypes","authTypes","dbTypes","distributeTypes","syncTypes","tempTypes","TODAY","ageDict","getNumberFromColorId","makeSixDigit","pad","isNaN","str","wait","ms","Promise","r","j","utils","breadcrumble","path","Error","HttpStatus","UNAUTHORIZED","BAD_REQUEST","urlSplit","fullPath","queryResult","querySplit","subQuery","queryName","queryValue","root","referenceId","subPath","buildArtistQuery","memberNames","buildMemberInitials","toUpperCase","buildSongQuery","calculateAge","birthday","birthdateString","birthDate","ageDate","getTime","abs","getUTCFullYear","ensureGenreEnum","C-POP","J-POP","K-POP","getAlternativeColor","list","random","mergeMembers","unitMembersArr","membersArr","positionsDict","attributes","parseUnitMembers","membersObj","dict","_key$split","_key$split2","memberName","memberPosition","verifyRequirements","uid","fields","missing","field","NewResponse","classCallCheck","statusCode","dataResponse","errorResponse","code","OK","dt","INTERNAL_SERVER_ERROR","message","throwError","serialize","modifiedBy","query","b","count","g","hex","number","parse","age","song","email","latestUnits","latesUnits","session","displayName","photoURL","serializeCollection","object","deserialize","post","reportedBy","photoUrl","put","res","fb","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","googleProvider","GoogleAuthProvider","userSession","onAuthStateChanged","users","fullyLoaded","dbRef","API","_authenticated","_admin","_loaded","_loggedInThisSession","_tries","_uid","print","response","status","authenticated","loaded","resolve","database","dbInfo","emailVerified","get","userRes","NO_CONTENT","setPersistence","Auth","Persistence","LOCAL","signInWithPopup","result","t0","t2","signOut","ok","_context4","warn","syncDB","ref","once","snapshot","val","resyncFunctions","set","throwDBError","route","getFunctions","fetchArtistUnits","fetchArtist","fetchArtists","fetchColor","fetchColors","fetchDistribution","fetchMember","fetchMembers","fetchSong","fetchSongs","fetchUnitDistributions","fetchUnitMembers","fetchUnit","fetchUser","throwPathError","postFunctions","createArtist","createDistribution","createLogEntry","createMember","createSong","createUnit","createUser","putFunctions","updateArtist","updateDistribution","updateMember","updateSong","updateUnit","updateUserBiases","updateUserFavoriteArtists","updateUserFavoriteMembers","updateUserLatestUnits","updateUser","deleteFunctions","destroyUser","snap","_fetchArtists","_callee13","_context13","_fetchArtist","_callee14","_context14","_x9","_fetchArtistUnits","_callee15","_context15","sent","all","_x10","_fetchColors","_callee16","_context16","_fetchColor","_callee17","_context17","_x11","_fetchDistribution","_callee18","_context18","_x12","_fetchMembers","_callee19","_context19","_fetchMember","_callee20","_response$colorId","_context20","_x13","_fetchSongs","_callee21","_context21","_fetchSong","_callee22","_context22","_x14","_fetchUnit","_callee23","_context23","_x15","_fetchUnitDistributions","_callee24","unitDistributionsPromises","unitDistributions","unitSongsPromises","unitSongs","_context24","distributionObject","_x16","_fetchUnitMembers","_callee25","membersResponse","promiseResponse","_context25","_x17","_fetchUser","_callee26","_context26","_x18","_createArtist","_callee27","_context27","update","_x19","_x20","createColor","_createColor","_callee28","_context28","_x21","_createDistribution","_callee29","_context29","_x22","_x23","_createLogEntry","_callee30","subRoute","_context30","_x24","_x25","_x26","_createMember","_callee31","_context31","_x27","_x28","_createSong","_callee32","_context32","_x29","_x30","_createUnit","_callee33","_context33","_x31","_x32","_createUser","_callee34","_context34","_x33","_x34","_updateArtist","_callee35","_context35","_x35","_x36","_x37","_updateDistribution","_callee36","_context36","_x38","_x39","_x40","_updateMember","_callee37","_context37","_x41","_x42","_x43","_updateSong","_callee38","_context38","_x44","_x45","_x46","_updateUnit","_callee39","_context39","_x47","_x48","_x49","_updateUser","_callee40","_context40","_x50","_x51","_updateUserBiases","_callee41","_context41","_x52","_x53","_updateUserFavoriteArtists","_callee42","_context42","_x54","_x55","_updateUserFavoriteMembers","_callee43","_context43","_x56","_x57","_updateUserLatestUnits","_callee44","_context44","_x58","_x59","_destroyUser","_callee45","_context45","remove","defineProperty","_x60","_x61","resetAristsArrays","resetMemberPositions","parseUnits","parseMembers","parseArtists","parseDistributions","membersPositions","parsePositions","Set","sort","unitDict","subUnitDict","unitSameYear","reverse","year","subUnits","memberDict","unitMembers","position","api","spiralCase","string","src_utils","bem","block","modifiers","element","extras","hasBlock","hasModifiers","hasElement","hasExtras","classes","camelCase","word","capitalizeWord","separator","charAt","slice","ensureColorUniqueness","membersList","refactoredMembers","altColorId","altColor","oldColor","getColorNumber","getMostImportantPosition","POSITIONS_IMPORTANT_ORDER","humanize","option","captalizeFirstLetter","insertAtCursor","valueToInsert","selectionStart","selectionEnd","startPos","endPos","makePositionsEditable","pos","parseBirthDate","d","date","month","day","parseQueryParams","params","pair","parseArrayToObject","instance","parseResponse","responseParser","obj","parseResponseToObject","spiralBirthdate","dateStr","spinalCaseWord","initializer","requestArtists","requestArtist","requestColors","requestDistribution","requestMembers","requestSongs","requestUnit","requestUnitMembers","resyncDatabase","runLogin","runLogout","sendDistribution","sendLog","sendSong","updateCompleteArtist","test","apiSaga","delay","DELAY_DURATION","dbStart","loggedUser","actionType","_marked","sortedArtistList","sortBy","_marked2","selectedUnitId","_response","indexOf","t1","call","_marked3","colorsList","_marked4","selectedDistribution","_context5","_marked5","sortedMembersList","_context6","_marked6","songsList","sortedSongsList","_context7","_marked7","_response2","_response3","_context8","reduce","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","logoff","_marked12","receivedSong","pyt","_marked13","logType","_marked14","_marked15","receivedMembers","receivedArtist","receivedUnit","_marked16","_marked17","_marked18","_marked19","_marked20","_marked21","takeLatest","takeEvery","_marked22","clearPending","errorToast","successInline","successToast","warningToast","statusHandlingSaga","localPendingCache","status_handling_marked","status_handling_marked2","err","status_handling_marked3","status_handling_marked4","_ref4","status_handling_marked5","_ref5","status_handling_marked6","_ref6","status_handling_marked7","_ref7","status_handling_marked8","status_handling_marked9","status_handling_marked10","rootSaga","fork","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","thunkMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ActiveSongWidget","inline","inlineClass","react_default","createElement","className","defaultProps","mapDispatchToProps","authOperations","withRouter","ActiveUnitWidget","showMembers","ActiveVideoWidget","props","_this","possibleConstructorReturn","getPrototypeOf","height","setDimentions","bind","assertThisInitialized","document","getElementById","width","clientWidth","clientHeight","setState","opts","hasVideoClass","YouTube","components_Icon","Component","Collapsible","collapse","enforceProperties","expand","togglePanel","nextProps","synced","collapsed","_this$props","iconComponent","disabled","onClick","children","ErrorModal","appOperations","FavoriteIcon","utils_icons","alert","back-arrow","back-arrow-circle","check","chevron-down","chevron-left","chevron-right","chevron-up","clock","hand-negative","hand-positive","heart","heart-hollow","lock","no","plug","plug-available","plug-connected","question-mark","save","sub-unit","trash","youtube","Icon","styles","svg","display","verticalAlign","margin","transform","fill","style","viewBox","ICONS","Loading","_ref$message","src","alt","LoadingIcon","LoadingWrapper","MemberNationaltyFlag","flag","flagUrl","MemberPicture","fallback","failed","pictureUrl","GENDER_ENUM","colorNumber","profilePlaceholderCode","pictureFallback","onError","MemberPositions","sortedPositions","positionPriority","MAKNAE","iconBank","iconLeader","iconMainVocalist","iconMainRapper","iconMainDancer","iconLeadVocalist","iconLeadRapper","iconLeadDancer","iconVocalist","iconDancer","iconRapper","iconCenter","iconVisual","iconMaknae","positionName","MemberCard","favoriteState","showId","showReferenceArtist","member_MemberPicture","components_FavoriteIcon","MemberNationalityFlag","react","member_MemberPositions","ModeWidget","labels","active","activeClass","isDisabled","PositionIcon","ALL","iconAll","NONE","iconNone","RequirementWrapper","authentication","activeArtist","ready","parseRequirements","_this2","requirements","requirement","components_Loading","Link","to","logo","selectKey","Select","options","optionValue","optionName","optionPrefix","placeholder","disablePlaceholder","classNameModifier","onChange","SwitchToggle","checked","left","right","Tabs","tabs","icons","iconConditions","objectWithoutProperties","tab","tabObj","isActive","showIcons","condition","show","Typeahead","suggestions","suggestion","ArtistsTable","favoriteAction","rowAction","filteredArtists","o","emptyTableMessage","colSpan","components_LoadingIcon","Artists","_this$props$artists","_this$props$distribut","handleTableClick","history","RequirementWrapperContainer","ActiveUnitWidgetContainer","ActiveSongWidgetContainer","components_ArtistsTable","REQUEST_ARTISTS","Switch","artistsOperations","dbOperations","ArtistsContainer","BiasPicture","biasPlaceholder","DistributedSongPreview","percentage","spanWidth","DistributedSongsTable","humanizeCategory","components_DistributedSongPreview","Units","prevProps","page","_this$props$props","_this$props$props$art","isUnitPending","REQUEST_UNIT","hasLegacyDistributions","components_Tabs","components_LoadingWrapper","artistRedirect","components_BiasPicture","components_Select","components_MemberCard","components_DistributedSongsTable","Artist","memberColors","search","getMemberColors","isArtistPending","REQUEST_ARTIST","components_Units","distributeOperations","ArtistContainer","DistributeConnect","percentageWidth","role","tabIndex","components_PositionIcon","partIndex","partKey","lineColors","_colors","background","fontStyle","mKey","DistributeEdit","components_ActiveVideoWidget","components_DistributeConnect","selected","DistributeProgressBar","widthStyle","animationInterval","DistributeView","currentTime","isPlaying","isReady","activeCache","membersProgress","onStateChange","onReady","onPlay","onPause","onEnd","setMembers","distributionTotals","currentDPS","currentMember","INTERVAL","pauseVideo","playVideo","seekTo","direction","_this3","_this$props2","barsHeight","barsWidth","components_DistributeProgressBar","togglePlayPause","restartVideo","rewindFastforward","Distribute","getMembers","components_ModeWidget","components_DistributeView","components_DistributeEdit","adminOperations","DistributeContainer","Menu","pathname","authHideClass","adminHideClass","activeUnitHideClass","userPlaceholder","href","LoadingBar","App","components_Menu","components_LoadingBar","HeaderContainer","Header","Home","youtubeUrl","frameBorder","allowFullScreen","HomeContainer","Idols","favorite","privacy","order","showIds","_this$props$auth","REQUEST_MEMBERS","filteredMembers","evaluation","every","sortedMembers","orderBy","esm","updateFilters","autoComplete","initialValue","maxLength","nationalitie","IdolsContainer","colorDict","keyNumber","Verse","verse","LyricsOutput_Line","Line","adlib","LyricsOutput_Bracket","LyricsOutput_Part","Part","bitStyle","getBitStyle","Bracket","omit","hasSingers","singers","hasSubSingers","subSingers","omitSub","hasChoirSingers","choirSingers","omitChoir","colorHexes","c","subColors","choirColors","LyricsOutput","colorsDB","col000000","LyricsOutput_Verse","COLOR_BANK","latestUnitId","lastSingers","lastColors","lastSubsingers","lastSubColors","lastChoirSingers","lastChoirColors","wasLastLineEmpty","lastLineHadSubSingers","lastLineHadChoirSings","uses","updateUses","addEntry","n","cleanUpPart","empty","parseLine","insideParentheses","insideCurly","names","currentString","lastCharacter","currentPart","parseLyrics","input","paragraphedResult","paragraphIndex","currentLine","Lyrics","REQUEST_COLORS","dist","cols","rows","components_LyricsOutput","LyricsContainer","ColorReferenceBar","isInUse","PropTypes","ManageArtist","validateTypeahead","isValid","defaultValues","manageLock","managePlus","components_Typeahead","isRequired","isValidName","scope","validateOnBlur","validate","required","ManageUnit","_props$admin","isValidDebutYear","getFullYear","ManageMembers","Manage","validArtist","validUnit","validMember","handleEditMemberAndState","resetAll","validateArtist","validateUnit","validateMembers","_this$props$admin","isSaveable","RESYNC_DATABASE","UPDATE_COMPLETE_ARTIST","components_ColorReferenceBar","components_ManageArtist","components_ManageUnit","components_ManageMembers","ManageContainer","SongsTable","previouslyDistributedSongsDict","filteredSongs","previouslyDistributed","Songs","_this$props$db","components_SongsTable","REQUEST_SONGS","SongsContainer","SyncStep1VideoId","loadYoutubeVideo","SyncStep2Info","addToOriginalArtistForm","min","SyncStep3Lyrics","newEl","SyncStep4Buttons","addEventListener","pillColors","boxId","box","onMouseDown","onMouseUp","ICON_COLOR_CODE_HASH","8","12","20","26","SyncStep4Distributions","linesOn","SyncStep5Verify","timestampsList","tsObj","SyncStep5Save","loadYT","Sync","onPlayerStateChange","setHeight","tag","firstScriptTag","getElementsByTagName","insertBefore","onYouTubeIframeAPIReady","YT","Player","youtubePlayerAnchor","events","_this4","_this$props$sync","components_Collapsible","components_SyncStep4Buttons","components_SyncStep5Save","SEND_SONG","components_SyncStep1VideoId","components_SyncStep2Info","components_SyncStep3Lyrics","SyncStep4Distribution","components_SyncStep5Verify","syncOperations","SyncContainer","ColorSheet","colorObj","NOOP","ComponentSheet","IconSheet","UIReference","tabContent","ComponentsSheet","components_IconSheet","components_ColorSheet","UIReferenceContainer","Lab","LearnMore","MyArtists","MyDistributions","Test","json","readOnly","tempOperations","Temp","routes","HashRouter","header","ErrorModalContainer","Route","component","exact","LabContainer","LearnMoreContainer","TempContainer","MyArtistsContainer","MyDistributionsContainer","ReactDOM","render","es","lib_default","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","URL","origin","fetch","headers","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6ecb5729.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-all.c2247d81.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-none.ba42a31e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-neg.048816e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/bias-placeholder.61f71a68.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d7f95990.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-placeholder.94d4fc32.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-alt.6de76e88.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const RESET_ERROR = 'RESET_ERROR';\nconst SET_DATABASE_READY = 'SET_DATABASE_READY';\nconst SET_ERROR = 'SET_ERROR';\nconst SET_ERROR_INLINE = 'SET_ERROR_INLINE';\nconst SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\nconst SET_LOADING = 'SET_LOADING';\nconst SET_PENDING = 'SET_PENDING';\nconst SET_SUCCESS = 'SET_SUCCESS';\nconst SET_SUCCESS_INLINE = 'SET_SUCCESS_INLINE';\nconst SET_SUCCESS_MESSAGE = 'SET_SUCCESS_MESSAGE';\n\nexport default {\n  RESET_ERROR,\n  SET_DATABASE_READY,\n  SET_ERROR,\n  SET_ERROR_INLINE,\n  SET_ERROR_MESSAGE,\n  SET_LOADING,\n  SET_PENDING,\n  SET_SUCCESS,\n  SET_SUCCESS_INLINE,\n  SET_SUCCESS_MESSAGE,\n};\n","import types from './types';\n\nconst initialState = {\n  databaseReady: false,\n  error: false,\n  errorInline: false,\n  errorMessage: '',\n  pending: {},\n  loading: false,\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_ERROR:\n      newState.error = false;\n      newState.errorInline = false;\n      newState.errorMessage = '';\n      break;\n\n    case types.SET_DATABASE_READY:\n      newState.databaseReady = action.payload;\n      break;\n\n    case types.SET_ERROR:\n      newState.error = action.payload;\n      break;\n\n    case types.SET_ERROR_INLINE:\n      newState.errorInline = action.payload;\n      break;\n\n    case types.SET_ERROR_MESSAGE:\n      newState.errorMessage = action.payload;\n      break;\n\n    case types.SET_PENDING:\n      newState.pending = action.payload;\n      break;\n\n    case types.SET_SUCCESS:\n      newState.success = action.payload;\n      break;\n\n    case types.SET_LOADING:\n      newState.loading = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetError = payload => dispatch =>\n  dispatch({ type: types.RESET_ERROR, payload });\nconst setDatabaseReady = payload => dispatch =>\n  dispatch({ type: types.SET_DATABASE_READY, payload });\n\nexport default {\n  resetError,\n  setDatabaseReady,\n};\n","import actions from './actions';\n\nconst init = () => dispatch => dispatch({ type: 'INITIALIZER' });\n\nconst handleCloseErrorModal = () => dispatch => {\n  dispatch(actions.resetError());\n};\nconst handleSendBugReport = () => (dispatch, getState) => {\n  const { errorMessage } = getState().app;\n  const today = Date.now();\n\n  const body = {\n    type: 'error',\n    timestamp: today,\n    content: errorMessage,\n  };\n\n  dispatch({ type: 'SEND_LOG', body });\n  dispatch(actions.resetError());\n};\n\nexport default {\n  init,\n  handleCloseErrorModal,\n  handleSendBugReport,\n};\n","import appReducer from './reducers';\n\nexport { default as appOperations } from './operations';\nexport { default as appTypes } from './types';\nexport default appReducer;\n","const SET_COLORS_IN_USE = 'SET_COLORS_IN_USE';\nconst SET_CREATE_SUCCESS = 'SET_CREATE_SUCCESS';\nconst SET_EDITING_ARTIST = 'SET_EDITING_ARTIST';\nconst SET_EDITING_MEMBERS = 'SET_EDITING_MEMBERS';\nconst SET_EDITING_UNIT = 'SET_EDITING_UNIT';\nconst SET_MANAGE_RESULT = 'SET_MANAGE_RESULT';\nconst SET_PANELS = 'SET_PANELS';\nconst SET_UI_REFERENCE_TAB = 'SET_UI_REFERENCE_TAB';\nconst SET_UNITS_TYPEAHEAD = 'SET_UNITS_TYPEAHEAD';\nconst SET_UNITS_TYPEAHEAD_DICT = 'SET_UNITS_TYPEAHEAD_DICT';\n\nexport default {\n  SET_COLORS_IN_USE,\n  SET_CREATE_SUCCESS,\n  SET_EDITING_ARTIST,\n  SET_EDITING_MEMBERS,\n  SET_EDITING_UNIT,\n  SET_MANAGE_RESULT,\n  SET_PANELS,\n  SET_UI_REFERENCE_TAB,\n  SET_UNITS_TYPEAHEAD,\n  SET_UNITS_TYPEAHEAD_DICT,\n};\n","import types from './types';\n\nconst initialState = {\n  colorsInUse: {},\n  editingArtist: {},\n  editingMembers: [],\n  editingUnit: {},\n  manageResult: null,\n  panels: {\n    artist: 'open',\n    unit: 'locked',\n    members: 'locked',\n  },\n  uiReferenceTab: null,\n  unitsTypeahead: [],\n  unitsTypeaheadDict: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_COLORS_IN_USE:\n      newState.colorsInUse = action.payload;\n      break;\n\n    case types.SET_EDITING_ARTIST:\n      newState.editingArtist = action.payload;\n      break;\n\n    case types.SET_EDITING_MEMBERS:\n      newState.editingMembers = action.payload;\n      break;\n\n    case types.SET_EDITING_UNIT:\n      newState.editingUnit = action.payload;\n      break;\n\n    case types.SET_MANAGE_RESULT:\n      newState.manageResult = action.payload;\n      break;\n\n    case types.SET_PANELS:\n      newState.panels = action.payload;\n      break;\n\n    case types.SET_SONGS:\n      newState.songs = action.payload;\n      break;\n\n    case types.SET_SONG_SEARCH_QUERY:\n      newState.songSearchQuery = action.payload;\n      break;\n\n    case types.SET_UI_REFERENCE_TAB:\n      newState.uiReferenceTab = action.payload;\n      break;\n\n    case types.SET_UNITS_TYPEAHEAD:\n      newState.unitsTypeahead = action.payload;\n      break;\n\n    case types.SET_UNITS_TYPEAHEAD_DICT:\n      newState.unitsTypeaheadDict = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","const COLORS = {\n  col000001: 'red',\n  col000002: 'blood',\n  col000003: 'coral',\n  col000004: 'peach',\n  col000005: 'brown',\n  col000006: 'orange',\n  col000007: 'gold',\n  col000008: 'yellow',\n  col000009: 'olive',\n  col000010: 'lemon',\n  col000011: 'lime',\n  col000012: 'green',\n  col000013: 'basil',\n  col000014: 'forest',\n  col000015: 'jade',\n  col000016: 'teal',\n  col000017: 'cyan',\n  col000018: 'turquoise',\n  col000019: 'navy',\n  col000020: 'blue',\n  col000021: 'sky',\n  col000022: 'purple',\n  col000023: 'violet',\n  col000024: 'rose',\n  col000025: 'mauve',\n  col000026: 'magenta',\n  col000027: 'jam',\n  col000028: 'pink',\n  col000029: 'burgundy',\n  col000030: 'salmon',\n};\n\nconst DEFAULT_COLORS = {\n  default: '#000000',\n  black: '#000000',\n  blue: '#598ffd',\n  gray: '#707070',\n  green: '#49d156',\n  orange: '#fea245',\n  pink: '#fb9cf0',\n  purple: '#9e8ef0',\n  red: '#d14949',\n  teal: '#34ac9e',\n  white: 'FFFFFF',\n  yellow: '#ffd700',\n};\n\nconst FLAGS_LIST = {\n  AMERICAN: 'usa',\n  BRAZILIAN: 'brazil',\n  CANADIAN: 'canada',\n  CHINESE: 'china',\n  JAPANESE: 'japan',\n  KOREAN: 'korea',\n  TAIWANESE: 'taiwan',\n  THAI: 'thailand',\n  VIETNAMISE: 'vietnamise',\n};\n\nconst GENDERS = {\n  FEMALE: 'Female',\n  MALE: 'Male',\n  UNKOWN: 'Unknown',\n};\n\nconst GENRES = {\n  CPOP: 'C-Pop',\n  JPOP: 'J-Pop',\n  KPOP: 'K-Pop',\n  OTHER: 'Other',\n  POP: 'Pop',\n};\n\nconst GENRES_DB = {\n  'C-Pop': 'CPOP',\n  'J-Pop': 'JPOP',\n  'K-Pop': 'KPOP',\n  Other: 'OTHER',\n  Pop: 'POP',\n};\n\nconst POSITIONS_LIST = [\n  'MAIN_VOCALIST',\n  'MAIN_RAPPER',\n  'MAIN_DANCER',\n  'LEAD_VOCALIST',\n  'LEAD_RAPPER',\n  'LEAD_DANCER',\n  'VOCALIST',\n  'RAPPER',\n  'DANCER',\n  'LEADER',\n  'CENTER',\n  'VISUAL',\n];\n\nconst POSITIONS_LIST_OBJ = {\n  MAIN_VOCALIST: 'Main Vocalist',\n  LEAD_VOCALIST: 'Lead Vocalist',\n  VOCALIST: 'Vocalist',\n  MAIN_RAPPER: 'Main Rapper',\n  LEAD_RAPPER: 'Lead Rapper',\n  RAPPER: 'Rapper',\n  MAIN_DANCER: 'Main Dancer',\n  LEAD_DANCER: 'Lead Dancer',\n  DANCER: 'Dancer',\n  LEADER: 'Leader',\n  CENTER: 'Center',\n  VISUAL: 'Visual',\n};\n\nconst NATIONALITIES = {\n  AMERICAN: 'American',\n  BRAZILIAN: 'Brazilian',\n  BRITISH: 'British',\n  CANADIAN: 'Canadian',\n  CHINESE: 'Chinese',\n  JAPANESE: 'Japanese',\n  KOREAN: 'Korean',\n  OTHER: 'Other',\n  TAIWANESE: 'Taiwanese',\n  THAI: 'Thai',\n  VIETNAMISE: 'Vietnamise',\n};\n\nconst NATIONALITY_FLAG_URL = '/images/flags/';\n\nconst PROFILE_PICTURE_URL = '/images/profiles/';\n\nconst SYNC_KEY_LIST = {\n  1: true,\n  2: true,\n  3: true,\n  4: true,\n  5: true,\n};\n\nconst SYNC_KEY_COLOR_LIST = {\n  1: '1',\n  2: '8',\n  3: '12',\n  4: '20',\n  5: '26',\n};\n\nconst YOUTUBE_URLS = ['cudssvDuOpc'];\n\nexport default {\n  COLORS,\n  DEFAULT_COLORS,\n  FLAGS_LIST,\n  GENDERS,\n  GENRES,\n  GENRES_DB,\n  POSITIONS_LIST,\n  POSITIONS_LIST_OBJ,\n  NATIONALITIES,\n  NATIONALITY_FLAG_URL,\n  PROFILE_PICTURE_URL,\n  SYNC_KEY_LIST,\n  SYNC_KEY_COLOR_LIST,\n  YOUTUBE_URLS,\n};\n","import types from './types';\n\nconst setColorsInUse = payload => dispatch =>\n  dispatch({ type: types.SET_COLORS_IN_USE, payload });\nconst setEditingArtist = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_ARTIST, payload });\nconst setEditingMembers = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_MEMBERS, payload });\nconst setEditingUnit = payload => dispatch =>\n  dispatch({ type: types.SET_EDITING_UNIT, payload });\nconst setManageResult = payload => dispatch =>\n  dispatch({ type: types.SET_MANAGE_RESULT, payload });\nconst setPanels = payload => dispatch =>\n  dispatch({ type: types.SET_PANELS, payload });\nconst setSongSearchQuery = payload => dispatch =>\n  dispatch({ type: types.SET_SONG_SEARCH_QUERY, payload });\nconst setUIReferenceTab = payload => dispatch =>\n  dispatch({ type: types.SET_UI_REFERENCE_TAB, payload });\nconst setUnitsTypeahead = payload => dispatch =>\n  dispatch({ type: types.SET_UNITS_TYPEAHEAD, payload });\nconst setUnitsTypeaheadDict = payload => dispatch =>\n  dispatch({ type: types.SET_UNITS_TYPEAHEAD_DICT, payload });\n\nexport default {\n  setColorsInUse,\n  setEditingArtist,\n  setEditingMembers,\n  setEditingUnit,\n  setManageResult,\n  setPanels,\n  setSongSearchQuery,\n  setUIReferenceTab,\n  setUnitsTypeahead,\n  setUnitsTypeaheadDict,\n};\n","import _ from 'lodash';\nimport { toastr } from 'react-redux-toastr';\n\nimport constants from '../../utils/constants';\n\nimport actions from './actions';\n\nconst switchUIReferenceTab = event => async dispatch => {\n  const { id } = event.target;\n\n  if (!id) return null;\n\n  return dispatch(actions.setUIReferenceTab(id));\n};\n\nconst handleResyncDB = () => dispatch => dispatch({ type: 'RESYNC_DATABASE' });\n\nconst handleEditArtist = artistId => (dispatch, getState) => {\n  const panels = { ...getState().admin.panels };\n\n  panels.artist = 'edit';\n\n  if (artistId) {\n    dispatch({ type: 'REQUEST_ARTIST', artistId, panels, state: 'edit' });\n  } else {\n    dispatch(actions.setEditingArtist({ new: true }));\n    dispatch(actions.setPanels(panels));\n  }\n};\n\nconst handleEditUnit = unitId => (dispatch, getState) => {\n  const panels = { ...getState().admin.panels };\n\n  panels.unit = 'edit';\n\n  if (unitId) {\n    const units = [...getState().admin.editingArtist.units];\n    const unitIndex = _.findIndex(units, u => u.id === unitId);\n    const currentUnit = units[unitIndex];\n\n    dispatch(actions.setEditingUnit(currentUnit));\n  } else {\n    dispatch(actions.setEditingUnit({ new: true }));\n  }\n\n  dispatch(actions.setPanels(panels));\n};\n\nconst handleEditMember = (memberId, formState) => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  if (memberId) {\n    const { members } = getState().admin;\n    const memberIndex = _.findIndex(members, m => m.id === memberId);\n    const addedMember = { ...members[memberIndex] };\n    editingMembers.push(addedMember);\n    dispatch(actions.setEditingMembers(editingMembers));\n\n    // Also update colors in use\n    const colorsInUse = {};\n    editingMembers.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n    dispatch(actions.setColorsInUse(colorsInUse));\n  } else {\n    let lastMember = editingMembers[editingMembers.length - 1] || false;\n    if (lastMember && formState.values.members) {\n      lastMember =\n        formState.values.members[formState.values.members.length - 1];\n    }\n\n    editingMembers.push({\n      new: true,\n      positions: [],\n      gender: lastMember.gender || undefined,\n      nationality: lastMember.nationality || undefined,\n    });\n    dispatch(actions.setEditingMembers(editingMembers));\n  }\n};\n\nconst updateMemberColor = (value, index) => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  editingMembers[index].colorId = value;\n  dispatch(actions.setEditingMembers(editingMembers));\n\n  // Also update colors in use\n  const colorsInUse = {};\n  editingMembers.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n  dispatch(actions.setColorsInUse(colorsInUse));\n};\n\nconst updateMemberPositions = () => {};\n\n// const updateMemberPositions = (value, position, index) => (\n//   dispatch,\n//   getState\n// ) => {\n//   const editingMembers = [...getState().admin.editingMembers];\n//   const positionsObj = {};\n//   editingMembers[index].positions.forEach(pos => (positionsObj[pos] = true));\n//   if (value === false) {\n//     delete positionsObj[position];\n//   } else {\n//     positionsObj[position] = true;\n//     switch (position) {\n//       case 'MAIN_VOCALIST':\n//         delete positionsObj.LEAD_VOCALIST;\n//         delete positionsObj.VOCALIST;\n//         break;\n//       case 'LEAD_VOCALIST':\n//         delete positionsObj.MAIN_VOCALIST;\n//         delete positionsObj.VOCALIST;\n//         break;\n//       case 'VOCALIST':\n//         delete positionsObj.MAIN_VOCALIST;\n//         delete positionsObj.LEAD_VOCALIST;\n//         break;\n//       case 'MAIN_DANCER':\n//         delete positionsObj.LEAD_DANCER;\n//         delete positionsObj.DANCER;\n//         break;\n//       case 'LEAD_DANCER':\n//         delete positionsObj.MAIN_DANCER;\n//         delete positionsObj.DANCER;\n//         break;\n//       case 'DANCER':\n//         delete positionsObj.MAIN_DANCER;\n//         delete positionsObj.LEAD_DANCER;\n//         break;\n//       case 'MAIN_RAPPER':\n//         delete positionsObj.LEAD_RAPPER;\n//         delete positionsObj.RAPPER;\n//         break;\n//       case 'LEAD_RAPPER':\n//         delete positionsObj.MAIN_RAPPER;\n//         delete positionsObj.RAPPER;\n//         break;\n//       case 'RAPPER':\n//         delete positionsObj.MAIN_RAPPER;\n//         delete positionsObj.LEAD_RAPPER;\n//         break;\n//       default:\n//       // do nothing\n//     }\n//   }\n//   editingMembers[index].positions = Object.keys(positionsObj);\n//   dispatch(actions.setEditingMembers(editingMembers));\n// };\n\nconst updateManageForm = () => () => {\n  // // console.log(formObj);\n  // if (formObj.dirty) {\n  //   // console.log('DIRTY');\n  //   // console.log(formObj);\n  // } else {\n  //   // console.log('CLEAN');\n  // }\n};\n\nconst unlockUnit = formState => (dispatch, getState) => {\n  const artistState = formState.values.artist;\n\n  // Only unlock if required fields are filled.\n  if (!artistState || !artistState.name || !artistState.genre) return;\n\n  const panels = { ...getState().admin.panels };\n  panels.unit = 'open';\n\n  const editingArtistState = getState().admin.editingArtist;\n  const editingArtist = {\n    genre: artistState.genre,\n    name: artistState.name,\n    otherNames: artistState.otherNames || '',\n    private: artistState.private || false,\n    new: editingArtistState.new || false,\n    memberIds: editingArtistState.memberIds || false,\n    memberList: editingArtistState.memberList || false,\n    units: editingArtistState.units || false,\n    id: editingArtistState.id,\n    createdBy: editingArtistState.createdBy,\n  };\n\n  dispatch(actions.setEditingArtist(editingArtist));\n  dispatch(actions.setPanels(panels));\n};\n\nconst unlockMembers = formState => (dispatch, getState) => {\n  const unitState = formState.values.unit;\n\n  // Only unlock if required fields are filled.\n  if (!unitState || !unitState.name || !unitState.debutYear) return;\n\n  const panels = { ...getState().admin.panels };\n  panels.members = 'open';\n\n  const editingUnitState = getState().admin.editingUnit;\n  const editingUnit = {\n    debutYear: unitState.debutYear,\n    name: unitState.name,\n    official: unitState.official,\n    private: unitState.private || false,\n    subUnit: unitState.subUnit || null,\n    new: editingUnitState.new || false,\n    averages: editingUnitState.averages || false,\n    distributions: editingUnitState.distributions || false,\n    distributions_legacy: editingUnitState.distributions_legacy || false,\n    members: editingUnitState.members || false,\n    id: editingUnitState.id,\n    createdBy: editingUnitState.createdBy,\n  };\n\n  dispatch(actions.setEditingUnit(editingUnit));\n  dispatch({\n    type: 'REQUEST_UNIT_MEMBERS',\n    unitId: editingUnitState.id,\n    panels,\n  });\n};\n\nconst removeMember = index => (dispatch, getState) => {\n  const editingMembers = [...getState().admin.editingMembers];\n  // editingMembers.splice(index, 1);\n  editingMembers[index] = null;\n  dispatch(actions.setEditingMembers(editingMembers));\n};\n\nconst resetManage = () => dispatch => {\n  dispatch(actions.setEditingArtist({}));\n  dispatch(actions.setEditingMembers([]));\n  dispatch(actions.setEditingUnit({}));\n  dispatch(actions.setUnitsTypeahead([]));\n  dispatch(actions.setUnitsTypeaheadDict({}));\n  dispatch(actions.setManageResult(null));\n  dispatch(actions.setColorsInUse({}));\n  dispatch(\n    actions.setPanels({\n      artist: 'open',\n      unit: 'locked',\n      members: 'locked',\n    })\n  );\n};\n\nconst saveManage = formState => async (dispatch, getState) => {\n  const artistState = formState.values.artist;\n  const unitState = formState.values.unit;\n  const membersState = formState.values.members;\n\n  // Check formState\n  if (Object.keys(formState.errors).length) {\n    toastr.warning('The form has errors', formState.errors.toString());\n    return;\n  }\n\n  // Check artist required fields\n  if (!artistState || !artistState.name || !artistState.genre) {\n    toastr.warning('Artist is incomplete', 'Missing name and/or genre');\n    return;\n  }\n\n  // Check unit required fields\n  if (!unitState || !unitState.name || !unitState.debutYear) {\n    toastr.warning('Unit is incomplete', 'Missing name and/or debut year');\n    return;\n  }\n\n  if (!membersState || membersState.length < 2) {\n    toastr.warning(\n      'Minimum of 2 members are required',\n      `You have ${membersState.length} members so far`\n    );\n    return;\n  }\n\n  // Check members required fields\n  let missingField = false;\n  membersState.forEach(member => {\n    if (\n      !member.name ||\n      !member.birthdate ||\n      !member.colorId ||\n      !member.gender ||\n      !member.nationality\n    ) {\n      missingField = true;\n    }\n    const hasPositions = Object.keys(member).some(\n      m => constants.POSITIONS_LIST_OBJ[m]\n    );\n    if (!hasPositions) missingField = true;\n  });\n  if (missingField) {\n    toastr.warning(\n      'A members has missing fields',\n      'Check the console for details'\n    );\n    console.log(membersState); // eslint-disable-line\n    return;\n  }\n\n  // Prepare Artist\n  const editingArtistState = getState().admin.editingArtist;\n  const editingArtist = {\n    genre: artistState.genre,\n    name: artistState.name,\n    otherNames: artistState.otherNames || '',\n    private: artistState.private || false,\n    new: editingArtistState.new || false,\n    memberIds: editingArtistState.memberIds || [],\n    memberList: editingArtistState.memberList || [],\n    units: editingArtistState.units\n      ? editingArtistState.units.map(unit => unit.id)\n      : [],\n    id: editingArtistState.id || null,\n    createdBy: editingArtistState.createdBy || null,\n  };\n\n  // Prepare Unit\n  const editingUnitState = getState().admin.editingUnit;\n  const editingUnit = {\n    debutYear: unitState.debutYear,\n    name: unitState.name,\n    official: unitState.official,\n    private: unitState.private || false,\n    subUnit: unitState.subUnit || null,\n    new: editingUnitState.new || false,\n    averages: editingUnitState.averages || false,\n    distributions: editingUnitState.distributions || false,\n    distributions_legacy: editingUnitState.distributions_legacy || false,\n    artistId: editingUnitState.id || null,\n    id: editingUnitState.id || null,\n    createdBy: editingUnitState.createdBy || null,\n  };\n\n  // Prepare Members\n  const editingMembersState = getState().admin.editingMembers;\n  const editingMembers = [];\n  membersState.forEach((memberState, index) => {\n    if (memberState) {\n      const newMember = {\n        birthdate: +memberState.birthdate.replace(/(-)/g, ''),\n        colorId: memberState.colorId,\n        gender: memberState.gender,\n        initials: memberState.initials || '',\n        name: memberState.name,\n        nationality: memberState.nationality,\n        private: memberState.private || false,\n      };\n      // Handle existing database member\n      if (editingMembersState[index].id) {\n        newMember.createdBy = editingMembersState[index].createdBy || null;\n        newMember.id = editingMembersState[index].id || null;\n        newMember.referenceArtist =\n          editingMembersState[index].referenceArtist || null;\n      }\n      // Handle positions\n      const positions = [];\n      Object.keys(memberState).forEach(key => {\n        if (constants.POSITIONS_LIST.includes(key)) positions.push(key);\n      });\n      newMember.positions = positions;\n\n      editingMembers.push(newMember);\n    }\n  });\n\n  dispatch({\n    type: 'UPDATE_COMPLETE_ARTIST',\n    artist: editingArtist,\n    unit: editingUnit,\n    members: editingMembers,\n  });\n};\n\nexport default {\n  handleEditArtist,\n  handleEditMember,\n  handleEditUnit,\n  handleResyncDB,\n  removeMember,\n  resetManage,\n  saveManage,\n  switchUIReferenceTab,\n  unlockUnit,\n  unlockMembers,\n  updateManageForm,\n  updateMemberColor,\n  updateMemberPositions,\n};\n","import adminReducer from './reducers';\n\nexport { default as adminOperations } from './operations';\nexport { default as adminTypes } from './types';\nexport default adminReducer;\n","const SET_ARTIST_LIST = 'SET_ARTIST_LIST';\nconst SET_ARTIST_PAGE_TAB = 'SET_ARTIST_PAGE_TAB';\nconst SET_BIAS = 'SET_BIAS';\nconst SET_SEARCH_QUERY = 'SET_SEARCH_QUERY';\nconst SET_SELECTED_ARTIST = 'SET_SELECTED_ARTIST';\nconst SET_SELECTED_UNIT = 'SET_SELECTED_UNIT';\nconst SET_SHOW_FAVORITE_ARTISTS_ONLY = 'SET_SHOW_FAVORITE_ARTISTS_ONLY';\n\nexport default {\n  SET_ARTIST_LIST,\n  SET_ARTIST_PAGE_TAB,\n  SET_BIAS,\n  SET_SEARCH_QUERY,\n  SET_SELECTED_ARTIST,\n  SET_SELECTED_UNIT,\n  SET_SHOW_FAVORITE_ARTISTS_ONLY,\n};\n","import types from './types';\n\nconst initialState = {\n  artistList: [],\n  artistPageTab: '',\n  bias: {},\n  searchQuery: '',\n  selectedArtist: {},\n  selectedUnit: {},\n  showFavoriteArtistsOnly: false,\n  userFavoriteArtists: {},\n  userLatestArtists: [],\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ARTIST_LIST:\n      newState.artistList = action.payload;\n      break;\n\n    case types.SET_ARTIST_PAGE_TAB:\n      newState.artistPageTab = action.payload;\n      break;\n\n    case types.SET_BIAS:\n      newState.bias = action.payload;\n      break;\n\n    case types.SET_SEARCH_QUERY:\n      newState.searchQuery = action.payload;\n      break;\n\n    case types.SET_SELECTED_ARTIST:\n      newState.selectedArtist = action.payload;\n      break;\n\n    case types.SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      break;\n\n    case types.SET_SHOW_FAVORITE_ARTISTS_ONLY:\n      newState.showFavoriteArtistsOnly = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setArtistList = payload => dispatch =>\n  dispatch({ type: types.SET_ARTIST_LIST, payload });\nconst setArtistPageTab = payload => dispatch =>\n  dispatch({ type: types.SET_ARTIST_PAGE_TAB, payload });\nconst setBias = payload => dispatch =>\n  dispatch({ type: types.SET_BIAS, payload });\nconst setSearchQuery = payload => dispatch =>\n  dispatch({ type: types.SET_SEARCH_QUERY, payload });\nconst setSelectedArtist = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_ARTIST, payload });\nconst setSelectedUnit = payload => dispatch =>\n  dispatch({ type: types.SET_SELECTED_UNIT, payload });\nconst setShowFavoriteArtistsOnly = payload => dispatch =>\n  dispatch({ type: types.SET_SHOW_FAVORITE_ARTISTS_ONLY, payload });\n\nexport default {\n  setArtistList,\n  setArtistPageTab,\n  setBias,\n  setSearchQuery,\n  setSelectedArtist,\n  setSelectedUnit,\n  setShowFavoriteArtistsOnly,\n};\n","import actions from './actions';\n\nconst loadArtist = (artistId, queryParams) => dispatch =>\n  dispatch({ type: 'REQUEST_ARTIST', artistId, queryParams });\n\nconst loadUserArtists = () => async (dispatch, getState) => {};\n\nconst findUnitIndex = (units, unitId) => units.findIndex(u => u.id === unitId);\n\nconst updateSearchQuery = value => dispatch => {\n  if (value === '' || value.length > 2) {\n    dispatch(actions.setSearchQuery(value.toLowerCase()));\n  }\n};\n\nconst showFavoriteArtistsOnlyToggle = () => (dispatch, getState) => {\n  const { showFavoriteArtistsOnly } = getState().artists;\n  dispatch(actions.setShowFavoriteArtistsOnly(!showFavoriteArtistsOnly));\n};\n\nconst updateLatestUnits = id => async (dispatch, getState) => {};\n\nconst switchArtistPageTab = event => async (dispatch, getState) => {\n  let { id } = event.target;\n\n  // When clicking on the tab icon, the id is lost\n  if (!id) {\n    id = event.target.parentNode.parentNode.id; // eslint-disable-line\n  }\n  if (!id) return null;\n\n  dispatch(actions.setArtistPageTab(id));\n\n  const selectedArtist = { ...getState().artists.selectedArtist };\n  const unitIndex = findUnitIndex(selectedArtist.units, id);\n  const currentUnit = selectedArtist.units[unitIndex];\n\n  // If unit has the complete flag, use it, else request a new complete one\n  if (currentUnit.complete) {\n    dispatch(actions.setSelectedUnit(currentUnit));\n  } else {\n    await dispatch({\n      type: 'REQUEST_UNIT',\n      unitId: id,\n      selectedArtist,\n      unitIndex,\n    });\n  }\n};\n\nconst getBias = () => (dispatch, getState) => {\n  const { biases } = getState().auth.user;\n  const { selectedUnit } = getState().artists;\n  const { id, members } = selectedUnit;\n  let bias = null;\n  if (id && Object.keys(members).length) {\n    Object.keys(members).forEach(key => {\n      if (biases[`${id}:${key}`]) {\n        bias = { ...selectedUnit.members[key] };\n      }\n    });\n  }\n\n  if (bias) {\n    dispatch(actions.setBias(bias));\n  } else {\n    dispatch(actions.setBias({}));\n  }\n};\n\nexport default {\n  getBias,\n  loadUserArtists,\n  loadArtist,\n  updateSearchQuery,\n  updateLatestUnits,\n  showFavoriteArtistsOnlyToggle,\n  switchArtistPageTab,\n};\n","import artistsReducer from './reducers';\n\nexport { default as artistsOperations } from './operations';\nexport { default as artistsTypes } from './types';\nexport default artistsReducer;\n","const SET_ADMIN = 'SET_ADMIN';\nconst SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nconst SET_BIASES = 'SET_BIASES';\nconst SET_USER = 'SET_USER';\n\nexport default {\n  SET_ADMIN,\n  SET_AUTHENTICATED,\n  SET_BIASES,\n  SET_USER,\n};\n","import types from './types';\n\nconst initialState = {\n  isAuthenticated: false,\n  isAdmin: false,\n  user: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ADMIN:\n      newState.isAdmin = action.payload;\n      break;\n\n    case types.SET_AUTHENTICATED:\n      newState.isAuthenticated = action.payload;\n      break;\n\n    case types.SET_BIASES:\n      newState.user.biases = action.payload;\n      break;\n\n    case types.SET_USER:\n      newState.user = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setAdmin = payload => dispatch =>\n  dispatch({ type: types.SET_ADMIN, payload });\nconst setAuthenticated = payload => dispatch =>\n  dispatch({ type: types.SET_AUTHENTICATED, payload });\nconst setUser = payload => dispatch =>\n  dispatch({ type: types.SET_USER, payload });\n\nexport default {\n  setAdmin,\n  setAuthenticated,\n  setUser,\n};\n","import actions from './actions';\n\nconst login = () => dispatch => dispatch({ type: 'RUN_LOGIN' });\n\nconst logout = () => dispatch => dispatch({ type: 'RUN_LOGOUT' });\n\nconst updateFavoriteArtists = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteArtists = { ...user.favoriteArtists } || {};\n  if (user.id) {\n    if (userFavoriteArtists[id]) {\n      userFavoriteArtists[id] = false;\n    } else {\n      userFavoriteArtists[id] = true;\n    }\n\n    await dispatch({\n      type: 'UPDATE_USER_FAVORITE_ARTISTS',\n      userFavoriteArtists,\n      userId: user.id,\n    });\n\n    user.favoriteArtists = userFavoriteArtists;\n    dispatch(actions.setUser(user));\n  }\n};\n\nconst updateFavoriteMembers = id => async (dispatch, getState) => {\n  const user = { ...getState().auth.user };\n  const userFavoriteMembers = { ...user.favoriteMembers } || {};\n  if (user.id) {\n    if (userFavoriteMembers[id]) {\n      userFavoriteMembers[id] = false;\n    } else {\n      userFavoriteMembers[id] = true;\n    }\n\n    await dispatch({\n      type: 'UPDATE_USER_FAVORITE_MEMBERS',\n      userFavoriteMembers,\n      userId: user.id,\n    });\n\n    user.favoriteMembers = userFavoriteMembers;\n    dispatch(actions.setUser(user));\n  }\n};\n\nconst updateBias = event => async (dispatch, getState) => {\n  const { value } = event.target;\n  const { id, members } = getState().artists.selectedUnit;\n\n  if (value && id && members && members[value]) {\n    const user = { ...getState().auth.user };\n    const biases = { ...user.biases } || {};\n\n    const biasId = `${id}:${value}`;\n\n    // Stop if member is already the bias\n    if (biases[biasId]) return;\n\n    // Remove any biases within this unit\n    Object.keys(members).forEach(key => {\n      const currentBias = `${id}:${key}`;\n      if (biases[currentBias]) {\n        delete biases[`${id}:${key}`];\n      }\n    });\n\n    biases[biasId] = true;\n\n    const bias = { ...members[value] };\n\n    await dispatch({\n      type: 'UPDATE_USER_BIASES',\n      bias,\n      biases,\n      userId: user.id,\n    });\n  }\n};\n\nexport default {\n  login,\n  logout,\n  updateBias,\n  updateFavoriteArtists,\n  updateFavoriteMembers,\n};\n","import authReducer from './reducers';\n\nexport { default as authOperations } from './operations';\nexport { default as authTypes } from './types';\nexport default authReducer;\n","const SET_ARTISTS = 'SET_ARTISTS';\nconst SET_ARTISTS_TYPEAHEAD = 'SET_ARTISTS_TYPEAHEAD';\nconst SET_ARTISTS_TYPEAHEAD_DICT = 'SET_ARTISTS_TYPEAHEAD_DICT';\nconst SET_COLORS = 'SET_COLORS';\nconst SET_MEMBERS = 'SET_MEMBERS';\nconst SET_MEMBERS_TYPEAHEAD = 'SET_MEMBERS_TYPEAHEAD';\nconst SET_MEMBERS_TYPEAHEAD_DICT = 'SET_MEMBERS_TYPEAHEAD_DICT';\nconst SET_SONGS = 'SET_SONGS';\nconst SET_SONG_SEARCH_QUERY = 'SET_SONG_SEARCH_QUERY';\n\nexport default {\n  SET_ARTISTS,\n  SET_ARTISTS_TYPEAHEAD,\n  SET_ARTISTS_TYPEAHEAD_DICT,\n  SET_COLORS,\n  SET_MEMBERS,\n  SET_MEMBERS_TYPEAHEAD,\n  SET_MEMBERS_TYPEAHEAD_DICT,\n  SET_SONGS,\n  SET_SONG_SEARCH_QUERY,\n};\n","import types from './types';\n\nconst initialState = {\n  artists: [],\n  artistsTypeahead: [],\n  artistsTypeaheadDict: {},\n  colors: {},\n  members: [],\n  membersTypeahead: [],\n  membersTypeaheadDict: {},\n  songs: [],\n  songSearchQuery: '',\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_ARTISTS:\n      newState.artists = action.payload;\n      break;\n\n    case types.SET_ARTISTS_TYPEAHEAD:\n      newState.artistsTypeahead = action.payload;\n      break;\n\n    case types.SET_ARTISTS_TYPEAHEAD_DICT:\n      newState.artistsTypeaheadDict = action.payload;\n      break;\n\n    case types.SET_COLORS:\n      newState.colors = action.payload;\n      break;\n\n    case types.SET_MEMBERS:\n      newState.members = action.payload;\n      break;\n\n    case types.SET_MEMBERS_TYPEAHEAD:\n      newState.membersTypeahead = action.payload;\n      break;\n\n    case types.SET_MEMBERS_TYPEAHEAD_DICT:\n      newState.membersTypeaheadDict = action.payload;\n      break;\n\n    case types.SET_SONGS:\n      newState.songs = action.payload;\n      break;\n\n    case types.SET_SONG_SEARCH_QUERY:\n      newState.songSearchQuery = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setColors = payload => dispatch =>\n  dispatch({ type: types.SET_COLORS, payload });\nconst setSongs = payload => dispatch =>\n  dispatch({ type: types.SET_SONGS, payload });\nconst setSongSearchQuery = payload => dispatch =>\n  dispatch({ type: types.SET_SONG_SEARCH_QUERY, payload });\n\nexport default {\n  setColors,\n  setSongs,\n  setSongSearchQuery,\n};\n","import actions from './actions';\n\nconst loadArtists = () => dispatch => dispatch({ type: 'REQUEST_ARTISTS' });\n\nconst loadColors = () => dispatch => dispatch({ type: 'REQUEST_COLORS' });\n\nconst loadMembers = () => dispatch => dispatch({ type: 'REQUEST_MEMBERS' });\n\nconst loadSongs = () => dispatch => dispatch({ type: 'REQUEST_SONGS' });\n\nconst resetSongSearchQuery = () => dispatch =>\n  dispatch(actions.setSongSearchQuery(''));\n\nconst updateSongSearchQuery = value => dispatch =>\n  dispatch(actions.setSongSearchQuery(value));\n\nexport default {\n  loadArtists,\n  loadColors,\n  loadMembers,\n  loadSongs,\n  resetSongSearchQuery,\n  updateSongSearchQuery,\n};\n","import dbReducer from './reducers';\n\nexport { default as dbOperations } from './operations';\nexport { default as dbTypes } from './types';\nexport default dbReducer;\n","const RESET_DISTRIBUTE = 'RESET_DISTRIBUTE';\nconst RESET_DISTRIBUTE_SONG = 'RESET_DISTRIBUTE_SONG';\nconst SET_ACTIVE_DISTRIBUTION = 'SET_ACTIVE_DISTRIBUTION';\nconst SET_ACTIVE_MEMBER_PILL = 'SET_ACTIVE_MEMBER_PILL';\nconst SET_ACTIVE_SONG = 'SET_ACTIVE_SONG';\nconst SET_ACTIVE_UNIT = 'SET_ACTIVE_UNIT';\nconst SET_DISTRIBUTE_VIEW = 'SET_DISTRIBUTE_VIEW';\nconst SET_DISTRIBUTION_CATEGORY = 'SET_DISTRIBUTION_CATEGORY';\nconst SET_DISTRIBUTION_LINES = 'SET_DISTRIBUTION_LINES';\nconst SET_DISTRIBUTION_REMAINDER = 'SET_DISTRIBUTION_REMAINDER';\nconst SET_RATES = 'SET_RATES';\nconst SET_TIMESTAMPS_DICT = 'SET_TIMESTAMPS_DICT';\n\nexport default {\n  RESET_DISTRIBUTE,\n  RESET_DISTRIBUTE_SONG,\n  SET_ACTIVE_DISTRIBUTION,\n  SET_ACTIVE_MEMBER_PILL,\n  SET_ACTIVE_SONG,\n  SET_ACTIVE_UNIT,\n  SET_DISTRIBUTE_VIEW,\n  SET_DISTRIBUTION_CATEGORY,\n  SET_DISTRIBUTION_LINES,\n  SET_DISTRIBUTION_REMAINDER,\n  SET_RATES,\n  SET_TIMESTAMPS_DICT,\n};\n","import types from './types';\n\nconst initialState = {\n  activeMemberPill: '',\n  activeDistribution: {},\n  activeSong: {},\n  activeUnit: {},\n  category: '',\n  distributeView: 'view',\n  distributionLines: [],\n  rates: {},\n  remainder: 100,\n  timestampsDict: {},\n\n  // // activeDistribution: {\n  // //   id: '-La4TN-3MBxB2pc9DnHC',\n  // //   createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  // //   category: 'WOULD',\n  // //   features: [],\n  // //   modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  // //   rates: {\n  // //     '-LZJFEse1Y9qr-Zvqs-1': 15.66,\n  // //     '-LZJFEskZ-xpLLt44WpV': 22.389999999999997,\n  // //     '-LZJFEsrDDhUdTym0GZo': 16.16,\n  // //     '-LZJFEstFUh5FQU40RKe': 24.84,\n  // //     '-LZJFEsxjzWTx-rET1xE': 27.999999999999996,\n  // //     '-LZJFEt1kQzvszYTLrJY': 16.57,\n  // //     ALL: 16.25,\n  // //     NONE: 4.83,\n  // //     max: 27.999999999999996,\n  // //     remaining: 0,\n  // //     total: 144.7,\n  // //   },\n  // //   relationships: {\n  // //     '1': ['NONE'],\n  // //     '2': ['NONE'],\n  // //     '3': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '4': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '5': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '6': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '7': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '8': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '9': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '10': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '11': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '12': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '13': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '14': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '15': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '16': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '17': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '18': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '19': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '20': ['ALL'],\n  // //     '21': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '22': ['ALL'],\n  // //     '23': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '24': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '25': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '26': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '27': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '28': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '29': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '30': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '31': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '32': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '33': ['-LZJFEt1kQzvszYTLrJY'],\n  // //     '34': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '35': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '36': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '37': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '38': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '39': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '40': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '41': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '42': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '43': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '44': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '45': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '46': ['-LZJFEsrDDhUdTym0GZo'],\n  // //     '47': ['ALL'],\n  // //     '48': ['ALL'],\n  // //     '49': ['ALL'],\n  // //     '50': ['ALL'],\n  // //     '51': ['ALL'],\n  // //     '52': ['ALL'],\n  // //     '53': ['ALL'],\n  // //     '54': ['ALL'],\n  // //     '55': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '56': ['-LZJFEsxjzWTx-rET1xE'],\n  // //     '57': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '58': ['-LZJFEstFUh5FQU40RKe'],\n  // //     '59': ['ALL'],\n  // //     '60': ['-LZJFEse1Y9qr-Zvqs-1'],\n  // //     '61': ['ALL'],\n  // //     '62': ['-LZJFEskZ-xpLLt44WpV'],\n  // //     '63': ['-LZJFEsxjzWTx-rET1xE'],\n  // //   },\n  // //   songId: '-La4R2Z9hcKnQCM-KQK_',\n  // //   unitId: '-LZJFFC-kZi_o3nehGku',\n  // },\n  // activeSong: {\n  //   id: '-La4R2Z9hcKnQCM-KQK_',\n  //   album: \"IT'z Different\",\n  //   createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   distribution:\n  //     '[1:25.69:2.42] DDA-DDA-LA-DDA-LA-DDA-LA\\n[2:33.41:2.41]  DDA-DDA-LA-DDA-LA-DDA-LA\\n\\n[3:38.21:1.08]  People look at me, [4:40.15:0.99]  and they tell me\\n[5:42.12:3.66]  wemoman bogo naega nallari gattaeyo\\n[6:46.34:0.67]  So what? [7:47.8:1.13]  shingyeong an sseo \\n[8:49.78:3.31]  I’m sorry I don’t care, don’t care, really don’t care, [9:53.25:1.2]  because\\n\\n[10:54.57:3.33]  sarang ttawie mongmaeji ana\\n[11:58.34:3.29]  sesangen jaeminneun ge deo mana\\n[12:61.98:1.32]  eonnideuri malhae [13:63.52:1.97]  cheoldeullyeomyeon meoreottae\\n[14:65.58:0.98]  (I’m sorry sorry) [15:66.52:2.37]  cheoldeul saenggak eopseoyo Nope\\n\\n[16:69.03:3.32]  yeppeugiman hago maeryeogeun eomneun\\n[17:72.51:3.5]  aedeulgwa nan dalla dalla dalla\\n[18:76.59:3.27]  ni gijune nal matchuryeo haji ma\\n[19:79.98:3.8]  nan jigeum naega joa naneun naya\\n\\n[20:86.23:1.21]  I love myself\\n[21:88.15:2.58]  nan mweonga dalla dalla Yeah\\n[22:93.88:1.19]  I love myself\\n[23:95.81:2.5]  nan mweonga dalla dalla Yeah\\n[24:99.69:2.51]  nan neorang dalla dalla Yeah\\n\\n[25:102.36:1.63]  Bad, bad, I’m sorry I’m bad,\\n[26:104.21:1.74]  I’m just the way I am\\n[27:106.13:1.78]  nam shingyeong sseugo salgin akkaweo\\n[28:108.07:1.62]  hago shipeun il hagido bappa\\n[29:109.79:0.82]  My life \\n[30:111.65:2.63]  nae mamdaero sal geoya malliji ma\\n[31:115.28:2.27]  nan teukbyeolhanikka Yeah\\n\\n[32:117.96:3.24]  namdeure shiseon jungyochi ana\\n[33:121.69:3.34]  nae Style-i joa geuge nanikka\\n[34:125.33:1.35]  eonnideuri malhae [35:126.84:2.1]  naega neomu dangdolhadae\\n[36:129.05:0.8]  (I’m sorry sorry) [37:129.94:2.15]  bakkeul saenggak eopseoyo Nope\\n\\n[38:132.33:3.31]  yeppeugiman hago maeryeogeun eomneun\\n[39:135.9:3.64]  aedeulgwa nan dalla dalla dalla\\n[40:139.9:3.46]  ni gijune nal matchuryeo haji ma\\n[41:143.49:3.7]  nan jigeum naega joa naneun naya\\n\\n[42:150.07:3.7]  Don’t care what people say naneun naega ara\\n[43:153.95:4.73]  I’m talking to myself gijukji ma jeolttaero\\n[44:158.79:1.42]  gogaereul deulgo [45:160.34:2.15]  ni kkomeul jjocha\\n[46:162.58:3.19]  Just keep on dreaming\\n\\n[47:166.13:1.34]  Keep your chin up, [48:167.8:1.34]  we got your back\\n[49:169.88:1.46]  Keep your head up, [50:171.62:1.55]  just keep on dreaming\\n[51:173.75:1.41]  Keep your chin up, [52:175.52:1.27]  we got your back\\n[53:177.63:1.48]  Keep your head up, [54:179.38:1.5]  just keep on dreaming\\n\\n[55:182.29:3.29]  yeppeugiman hago maeryeogeun eomneun\\n[56:185.73:3.68]  aedeulgwa nan dalla dalla dalla\\n[57:189.82:3.34]  ni gijune nal matchuryeo haji ma\\n[58:193.28:3.82]  nan jigeum naega joa naneun naya\\n\\n[59:199.49:1.23]  I love myself\\n[60:201.41:2.62]  nan mweonga dalla dalla Yeah\\n[61:207.18:1.27]  I love myself\\n[62:209.09:2.66]  nan mweonga dalla dalla Yeah\\n[63:212.93:2.66]  nan neorang dalla dalla Yeah\\n',\n  //   groupSize: 5,\n  //   modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   originalArtist: 'ITZY',\n  //   originalArtistId: '-L_ul8qKXoH09zK0qo6W',\n  //   private: false,\n  //   query: \"dalla dalla itzy it'z different\",\n  //   single: true,\n  //   title: 'Dalla Dalla',\n  //   videoId: 'pNfTK39k55U',\n  // },\n  // activeUnit: {\n  //   id: '-LZJFFC-kZi_o3nehGku',\n  //   artistId: '-LZJFF1-RtaGtxdWblMo',\n  //   averages: [],\n  //   createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   debutYear: 2001,\n  //   distributions: [\n  //     {\n  //       id: '-La4TN-3MBxB2pc9DnHC',\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       category: 'WOULD',\n  //       features: [],\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       rates: {\n  //         '-LZJFEse1Y9qr-Zvqs-1': 15.66,\n  //         '-LZJFEskZ-xpLLt44WpV': 22.389999999999997,\n  //         '-LZJFEsrDDhUdTym0GZo': 16.16,\n  //         '-LZJFEstFUh5FQU40RKe': 24.84,\n  //         '-LZJFEsxjzWTx-rET1xE': 27.999999999999996,\n  //         '-LZJFEt1kQzvszYTLrJY': 16.57,\n  //         ALL: 16.25,\n  //         NONE: 4.83,\n  //         max: 27.999999999999996,\n  //         remaining: 0,\n  //         total: 144.7,\n  //       },\n  //       relationships: {\n  //         '1': ['NONE'],\n  //         '2': ['NONE'],\n  //         '3': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '4': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '5': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '6': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '7': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '8': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '9': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '10': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '11': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '12': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '13': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '14': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '15': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '16': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '17': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '18': ['-LZJFEstFUh5FQU40RKe'],\n  //         '19': ['-LZJFEstFUh5FQU40RKe'],\n  //         '20': ['ALL'],\n  //         '21': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '22': ['ALL'],\n  //         '23': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '24': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '25': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '26': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '27': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '28': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '29': ['-LZJFEstFUh5FQU40RKe'],\n  //         '30': ['-LZJFEstFUh5FQU40RKe'],\n  //         '31': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '32': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '33': ['-LZJFEt1kQzvszYTLrJY'],\n  //         '34': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '35': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '36': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '37': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '38': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '39': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '40': ['-LZJFEstFUh5FQU40RKe'],\n  //         '41': ['-LZJFEstFUh5FQU40RKe'],\n  //         '42': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '43': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '44': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '45': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '46': ['-LZJFEsrDDhUdTym0GZo'],\n  //         '47': ['ALL'],\n  //         '48': ['ALL'],\n  //         '49': ['ALL'],\n  //         '50': ['ALL'],\n  //         '51': ['ALL'],\n  //         '52': ['ALL'],\n  //         '53': ['ALL'],\n  //         '54': ['ALL'],\n  //         '55': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '56': ['-LZJFEsxjzWTx-rET1xE'],\n  //         '57': ['-LZJFEstFUh5FQU40RKe'],\n  //         '58': ['-LZJFEstFUh5FQU40RKe'],\n  //         '59': ['ALL'],\n  //         '60': ['-LZJFEse1Y9qr-Zvqs-1'],\n  //         '61': ['ALL'],\n  //         '62': ['-LZJFEskZ-xpLLt44WpV'],\n  //         '63': ['-LZJFEsxjzWTx-rET1xE'],\n  //       },\n  //       songId: '-La4R2Z9hcKnQCM-KQK_',\n  //       unitId: '-LZJFFC-kZi_o3nehGku',\n  //       distribution:\n  //         '[1:25.69:2.42] DDA-DDA-LA-DDA-LA-DDA-LA\\n[2:33.41:2.41]  DDA-DDA-LA-DDA-LA-DDA-LA\\n\\n[3:38.21:1.08]  People look at me, [4:40.15:0.99]  and they tell me\\n[5:42.12:3.66]  wemoman bogo naega nallari gattaeyo\\n[6:46.34:0.67]  So what? [7:47.8:1.13]  shingyeong an sseo \\n[8:49.78:3.31]  I’m sorry I don’t care, don’t care, really don’t care, [9:53.25:1.2]  because\\n\\n[10:54.57:3.33]  sarang ttawie mongmaeji ana\\n[11:58.34:3.29]  sesangen jaeminneun ge deo mana\\n[12:61.98:1.32]  eonnideuri malhae [13:63.52:1.97]  cheoldeullyeomyeon meoreottae\\n[14:65.58:0.98]  (I’m sorry sorry) [15:66.52:2.37]  cheoldeul saenggak eopseoyo Nope\\n\\n[16:69.03:3.32]  yeppeugiman hago maeryeogeun eomneun\\n[17:72.51:3.5]  aedeulgwa nan dalla dalla dalla\\n[18:76.59:3.27]  ni gijune nal matchuryeo haji ma\\n[19:79.98:3.8]  nan jigeum naega joa naneun naya\\n\\n[20:86.23:1.21]  I love myself\\n[21:88.15:2.58]  nan mweonga dalla dalla Yeah\\n[22:93.88:1.19]  I love myself\\n[23:95.81:2.5]  nan mweonga dalla dalla Yeah\\n[24:99.69:2.51]  nan neorang dalla dalla Yeah\\n\\n[25:102.36:1.63]  Bad, bad, I’m sorry I’m bad,\\n[26:104.21:1.74]  I’m just the way I am\\n[27:106.13:1.78]  nam shingyeong sseugo salgin akkaweo\\n[28:108.07:1.62]  hago shipeun il hagido bappa\\n[29:109.79:0.82]  My life \\n[30:111.65:2.63]  nae mamdaero sal geoya malliji ma\\n[31:115.28:2.27]  nan teukbyeolhanikka Yeah\\n\\n[32:117.96:3.24]  namdeure shiseon jungyochi ana\\n[33:121.69:3.34]  nae Style-i joa geuge nanikka\\n[34:125.33:1.35]  eonnideuri malhae [35:126.84:2.1]  naega neomu dangdolhadae\\n[36:129.05:0.8]  (I’m sorry sorry) [37:129.94:2.15]  bakkeul saenggak eopseoyo Nope\\n\\n[38:132.33:3.31]  yeppeugiman hago maeryeogeun eomneun\\n[39:135.9:3.64]  aedeulgwa nan dalla dalla dalla\\n[40:139.9:3.46]  ni gijune nal matchuryeo haji ma\\n[41:143.49:3.7]  nan jigeum naega joa naneun naya\\n\\n[42:150.07:3.7]  Don’t care what people say naneun naega ara\\n[43:153.95:4.73]  I’m talking to myself gijukji ma jeolttaero\\n[44:158.79:1.42]  gogaereul deulgo [45:160.34:2.15]  ni kkomeul jjocha\\n[46:162.58:3.19]  Just keep on dreaming\\n\\n[47:166.13:1.34]  Keep your chin up, [48:167.8:1.34]  we got your back\\n[49:169.88:1.46]  Keep your head up, [50:171.62:1.55]  just keep on dreaming\\n[51:173.75:1.41]  Keep your chin up, [52:175.52:1.27]  we got your back\\n[53:177.63:1.48]  Keep your head up, [54:179.38:1.5]  just keep on dreaming\\n\\n[55:182.29:3.29]  yeppeugiman hago maeryeogeun eomneun\\n[56:185.73:3.68]  aedeulgwa nan dalla dalla dalla\\n[57:189.82:3.34]  ni gijune nal matchuryeo haji ma\\n[58:193.28:3.82]  nan jigeum naega joa naneun naya\\n\\n[59:199.49:1.23]  I love myself\\n[60:201.41:2.62]  nan mweonga dalla dalla Yeah\\n[61:207.18:1.27]  I love myself\\n[62:209.09:2.66]  nan mweonga dalla dalla Yeah\\n[63:212.93:2.66]  nan neorang dalla dalla Yeah\\n',\n  //       originalArtist: 'ITZY',\n  //       title: 'Dalla Dalla',\n  //       videoId: 'pNfTK39k55U',\n  //     },\n  //   ],\n  //   distributions_legacy: [],\n  //   members: {\n  //     '-LZJFEse1Y9qr-Zvqs-1': {\n  //       age: 37,\n  //       birthdate: 19810412,\n  //       colorId: 'col000022',\n  //       color: {\n  //         b: 238,\n  //         count: 12,\n  //         g: 104,\n  //         hex: '#7B68EE',\n  //         name: 'purple',\n  //         number: 22,\n  //         r: 132,\n  //         id: 'col000022',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'MR',\n  //       name: 'Mari',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: ['LEADER', 'RAPPER', 'VISUAL', 'VOCALIST'],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEse1Y9qr-Zvqs-1',\n  //     },\n  //     '-LZJFEskZ-xpLLt44WpV': {\n  //       age: 36,\n  //       birthdate: 19820422,\n  //       colorId: 'col000026',\n  //       color: {\n  //         b: 233,\n  //         count: 17,\n  //         g: 107,\n  //         hex: '#FC6BE9',\n  //         name: 'magenta',\n  //         number: 26,\n  //         r: 252,\n  //         id: 'col000026',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'MB',\n  //       name: 'Mab',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: ['LEAD_VOCALIST', 'VISUAL', 'VOCALIST'],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEskZ-xpLLt44WpV',\n  //     },\n  //     '-LZJFEsrDDhUdTym0GZo': {\n  //       age: 36,\n  //       birthdate: 19820911,\n  //       colorId: 'col000020',\n  //       color: {\n  //         b: 255,\n  //         count: 18,\n  //         g: 111,\n  //         hex: '#406FFF',\n  //         name: 'blue',\n  //         number: 20,\n  //         r: 64,\n  //         id: 'col000020',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'CD',\n  //       name: 'CD',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: ['LEAD_VOCALIST'],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEsrDDhUdTym0GZo',\n  //     },\n  //     '-LZJFEstFUh5FQU40RKe': {\n  //       age: 35,\n  //       birthdate: 19830712,\n  //       colorId: 'col000008',\n  //       color: {\n  //         b: 0,\n  //         count: 14,\n  //         g: 228,\n  //         hex: '#FFE400',\n  //         name: 'yellow',\n  //         number: 8,\n  //         r: 255,\n  //         id: 'col000008',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'PR',\n  //       name: 'Pri',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: ['MAIN_DANCER', 'MAIN_VOCALIST'],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEstFUh5FQU40RKe',\n  //     },\n  //     '-LZJFEsxjzWTx-rET1xE': {\n  //       age: 34,\n  //       birthdate: 19840402,\n  //       colorId: 'col000001',\n  //       color: {\n  //         b: 60,\n  //         count: 13,\n  //         g: 31,\n  //         hex: '#D01f3C',\n  //         name: 'red',\n  //         number: 1,\n  //         r: 208,\n  //         id: 'col000001',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'DE',\n  //       name: 'Deby',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: [\n  //         'CENTER',\n  //         'LEADER',\n  //         'LEAD_DANCER',\n  //         'LEAD_VOCALIST',\n  //         'MAIN_DANCER',\n  //         'MAIN_RAPPER',\n  //       ],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEsxjzWTx-rET1xE',\n  //     },\n  //     '-LZJFEt1kQzvszYTLrJY': {\n  //       age: 34,\n  //       birthdate: 19840404,\n  //       colorId: 'col000012',\n  //       color: {\n  //         b: 23,\n  //         count: 16,\n  //         g: 184,\n  //         hex: '#7FB817',\n  //         name: 'green',\n  //         number: 12,\n  //         r: 127,\n  //         id: 'col000012',\n  //       },\n  //       createdBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       gender: 'FEMALE',\n  //       initials: 'MK',\n  //       name: 'Mika',\n  //       modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //       nationality: 'BRAZILIAN',\n  //       positions: ['LEAD_RAPPER', 'VOCALIST'],\n  //       private: false,\n  //       referenceArtist: 'Banda Vyrus',\n  //       id: '-LZJFEt1kQzvszYTLrJY',\n  //     },\n  //   },\n  //   modifiedBy: 'hbFlRswbZkepQfaONzoyB6EuJSA2',\n  //   name: 'OT6',\n  //   official: true,\n  //   private: false,\n  //   subUnit: false,\n  //   songsDict: {\n  //     '-L_6Dqn4qpx3aru3dSve': '-L_kf2xp4WghvAmkITWa',\n  //     '-La4Lg41emt8zrteENSk': '-La4OusOW1rBOCfksei4',\n  //     '-La4R2Z9hcKnQCM-KQK_': '-La4TN-3MBxB2pc9DnHC',\n  //     '-LaN6osi2gjH03HexnkI': '-LaNA1mVtkUuv5WWBTce',\n  //     '-LawlFAODfAnYrR_TFJd': '-LawtZuumBwhKnO5IZrw',\n  //     '-LbAyzTscIav2rIA1U9n': '-LbB0YsN-yp_CnYjbSEM',\n  //     '-Lbv8GTt4f2SIZVCnPv_': '-LbvCfghH5BvHJx_KkhA',\n  //     '-L_4OOhzdx5L1qgyuyoU': '-Lc9pdm-AHCrt-goKLWq',\n  //     '-L_6KEydsvwa3ckYe4MS': '-LcFaFuxAwuy4CYQSE8X',\n  //     '-LcKAsyX-LPOQT-ikzLS': '-LcKCpoX-Pj3dQWvGl21',\n  //     '-LcKFJWdfalTIo72Ek00': '-LcKHZgV-RZ3Ppan8Ium',\n  //   },\n  //   complete: true,\n  //   artistName: 'Banda Vyrus',\n  //   genre: 'Pop',\n  // },\n};\n\nexport default function reducer(prevState = initialState, action) {\n  let newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_DISTRIBUTE:\n      newState = Object.assign({}, initialState);\n      break;\n\n    case types.RESET_DISTRIBUTE_SONG:\n      newState = Object.assign({}, initialState);\n      newState.activeUnit = Object.assign({}, prevState.activeUnit);\n      break;\n\n    case types.SET_ACTIVE_DISTRIBUTION:\n      newState.activeDistribution = action.payload;\n      break;\n\n    case types.SET_ACTIVE_MEMBER_PILL:\n      newState.activeMemberPill = action.payload;\n      break;\n\n    case types.SET_ACTIVE_SONG:\n      newState.activeSong = action.payload;\n      break;\n\n    case types.SET_ACTIVE_UNIT:\n      newState.activeUnit = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTE_VIEW:\n      newState.distributeView = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_CATEGORY:\n      newState.category = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_LINES:\n      newState.distributionLines = action.payload;\n      break;\n\n    case types.SET_DISTRIBUTION_REMAINDER:\n      newState.remainder = action.payload;\n      break;\n\n    case types.SET_RATES:\n      newState.rates = action.payload;\n      break;\n\n    case types.SET_TIMESTAMPS_DICT:\n      newState.timestampsDict = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetDistribute = payload => dispatch =>\n  dispatch({ type: types.RESET_DISTRIBUTE, payload });\nconst resetDistributeSong = payload => dispatch =>\n  dispatch({ type: types.RESET_DISTRIBUTE_SONG, payload });\nconst setActiveDistribution = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_DISTRIBUTION, payload });\nconst setActiveMemberPill = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_MEMBER_PILL, payload });\nconst setActiveSong = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_SONG, payload });\nconst setActiveUnit = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_UNIT, payload });\nconst setDistributeView = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTE_VIEW, payload });\nconst setDistributionCategory = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_CATEGORY, payload });\nconst setDistributionLines = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_LINES, payload });\nconst setDistributionRemainder = payload => dispatch =>\n  dispatch({ type: types.SET_DISTRIBUTION_REMAINDER, payload });\nconst setRates = payload => dispatch =>\n  dispatch({ type: types.SET_RATES, payload });\nconst setTimestampsDict = payload => dispatch =>\n  dispatch({ type: types.SET_TIMESTAMPS_DICT, payload });\n\nexport default {\n  resetDistribute,\n  resetDistributeSong,\n  setActiveDistribution,\n  setActiveMemberPill,\n  setActiveSong,\n  setActiveUnit,\n  setDistributeView,\n  setDistributionCategory,\n  setDistributionLines,\n  setDistributionRemainder,\n  setRates,\n  setTimestampsDict,\n};\n","import _ from 'lodash';\n\nimport actions from './actions';\n\nconst activateSong = id => (dispatch, getState) => {\n  // Reset everything but Unit\n  dispatch(actions.resetDistributeSong({}));\n\n  const activeSong = _.find(getState().db.songs, { id });\n  dispatch(actions.setActiveSong(activeSong));\n\n  // Determine if it's a view or edit\n  const { songsDict } = getState().distribute.activeUnit || {};\n  const distributeView = songsDict[activeSong.id] ? 'view' : 'edit';\n  dispatch(actions.setDistributeView(distributeView));\n\n  // If distribution has been previously done, make connections\n  if (distributeView === 'view') {\n    dispatch({\n      type: 'REQUEST_DISTRIBUTION',\n      distributionId: songsDict[activeSong.id],\n    });\n  }\n};\n\nconst activateUnit = () => (dispatch, getState) => {\n  // Reset everything\n  dispatch(actions.resetDistribute({}));\n\n  const selectedArtist = { ...getState().artists.selectedArtist };\n  const activeUnit = { ...getState().artists.selectedUnit };\n\n  activeUnit.artistName = selectedArtist.name;\n  activeUnit.genre = selectedArtist.genre;\n\n  dispatch(actions.setActiveUnit(activeUnit));\n};\n\nconst prepareSong = () => (dispatch, getState) => {\n  const { activeSong } = getState().distribute;\n  if (activeSong.id) {\n    const distributionString = activeSong.distribution;\n\n    const buildPartData = data => {\n      const [id, startTime, duration] = data.split(':');\n      return {\n        id,\n        startTime: +startTime,\n        duration: +duration,\n        endTime: +startTime + +duration,\n      };\n    };\n\n    // Iterate through lines\n    const distributionLines = distributionString.split('\\n').map(line => {\n      if (line.length < 2) {\n        return [];\n      }\n      const parsedLine = [];\n      let insideBracket = false;\n      let id = '';\n      let content = '';\n\n      for (let i = 0; i < line.length; i++) {\n        const char = line[i];\n        if (char === '[' && i > 0) {\n          content = content[0] === ' ' ? content.substring(1) : content;\n          parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n        }\n\n        if (char === '[') {\n          insideBracket = true;\n          id = '';\n          content = content.trim();\n        } else if (char === ']') {\n          insideBracket = false;\n          content = '';\n        } else if (insideBracket) {\n          id += char;\n        } else {\n          content += char;\n        }\n      }\n      content = content[0] === ' ' ? content.substring(1) : content;\n      parsedLine.push({ ...buildPartData(id), content, memberId: [] });\n\n      return parsedLine;\n    });\n\n    dispatch(actions.setDistributionLines(distributionLines));\n  }\n};\n\nconst activateMemberPill = id => (dispatch, getState) => {\n  const { activeMemberPill } = getState().distribute;\n\n  if (id === activeMemberPill) {\n    dispatch(actions.setActiveMemberPill(''));\n  } else {\n    dispatch(actions.setActiveMemberPill(id));\n  }\n};\n\nconst linkMemberToPart = id => (dispatch, getState) => {\n  const { activeMemberPill } = getState().distribute;\n\n  if (!activeMemberPill) return;\n\n  const distributionLines = [...getState().distribute.distributionLines];\n\n  for (let l = 0; l < distributionLines.length; l++) {\n    const line = distributionLines[l];\n    let found = false;\n    for (let p = 0; p < line.length; p++) {\n      const part = line[p];\n\n      if (part.id === id) {\n        // If it already has the member, remove it\n        if (part.memberId.includes(activeMemberPill)) {\n          part.memberId = part.memberId.filter(m => m !== activeMemberPill);\n        }\n        // If the active pill is NONE, replace it by NONE\n        else if (activeMemberPill === 'NONE') {\n          part.memberId = ['NONE'];\n        }\n        // If there was already a none, only add the new member\n        else if (part.memberId[0] === 'NONE') {\n          part.memberId = [activeMemberPill];\n        }\n        // Any other case, just push the member\n        else {\n          part.memberId.push(activeMemberPill);\n        }\n\n        found = true;\n        break;\n      }\n    }\n    if (found) break;\n  }\n  dispatch(actions.setDistributionLines(distributionLines));\n  dispatch(calculateRates(distributionLines));\n};\n\nconst calculateRates = distributionLines => dispatch => {\n  const rates = {\n    total: 0,\n    remaining: 0,\n    max: 0,\n  };\n\n  for (let l = 0; l < distributionLines.length; l++) {\n    const line = distributionLines[l];\n    for (let p = 0; p < line.length; p++) {\n      const part = line[p];\n      if (part.memberId.length) {\n        for (let m = 0; m < part.memberId.length; m++) {\n          rates.total += part.duration;\n          const mId = part.memberId[m];\n          if (rates[mId] === undefined) {\n            // [duration, absolute percentage, relative percentage]\n            rates[mId] = [0, 0, 0];\n          }\n          rates[mId][0] += part.duration;\n          // Replace max if greater than previous max\n          if (rates[mId][0] > rates.max) [rates.max] = rates[mId];\n        }\n      } else {\n        rates.remaining += part.duration;\n      }\n    }\n  }\n\n  // Calculate percentages\n  Object.keys(rates).forEach(key => {\n    if (key === 'max' || key === 'remaining' || key === 'total') return;\n    const rate = rates[key];\n    // Add absolute percentage\n    rate[1] = Number(((100 * rate[0]) / rates.total).toFixed(1));\n    // Add relative percentage (bar width)\n    rate[2] = Math.round((100 * rate[0]) / rates.max);\n  });\n\n  dispatch(actions.setRates(rates));\n  dispatch(calculateRemainder(rates));\n};\n\nconst calculateRemainder = rates => dispatch => {\n  let remainder = 0;\n\n  if (rates.remaining === 0 && rates.total === 0) {\n    remainder = 100;\n  } else if (rates.remaining > 0 && rates.total > 0) {\n    remainder = Math.round(\n      (100 * rates.remaining) / (rates.total + rates.remaining)\n    );\n  } else if (rates.remaining === 0 && rates.total > 0) {\n    remainder = 0;\n  }\n  dispatch(actions.setDistributionRemainder(remainder));\n};\n\nconst handleDistributionCategory = event => async dispatch => {\n  const { value } = event.target;\n  dispatch(actions.setDistributionCategory(value));\n};\n\nconst handleSaveDistribution = () => async (dispatch, getState) => {\n  const { rates } = getState().distribute;\n  const ratesToSave = {};\n  Object.entries(rates).forEach(entry => {\n    if (Array.isArray(entry[1])) {\n      ratesToSave[entry[0]] = entry[1][0]; // eslint-disable-line\n    } else {\n      ratesToSave[entry[0]] = entry[1]; // eslint-disable-line\n    }\n  });\n\n  const body = {\n    category: getState().distribute.category,\n    songId: getState().distribute.activeSong.id,\n    rates: ratesToSave,\n    relationships: '',\n    features: [],\n    unitId: getState().distribute.activeUnit.id,\n    distributionId: getState().distribute.activeDistribution.id || null,\n  };\n\n  // Build relationships\n  const relationships = {};\n  getState().distribute.distributionLines.forEach(line =>\n    line.forEach(part => {\n      relationships[part.id] = part.memberId;\n    })\n  );\n\n  body.relationships = JSON.stringify(relationships);\n\n  // TO-DO: add featuring artists\n\n  await dispatch({ type: 'SEND_DISTRIBUTION', body });\n};\n\nconst handleDistributeView = label => (dispatch, getState) => {\n  if (label !== getState().distribute.distributeView) {\n    dispatch(actions.setDistributeView(label));\n\n    if (label === 'view') {\n      // parse timestamps\n      dispatch(parseTimestamps());\n    }\n  }\n};\n\nconst mergeActiveDistribution = () => (dispatch, getState) => {\n  const distributionRelationships = getState().distribute.activeDistribution\n    .relationships;\n  const distributionLines = _.cloneDeep(\n    getState().distribute.distributionLines\n  );\n\n  distributionLines.forEach(distributionLine => {\n    distributionLine.forEach(distributionPart => {\n      distributionPart.memberId = [\n        ...distributionRelationships[distributionPart.id],\n      ];\n    });\n  });\n\n  dispatch(actions.setDistributionLines(distributionLines));\n\n  dispatch(calculateRates(distributionLines));\n\n  dispatch(parseTimestamps(distributionLines));\n};\n\nconst parseTimestamps = dLines => (dispatch, getState) => {\n  const distributionLines = dLines || getState().distribute.distributionLines;\n\n  const membersDict = {};\n  const timestampDict = {};\n\n  distributionLines.forEach(distributionLine => {\n    distributionLine.forEach(distributionPart => {\n      const startTime = Math.floor(distributionPart.startTime);\n      const endTime = Math.ceil(distributionPart.endTime);\n\n      // Define start objects if they don't exist\n      if (timestampDict[startTime] === undefined) {\n        timestampDict[startTime] = { start: {} };\n      } else if (timestampDict[startTime].start === undefined) {\n        timestampDict[startTime].start = {};\n      }\n\n      // Add members to start\n      distributionPart.memberId.forEach(memberId => {\n        timestampDict[startTime].start[memberId] = true;\n      });\n\n      // Define stop objects if they don't exist\n      if (timestampDict[endTime] === undefined) {\n        timestampDict[endTime] = { stop: {} };\n      } else if (timestampDict[endTime].stop === undefined) {\n        timestampDict[endTime].stop = {};\n      }\n\n      // Add members to stop\n      distributionPart.memberId.forEach(memberId => {\n        if (membersDict[memberId] === undefined) {\n          membersDict[memberId] = 0;\n        }\n        membersDict[memberId] += distributionPart.duration;\n        timestampDict[endTime].stop[memberId] = membersDict[memberId];\n      });\n    });\n  });\n\n  dispatch(actions.setTimestampsDict(timestampDict));\n};\n\nexport default {\n  activateMemberPill,\n  activateSong,\n  activateUnit,\n  handleDistributeView,\n  handleDistributionCategory,\n  handleSaveDistribution,\n  linkMemberToPart,\n  mergeActiveDistribution,\n  prepareSong,\n};\n","import distributeReducer from './reducers';\n\nexport { default as distributeOperations } from './operations';\nexport { default as distributeTypes } from './types';\nexport default distributeReducer;\n","const RESET_SYNC = 'RESET_SYNC';\nconst SET_ACTIVE_LINE = 'SET_ACTIVE_LINE';\nconst SET_ACTIVE_PILL = 'SET_ACTIVE_PILL';\nconst SET_ARE_LYRICS_LOCKED = 'SET_ARE_LYRICS_LOCKED';\nconst SET_FINAL_LYRICS = 'SET_FINAL_LYRICS';\nconst SET_INFO = 'SET_INFO';\nconst SET_IS_DISTRIBUTION_COMPLETE = 'SET_IS_DISTRIBUTION_COMPLETE';\nconst SET_LINK_SEQUENCE_MODE = 'SET_LINK_SEQUENCE_MODE';\nconst SET_LAST_ID_NUM = 'SET_LAST_ID_NUM';\nconst SET_LYRICS = 'SET_LYRICS';\nconst SET_PILLS = 'SET_PILLS';\nconst SET_QUEUE = 'SET_QUEUE';\nconst SET_STEP = 'SET_STEP';\nconst SET_STEPS = 'SET_STEPS';\nconst SET_SYNC_DISTRIBUTION_LINES = 'SET_SYNC_DISTRIBUTION_LINES';\nconst SET_SYNC_STATS = 'SET_SYNC_STATS';\nconst SET_TIMESTAMPS = 'SET_TIMESTAMPS';\nconst SET_VIDEO_ID = 'SET_VIDEO_ID';\n\nexport default {\n  RESET_SYNC,\n  SET_ACTIVE_LINE,\n  SET_ACTIVE_PILL,\n  SET_ARE_LYRICS_LOCKED,\n  SET_FINAL_LYRICS,\n  SET_INFO,\n  SET_IS_DISTRIBUTION_COMPLETE,\n  SET_LINK_SEQUENCE_MODE,\n  SET_LAST_ID_NUM,\n  SET_LYRICS,\n  SET_PILLS,\n  SET_QUEUE,\n  SET_STEP,\n  SET_STEPS,\n  SET_SYNC_DISTRIBUTION_LINES,\n  SET_SYNC_STATS,\n  SET_TIMESTAMPS,\n  SET_VIDEO_ID,\n};\n","import types from './types';\n\nconst initialState = {\n  activeLine: null,\n  activePill: null,\n  areLyricsLocked: false,\n  distributionLines: [],\n  finalLyrics: '',\n  info: {},\n  isDistributionComplete: false,\n  linkSequenceMode: false,\n  lastIdNum: 0,\n  lyrics: '',\n  pills: {},\n  queue: {},\n  step: 1,\n  steps: {\n    1: {\n      locked: false,\n      expanded: true,\n    },\n    2: {\n      locked: true,\n      expanded: false,\n    },\n    3: {\n      locked: true,\n      expanded: false,\n    },\n    4: {\n      locked: true,\n      expanded: false,\n    },\n    5: {\n      locked: true,\n      expanded: false,\n    },\n  },\n  stats: {\n    lines: 0,\n    pills: 0,\n    linked: 0,\n  },\n  timestamps: {},\n  videoId: '',\n};\n\nexport default function reducer(prevState = initialState, action) {\n  let newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.RESET_SYNC:\n      newState = Object.assign({}, initialState);\n      break;\n\n    case types.SET_ACTIVE_LINE:\n      newState.activeLine = action.payload;\n      break;\n\n    case types.SET_ACTIVE_PILL:\n      newState.activePill = action.payload;\n      break;\n\n    case types.SET_ARE_LYRICS_LOCKED:\n      newState.areLyricsLocked = action.payload;\n      break;\n\n    case types.SET_FINAL_LYRICS:\n      newState.finalLyrics = action.payload;\n      break;\n\n    case types.SET_INFO:\n      newState.info = action.payload;\n      break;\n\n    case types.SET_IS_DISTRIBUTION_COMPLETE:\n      newState.isDistributionComplete = action.payload;\n      break;\n\n    case types.SET_LINK_SEQUENCE_MODE:\n      newState.linkSequenceMode = action.payload;\n      break;\n\n    case types.SET_LAST_ID_NUM:\n      newState.lastIdNum = action.payload;\n      break;\n\n    case types.SET_LYRICS:\n      newState.lyrics = action.payload;\n      break;\n\n    case types.SET_PILLS:\n      newState.pills = action.payload;\n      break;\n\n    case types.SET_QUEUE:\n      newState.queue = action.payload;\n      break;\n\n    case types.SET_STEP:\n      newState.step = action.payload;\n      break;\n\n    case types.SET_STEPS:\n      newState.steps = action.payload;\n      break;\n\n    case types.SET_SYNC_DISTRIBUTION_LINES:\n      newState.distributionLines = action.payload;\n      break;\n\n    case types.SET_SYNC_STATS:\n      newState.stats = action.payload;\n      break;\n\n    case types.SET_TIMESTAMPS:\n      newState.timestamps = action.payload;\n      break;\n\n    case types.SET_VIDEO_ID:\n      newState.videoId = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst resetSync = payload => dispatch =>\n  dispatch({ type: types.RESET_SYNC, payload });\nconst setActiveLine = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_LINE, payload });\nconst setActivePill = payload => dispatch =>\n  dispatch({ type: types.SET_ACTIVE_PILL, payload });\nconst setAreLyricsLocked = payload => dispatch =>\n  dispatch({ type: types.SET_ARE_LYRICS_LOCKED, payload });\nconst setFinalLyrics = payload => dispatch =>\n  dispatch({ type: types.SET_FINAL_LYRICS, payload });\nconst setInfo = payload => dispatch =>\n  dispatch({ type: types.SET_INFO, payload });\nconst setIsDistributionComplete = payload => dispatch =>\n  dispatch({ type: types.SET_IS_DISTRIBUTION_COMPLETE, payload });\nconst setLinkSequenceMode = payload => dispatch =>\n  dispatch({ type: types.SET_LINK_SEQUENCE_MODE, payload });\nconst setLastIdNum = payload => dispatch =>\n  dispatch({ type: types.SET_LAST_ID_NUM, payload });\nconst setLyrics = payload => dispatch =>\n  dispatch({ type: types.SET_LYRICS, payload });\nconst setPills = payload => dispatch =>\n  dispatch({ type: types.SET_PILLS, payload });\nconst setQueue = payload => dispatch =>\n  dispatch({ type: types.SET_QUEUE, payload });\nconst setStep = payload => dispatch =>\n  dispatch({ type: types.SET_STEP, payload });\nconst setSteps = payload => dispatch =>\n  dispatch({ type: types.SET_STEPS, payload });\nconst setSyncDistributionLines = payload => dispatch =>\n  dispatch({ type: types.SET_SYNC_DISTRIBUTION_LINES, payload });\nconst setSyncStats = payload => dispatch =>\n  dispatch({ type: types.SET_SYNC_STATS, payload });\nconst setTimestamps = payload => dispatch =>\n  dispatch({ type: types.SET_TIMESTAMPS, payload });\nconst setVideoId = payload => dispatch =>\n  dispatch({ type: types.SET_VIDEO_ID, payload });\n\nexport default {\n  resetSync,\n  setActiveLine,\n  setActivePill,\n  setAreLyricsLocked,\n  setFinalLyrics,\n  setInfo,\n  setIsDistributionComplete,\n  setLinkSequenceMode,\n  setLastIdNum,\n  setLyrics,\n  setPills,\n  setQueue,\n  setStep,\n  setSteps,\n  setSyncDistributionLines,\n  setSyncStats,\n  setTimestamps,\n  setVideoId,\n};\n","import _ from 'lodash';\n\nimport actions from './actions';\n\nimport constants from '../../utils/constants';\n\nconst handleVideoId = e => dispatch => {\n  const { value } = e.target;\n\n  let videoId = '';\n  // TO-DO: Check if value is one of the placeholders and assign correct video id\n\n  // Parse youtube link\n  if (value.startsWith('https://youtu.be/')) {\n    videoId = value.substring(17);\n  } else if (value && !videoId) {\n    const youtubeLink = value.split('v=');\n    if (youtubeLink.length === 1) {\n      [videoId] = youtubeLink;\n    } else if (youtubeLink.length === 2) {\n      const youtubeLinkQuery = youtubeLink[1].split('&');\n      [videoId] = youtubeLinkQuery;\n    }\n  }\n\n  dispatch(actions.setVideoId(videoId));\n};\n\nconst handleFormInfo = (formState, originalArtist) => (dispatch, getState) => {\n  // Original Artist is required\n  if (!originalArtist) return;\n\n  const info = {};\n\n  const { artistsTypeaheadDict } = getState().db;\n  if (artistsTypeaheadDict[originalArtist]) {\n    info.artistId = artistsTypeaheadDict[originalArtist];\n    info.originalArtist = originalArtist;\n  } else {\n    info.originalArtist = originalArtist;\n  }\n\n  if (Object.values(formState.values)) {\n    info.album = formState.values.album;\n    info.groupSize = formState.values.groupSize;\n    info.single = formState.values.single || false;\n    info.title = formState.values.title;\n    info.private = formState.values.private;\n  }\n\n  info.videoId = getState().sync.videoId;\n  dispatch(actions.setInfo(info));\n  dispatch(unlockNextStep());\n};\n\nconst unlockNextStep = () => (dispatch, getState) => {\n  let { step } = getState().sync;\n  const steps = _.cloneDeep(getState().sync.steps);\n\n  steps[step].locked = true;\n  steps[step].expanded = false;\n  steps[step + 1].locked = false;\n  steps[step + 1].expanded = true;\n\n  step++;\n\n  if (step === 5) {\n    dispatch(finalizeLyrics());\n  }\n  dispatch(actions.setStep(step));\n  dispatch(actions.setSteps(steps));\n};\n\nconst unlockSpecificStep = num => (dispatch, getState) => {\n  if (!num) return;\n\n  let { step } = getState().sync;\n  const steps = _.cloneDeep(getState().sync.steps);\n\n  Object.values(steps).forEach(st => {\n    st.locked = true;\n    st.expanded = false;\n  });\n\n  steps[+num].locked = false;\n  steps[+num].expanded = true;\n\n  step = +num;\n\n  dispatch(actions.setStep(step));\n  dispatch(actions.setSteps(steps));\n\n  if (+num === 3) {\n    dispatch(actions.setAreLyricsLocked(false));\n  }\n};\n\n// Adds []s in the beginning of every line and remove diplicated spaces\nconst prepareLines = (clearBrackets = false) => (dispatch, getState) => {\n  const { lyrics } = getState().sync;\n\n  let preparedLyrics = lyrics;\n\n  if (clearBrackets) {\n    preparedLyrics = preparedLyrics.replace(/\\[(.*?)\\]/g, '[]');\n  }\n\n  preparedLyrics = preparedLyrics\n    .split('\\n')\n    .map(line => {\n      if (line.length > 0 && !line.startsWith('[')) {\n        return `[] ${line}`;\n      }\n      return line;\n    })\n    .join('\\n')\n    .replace(/ +(?= )/g, '');\n\n  dispatch(actions.setLyrics(preparedLyrics));\n};\n\n// Verify lyrics and add ids to all []s\nconst prepareLyrics = () => (dispatch, getState) => {\n  // Add spaces between ending and opening braces\n  // Remove spaces between opening and ending braces\n  let lyrics = getState().sync.lyrics.replace(/\\]\\(|\\)\\[|\\[ \\]|\\( \\)/g, s => {\n    if (s === '](') return '] (';\n    if (s === ')[') return ') [';\n    if (s === '( )') return '()';\n    if (s === '[ ]') return '[]';\n    return s;\n  });\n  // Add spaces between characters and opening braces\n  // Add spaces between ending braces and characters\n  lyrics = lyrics.replace(\n    /[A-Za-z0-9][(]|[A-Za-z0-9][[]|[)][A-Za-z0-9]|[\\]][A-Za-z0-9]/g,\n    s => `${s[0]} ${s[1]}`\n  );\n  // Add brackets before any parentheses\n  lyrics = lyrics.replace(\n    /[A-Za-z0-9?!][ ][(]|[)][ ][(]|[)][ ][A-Za-z0-9]/g,\n    s => `${s[0]}${s[1]}[] ${s[2]}`\n  );\n  // Add a unique idNum inside each []\n  let idNum = getState().sync.lastIdNum;\n  lyrics = lyrics.replace(/\\[\\]/g, () => {\n    idNum++;\n    return `[${idNum}]`;\n  });\n  dispatch(actions.setLastIdNum(idNum));\n  dispatch(actions.setLyrics(lyrics));\n  dispatch(actions.setAreLyricsLocked(true));\n};\n\nconst lockLyrics = (locked = true) => (dispatch, getState) => {\n  dispatch(prepareLines());\n  dispatch(prepareLyrics());\n  dispatch(actions.setAreLyricsLocked(locked));\n  const { lyrics } = getState().sync;\n  dispatch(parseLyricsToObject(lyrics));\n};\n\nconst handleLyricsEdit = e => dispatch => {\n  let text = '';\n  if (typeof e === 'string') {\n    text = e;\n  } else {\n    text = e.target.value || '';\n  }\n  dispatch(actions.setLyrics(text.replace(/ +(?= )/g, '')));\n  dispatch(actions.setAreLyricsLocked(false));\n};\n\nconst parseLyricsToObject = lyrics => (dispatch, getState) => {\n  let lineCount = 0;\n  const lines = lyrics.split('\\n').map(line => {\n    if (line.length < 2) {\n      return [];\n    }\n    const parsedLine = [];\n    let insideBracket = false;\n    let id = '';\n    let content = '';\n\n    for (let i = 0; i < line.length; i++) {\n      const char = line[i];\n      if (char === '[' && i > 0) {\n        content = content[0] === ' ' ? content.substring(1) : content;\n        parsedLine.push({ id, content, link: null });\n      }\n\n      if (char === '[') {\n        insideBracket = true;\n        id = '';\n        content = content.trim();\n        lineCount++;\n      } else if (char === ']') {\n        insideBracket = false;\n        content = '';\n      } else if (insideBracket) {\n        id += char;\n      } else {\n        content += char;\n      }\n    }\n    content = content[0] === ' ' ? content.substring(1) : content;\n    parsedLine.push({ id, content, link: null, color: null });\n\n    return parsedLine;\n  });\n  dispatch(actions.setSyncDistributionLines(lines));\n\n  const stats = { ...getState().sync.stats };\n  stats.lines = lineCount;\n\n  dispatch(actions.setSyncStats(stats));\n\n  setTimeout(() => {\n    dispatch(unlockNextStep());\n  }, 1000);\n};\n\nconst handleSyncKeydown = (event, player) => dispatch => {\n  // Only trigger if it is an allowed key and the video is playing\n  const { key } = event;\n  if (constants.SYNC_KEY_LIST[key] && player && player.getPlayerState() === 1) {\n    const timestamp = player.getCurrentTime();\n    dispatch(enqueueCapture(key, timestamp));\n  }\n};\n\nconst handleSyncKeyup = (event, player) => dispatch => {\n  const { key } = event;\n  if (constants.SYNC_KEY_LIST[key]) {\n    const timestamp = player.getCurrentTime();\n    dispatch(\n      dequeueCapture(key, timestamp, constants.SYNC_KEY_COLOR_LIST[key])\n    );\n  }\n};\n\nconst handleSyncBoxMouseDown = (key, player) => dispatch => {\n  // Only trigger if it is an allowed key and the video is playing\n  if (constants.SYNC_KEY_LIST[key] && player && player.getPlayerState() === 1) {\n    const timestamp = player.getCurrentTime();\n    dispatch(enqueueCapture(key, timestamp));\n  }\n};\n\nconst handleSyncBoxMouseUp = (key, player, color) => dispatch => {\n  if (constants.SYNC_KEY_LIST[key]) {\n    const timestamp = player.getCurrentTime();\n    dispatch(dequeueCapture(key, timestamp, color));\n  }\n};\n\nconst enqueueCapture = (id, timestamp) => (dispatch, getState) => {\n  const queue = Object.assign({}, getState().sync.queue);\n  if (queue[id] === undefined) {\n    queue[id] = timestamp;\n    dispatch(actions.setQueue(queue));\n  }\n};\n\nlet newPillId = 0;\n\nconst dequeueCapture = (id, timestamp, color) => (dispatch, getState) => {\n  const queue = Object.assign({}, getState().sync.queue);\n\n  if (queue[id]) {\n    const pills = Object.assign({}, getState().sync.pills);\n    const startTime = queue[id];\n    const duration = timestamp - startTime;\n    delete queue[id];\n\n    newPillId++;\n    pills[newPillId] = {\n      pillId: newPillId,\n      timestamp: startTime,\n      duration,\n      link: null,\n      key: id,\n      color,\n    };\n\n    dispatch(actions.setQueue(queue));\n    dispatch(actions.setPills(pills));\n\n    const stats = { ...getState().sync.stats };\n    stats.pills = Object.keys(pills).length;\n    dispatch(actions.setSyncStats(stats));\n  }\n};\n\nconst connectSyncLine = id => (dispatch, getState) => {\n  const { activeLine, activePill } = getState().sync;\n  if (activeLine === id) {\n    dispatch(actions.setActiveLine(null));\n  } else if (activePill) {\n    dispatch(\n      connect(\n        id,\n        activePill\n      )\n    );\n  } else {\n    dispatch(actions.setActiveLine(id));\n  }\n};\n\nconst connectSyncPill = id => (dispatch, getState) => {\n  const { activeLine, activePill } = getState().sync;\n  if (activePill === id) {\n    dispatch(actions.setActivePill(null));\n  } else if (activeLine) {\n    dispatch(\n      connect(\n        activeLine,\n        id\n      )\n    );\n  } else {\n    dispatch(actions.setActivePill(id));\n  }\n};\n\nlet linksBackUp = {};\nconst connect = (lineId, pillId) => (dispatch, getState) => {\n  let lines = [...getState().sync.distributionLines];\n  let pills = Object.assign({}, getState().sync.pills);\n\n  // Nullify any line with pillId as a link\n  lines = nullifyLine(lines, pillId, lineId);\n  // Nullify any pill with lineId as a link\n  pills = nullifyPill(pills, lineId);\n  // Link each other\n  function modifyPart(collection, searchId, id, key, newValue, color) {\n    return collection.map(l =>\n      l.map(part => {\n        if (+part[searchId] === +id) {\n          part[key] = newValue;\n          part.color = color;\n        }\n        return part;\n      })\n    );\n  }\n\n  pills[pillId].link = lineId;\n  modifyPart(lines, 'id', lineId, 'link', pillId, pills[pillId].color);\n\n  // Add to the linksBackUp for when user needs to edit lyrics\n  linksBackUp[lineId] = pillId;\n\n  dispatch(actions.setActiveLine(null));\n  dispatch(actions.setActivePill(null));\n\n  dispatch(actions.setPills(pills));\n  dispatch(actions.setSyncDistributionLines(lines));\n\n  // Check if distribution is complete\n  function isDistributionComplete(collection) {\n    let isComplete = true;\n\n    collection.forEach(l =>\n      l.forEach(part => {\n        if (part.link === null) isComplete = false;\n      })\n    );\n    return isComplete;\n  }\n\n  const stats = { ...getState().sync.stats };\n  stats.linked = Object.keys(linksBackUp).length;\n  dispatch(actions.setSyncStats(stats));\n\n  dispatch(actions.setIsDistributionComplete(isDistributionComplete(lines)));\n};\n\nconst deleteSyncPill = () => (dispatch, getState) => {\n  const { activePill } = getState().sync;\n\n  if (activePill) {\n    const pills = Object.assign({}, getState().sync.pills);\n    let lines = [...getState().sync.distributionLines];\n\n    // Stop linkSequencer\n    clearInterval(intervalId);\n\n    // Nullify any line with activePill as a link\n    lines = nullifyLine(lines, activePill);\n\n    delete pills[activePill];\n\n    dispatch(actions.setActivePill(null));\n    dispatch(actions.setPills(pills));\n    dispatch(actions.setSyncDistributionLines(lines));\n    dispatch(actions.setLinkSequenceMode(false));\n\n    const stats = { ...getState().sync.stats };\n    stats.linked = Object.keys(linksBackUp).length;\n    dispatch(actions.setSyncStats(stats));\n  }\n};\n\nconst nullifyLine = (collection, item, partId = null) => {\n  collection.forEach(l =>\n    l.forEach(part => {\n      if (+part.link === +item) {\n        part.link = null;\n        part.color = null;\n      }\n      if (+linksBackUp[part.id] === +item) {\n        delete linksBackUp[part.id];\n      }\n    })\n  );\n\n  // Also remove from backup if part was provided\n  if (partId) {\n    delete linksBackUp[partId];\n  }\n\n  return collection;\n};\n\nconst nullifyPill = (collection, item) => {\n  Object.keys(collection).forEach(k => {\n    const pill = collection[k];\n    if (+pill.link === +item) pill.link = null;\n  });\n  return collection;\n};\n\nconst finalizeLyrics = () => (dispatch, getState) => {\n  const lines = [...getState().sync.distributionLines];\n  const pills = Object.assign({}, getState().sync.pills);\n\n  const newLines = lines.map(line =>\n    line.map(part => {\n      part.startTime = +pills[part.link].timestamp.toFixed(2);\n      part.duration = +pills[part.link].duration.toFixed(2);\n      part.endTime = part.startTime + part.duration;\n      return part;\n    })\n  );\n\n  // Build string\n  let finalId = 1;\n  let finalLyrics = '';\n  const timepstamps = {};\n\n  newLines.forEach(line => {\n    if (line.length > 0) {\n      line.forEach(part => {\n        // Join parts\n        const bracket = `[${finalId}:${part.startTime}:${part.duration}] `;\n        finalLyrics += `${bracket} ${part.content}`;\n        finalId++;\n        // Create karaoke-line object\n        const second = Math.round(part.startTime);\n        if (timepstamps[second] === undefined) timepstamps[second] = [];\n        timepstamps[second].push({\n          partId: `part-${part.id}`,\n          duration: part.duration,\n          endTime: part.endTime,\n          size: 0,\n          totalSize: part.content.length,\n          content: part.content,\n        });\n      });\n    }\n    finalLyrics += '\\n';\n  });\n  finalLyrics = finalLyrics.replace('  ', ' ');\n  dispatch(actions.setFinalLyrics(finalLyrics));\n  dispatch(actions.setTimestamps(timepstamps));\n};\n\nconst resetPillLinks = () => (dispatch, getState) => {\n  const pills = { ...getState().sync.pills };\n  const distributionLines = [...getState().sync.distributionLines];\n\n  // Stop linkSequencer\n  clearInterval(intervalId);\n\n  Object.keys(pills).forEach(k => {\n    const pill = pills[k];\n    pill.link = null;\n  });\n\n  distributionLines.forEach(line => line.forEach(part => (part.link = null)));\n\n  dispatch(actions.setPills(pills));\n};\n\nlet intervalId = null;\n\nconst linkPillsSequence = () => async (dispatch, getState) => {\n  let isOn = getState().sync.linkSequenceMode;\n\n  if (isOn) {\n    dispatch(actions.setLinkSequenceMode(false));\n    clearInterval(intervalId);\n    dispatch(actions.setActivePill(null));\n  } else {\n    dispatch(actions.setLinkSequenceMode(true));\n    let { pills } = getState().sync;\n    const pillList = Object.keys(pills);\n\n    const findNextPill = () => pillList.find(el => pills[el].link === null);\n\n    let nextActive = findNextPill();\n\n    // While is on mode is turned on, perform every one second\n    intervalId = setInterval(() => {\n      pills = getState().sync.pills; // eslint-disable-line\n      isOn = getState().sync.linkSequenceMode;\n\n      const { activePill } = getState().sync;\n      if (activePill === null) {\n        nextActive = findNextPill();\n        dispatch(actions.setActivePill(nextActive));\n      }\n      if (nextActive === undefined) {\n        clearInterval(intervalId);\n        dispatch(actions.setLinkSequenceMode(false));\n        dispatch(actions.setActivePill(null));\n      }\n    }, 250);\n  }\n};\n\nconst saveSync = () => async (dispatch, getState) => {\n  const { info, finalLyrics } = getState().sync;\n  const body = {\n    album: info.album || null,\n    distribution: finalLyrics,\n    groupSize: info.groupSize,\n    originalArtist: info.originalArtist,\n    originalArtistId: info.artistId || null,\n    private: info.private || false,\n    single: info.single || false,\n    title: info.title,\n    videoId: info.videoId,\n  };\n\n  await dispatch({ type: 'SEND_SONG', body });\n\n  dispatch(actions.setStep(6));\n};\n\nconst handleResetSync = () => dispatch => {\n  newPillId = 0;\n  linksBackUp = {};\n  dispatch(actions.resetSync({}));\n};\n\nexport default {\n  connectSyncLine,\n  connectSyncPill,\n  deleteSyncPill,\n  handleFormInfo,\n  handleLyricsEdit,\n  handleResetSync,\n  handleSyncBoxMouseDown,\n  handleSyncBoxMouseUp,\n  handleSyncKeydown,\n  handleSyncKeyup,\n  handleVideoId,\n  linkPillsSequence,\n  lockLyrics,\n  prepareLines,\n  resetPillLinks,\n  saveSync,\n  unlockNextStep,\n  unlockSpecificStep,\n};\n","import syncReducer from './reducers';\n\nexport { default as syncOperations } from './operations';\nexport { default as syncTypes } from './types';\nexport default syncReducer;\n","const SET_TEST_1 = 'SET_TEST_1';\nconst SET_TEST_2 = 'SET_TEST_2';\nconst SET_TEST_3 = 'SET_TEST_3';\nconst SET_TEST_4 = 'SET_TEST_4';\nconst SET_TEST_5 = 'SET_TEST_5';\n\nexport default {\n  SET_TEST_1,\n  SET_TEST_2,\n  SET_TEST_3,\n  SET_TEST_4,\n  SET_TEST_5,\n};\n","import types from './types';\n\nconst initialState = {\n  test1: '',\n  test2: 0,\n  test3: true,\n  test4: [],\n  test5: {},\n};\n\nexport default function reducer(prevState = initialState, action) {\n  const newState = Object.assign({}, prevState);\n\n  switch (action.type) {\n    case types.SET_TEST_1:\n      newState.test1 = action.payload;\n      break;\n\n    case types.SET_TEST_2:\n      newState.test2 = action.payload;\n      break;\n\n    case types.SET_TEST_3:\n      newState.test3 = action.payload;\n      break;\n\n    case types.SET_TEST_4:\n      newState.test4 = action.payload;\n      break;\n\n    case types.SET_TEST_5:\n      newState.test5 = action.payload;\n      break;\n\n    default:\n      return prevState;\n  }\n\n  return newState;\n}\n","import types from './types';\n\nconst setTest1 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_1, payload });\nconst setTest2 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_2, payload });\nconst setTest3 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_3, payload });\nconst setTest4 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_4, payload });\nconst setTest5 = payload => dispatch =>\n  dispatch({ type: types.SET_TEST_5, payload });\n\nexport default {\n  setTest1,\n  setTest2,\n  setTest3,\n  setTest4,\n  setTest5,\n};\n","import actions from './actions';\n\nconst testFunction1 = () => dispatch => {\n  console.log('testFunction1');\n\n  dispatch(actions.setTest1('Ran testFunction1'));\n};\n\nconst testFunction2 = () => dispatch => {\n  console.log('testFunction2');\n\n  dispatch(actions.setTest1('Ran testFunction2'));\n};\n\nconst testFunction3 = () => dispatch => {\n  console.log('testFunction3');\n\n  dispatch(actions.setTest1('Ran testFunction3'));\n};\n\nconst testFunction4 = () => dispatch => {\n  console.log('testFunction4');\n\n  dispatch(actions.setTest1('Ran testFunction4'));\n};\n\nconst testFunction5 = () => dispatch => {\n  console.log('testFunction5');\n\n  dispatch(actions.setTest1('Ran testFunction5'));\n};\n\nexport default {\n  testFunction1,\n  testFunction2,\n  testFunction3,\n  testFunction4,\n  testFunction5,\n};\n","import tempReducer from './reducers';\n\nexport { default as tempOperations } from './operations';\nexport { default as tempTypes } from './types';\nexport default tempReducer;\n","import { combineReducers } from 'redux';\n\nimport { reducer as toastr } from 'react-redux-toastr';\n\nimport app, { appTypes } from './app';\nimport admin, { adminTypes } from './admin';\nimport artists, { artistsTypes } from './artists';\nimport auth, { authTypes } from './auth';\nimport db, { dbTypes } from './db';\nimport distribute, { distributeTypes } from './distribute';\nimport sync, { syncTypes } from './sync';\nimport temp, { tempTypes } from './temp';\n\nconst rootReducer = combineReducers({\n  app,\n  admin,\n  artists,\n  auth,\n  db,\n  distribute,\n  sync,\n  temp,\n  toastr,\n});\n\nexport const types = {\n  ...appTypes,\n  ...adminTypes,\n  ...artistsTypes,\n  ...authTypes,\n  ...dbTypes,\n  ...distributeTypes,\n  ...syncTypes,\n  ...tempTypes,\n};\n\nexport default rootReducer;\n","import HttpStatus from 'http-status-codes';\n\n/**\n * Parses the api path into an object\n * @param {string} path\n * @returns {object} with length of the path, root, referenceId, subPath, and queryParams\n */\nconst breadcrumble = path => {\n  if (!path) {\n    throw new Error(\n      `${HttpStatus.UNAUTHORIZED}: A path is required to make api requests`\n    );\n  }\n\n  if (typeof path !== 'string') {\n    throw new Error(\n      `${HttpStatus.BAD_REQUEST}: Breadcrumble path argument must be a string`\n    );\n  }\n\n  const urlSplit = path.split('?');\n  const fullPath = urlSplit[0].split('/');\n  const queryParams = urlSplit[1] || null;\n  const queryResult = {};\n\n  if (queryParams) {\n    const querySplit = queryParams.split('&');\n    for (let i = 0; i < querySplit.length; i++) {\n      const subQuery = querySplit[i].split('=');\n      if (subQuery.length === 2) {\n        const queryName = subQuery[0];\n        let queryValue = subQuery[1];\n        if (queryValue.includes(',')) {\n          queryValue = queryValue.split(',');\n        }\n        queryResult[queryName] = queryValue;\n      }\n    }\n  }\n\n  return {\n    length: fullPath.length - 1,\n    root: fullPath[1],\n    referenceId: fullPath[2] || null,\n    subPath: fullPath[3] || null,\n    queryParams: Object.keys(queryResult).length > 0 ? queryResult : null,\n  };\n};\n\n/**\n * Builds a string query to be used on search functions for artists\n * @param {object} data\n * @returns {string} a lower cased string with name, otherNames, and members\n */\nconst buildArtistQuery = data => {\n  const { name } = data;\n  const otherNames = data.otherNames || '';\n  const memberList = data.memberList || [];\n  const memberNames = memberList.join(' ');\n  return `${name} ${otherNames} ${memberNames}`.toLowerCase();\n};\n\n/**\n * Build member initials based on their name\n * @param {string} name\n * @returns {string} a two-digit upper cased string\n */\nconst buildMemberInitials = name =>\n  `${name[0]}${name[Math.floor(name.length / 2)]}`.toUpperCase();\n\n/**\n * Builds a string query to be used on search functions for songs\n * @param {Object} data\n * @returns {string} a lowercase string with title, original artists, and album name\n */\nconst buildSongQuery = data => {\n  const { title } = data;\n  const originalArtist = data.originalArtist || '';\n  const album = data.album || '';\n  return `${title} ${originalArtist} ${album}`.toLowerCase();\n};\n\n/**\n * Calculates the age of a member based on their birthday (YYYYMMDD) keeping a cache\n * @param {number} birthday\n * @returns {number} the age of the member\n */\nconst TODAY = process.env.NODE_ENV === 'test' ? 1550000000000 : Date.now();\nconst ageDict = {};\nconst calculateAge = birthday => {\n  if (ageDict[birthday]) return ageDict[birthday];\n\n  const birthdateString = birthday.toString();\n  const birthDate = new Date(\n    +birthdateString.substring(0, 4),\n    +birthdateString.substring(4, 6),\n    +birthdateString.substring(6)\n  );\n\n  const ageDate = new Date(TODAY - birthDate.getTime());\n  ageDict[birthday] = Math.abs(ageDate.getUTCFullYear() - 1970);\n  return ageDict[birthday];\n};\n\n/**\n * Parses genre into ENUM-ready string\n * @param {string} genre\n * @returns {string} genre ENUM-ready\n */\nconst ensureGenreEnum = genre => {\n  const GENRES_TRANSFORM = {\n    CPOP: 'CPOP',\n    JPOP: 'JPOP',\n    KPOP: 'KPOP',\n    OTHER: 'OTHER',\n    POP: 'POP',\n    'C-POP': 'CPOP',\n    'J-POP': 'JPOP',\n    'K-POP': 'KPOP',\n  };\n\n  return GENRES_TRANSFORM[genre.toUpperCase()];\n};\n\n/**\n * Gets a random padded 6-digit color number\n * @param {string} colorId\n * @returns {string} padded 6-digit color number\n */\nconst getAlternativeColor = colorId => {\n  const num = getNumberFromColorId(colorId) + 15;\n  let list = [num, num - 2, num - 1, num + 1, num + 2];\n  list = list.map(item => (item > 30 ? item - 30 : item));\n  return makeSixDigit(list[Math.floor(Math.random() * list.length)]);\n};\n\n/**\n * Extracts the number value of a colorId\n * @param {string} colorId\n * @returns {number} number value of the colorID\n */\nconst getNumberFromColorId = colorId => Number(colorId.split('0000')[1]);\n\n/**\n * Makes a number into a 6 digit stringed-number padded with 0s\n * @param {number} num\n * @returns {string} 6 digit stringed-number padded with 0s\n */\nconst makeSixDigit = num => {\n  const pad = '000000';\n\n  // if it's not a number nor a stringified number\n  if (Number.isNaN(Number(num)) || typeof num === 'boolean') {\n    return pad;\n  }\n  const str = num.toString();\n\n  return pad.substring(0, pad.length - str.length) + str;\n};\n\n/**\n * Merges the array of members from the unit with the list of members generated from each indivitual member\n * @param {array} unitMembersArr\n * @param {array} membersArr\n * @returns {array} a merged member array\n */\nconst mergeMembers = (unitMembersArr, membersArr) => {\n  const positionsDict = {};\n\n  unitMembersArr.forEach(member => {\n    positionsDict[member.memberId] = member.positions;\n  });\n\n  return membersArr.map(member => ({\n    ...member.attributes,\n    positions: positionsDict[member.id],\n  }));\n};\n\n/**\n * Parses the members object from the database with concatenated id:name:position into a array with proper objects\n * @param {object} membersObj\n * @returns {array} array of members objects with memberId, name, and array of positions\n */\nconst parseUnitMembers = membersObj => {\n  const dict = {};\n  Object.keys(membersObj).forEach(key => {\n    const [memberId, memberName, memberPosition] = key.split(':');\n\n    if (dict[memberId] === undefined) {\n      dict[memberId] = {\n        positions: {},\n      };\n    }\n\n    dict[memberId].memberId = memberId;\n    dict[memberId].name = memberName;\n\n    dict[memberId].positions[memberPosition] = true;\n  });\n\n  return Object.keys(dict).map(entry => {\n    const result = {\n      memberId: dict[entry].memberId,\n      name: dict[entry].name,\n      positions: Object.keys(dict[entry].positions),\n    };\n    return result;\n  });\n};\n\n/**\n * Verifies if any of the required fields are present in the data, erroring out if any is missing\n * @param {object} data\n * @param {string} id\n * @param {string} uid\n * @param {array} fields\n * @returns {boolean} true if function runs without errors\n */\nconst verifyRequirements = (data, id, uid, fields) => {\n  const missing = [];\n  fields.forEach(field => {\n    if (field === 'id' && (id === undefined || id === null)) {\n      missing.push('id');\n    } else if (field === 'uid' && (id === undefined || uid === null)) {\n      missing.push('user uid');\n    } else if (field !== 'id' && field !== 'uid' && data[field] === undefined) {\n      missing.push(field);\n    }\n  });\n\n  if (missing.length > 0) {\n    throw new Error(\n      `${HttpStatus.BAD_REQUEST}: Can NOT perform post request for ${id ||\n        null}, missing the following data: ${missing.join(', ')}`\n    );\n  }\n\n  return true;\n};\n\n/**\n * Asyncronous function that delays code when using with async/await\n * @param {number} ms\n * @returns {Promise}\n */\nexport const wait = (ms = 1000) => new Promise((r, j) => setTimeout(r, ms)); // eslint-disable-line\n\nexport default {\n  breadcrumble,\n  buildArtistQuery,\n  buildMemberInitials,\n  buildSongQuery,\n  calculateAge,\n  ensureGenreEnum,\n  getAlternativeColor,\n  getNumberFromColorId,\n  mergeMembers,\n  makeSixDigit,\n  parseUnitMembers,\n  verifyRequirements,\n};\n","import HttpStatus from 'http-status-codes';\n\nexport default class NewResponse {\n  constructor() {\n    this.statusCode = null;\n    this.dataResponse = null;\n    this.errorResponse = null;\n  }\n\n  status(code) {\n    this.statusCode = code;\n  }\n\n  ok() {\n    this.statusCode = HttpStatus.OK;\n  }\n\n  data(dt, code = HttpStatus.OK) {\n    this.statusCode = code;\n    if (dt && dt.id && dt.type && dt.attributes) {\n      this.dataResponse = {\n        id: dt.id,\n        type: dt.type,\n        attributes: dt.attributes,\n      };\n    } else {\n      this.dataResponse = dt;\n    }\n  }\n\n  error(code = HttpStatus.INTERNAL_SERVER_ERROR, message = 'Unknown Error') {\n    this.statusCode = code;\n    this.errorResponse = {\n      code: this.statusCode,\n      message,\n    };\n  }\n\n  resolve() {\n    if (this.errorResponse) {\n      return this.throwError();\n    }\n\n    if (!this.statusCode) {\n      this.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'No status provided by the api'\n      );\n      return this.throwError();\n    }\n\n    if (!this.dataResponse) {\n      this.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'No data provided by the api'\n      );\n      return this.throwError();\n    }\n\n    return {\n      data: this.dataResponse,\n    };\n  }\n\n  throwError() {\n    throw new Error(\n      `${this.errorResponse.code}: ${this.errorResponse.message}`\n    );\n  }\n}\n","export const GENDERS = {\n  FEMALE: 'Female',\n  MALE: 'Male',\n  UNKOWN: 'Unknown',\n};\n\nexport const GENRES = {\n  CPOP: 'C-Pop',\n  JPOP: 'J-Pop',\n  KPOP: 'K-Pop',\n  OTHER: 'Other',\n  POP: 'Pop',\n};\n\nexport const NATIONALITIES = {\n  AMERICAN: 'American',\n  BRAZILIAN: 'Brazilian',\n  BRITISH: 'British',\n  CANADIAN: 'Canadian',\n  CHINESE: 'Chinese',\n  JAPANESE: 'Japanese',\n  KOREAN: 'Korean',\n  OTHER: 'Other',\n  TAIWANESE: 'Taiwanese',\n  THAI: 'Thai',\n  VIETNAMISE: 'Vietnamise',\n};\n\nexport const POSITIONS = {\n  LEADER: 'Leader',\n  MAIN_VOCALIST: 'Main Vocalist',\n  MAIN_RAPPER: 'Main Rapper',\n  MAIN_DANCER: 'Main Dancer',\n  LEAD_VOCALIST: 'Lead Vocalist',\n  LEAD_RAPPER: 'Lead Rapper',\n  LEAD_DANCER: 'Lead Dancer',\n  VOCALIST: 'Vocalist',\n  RAPPER: 'Rapper',\n  DANCER: 'Dancer',\n  CENTER: 'Center',\n  FACE: 'Face of the Group',\n  VISUAL: 'Visual',\n  MAKNAE: 'Maknae',\n};\n\nexport default {\n  GENDERS,\n  GENRES,\n  NATIONALITIES,\n  POSITIONS,\n};\n","/* eslint arrow-body-style: 0 */\nimport _ from 'lodash';\n\nimport utils from './utils';\n\nimport { GENRES } from './enums';\n\nconst UNKNOWN = 'UNKNOWN';\n\nexport const serialize = {\n  artist: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'artist',\n      attributes: {\n        createdBy: data.createdBy || null,\n        genre: GENRES[data.genre] || UNKNOWN,\n        memberIds: data.memberIds || [],\n        memberList: data.memberList || [],\n        modifiedBy: data.modifiedBy || null,\n        name: data.name,\n        otherNames: data.otherNames || '',\n        private: data.private || false,\n        query: data.query || utils.buildArtistQuery(data),\n        units: data.units || [],\n      },\n    };\n  },\n  color: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'color',\n      attributes: {\n        b: data.b,\n        count: data.count || 0,\n        g: data.g,\n        hex: data.hex,\n        name: data.name,\n        number: data.id\n          ? utils.getNumberFromColorId(data.id)\n          : utils.getNumberFromColorId(id),\n        r: data.r,\n      },\n    };\n  },\n  distribution: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'distribution',\n      attributes: {\n        createdBy: data.createdBy || null,\n        category: data.category,\n        features: data.features || [],\n        modifiedBy: data.modifiedBy || null,\n        rates: data.rates,\n        relationships: JSON.parse(data.relationships),\n        songId: data.songId,\n        unitId: data.unitId,\n      },\n    };\n  },\n  member: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'member',\n      attributes: {\n        age: data.birthdate ? utils.calculateAge(data.birthdate) : 0,\n        birthdate: data.birthdate || 0,\n        colorId: data.colorId,\n        color: data.color || null,\n        createdBy: data.createdBy || null,\n        gender: data.gender || UNKNOWN,\n        initials: data.initials || utils.buildMemberInitials(data.name),\n        name: data.name,\n        modifiedBy: data.modifiedBy || null,\n        nationality: data.nationality || UNKNOWN,\n        positions: data.positions || [],\n        private: data.private || false,\n        referenceArtist: data.referenceArtist || UNKNOWN,\n      },\n    };\n  },\n  song: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'song',\n      attributes: {\n        album: data.album || UNKNOWN,\n        createdBy: data.createdBy || null,\n        distribution: data.distribution,\n        groupSize: data.groupSize || 0,\n        modifiedBy: data.modifiedBy || null,\n        originalArtist: data.originalArtist || '',\n        originalArtistId: data.originalArtistId || null,\n        private: data.private || false,\n        query: data.query || utils.buildSongQuery(data),\n        single: data.single || false,\n        title: data.title,\n        videoId: data.videoId || null,\n      },\n    };\n  },\n  unit: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'unit',\n      attributes: {\n        artistId: data.artistId,\n        averages: data.averages || [],\n        createdBy: data.createdBy || null,\n        debutYear: data.debutYear,\n        distributions: data.distributions || [],\n        distributions_legacy: data.distributions_legacy || [],\n        members: data.members ? utils.parseUnitMembers(data.members) : [],\n        modifiedBy: data.modifiedBy || null,\n        name: data.name,\n        official: data.official || false,\n        private: data.private || false,\n        subUnit: data.subUnit || false,\n      },\n    };\n  },\n  user: (data, id) => {\n    data = _.cloneDeep(data);\n    return {\n      id: data.id || id,\n      type: 'user',\n      attributes: {\n        email: data.email,\n        favoriteArtists: data.favoriteArtists || {}, // Oject(Reference(Artist):Boolean)\n        favoriteMembers: data.favoriteMembers || {}, // Oject(Reference(Member):Boolean)\n        biases: data.biases || {}, // Object(Reference(Artist):Reference(Member))\n        isAdmin: data.isAdmin || false,\n        latestUnits: data.latesUnits || [],\n        session: data.session || {},\n        displayName: null, // merged from auth\n        photoURL: null, // merged from auth\n      },\n    };\n  },\n};\n\nexport const serializeCollection = (object, type) =>\n  Object.keys(object).map(key => serialize[type](object[key], key));\n","/* eslint arrow-body-style: 0 */\n\nimport utils from './utils';\n\nexport const deserialize = {\n  post: {\n    artist: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid', 'name']);\n      return {\n        id,\n        createdBy: uid,\n        genre: data.genre ? utils.ensureGenreEnum(data.genre) : 'OTHER',\n        modifiedBy: uid,\n        name: data.name,\n        otherNames: data.otherNames || null,\n        private: data.private || false,\n        units: data.units || [],\n      };\n    },\n    color: (data, id) => {\n      utils.verifyRequirements(data, id, null, [\n        'id',\n        'name',\n        'hex',\n        'r',\n        'g',\n        'b',\n      ]);\n      return {\n        id,\n        b: data.b,\n        g: data.g,\n        hex: data.hex,\n        name: data.name,\n        r: data.r,\n      };\n    },\n    distribution: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'category',\n        'rates',\n        'relationships',\n        'songId',\n        'unitId',\n      ]);\n      return {\n        id,\n        category: data.category,\n        createdBy: uid,\n        features: data.features || null,\n        modifiedBy: uid,\n        rates: data.rates,\n        relationships:\n          typeof data.relationships === 'string'\n            ? data.relationships\n            : JSON.stringify(data.relationships),\n        songId: data.songId,\n        unitId: data.unitId,\n      };\n    },\n    log: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'timestamp', 'content']);\n      return {\n        reportedBy: uid || 'ANONYMOUS',\n        timestamp: data.timestamp,\n        content: data.content,\n      };\n    },\n    member: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'name',\n        'birthdate',\n        'colorId',\n        'gender',\n        'nationality',\n        'referenceArtist',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        birthdate: data.birthdate,\n        colorId: data.colorId,\n        gender: data.gender,\n        initials: data.initials || utils.buildMemberInitials(data.name),\n        modifiedBy: uid,\n        name: data.name,\n        nationality: data.nationality,\n        private: data.private || false,\n        referenceArtist: data.referenceArtist,\n      };\n    },\n    song: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'distribution',\n        'groupSize',\n        'originalArtist',\n        'title',\n        'videoId',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        album: data.album || null,\n        distribution: data.distribution,\n        groupSize: data.groupSize,\n        modifiedBy: uid,\n        originalArtist: data.originalArtist || '',\n        originalArtistId: data.originalArtistId || null,\n        private: data.private || false,\n        single: data.single || false,\n        title: data.title,\n        videoId: data.videoId,\n      };\n    },\n    unit: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'artistId',\n        'debutYear',\n        'name',\n      ]);\n      return {\n        id,\n        createdBy: uid,\n        artistId: data.artistId,\n        debutYear: data.debutYear,\n        distributions: data.distributions || [],\n        distributions_legacy: data.distributions_legacy || [],\n        modifiedBy: uid,\n        name: data.name,\n        members: data.members || {},\n        official: data.official || false,\n        private: data.private || false,\n        subUnit: data.subUnit || false,\n      };\n    },\n    user: (data, id) => {\n      utils.verifyRequirements(data, id, null, ['id', 'email']);\n      return {\n        uid: id,\n        email: data.email,\n        favoriteArtists: data.favoriteArtists || {}, // Oject(Reference(Artist):Boolean)\n        favoriteMembers: data.favoriteMembers || {}, // Oject(Reference(Member):Boolean)\n        biases: data.biases || {}, // Object(Reference(Artist):Reference(Member))\n        isAdmin: data.isAdmin || false,\n        latestUnits: data.latesUnits || [],\n        session: data.session || {},\n        displayName: null, // merged from auth\n        photoUrl: null, // merged from auth\n      };\n    },\n  },\n  put: {\n    artist: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n      if (uid) res.modifiedBy = uid;\n      if (data.genre) res.genre = utils.ensureGenreEnum(data.genre);\n      if (data.memberList) res.memberList = data.memberList;\n      if (data.name) res.name = data.name;\n      if (data.otherNames) res.otherNames = data.otherNames;\n      if (data.private) res.private = data.private;\n      if (data.units) res.units = data.units;\n\n      return res;\n    },\n    distribution: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, [\n        'id',\n        'uid',\n        'category',\n        'rates',\n        'relationships',\n        'songId',\n        'unitId',\n      ]);\n      const res = {};\n      if (uid) res.modifiedBy = uid;\n      if (data.category) res.category = data.category;\n      if (data.features) res.features = data.features;\n      if (data.rates) res.rates = data.rates;\n      if (data.relationships) res.relationships = data.relationships;\n      if (data.songId) res.songId = data.songId;\n      if (data.unitId) res.unitId = data.unitId;\n\n      return res;\n    },\n    member: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.colorId) {\n        res.colorId = data.colorId;\n      }\n\n      if (data.birthdate) res.birthdate = data.birthdate;\n      if (data.gender) res.gender = data.gender;\n\n      if (data.name) {\n        res.name = data.name;\n        res.initials = utils.buildMemberInitials(data.name);\n      }\n      if (data.initials) res.initials = data.initials;\n\n      if (data.nationality) res.nationality = data.nationality;\n      if (data.positions) res.positions = data.positions;\n\n      if (data.private) res.private = data.private;\n      if (data.referenceArtist) res.referenceArtist = data.referenceArtist;\n\n      return res;\n    },\n    song: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.album) res.album = data.album;\n      if (data.distribution) res.distribution = data.distribution;\n      if (data.groupSize) res.groupSize = data.groupSize;\n      if (data.originalArtist) res.originalArtist = data.originalArtist;\n      if (data.originalArtistId) res.originalArtistId = data.originalArtistId;\n      if (data.single) res.single = data.single;\n      if (data.private) res.private = data.private;\n      if (data.title) res.title = data.title;\n      if (data.videoId) res.videoId = data.videoId;\n\n      return res;\n    },\n    unit: (data, id, uid) => {\n      utils.verifyRequirements(data, id, uid, ['id', 'uid']);\n      const res = {};\n\n      if (uid) res.modifiedBy = uid;\n      if (data.artistId) res.artistId = data.artistId;\n      if (data.distributions) res.distributions = data.distributions;\n      if (data.distributions_legacy)\n        res.distributions_legacy = data.distributions_legacy;\n      if (data.members) res.members = data.members;\n      if (data.name) res.name = data.name;\n      if (data.official) res.official = data.official;\n      if (data.private) res.private = data.private;\n      if (data.subUnit) res.subUnit = data.subUnit;\n\n      return res;\n    },\n    user: (data, id) => {\n      utils.verifyRequirements(data, id, null, ['id']);\n      const res = {};\n\n      if (data.email) res.email = data.email;\n      if (data.favoriteArtists) res.favoriteArtists = data.favoriteArtists;\n      if (data.favoriteMembers) res.favoriteMembers = data.favoriteMembers;\n      if (data.biases) res.biases = data.biases;\n      if (data.isAdmin) res.isAdmin = data.isAdmin;\n      if (data.latesUnits) res.latesUnits = data.latesUnits;\n      if (data.session) res.session = data.session;\n\n      return res;\n    },\n  },\n};\n\nexport default deserialize;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\n\nexport const fb = firebase.initializeApp(config);\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const userSession = { user: {} };\n\n// Verify user auth session presence\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    userSession.user = user;\n  }\n});\n\nexport default fb;\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_authenticated\", \"_admin\", _loaded, _loggedInThisSession, _uid, _tries] }] */\n/* eslint class-methods-use-this: 0 */\n\nimport firebase from 'firebase';\nimport HttpStatus from 'http-status-codes';\nimport utils, { wait } from './utils';\n\nimport NewResponse from './response';\n\nimport { serialize, serializeCollection } from './serializers';\nimport { deserialize } from './deserializers';\n\nimport { fb, googleProvider, userSession } from './firebase';\n\nconst WAIT_AUTH_TIME = 2000;\nconst WAIT_DB_TIME = 3500;\n\nexport const db = {\n  artists: {},\n  colors: {},\n  distributions: {},\n  members: {},\n  positions: {},\n  songs: {},\n  units: {},\n  users: {},\n};\n\nexport const fullyLoaded = {\n  artists: false,\n  colors: false,\n  distributions: false,\n  members: false,\n  positions: false,\n  songs: false,\n  units: false,\n};\n\nexport let dbRef = null; // eslint-disable-line\n\nclass API {\n  constructor() {\n    this._authenticated = false;\n    this._admin = false;\n    this._loaded = false;\n    this._loggedInThisSession = false;\n    this._tries = 0;\n    this._uid = null;\n  }\n\n  dbRef() {\n    return this._loaded ? dbRef : null;\n  }\n\n  /**\n   * Gets basic information about database\n   * @category Getter\n   * @returns {Object}\n   */\n  dbInfo() {\n    this.print('Fetching DB info...');\n    const response = new NewResponse();\n\n    response.status(HttpStatus.OK);\n    response.data({\n      admin: this._authenticated ? this._admin : false,\n      authenticated: this._authenticated,\n      loaded: this._loaded,\n    });\n\n    return response.resolve();\n  }\n\n  /**\n   * Creates a reference to the firebase database and updates api loaded status\n   * @category Method\n   * @returns {Boolean}\n   */\n  async init() {\n    this.print('Running init...');\n    const response = new NewResponse();\n\n    dbRef = await fb.database();\n\n    if (dbRef) {\n      this._loaded = true;\n      response.status(HttpStatus.OK);\n      response.data(this.dbInfo().data);\n      this._loaded = true;\n    } else {\n      response.error(\n        HttpStatus.BAD_REQUEST,\n        'Failed to load firebase database'\n      );\n    }\n\n    response.resolve();\n    return this;\n  }\n\n  /**\n   * Verifies if the users is still logged from a previous session\n   * @category Method\n   * @returns {Object} user\n   */\n  async auth() {\n    this.print('Running auth...');\n    const response = new NewResponse();\n\n    if (!this._loaded) {\n      await wait(WAIT_AUTH_TIME);\n    }\n\n    const { user } = userSession;\n\n    if (user.emailVerified) {\n      this._authenticated = true;\n      this._uid = user.uid;\n\n      let userRes;\n      try {\n        userRes = await this.get(`/users/${user.uid}`);\n      } catch (_) {\n        userRes = await this.post(`/users/${user.uid}`);\n      }\n\n      userRes.data.attributes.displayName = user.displayName;\n      userRes.data.attributes.photoURL = user.photoURL;\n\n      this._admin = userRes.data.attributes.isAdmin;\n      response.data(userRes.data);\n    } else {\n      this._authenticated = false;\n      this._uid = null;\n      response.data({}, HttpStatus.NO_CONTENT);\n    }\n    return response.resolve();\n  }\n\n  async login() {\n    this.print('Running login...');\n    const response = new NewResponse();\n\n    let result;\n\n    try {\n      await fb.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n      result = await fb.auth().signInWithPopup(googleProvider);\n    } catch (error) {\n      response.error(error.code, error.message);\n      return response.resolve();\n    }\n\n    try {\n      const { user } = result;\n      if (user.emailVerified) {\n        this._authenticated = true;\n        this._uid = user.uid;\n\n        let userRes;\n        try {\n          userRes = await this.get(`/users/${user.uid}`);\n        } catch (_) {\n          userRes = await this.post(`/users/${user.uid}`);\n        }\n\n        userRes.data.attributes.displayName = user.displayName;\n        userRes.data.attributes.photoURL = user.photoURL;\n\n        this._admin = userRes.data.attributes.isAdmin;\n        response.data(userRes.data);\n      }\n    } catch (error) {\n      response.error(error.code, error.message);\n    }\n\n    return response.resolve();\n  }\n\n  async logoff() {\n    this.print('Running logout...');\n    const response = new NewResponse();\n\n    try {\n      await fb.auth().signOut();\n      this._authenticated = false;\n      this._uid = null;\n      response.ok();\n      response.data(true);\n    } catch (error) {\n      response.error(error.code, error.message);\n    }\n\n    return response.resolve();\n  }\n\n  print(message, path = '') {\n    if (process.env.NODE_ENV !== 'test') console.warn(message, path); // eslint-disable-line\n  }\n\n  async resyncDatabase() {\n    this.print('Resyncing database...');\n\n    // Reset fullyLoaded\n    fullyLoaded.artists = false;\n    fullyLoaded.colors = false;\n    fullyLoaded.distributions = false;\n    fullyLoaded.members = false;\n    fullyLoaded.songs = false;\n    fullyLoaded.units = false;\n\n    const syncDB = {\n      artists: {},\n      positions: {},\n      colors: {},\n      members: {},\n      units: {},\n    };\n\n    // Request DB tables\n    await dbRef.ref(`/artists`).once('value', snapshot => {\n      syncDB.artists = snapshot.val();\n    });\n    await dbRef.ref(`/colors`).once('value', snapshot => {\n      syncDB.colors = snapshot.val();\n    });\n    await dbRef.ref(`/members`).once('value', snapshot => {\n      syncDB.members = snapshot.val();\n    });\n    await dbRef.ref(`/units`).once('value', snapshot => {\n      syncDB.units = snapshot.val();\n    });\n    // TO-DO: Add distributions resync\n\n    // Resync\n    resyncFunctions.parse(syncDB);\n\n    // Post new DB tables\n    await dbRef.ref(`/artists`).set(syncDB.artists, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/colors`).set(syncDB.colors, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/members`).set(syncDB.members, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/positions`).set(syncDB.positions, error => {\n      if (error) throw new Error(error);\n    });\n    await dbRef.ref(`/units`).set(syncDB.units, error => {\n      if (error) throw new Error(error);\n    });\n\n    return true;\n  }\n\n  async get(path) {\n    this.print('Fetching data...', path);\n    /*\n     * List of possible get calls:\n     * /artists\n     * /artists/<id>\n     * /artists/<id>/units\n     * /colors\n     * /colors/<id>\n     * /members\n     * /members/<id>\n     * /positions\n     * /songs\n     * /songs/<id>\n     * /units/<id>\n     * /units/<id>/distribution\n     * /units/<id>/members\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      await wait(WAIT_DB_TIME);\n\n      if (!this._loaded || !this._authenticated) {\n        return this.throwDBError('GET');\n      }\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    switch (route.root) {\n      // API/artists\n      case 'artists':\n        // API/artists/<id>/units\n        if (route.referenceId && route.subPath === 'units') {\n          result = await getFunctions.fetchArtistUnits(route.referenceId);\n        }\n        // API/artists/<id>\n        else if (route.referenceId) {\n          result = await getFunctions.fetchArtist(route.referenceId);\n        }\n        // API/aritsts\n        else {\n          result = await getFunctions.fetchArtists();\n        }\n        break;\n      // API/colors\n      case 'colors':\n        // API/colors/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchColor(route.referenceId);\n        }\n        // API/colors\n        else {\n          result = await getFunctions.fetchColors();\n        }\n        break;\n      // API/colors\n      case 'distributions':\n        // API/distributions/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchDistribution(route.referenceId);\n        }\n        break;\n      case 'members':\n        // API/members/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchMember(route.referenceId);\n        }\n        // API/members\n        else {\n          result = await getFunctions.fetchMembers();\n        }\n        break;\n      // API/positions\n      case 'positions':\n        // TO-DO: fetch all positions\n        break;\n      // API/songs\n      case 'songs':\n        // API/songs/<id>\n        if (route.referenceId) {\n          result = await getFunctions.fetchSong(route.referenceId);\n        }\n        // API/songs\n        else {\n          result = await getFunctions.fetchSongs();\n        }\n        break;\n      // API/units\n      case 'units':\n        // API/units/<id>/distributions\n        if (route.referenceId && route.subPath === 'distributions') {\n          result = await getFunctions.fetchUnitDistributions(route.referenceId);\n        }\n        // API/units/<id>/members\n        else if (route.referenceId && route.subPath === 'members') {\n          result = await getFunctions.fetchUnitMembers(route.referenceId);\n        }\n        // API/units/<id>\n        else if (route.referenceId) {\n          result = await getFunctions.fetchUnit(route.referenceId);\n        }\n        break;\n      // API/users\n      case 'users':\n        // API/users/<id>\n        result = await getFunctions.fetchUser(route.referenceId);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async post(path, body) {\n    this.print('Writting data...', path);\n    /*\n     * List of possible post calls:\n     * /artists\n     * /distributions\n     * /members\n     * /songs\n     * /units\n     * /users\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('POST');\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    switch (route.root) {\n      // API/artists/<id>\n      case 'artists':\n        result = await postFunctions.createArtist(body, this._uid);\n        break;\n      // API/distributions/<id>\n      case 'distributions':\n        result = await postFunctions.createDistribution(body, this._uid);\n        break;\n      // API/log/<id>\n      case 'log':\n        result = await postFunctions.createLogEntry(\n          body,\n          this._uid,\n          route.referenceId\n        );\n        break;\n      // API/members/<id>\n      case 'members':\n        result = await postFunctions.createMember(body, this._uid);\n        break;\n      // API/songs/<id>\n      case 'songs':\n        result = await postFunctions.createSong(body, this._uid);\n        break;\n      // API/units/<id>\n      case 'units':\n        result = await postFunctions.createUnit(body, this._uid);\n        break;\n      // API/users/<id>\n      case 'users':\n        result = await postFunctions.createUser(body, this._uid);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async put(path, body) {\n    this.print('Updating data...', path);\n    /*\n     * List of possible put calls:\n     * /artists/<id>\n     * /distributions/<id>\n     * /members/<id>\n     * /songs/<id>\n     * /units/<id>\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('PUT');\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    if (!route.referenceId) {\n      // TO-DO: throw error\n    }\n\n    switch (route.root) {\n      // API/artists/<id>\n      case 'artists':\n        result = await putFunctions.updateArtist(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/distributions/<id>\n      case 'distributions':\n        result = await putFunctions.updateDistribution(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/members/<id>\n      case 'members':\n        result = await putFunctions.updateMember(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/songs/<id>\n      case 'songs':\n        result = await putFunctions.updateSong(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/units/<id>\n      case 'units':\n        result = await putFunctions.updateUnit(\n          route.referenceId,\n          body,\n          this._uid\n        );\n        break;\n      // API/users/<id>\n      case 'users':\n        if (route.subPath === 'biases') {\n          result = await putFunctions.updateUserBiases(route.referenceId, body);\n        } else if (route.subPath === 'favorite-artists') {\n          result = await putFunctions.updateUserFavoriteArtists(\n            route.referenceId,\n            body\n          );\n        } else if (route.subPath === 'favorite-members') {\n          result = await putFunctions.updateUserFavoriteMembers(\n            route.referenceId,\n            body\n          );\n        } else if (route.subPath === 'latest-units') {\n          result = await putFunctions.updateUserLatestUnits(\n            route.referenceId,\n            body\n          );\n        } else {\n          result = await putFunctions.updateUser(route.referenceId, body);\n        }\n\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  async delete(path) {\n    this.print('Deleting data...', path);\n    /*\n     * List of possible delete calls:\n     * /users/<id>\n     */\n\n    if (!this._loaded || !this._authenticated) {\n      return this.throwDBError('DELETE');\n    }\n\n    if (!path) {\n      return this.throwPathError('DELETE', 'path');\n    }\n\n    const route = utils.breadcrumble(path);\n    let result;\n\n    if (!route.referenceId) {\n      // TO-DO: throw error\n    }\n\n    switch (route.root) {\n      // API/users/<id>\n      case 'users':\n        result = await deleteFunctions.destroyUser(route.referenceId);\n        break;\n      default:\n        return this.throwPathError('path');\n    }\n\n    const response = new NewResponse();\n    response.data(result);\n    return response.resolve();\n  }\n\n  /**\n   * Throws database related errors\n   * @category Method\n   * @param {String} action\n   * @throws Error\n   */\n  throwDBError(action = '') {\n    const response = new NewResponse();\n    if (!this._loaded) {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, database is not ready`\n      );\n    } else if (!this._authenticated) {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, you are not logged in`\n      );\n    }\n\n    return response.resolve();\n  }\n\n  /**\n   * Throws api methods related errors\n   * @category Method\n   * @param {String} action\n   * @param {String} type\n   * @throws Error\n   */\n  throwPathError(action = '', type = 'path') {\n    const response = new NewResponse();\n    if (this._loaded && type === 'body') {\n      response.error(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        `Unable to perform ${action} action, data was not provided`\n      );\n    } else if (this._loaded && type === 'path') {\n      response.error(\n        HttpStatus.BAD_REQUEST,\n        `Unable to perform ${action} action, path doesn't exist`\n      );\n    } else {\n      response.error();\n    }\n\n    return response.resolve();\n  }\n\n  async test() {\n    let r = 'bola';\n    await this.dbRef().once('value', snap => {\n      r = snap.val();\n      return r;\n    });\n\n    return r;\n  }\n\n  async getDB() {\n    return db;\n  }\n\n  async setter(key, value) {\n    this[key] = value;\n    return value;\n  }\n}\n\nconst getFunctions = {\n  // Fetches all artists\n  fetchArtists: async () => {\n    if (fullyLoaded.artists === false) {\n      // TO-DO: Add 00 id to database, remove it in the serializer collection for a better cache check\n      let response = {};\n      await dbRef.ref(`/artists`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists = response;\n      fullyLoaded.artists = true;\n    }\n    return serializeCollection(db.artists, 'artist');\n  },\n  // Fetches single artist\n  fetchArtist: async id => {\n    if (!db.artists[id]) {\n      let response = {};\n      await dbRef.ref(`/artists/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.artists[id] = response;\n    }\n    return serialize.artist(db.artists[id], id);\n  },\n  // Fetches units from a single artist\n  fetchArtistUnits: async id => {\n    const artist = await getFunctions.fetchArtist(id);\n    const response = await artist.attributes.units.map(unitId =>\n      getFunctions.fetchUnit(unitId)\n    );\n    return Promise.all(response);\n  },\n  // Fetches all colors\n  fetchColors: async () => {\n    if (fullyLoaded.colors === false) {\n      let response = {};\n      await dbRef.ref(`/colors`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.colors = response;\n      fullyLoaded.artists = true;\n    }\n    return serializeCollection(db.colors, 'color');\n  },\n  // Fetches single color\n  fetchColor: async id => {\n    if (!db.colors[id]) {\n      let response = {};\n      await dbRef.ref(`/colors/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.colors[id] = response;\n    }\n    return serialize.color(db.colors[id], id);\n  },\n  // Fetches single distribution\n  fetchDistribution: async id => {\n    if (!db.distributions[id]) {\n      let response = {};\n      await dbRef.ref(`/distributions/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.distributions[id] = response;\n    }\n    return serialize.distribution(db.distributions[id], id);\n  },\n  // Fetches all members\n  fetchMembers: async () => {\n    if (fullyLoaded.members === false) {\n      let response = {};\n      await dbRef.ref(`/members`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.members = response;\n      fullyLoaded.members = true;\n    }\n    return serializeCollection(db.members, 'member');\n  },\n  // Fetches single member\n  fetchMember: async id => {\n    if (!db.members[id]) {\n      let response = {};\n      await dbRef.ref(`/members/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n\n      const { colorId = 'default' } = response;\n      if (colorId) {\n        const color = await getFunctions.fetchColor(colorId);\n        response.color = {\n          ...color.attributes,\n          id: color.id,\n        };\n      }\n\n      db.members[id] = response;\n    }\n    return serialize.member(db.members[id], id);\n  },\n  // Fetches all songs\n  fetchSongs: async () => {\n    if (fullyLoaded.songs === false) {\n      // TO-DO: Add 00 id to database, remove it in the serializer collection for a better cache check\n      let response = {};\n      await dbRef.ref(`/songs`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs = response;\n      fullyLoaded.songs = true;\n    }\n    return serializeCollection(db.songs, 'song');\n  },\n  // Fetches single song\n  fetchSong: async id => {\n    if (!db.songs[id]) {\n      let response = {};\n      await dbRef.ref(`/songs/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.songs[id] = response;\n    }\n    return serialize.song(db.songs[id], id);\n  },\n  // Fetches single unit\n  fetchUnit: async id => {\n    if (!db.units[id]) {\n      let response = {};\n      await dbRef.ref(`/units/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.units[id] = response;\n    }\n    return serialize.unit(db.units[id], id);\n  },\n  // Fetches units from a single artist\n  fetchUnitDistributions: async id => {\n    const unit = await getFunctions.fetchUnit(id);\n    const unitDistributionsPromises = await unit.attributes.distributions.map(\n      distributionId => getFunctions.fetchDistribution(distributionId)\n    );\n    const unitDistributions = await Promise.all(unitDistributionsPromises);\n\n    const unitSongsPromises = await unitDistributions.map(distributionObject =>\n      getFunctions.fetchSong(distributionObject.attributes.songId)\n    );\n\n    const unitSongs = await Promise.all(unitSongsPromises);\n\n    unitDistributions.forEach((distributionObject, index) => {\n      unitDistributions[index].attributes.distribution =\n        unitSongs[index].attributes.distribution;\n      unitDistributions[index].attributes.originalArtist =\n        unitSongs[index].attributes.originalArtist;\n      unitDistributions[index].attributes.title =\n        unitSongs[index].attributes.title;\n      unitDistributions[index].attributes.videoId =\n        unitSongs[index].attributes.videoId;\n    });\n\n    return unitDistributions;\n  },\n  // Fetches units from a single artist\n  fetchUnitMembers: async id => {\n    const unit = await getFunctions.fetchUnit(id);\n    const membersResponse = await unit.attributes.members.map(member =>\n      getFunctions.fetchMember(member.memberId)\n    );\n\n    const promiseResponse = await Promise.all(membersResponse);\n\n    const response = promiseResponse.map((member, index) => {\n      member.attributes.id = member.id;\n      member.attributes.positions = unit.attributes.members[index].positions;\n      return member;\n    });\n    return utils.mergeMembers(unit.attributes.members, response);\n  },\n  // Fetches single user\n  fetchUser: async id => {\n    if (!db.users[id]) {\n      let response = {};\n      await dbRef.ref(`/users/${id}`).once('value', snapshot => {\n        response = snapshot.val();\n      });\n      db.users[id] = response;\n    }\n    return serialize.user(db.users[id], id);\n  },\n};\n\nconst postFunctions = {\n  // Creates single artist\n  createArtist: async (body, uid) => {\n    const key = await dbRef.ref(`/artists`).push().key;\n    const data = deserialize.post.artist(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/artists/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Artist ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.artists[key] = response;\n    fullyLoaded.artists = false;\n    return serialize.artist(db.artists[key]);\n  },\n  // Creates single color\n  // TO-DO: Delete this after feeding firebase\n  createColor: async body => {\n    const key = await dbRef.ref(`/colors`).push().key;\n    const data = deserialize.post.color(body, key);\n    let response = {};\n    await dbRef.ref(`/colors/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Color ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.colors[key] = response;\n    fullyLoaded.colors = false;\n    return serialize.color(db.colors[key]);\n  },\n  // Creates single distribution\n  createDistribution: async (body, uid) => {\n    const key = await dbRef.ref(`/distributions`).push().key;\n    const data = deserialize.post.distribution(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/distributions/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create distribution ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n\n    // Add distribution id to unit\n    const unit = await getFunctions.fetchUnit(data.unitId);\n    const unitDistributions = [...unit.attributes.distributions];\n    unitDistributions.push(key);\n    await putFunctions.updateUnit(\n      data.unitId,\n      { distributions: unitDistributions },\n      uid\n    );\n\n    db.distributions[key] = response;\n    return serialize.distribution(db.distributions[key]);\n  },\n  // Creates single log entry\n  createLogEntry: async (body, uid, subRoute) => {\n    const key = await dbRef.ref(`/log/${subRoute}`).push().key;\n    const data = deserialize.post.log(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/log/${subRoute}/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to log entry ${key}: ${data.content}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    return response;\n  },\n  // Creates single member\n  createMember: async (body, uid) => {\n    const key = await dbRef.ref(`/members`).push().key;\n    const data = deserialize.post.member(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/members/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Member ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.members[key] = response;\n    fullyLoaded.members = false;\n    return serialize.member(db.members[key]);\n  },\n  // Creates single song\n  createSong: async (body, uid) => {\n    const key = await dbRef.ref(`/songs`).push().key;\n    const data = deserialize.post.song(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/songs/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Song ${key}: ${data.title}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.songs[key] = response;\n    fullyLoaded.songs = false;\n    return serialize.song(db.songs[key]);\n  },\n  // Creates single unit\n  createUnit: async (body, uid) => {\n    const key = await dbRef.ref(`/units`).push().key;\n    const data = deserialize.post.unit(body, key, uid);\n    let response = {};\n    await dbRef.ref(`/units/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create Unit ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.units[key] = response;\n    fullyLoaded.units = false;\n    return serialize.unit(db.units[key]);\n  },\n  // Creates single user\n  createUser: async (body, uid) => {\n    const key = uid;\n    const data = deserialize.post.user(body, key);\n    let response = {};\n    await dbRef.ref(`/users/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to create User ${key}`;\n        throw new Error(`${message}: ${error}`);\n      } else {\n        response = { ...data };\n      }\n    });\n    db.users[key] = response;\n    return serialize.user(db.users[key]);\n  },\n};\n\nconst putFunctions = {\n  // Updates single artist\n  updateArtist: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.artist(body, key, uid);\n    await dbRef.ref(`/artists/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Artist ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/artists/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.artists[key] = response;\n    fullyLoaded.artists = false;\n    return serialize.artist(db.artists[key]);\n  },\n  // Updates single distribution\n  updateDistribution: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.distribution(body, key, uid);\n    await dbRef.ref(`/distributions/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update distribution ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/distributions/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.distributions[key] = response;\n    return serialize.distribution(db.distributions[key]);\n  },\n  // Updates single member\n  updateMember: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.member(body, key, uid);\n    await dbRef.ref(`/members/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Member ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/members/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.members[key] = response;\n    fullyLoaded.members = false;\n    return serialize.member(db.members[key]);\n  },\n  // Updates single song\n  updateSong: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.song(body, key, uid);\n    await dbRef.ref(`/songs/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Song ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/songs/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.songs[key] = response;\n    fullyLoaded.songs = false;\n    return serialize.song(db.songs[key]);\n  },\n  // Updates single unit\n  updateUnit: async (id, body, uid) => {\n    const key = id;\n    const data = deserialize.put.unit(body, key, uid);\n    await dbRef.ref(`/units/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update Unit ${key}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/units/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.units[key] = response;\n    fullyLoaded.units = false;\n    return serialize.unit(db.units[key]);\n  },\n  // Updates single user\n  updateUser: async (id, body) => {\n    const key = id;\n    const data = deserialize.put.user(body, key);\n    await dbRef.ref(`/users/${key}`).update(data, error => {\n      if (error) {\n        const message = `Failed to update User ${key}: ${data.name}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    let response = {};\n    await dbRef.ref(`/users/${key}`).once('value', snapshot => {\n      response = snapshot.val();\n    });\n    db.users[key] = response;\n    return serialize.user(db.users[key]);\n  },\n  updateUserBiases: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/biases`).set(body, error => {\n      if (error) {\n        const message = `Failed to update User's Biases ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserFavoriteArtists: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/favoriteArtists`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Artists ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserFavoriteMembers: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/favoriteMembers`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Members ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n  updateUserLatestUnits: async (id, body) => {\n    const key = id;\n    await dbRef.ref(`/users/${key}/latestUnits`).update(body, error => {\n      if (error) {\n        const message = `Failed to update User's Favorite Members ${key}: ${JSON.stringify(\n          body\n        )}`;\n        throw new Error(`${message}: ${error}`);\n      }\n    });\n    return body;\n  },\n};\n\nconst deleteFunctions = {\n  // Destroys single user\n  destroyUser: async (id, uid) => {\n    if (id === uid) {\n      await dbRef.ref(`/users/${uid}`).remove();\n      return { [id]: true };\n    }\n  },\n};\n\nconst resyncFunctions = {\n  parse: database => {\n    // Run reseters\n    resyncFunctions.resetAristsArrays(database);\n    resyncFunctions.resetMemberPositions(database);\n    // Run parsers\n    resyncFunctions.parseUnits(database);\n    resyncFunctions.parseMembers(database);\n    resyncFunctions.parseArtists(database);\n    resyncFunctions.parseDistributions(database);\n  },\n  resetAristsArrays: database => {\n    Object.values(database.artists).forEach(artist => {\n      artist.units = [];\n      artist.memberIds = [];\n      artist.memberList = [];\n    });\n  },\n  resetMemberPositions: database => {\n    Object.values(database.members).forEach(member => (member.positions = []));\n  },\n  parseUnits: database => {\n    Object.keys(database.units).forEach(unitId => {\n      const unit = database.units[unitId];\n      // Add artistId to artist\n      const artist = database.artists[unit.artistId];\n      if (artist.units) {\n        artist.units.push(unitId);\n      } else {\n        artist.units = [unitId];\n      }\n\n      // Parse positions\n      const membersPositions = resyncFunctions.parsePositions(\n        database,\n        unit.members\n      );\n\n      // Add members to artist memberIds and memberList\n      const memberIds = [];\n      const memberList = [];\n      Object.values(membersPositions).forEach(value => {\n        memberIds.push(value.memberId);\n        memberList.push(value.name);\n        // Add positions to each member\n        database.members[value.memberId].positions = database.members[\n          value.memberId\n        ].positions.concat(value.positions);\n      });\n      if (artist.memberIds) {\n        artist.memberIds = artist.memberIds.concat(memberIds);\n        artist.memberList = artist.memberList.concat(memberList);\n      } else {\n        artist.memberIds = memberIds;\n        artist.memberList = memberList;\n      }\n    });\n  },\n  parseMembers: database => {\n    // Reset all color counts\n    Object.values(database.colors).forEach(color => {\n      color.count = 0;\n    });\n\n    Object.values(database.members).forEach(member => {\n      // Add member color to color count\n      const { colorId } = member;\n      database.colors[colorId].count++;\n\n      // Sort and make positions unique\n      member.positions = [...new Set(member.positions)].sort();\n    });\n  },\n  parseArtists: database => {\n    Object.values(database.artists).forEach(artist => {\n      // Order units by descending debutYear\n      const unitDict = {};\n      const subUnitDict = {};\n      let unitSameYear = 1;\n      artist.units.forEach(unitId => {\n        const currentUnit = database.units[unitId];\n        let key = currentUnit.debutYear;\n        if (currentUnit.subUnit) {\n          if (subUnitDict[key]) {\n            key = Number(`${key}${unitSameYear}`);\n            unitSameYear++;\n          }\n          subUnitDict[key] = unitId;\n        } else {\n          if (unitDict[key]) {\n            key = Number(`${key}${unitSameYear}`);\n            unitSameYear++;\n          }\n          unitDict[key] = unitId;\n        }\n      });\n      // Sort by year\n      const units = Object.keys(unitDict)\n        .sort()\n        .reverse()\n        .map(year => unitDict[year]);\n\n      const subUnits = Object.keys(subUnitDict)\n        .sort()\n        .map(year => subUnitDict[year]);\n\n      artist.units = [...units, ...subUnits];\n\n      // Sort memberList by name and make it unique, same with memberIds\n      const memberDict = {};\n      artist.memberList.forEach((name, index) => {\n        if (memberDict[name] === undefined) {\n          memberDict[name] = artist.memberIds[index];\n        }\n      });\n      // Make names unique\n      artist.memberList = [...new Set(artist.memberList)];\n      // Sort names\n      artist.memberList.sort();\n      // Parse ids\n      artist.memberIds = artist.memberList.map(name => memberDict[name]);\n    });\n  },\n  parseDistributions: () => {\n    //\n  },\n  parsePositions: (database, unitMembers) => {\n    const memberDict = {};\n\n    Object.keys(unitMembers).forEach(key => {\n      const [memberId, name, position] = key.split(':');\n      // Parse member dict to be returned\n      if (memberDict[memberId]) {\n        memberDict[memberId].positions.push(position);\n      } else {\n        memberDict[memberId] = {\n          memberId,\n          name,\n          positions: [position],\n        };\n      }\n      // Refactor positions (action parsePositions)\n      if (database.positions[position] === undefined) {\n        database.positions[position] = {};\n      }\n      database.positions[position][memberId] = true;\n    });\n\n    return memberDict;\n  },\n};\n\nexport default new API();\n","/* eslint wrap-iife: 0 */\n/* eslint func-names: 0 */\n\nimport _ from 'lodash';\n\n/**\n * Parsers bem classes accepting two or more arguments\n * @param {String} block\n * @param {String} modifiers\n * @param {String} element\n * @param {extra} extras\n * @returns {string} bem-class\n */\nconst bem = (...args) => {\n  const block = args[0];\n  let modifiers = args[1] || '';\n  let element = args[2];\n  let extras = args[3] || [];\n\n  const hasBlock = block !== undefined && block !== null && block !== '';\n  const hasModifiers =\n    modifiers !== undefined &&\n    modifiers !== null &&\n    modifiers !== '' &&\n    modifiers.length > 0;\n  const hasElement =\n    element !== undefined && element !== null && element !== '';\n  const hasExtras =\n    extras !== undefined &&\n    extras !== null &&\n    extras !== '' &&\n    extras.length > 0;\n\n  // Prepare modifiers\n  if (hasModifiers) {\n    if (typeof modifiers === 'string') {\n      modifiers = [modifiers];\n    }\n    modifiers = modifiers.map(m => `--${m}`);\n  }\n  // Prepare element\n  if (hasElement) {\n    element = `__${element}`;\n  }\n  // Prepare Extras\n  if (hasExtras) {\n    if (typeof extras === 'string') {\n      extras = [extras];\n    }\n  }\n\n  // No Block\n  if (!hasBlock) {\n    throw new Error('Block string missing');\n  }\n\n  let classes = block;\n\n  // Only Modifiers\n  if (hasModifiers && !hasElement) {\n    modifiers.forEach(m => {\n      classes += ` ${block}${m}`;\n    });\n  }\n\n  // Only Element\n  if (hasElement && !hasModifiers) {\n    classes = ` ${block}${element}`;\n  }\n\n  // Modifiers and Element\n  if (hasElement && hasModifiers) {\n    classes += `${element}`;\n    modifiers.forEach(m => {\n      classes += ` ${block}${element}${m}`;\n    });\n  }\n\n  return `${classes} ${extras.join(' ')}`.trim();\n};\n\n/**\n * Loops through members and reassign colors if they are duplicated\n * @param {Array} members\n * @returns {Array} members with unique colors\n */\nconst ensureColorUniqueness = members => {\n  const membersList = _.cloneDeep(members);\n  const dict = {};\n  const refactoredMembers = [];\n  // Loop through members and make color dict\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    if (dict[colorId] === undefined) {\n      dict[colorId] = 1;\n    } else {\n      dict[colorId] += 1;\n    }\n  });\n\n  // Loop again and check for uniqueness, unique stays\n  membersList.forEach(member => {\n    const colorId = member.color.id;\n    const altColorId = member.altColor.id;\n    if (dict[colorId] > 1) {\n      if (dict[altColorId] === undefined) {\n        const oldColor = member.color;\n        member.color = member.altColor;\n        member.altColor = oldColor;\n      } else {\n        console.warn(`Duplicated color for member ${member.id}`);\n      }\n    }\n    refactoredMembers.push(member);\n  });\n  return refactoredMembers;\n};\n\nconst capitalizeWord = (str, separator = ' ') =>\n  str\n    .toString()\n    .split(separator)\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(separator);\n\nconst spinalCaseWord = str =>\n  str\n    .toLowerCase()\n    .split(' ')\n    .join('-');\n\nconst parseBirthDate = d => {\n  const date = `${d}`;\n  if (date.length < 5) {\n    return date;\n  }\n  if (date.length === 8) {\n    const year = date.substring(0, 4);\n    const month = date.substring(4, 6);\n    const day = date.substring(6);\n    return `${month}/${day}/${year}`;\n  }\n  return '?';\n};\n\nconst parseResponse = response => {\n  function responseParser(obj) {\n    return {\n      id: obj.id,\n      ...obj.attributes,\n    };\n  }\n\n  // Response has a single object instance without the \"data\" object\n  if (response && response.id && response.attributes) {\n    return responseParser(response);\n  }\n\n  // Response has a \"data\" object\n  if (response && response.data) {\n    response = response.data;\n\n    // If response.data is not an array\n    if (response && response.id && response.attributes) {\n      return responseParser(response);\n    }\n\n    if (Array.isArray(response)) {\n      const result = [];\n      for (let i = 0; i < response.length; i++) {\n        result.push(responseParser(response[i]));\n      }\n      return result;\n    }\n  }\n\n  throw new Error('parserResponse failed. Object is not a response');\n};\n\nconst parseResponseToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = {\n          id: instance.id,\n          ...instance.attributes,\n        };\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseArrayToObject = response => {\n  if (response && response.data) {\n    response = response.data;\n\n    if (Array.isArray(response)) {\n      const result = {};\n      for (let i = 0; i < response.length; i++) {\n        const instance = response[i];\n        result[instance.id] = instance;\n      }\n      return result;\n    }\n  }\n\n  throw new Error(\n    'parserResponseToObject failed. Object is not an array response'\n  );\n};\n\nconst parseQueryParams = query => {\n  if (!query) return null;\n\n  if (query[0] === '?') {\n    query = query.substring(1);\n  }\n\n  const params = {};\n  query.split('&').forEach(item => {\n    const pair = item.split('=');\n    const key = pair[0];\n    if (key) {\n      params[key] = pair[1] || null;\n    }\n  });\n\n  return params;\n};\n\nconst humanize = (string, option = 'Sentence') => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or -\n  string = string.replace(/([\\-|\\_])/g, ' '); // eslint-disable-line\n\n  function captalizeFirstLetter(word) {\n    return word[0].toUpperCase() + word.substring(1);\n  }\n\n  switch (option) {\n    case 'Sentence':\n      return captalizeFirstLetter(string);\n    case 'Capital':\n      return string\n        .split(' ')\n        .map(word => captalizeFirstLetter(word))\n        .join(' ');\n    default:\n      return string;\n  }\n};\n\nconst camelCase = string => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or -\n  string = string.replace(/([\\-|\\_])/g, ' '); // eslint-disable-line\n\n  return string\n    .split(' ')\n    .map((word, index) => {\n      if (index === 0) return word;\n      return word[0].toUpperCase() + word.substring(1);\n    })\n    .join('');\n};\n\nconst spiralCase = string => {\n  if (typeof string !== 'string') {\n    throw new Error('String used in humanize is not a string');\n  }\n\n  string = string.toLowerCase();\n\n  // Remove _ or ' ' or :\n  return string.replace(/([\\-\\_\\ \\:])/g, '-'); // eslint-disable-line\n};\n\nconst getColorNumber = (colorId = 'col000000') => Number(colorId.substring(7));\n\nconst spiralBirthdate = date => {\n  const dateStr = date.toString();\n  return `${dateStr.substring(0, 4)}-${dateStr.substring(\n    4,\n    6\n  )}-${dateStr.substring(6)}`;\n};\n\nconst makePositionsEditable = positions => {\n  const result = {};\n  positions.forEach(position => {\n    const pos = spiralCase(position);\n    result[pos] = pos;\n  });\n  return result;\n};\n\nconst insertAtCursor = (field, valueToInsert) => {\n  if (\n    (field.selectionStart || field.selectionStart === 0) &&\n    field.selectionStart === field.selectionEnd\n  ) {\n    const startPos = field.selectionStart;\n    const endPos = field.selectionEnd;\n    field.value =\n      field.value.substring(0, startPos) +\n      valueToInsert +\n      field.value.substring(endPos, field.value.length);\n  }\n  return field.value;\n};\n\nconst getMostImportantPosition = positions => {\n  const POSITIONS_IMPORTANT_ORDER = [\n    'ALL',\n    'NONE',\n    'MAIN_VOCALIST',\n    'MAIN_RAPPER',\n    'MAIN_DANCER',\n    'LEAD_VOCALIST',\n    'LEAD_RAPPER',\n    'LEAD_DANCER',\n    'VOCALIST',\n    'RAPPER',\n    'DANCER',\n  ];\n\n  for (let i = 0; i < POSITIONS_IMPORTANT_ORDER.length; i++) {\n    if (positions.includes(POSITIONS_IMPORTANT_ORDER[i])) {\n      return POSITIONS_IMPORTANT_ORDER[i];\n    }\n  }\n\n  return 'VOCALIST';\n};\n\nexport default {\n  bem,\n  camelCase,\n  capitalizeWord,\n  ensureColorUniqueness,\n  getColorNumber,\n  getMostImportantPosition,\n  humanize,\n  insertAtCursor,\n  makePositionsEditable,\n  parseBirthDate,\n  parseQueryParams,\n  parseArrayToObject,\n  parseResponse,\n  parseResponseToObject,\n  spiralBirthdate,\n  spiralCase,\n  spinalCaseWord,\n};\n","import { all, call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport _ from 'lodash';\nimport { toastr } from 'react-redux-toastr';\n\nimport API from '../api';\n\nimport { types } from '../reducers';\nimport utils from '../utils';\nimport constants from '../utils/constants';\n\n// Delay helper to make API look more realistic\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nconst DELAY_DURATION = process.env.NODE_ENV === 'development' ? 500 : 0;\n\n// API Workers\n\n/**\n * Initializes database, check for existing auth session, and load colors\n * @param {object} action\n */\nfunction* initializer(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const dbStart = yield API.init();\n    const status = dbStart.dbInfo();\n    yield put({ type: types.SET_DATABASE_READY, payload: status.data.loaded });\n\n    yield delay(DELAY_DURATION);\n\n    let loggedUser = yield API.auth();\n    loggedUser = loggedUser.data.attributes ? loggedUser.data : null;\n    if (loggedUser) {\n      const user = utils.parseResponse(loggedUser);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Welcome back!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: error,\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestArtists(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/artists');\n    const artistList = utils.parseResponse(response);\n    const sortedArtistList = _.sortBy(artistList, [a => a.name.toLowerCase()]);\n    yield put({ type: types.SET_ARTISTS, payload: sortedArtistList });\n\n    const artistsTypeahead = [];\n    const artistsTypeaheadDict = {};\n\n    sortedArtistList.forEach(artist => {\n      artistsTypeahead.push(artist.name);\n      artistsTypeaheadDict[artist.name] = artist.id;\n    });\n    yield put({ type: types.SET_ARTISTS_TYPEAHEAD, payload: artistsTypeahead });\n    yield put({\n      type: types.SET_ARTISTS_TYPEAHEAD_DICT,\n      payload: artistsTypeaheadDict,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load artists database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestArtist(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { artistId, panels, state } = action;\n  let { queryParams } = action;\n\n  let selectedArtist = {};\n\n  // Fetch Artist\n  try {\n    const response = yield API.get(`/artists/${artistId}`);\n    selectedArtist = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load artist ${artistId} from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  // Select default unit id\n  queryParams = utils.parseQueryParams(queryParams);\n  let selectedUnitId = selectedArtist.units[0];\n  let unitIndex = 0;\n  if (\n    queryParams &&\n    queryParams.unit &&\n    selectedArtist.units.includes(queryParams.unit)\n  ) {\n    selectedUnitId = queryParams.unit;\n    unitIndex = selectedArtist.units.indexOf(selectedUnitId);\n  }\n\n  // Fetch Artist's Units\n  try {\n    const response = yield API.get(`/artists/${artistId}/units`);\n    selectedArtist.units = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load artist ${artistId}'s units from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  // Just send artist if dealing with Manage Artist\n  if (state === 'edit') {\n    selectedArtist.state = 'edit';\n    panels.artist = state;\n\n    const unitsTypeahead = [];\n    const unitsTypeaheadDict = {};\n\n    selectedArtist.units.forEach(unit => {\n      unitsTypeahead.push(unit.name);\n      unitsTypeaheadDict[unit.name] = unit.id;\n    });\n\n    yield put({ type: types.SET_UNITS_TYPEAHEAD, payload: unitsTypeahead });\n    yield put({\n      type: types.SET_UNITS_TYPEAHEAD_DICT,\n      payload: unitsTypeaheadDict,\n    });\n\n    selectedArtist.genre = constants.GENRES_DB[selectedArtist.genre];\n\n    yield put({ type: types.SET_EDITING_ARTIST, payload: selectedArtist });\n    yield put({ type: types.SET_PANELS, payload: panels });\n  } else {\n    // Fetch complete unit for default unit\n    const selectedUnit = yield call(requestUnit, {\n      unitId: selectedUnitId,\n    });\n\n    selectedArtist.units[unitIndex] = selectedUnit;\n\n    yield put({ type: types.SET_ARTIST_PAGE_TAB, payload: selectedUnitId });\n    yield put({ type: types.SET_SELECTED_ARTIST, payload: selectedArtist });\n    yield put({ type: types.SET_SELECTED_UNIT, payload: selectedUnit });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestColors(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/colors');\n    const colorsList = utils.parseResponseToObject(response);\n    yield put({ type: types.SET_COLORS, payload: colorsList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load colors database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestDistribution(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { distributionId } = action;\n\n  let selectedDistribution = {};\n\n  // Fetch Distribution\n  try {\n    const response = yield API.get(`/distributions/${distributionId}`);\n    selectedDistribution = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load distribution ${distributionId} from database`,\n        error.toString(),\n      ],\n      actionType: action.type,\n    });\n  }\n\n  yield put({\n    type: types.SET_ACTIVE_DISTRIBUTION,\n    payload: selectedDistribution,\n  });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n\n  return selectedDistribution;\n}\n\nfunction* requestMembers(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/members');\n    const membersList = utils.parseResponse(response);\n    const sortedMembersList = _.sortBy(membersList, [\n      m => m.name.toLowerCase(),\n    ]);\n    yield put({ type: types.SET_MEMBERS, payload: sortedMembersList });\n\n    const membersTypeahead = [];\n    const membersTypeaheadDict = {};\n\n    sortedMembersList.forEach(member => {\n      const key = `${member.name} (${member.referenceArtist})`;\n      membersTypeahead.push(key);\n      membersTypeaheadDict[key] = member.id;\n    });\n    yield put({ type: types.SET_MEMBERS_TYPEAHEAD, payload: membersTypeahead });\n    yield put({\n      type: types.SET_MEMBERS_TYPEAHEAD_DICT,\n      payload: membersTypeaheadDict,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load members database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestSongs(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    const response = yield API.get('/songs');\n    const songsList = utils.parseResponse(response);\n    const sortedSongsList = _.sortBy(songsList, [s => s.title.toLowerCase()]);\n    yield put({ type: types.SET_SONGS, payload: sortedSongsList });\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: ['Unable to load songs database', error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* requestUnit({ type, unitId, selectedArtist, unitIndex }) {\n  const actionType = 'REQUEST_UNIT';\n  yield put({ type: 'PENDING', actionType });\n  yield delay(DELAY_DURATION);\n\n  let unit = {};\n  try {\n    const response = yield API.get(`/units/${unitId}`);\n    unit = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n\n  // Fetch members\n  let members = {};\n  try {\n    const response = yield API.get(`/units/${unitId}/members`);\n    members = utils.parseArrayToObject(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load members from unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n  unit.members = members;\n\n  // Fetch distributions and merge\n  let distributions = {};\n  try {\n    const response = yield API.get(`/units/${unitId}/distributions`);\n    distributions = utils.parseResponse(response);\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [\n        `Unable to load distributions from unit ${unitId} from database`,\n        error.toString(),\n      ],\n      actionType,\n    });\n  }\n\n  unit.distributions = distributions || [];\n\n  unit.songsDict = distributions.reduce((dict, distribution) => {\n    dict[distribution.songId] = distribution.id;\n    return dict;\n  }, {});\n\n  // Fetch legacy distributions and merge\n\n  // Calculate averages\n\n  // Flag unit as complete\n  unit.complete = true;\n\n  // The following if statements are used when the unit tab is updated in the UI\n  if (type) {\n    yield put({ type: types.SET_SELECTED_UNIT, payload: unit });\n  }\n  if (selectedArtist) {\n    selectedArtist.units[unitIndex] = unit;\n    yield put({ type: types.SET_SELECTED_ARTIST, payload: selectedArtist });\n  }\n\n  yield put({ type: 'CLEAR_PENDING', actionType });\n  return unit;\n}\n\nfunction* requestUnitMembers({ type, unitId, panels }) {\n  yield put({ type: 'PENDING', actionType: type });\n  yield delay(DELAY_DURATION);\n\n  let members = [];\n  if (unitId) {\n    try {\n      const response = yield API.get(`/units/${unitId}/members`);\n      members = response.data;\n    } catch (error) {\n      yield put({\n        type: 'ERROR',\n        message: [\n          `Unable to load members from unit ${unitId} from database`,\n          error.toString(),\n        ],\n        actionType: type,\n      });\n    }\n  }\n\n  // Make colors in use dict\n  const colorsInUse = {};\n  members.forEach(member => (colorsInUse[member.colorId] = true)); //eslint-disable-line\n\n  yield put({ type: types.SET_COLORS_IN_USE, payload: colorsInUse });\n  yield put({ type: types.SET_EDITING_MEMBERS, payload: members });\n  yield put({ type: types.SET_PANELS, payload: panels });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: type });\n  return members;\n}\n\nfunction* resyncDatabase(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.resyncDatabase();\n  } catch (error) {\n    yield put({\n      type: 'ERROR',\n      message: [`Unable to resync database`, error.toString()],\n      actionType: action.type,\n    });\n  }\n\n  // When done, re-request artists, colors, and members\n  yield put({ type: 'REQUEST_ARTISTS' });\n  yield put({ type: 'REQUEST_COLORS' });\n  yield put({ type: 'REQUEST_MEMBERS' });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* runLogin(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    let loggedUser = yield API.login();\n    loggedUser = loggedUser.data.attributes ? loggedUser.data : null;\n\n    if (loggedUser) {\n      const user = utils.parseResponse(loggedUser);\n\n      yield put({ type: types.SET_USER, payload: user });\n      yield put({ type: types.SET_AUTHENTICATED, payload: true });\n\n      if (user.isAdmin) {\n        yield put({ type: types.SET_ADMIN, payload: true });\n      }\n\n      yield put({\n        type: 'SUCCESS_TOAST',\n        message: ['Hello!', `You are logged in as ${user.displayName}`],\n        actionType: action.type,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\nfunction* runLogout(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n\n  try {\n    yield API.logoff();\n\n    yield put({ type: types.SET_USER, payload: {} });\n    yield put({ type: types.SET_AUTHENTICATED, payload: false });\n    yield put({ type: types.SET_ADMIN, payload: false });\n\n    yield put({\n      type: 'WARNING_TOAST',\n      message: 'You are logged out',\n      actionType: action.type,\n    });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n}\n\nfunction* sendDistribution(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  let receivedSong;\n  if (action.body.distributionId) {\n    // Update song\n    try {\n      receivedSong = yield API.pyt(\n        `/distributions/${action.body.distributionId}`,\n        action.body\n      );\n    } catch (error) {\n      yield put({\n        type: 'ERROR_TOAST',\n        message: `Failed updating distribution ${\n          action.body.distributionId\n        }: ${error.toString()}`,\n        actionType: action.type,\n      });\n    }\n  } else {\n    // Save song\n    try {\n      receivedSong = yield API.post('/distributions', action.body);\n    } catch (error) {\n      yield put({\n        type: 'ERROR_TOAST',\n        message: `Failed writing distribution: ${error.toString()}`,\n        actionType: action.type,\n      });\n    }\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedSong;\n}\n\nfunction* sendLog(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const logType = action.body.type === 'error' ? 'errors' : 'general';\n\n  // Save song\n  try {\n    yield API.post(`/log/${logType}`, action.body);\n  } catch (e) {\n    // do nothing\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* sendSong(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  // Save song\n  let receivedSong;\n  try {\n    receivedSong = yield API.post('/songs', action.body);\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing song: ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedSong;\n}\n\nfunction* updateCompleteArtist(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { artist, members, unit } = action;\n\n  // Save Members\n  const receivedMembers = yield all(\n    members.map((member, index) =>\n      call(updateMember, {\n        type: `UPDATE_MEMBER_${index}`,\n        member,\n        referenceArtist: artist.name,\n      })\n    )\n  );\n\n  // Prepare Unit Members Data\n  let unitMembers = {};\n  receivedMembers.forEach(member => {\n    unitMembers = {\n      ...unitMembers,\n      ...member.positions,\n    };\n  });\n\n  yield delay(DELAY_DURATION);\n\n  // Save Artist\n  let receivedArtist;\n  try {\n    if (artist.id) {\n      // Update member if it has an id\n      receivedArtist = yield API.put(`/artists/${artist.id}`, artist);\n    } else {\n      // Create member if it does not have an id\n      receivedArtist = yield API.post('/artists', artist);\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing artist ${\n        artist.id ? artist.id : artist.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  // Save unit\n  unit.members = unitMembers;\n  unit.artistId = receivedArtist.data.id;\n  let receivedUnit;\n\n  try {\n    if (unit.id) {\n      // Update member if it has an id\n      receivedUnit = yield API.put(`/units/${unit.id}`, unit);\n    } else {\n      // Create member if it does not have an id\n      receivedUnit = yield API.post('/units', unit);\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing unit ${\n        unit.id ? unit.id : artist.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  yield delay(DELAY_DURATION);\n\n  yield put({ type: 'SET_MANAGE_RESULT', payload: 'SUCCESS' });\n\n  toastr.success('Complete Artist saved successfully');\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return receivedUnit;\n}\n\nfunction* updateMember(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  const { member, referenceArtist } = action;\n\n  let response;\n  try {\n    if (member.id) {\n      // Update member if it has an id\n      response = yield API.put(`/members/${member.id}`, member);\n    } else {\n      // Create member if it does not have an id\n      response = yield API.post('/members', {\n        ...member,\n        referenceArtist,\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: `Failed writing member ${\n        member.id ? member.id : member.name\n      } ${error.toString()}`,\n      actionType: action.type,\n    });\n  }\n\n  response.data.positions = {};\n  member.positions.forEach(pos => {\n    response.data.positions[`${response.data.id}:${member.name}:${pos}`] = true;\n  });\n\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n  return response.data;\n}\n\nfunction* updateUserBiases(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(`/users/${action.userId}/biases`, action.biases);\n    yield put({ type: types.SET_BIASES, payload: action.biases });\n    yield put({ type: types.SET_BIAS, payload: action.bias });\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* updateUserFavoriteArtists(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(\n      `/users/${action.userId}/favorite-artists`,\n      action.userFavoriteArtists\n    );\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\nfunction* updateUserFavoriteMembers(action) {\n  yield put({ type: 'PENDING', actionType: action.type });\n  yield delay(DELAY_DURATION);\n\n  try {\n    yield API.put(\n      `/users/${action.userId}/favorite-members`,\n      action.userFavoriteMembers\n    );\n  } catch (error) {\n    yield put({\n      type: 'ERROR_TOAST',\n      message: error.toString(),\n      actionType: action.type,\n    });\n  }\n  yield put({ type: 'CLEAR_PENDING', actionType: action.type });\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* apiSaga() {\n  yield takeLatest('INITIALIZER', initializer);\n  yield takeLatest('REQUEST_ARTISTS', requestArtists);\n  yield takeLatest('REQUEST_ARTIST', requestArtist);\n  yield takeLatest('REQUEST_COLORS', requestColors);\n  yield takeLatest('REQUEST_DISTRIBUTION', requestDistribution);\n  yield takeLatest('REQUEST_MEMBERS', requestMembers);\n  yield takeLatest('REQUEST_SONGS', requestSongs);\n  yield takeLatest('REQUEST_UNIT', requestUnit);\n  yield takeLatest('REQUEST_UNIT_MEMBERS', requestUnitMembers);\n  yield takeLatest('RESYNC_DATABASE', resyncDatabase);\n  yield takeLatest('RUN_LOGIN', runLogin);\n  yield takeLatest('RUN_LOGOUT', runLogout);\n  yield takeLatest('SEND_DISTRIBUTION', sendDistribution);\n  yield takeLatest('SEND_LOG', sendLog);\n  yield takeLatest('SEND_SONG', sendSong);\n  yield takeLatest('UPDATE_COMPLETE_ARTIST', updateCompleteArtist);\n  yield takeLatest('UPDATE_USER_BIASES', updateUserBiases);\n  yield takeLatest('UPDATE_USER_FAVORITE_ARTISTS', updateUserFavoriteArtists);\n  yield takeLatest('UPDATE_USER_FAVORITE_MEMBERS', updateUserFavoriteMembers);\n\n  yield takeEvery('TEST', test);\n}\n\nexport default apiSaga;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { toastr } from 'react-redux-toastr';\n\nimport { types } from '../reducers';\n\n// PENDING WORKERS\nconst localPendingCache = {};\n\n/**\n * Removes action type from pendingCache and updates pending if pendingCache is empty\n * @param {string} actionType\n */\nfunction* clearPending(actionType) {\n  if (typeof actionType === 'object') {\n    actionType = actionType.actionType; // eslint-disable-line\n  }\n  if (localPendingCache[actionType]) {\n    delete localPendingCache[actionType];\n  }\n\n  if (Object.keys(localPendingCache).length === 0) {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: false });\n  }\n}\n\n/**\n * Adds action type to pendingInlineCache and updates pending based on pendingInlineCache values\n * @param {string} actionType\n */\nfunction* pending({ actionType }) {\n  if (localPendingCache[actionType] === undefined) {\n    localPendingCache[actionType] = true;\n  }\n\n  if (Object.keys(localPendingCache).length > 0) {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: true });\n  } else {\n    yield put({ type: types.SET_PENDING, payload: localPendingCache });\n    yield put({ type: types.SET_LOADING, payload: false });\n  }\n}\n\n// ERROR WORKERS\n\n/**\n * Dispatches an error message and an error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* error({ message, actionType }) {\n  const errorMessage = typeof err === 'string' ? message : message.join(': ');\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield toastr.error(errorMessage);\n  yield call(clearPending, actionType);\n}\n\n/**\n * Dispatches an error message and and an inline error flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* errorInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_ERROR_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_ERROR_INLINE, payload: true });\n  console.error(errorMessage); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops an error toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* errorToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.error(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.error(message);\n  }\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n// SUCCESS WORKERS\n\n/**\n * Dispatches a success message and and an inline sucess flag, then clears pending status\n * @param {object|string} err\n * @param {string} actionType\n */\nfunction* successInline({ err, actionType }) {\n  const errorMessage = typeof err === 'string' ? err : err.toString();\n  yield put({ type: types.SET_SUCCESS_MESSAGE, payload: errorMessage });\n  yield put({ type: types.SET_SUCCESS_INLINE, payload: true });\n  console.error(message.toString()); // eslint-disable-line\n  yield call(clearPending, actionType);\n}\n\n/**\n * Pops a sucess toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* successToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.success(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.success(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// WARNING WORKERS\n\n/**\n * Pops a warning toast and cancel pending status\n * @param {array|string} message\n * @param {string} actionType\n */\nfunction* warningToast({ message, actionType }) {\n  if (Array.isArray(message)) {\n    yield toastr.warning(message[0] || '', message[1] || '');\n  } else {\n    yield toastr.warning(message);\n  }\n  yield call(clearPending, actionType);\n}\n\n// TO-DO: Remove this\nfunction* test(action) {\n  yield console.log('it calls test worker'); // eslint-disable-line\n  yield console.log(action); // eslint-disable-line\n}\n\nfunction* statusHandlingSaga() {\n  yield takeEvery('CLEAR_PENDING', clearPending);\n  yield takeEvery('ERROR', error);\n  yield takeEvery('ERROR_INLINE', errorInline);\n  yield takeEvery('ERROR_TOAST', errorToast);\n  yield takeEvery('PENDING', pending);\n  yield takeEvery('SUCCESS_INLINE', successInline);\n  yield takeEvery('SUCCESS_TOAST', successToast);\n  yield takeEvery('WARNING_TOAST', warningToast);\n  yield takeEvery('TEST', test);\n}\n\nexport default statusHandlingSaga;\n","import { all, fork } from 'redux-saga/effects';\nimport apiSaga from './api-saga';\nimport statusHandlingSaga from './status-handling';\n\nexport default function* rootSaga() {\n  yield all([fork(apiSaga), fork(statusHandlingSaga)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, thunkMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger({ collapsed: true }));\n}\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ActiveSongWidget = ({ activeSong, inline }) => {\n  // Return nothing if currentUnit is not available\n  if (!activeSong.id) {\n    return null;\n  }\n\n  const inlineClass = inline ? 'inline' : '';\n\n  return (\n    <section className={`active-widget active-widget--quarter ${inlineClass}`}>\n      <h3>Active Song:</h3>\n      <div className=\"active-widget__content\">\n        <h1>\n          {activeSong.title.toUpperCase()}{' '}\n          <span className=\"active-widget__unit\">\n            (by {activeSong.originalArtist})\n          </span>\n        </h1>\n      </div>\n    </section>\n  );\n};\n\nActiveSongWidget.propTypes = {\n  activeSong: PropTypes.object,\n  inline: PropTypes.bool,\n};\n\nActiveSongWidget.defaultProps = {\n  activeSong: {},\n  inline: false,\n};\n\nexport default ActiveSongWidget;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ActiveSongWidget from '../components/ActiveSongWidget';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribution: state.distribution,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ActiveSongWidget)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../utils';\n\nconst ActiveUnitWidget = ({ activeUnit, showMembers, inline }) => {\n  // Return nothing if currentUnit is not available\n  if (!activeUnit.id) {\n    return null;\n  }\n\n  const inlineClass = inline ? 'inline' : '';\n\n  return (\n    <section className={`active-widget ${inlineClass}`}>\n      <h3>Active Unit:</h3>\n      <div className=\"active-widget__content\">\n        <h1>\n          {activeUnit.artistName.toUpperCase()}{' '}\n          <span className=\"active-widget__unit\">({activeUnit.name})</span>\n          <span className=\"active-widget__genre\">\n            {activeUnit.genre} - {Object.values(activeUnit.members).length}{' '}\n            members\n          </span>\n        </h1>\n        {showMembers ? (\n          <ul className=\"active-widget__members\">\n            {Object.values(activeUnit.members).map(member => (\n              <li\n                key={member.id}\n                className={`pill background-color-${utils.getColorNumber(\n                  member.colorId\n                )}`}\n              >\n                {member.name}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className=\"active-widget__members-count\">3</p>\n        )}\n      </div>\n    </section>\n  );\n};\n\nActiveUnitWidget.propTypes = {\n  activeUnit: PropTypes.object,\n  inline: PropTypes.bool,\n  showMembers: PropTypes.bool,\n};\n\nActiveUnitWidget.defaultProps = {\n  activeUnit: {},\n  inline: false,\n  showMembers: false,\n};\n\nexport default ActiveUnitWidget;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ActiveUnitWidget from '../components/ActiveUnitWidget';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribution: state.distribution,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ActiveUnitWidget)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport YouTube from 'react-youtube';\n\n// Import common components\nimport { Icon } from '../../common';\n\nclass ActiveVideoWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 0,\n    };\n\n    this.setDimentions = this.setDimentions.bind(this);\n  }\n\n  componentDidUpdate() {\n    // Determine player height\n    if (!this.state.height && document.getElementById('video-container')) {\n      this.setDimentions();\n    }\n  }\n\n  setDimentions() {\n    let width = document.getElementById('video-container').clientWidth;\n    let height = document.getElementById('video-container').clientHeight;\n    if (width > height) {\n      width = (16 * height) / 9;\n    } else {\n      height = (9 * width) / 16;\n    }\n\n    this.setState(() => ({ width, height }));\n  }\n\n  render() {\n    const opts = {\n      height: this.state.height,\n      width: this.state.width,\n    };\n\n    const hasVideoClass = this.props.videoId\n      ? ''\n      : 'active-widget__video--placeholder';\n\n    return (\n      <section\n        className={`active-widget active-widget--quarter active-widget__video ${hasVideoClass}`}\n        id=\"video-container\"\n      >\n        {this.props.videoId ? (\n          <YouTube videoId={this.props.videoId} opts={opts} />\n        ) : (\n          <Icon type=\"youtube\" color=\"white\" size=\"72\" />\n        )}\n      </section>\n    );\n  }\n}\n\nActiveVideoWidget.propTypes = {\n  videoId: PropTypes.string.isRequired,\n};\n\nActiveVideoWidget.defaultProps = {};\n\nexport default ActiveVideoWidget;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon } from '../../common';\n\nclass Collapsible extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n\n    this.collapse = this.collapse.bind(this);\n    this.enforceProperties = this.enforceProperties.bind(this);\n    this.expand = this.expand.bind(this);\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  componentDidMount() {\n    this.enforceProperties();\n  }\n\n  componentDidUpdate(nextProps) {\n    if (\n      this.props.synced &&\n      (nextProps.expanded !== this.props.expanded ||\n        nextProps.collapsed !== this.props.collapsed)\n    ) {\n      this.enforceProperties();\n    }\n  }\n\n  enforceProperties() {\n    if (this.props.expanded) {\n      this.expand();\n    }\n    if (this.props.collapsed) {\n      this.collapse();\n    }\n  }\n\n  togglePanel() {\n    if (!this.props.locked) {\n      this.setState({\n        expanded: !this.state.expanded,\n      });\n    }\n  }\n\n  expand() {\n    this.setState({\n      expanded: true,\n    });\n  }\n\n  collapse() {\n    this.setState({\n      expanded: false,\n    });\n  }\n\n  render() {\n    const { title, locked } = this.props;\n\n    let iconComponent = null;\n    if (locked) {\n      iconComponent = <Icon type=\"lock\" color=\"gray\" />;\n    } else if (this.state.expanded) {\n      iconComponent = <Icon type=\"chevron-up\" color=\"gray\" />;\n    } else {\n      iconComponent = <Icon type=\"chevron-down\" color=\"gray\" />;\n    }\n\n    return (\n      <section className=\"collapsible\">\n        <button\n          className={`collapsible__header ${locked ? 'locked' : ''}`}\n          disabled={locked}\n          onClick={this.togglePanel}\n        >\n          <h3 className=\"collapsible__title\">{title}</h3>\n          <span className=\"collapsible__icon\">{iconComponent}</span>\n        </button>\n        <div\n          className={`collapsible__content ${\n            this.state.expanded ? 'expanded' : 'collapsed'\n          }`}\n        >\n          {this.state.expanded && this.props.children}\n        </div>\n      </section>\n    );\n  }\n}\n\nCollapsible.propTypes = {\n  children: PropTypes.any.isRequired,\n  collapsed: PropTypes.bool,\n  expanded: PropTypes.bool,\n  locked: PropTypes.bool,\n  synced: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n};\n\nCollapsible.defaultProps = {\n  collapsed: false,\n  expanded: false,\n  locked: false,\n  synced: false,\n};\n\nexport default Collapsible;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../index';\n\nconst ErrorModal = ({ app, handleCloseErrorModal, handleSendBugReport }) => {\n  if (app.error) {\n    return (\n      <div className=\"modal-error\">\n        <main className=\"modal-error__content\">\n          <button className=\"close\" onClick={handleCloseErrorModal}>\n            ×\n          </button>\n          <Icon type=\"error\" color=\"red\" size=\"96\" />\n          <h1>AN ERROR HAS OCURRED</h1>\n          <h3 className=\"modal-error__error-message\">{app.errorMessage}</h3>\n          <h4>\n            You may close this modal, but the website might not work as\n            expected.\n          </h4>\n          <button className=\"btn\" onClick={handleSendBugReport}>\n            Send Bug Report\n          </button>\n        </main>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nErrorModal.propTypes = {\n  app: PropTypes.object.isRequired,\n  handleCloseErrorModal: PropTypes.func.isRequired,\n  handleSendBugReport: PropTypes.func.isRequired,\n};\n\nexport default ErrorModal;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ErrorModal from '../components/ErrorModal';\n\nimport { appOperations } from '../../../reducers/app';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n});\n\nconst mapDispatchToProps = {\n  ...appOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ErrorModal)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon } from '../../common';\n\nconst FavoriteIcon = ({ action, className, id, size, state }) => (\n  <button\n    className={`btn btn-transparent ${className}`}\n    onClick={() => action(id)}\n  >\n    {state ? (\n      <Icon type=\"heart\" color=\"red\" size={size} />\n    ) : (\n      <Icon type=\"heart-hollow\" color=\"gray\" size={size} />\n    )}\n  </button>\n);\n\nFavoriteIcon.propTypes = {\n  action: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  state: PropTypes.bool,\n};\n\nFavoriteIcon.defaultProps = {\n  className: '',\n  size: 12,\n  state: false,\n};\n\nexport default FavoriteIcon;\n","// When pasting SVG from illustrator, use helper to convert svg string into a inline string: https://repl.it/@kavispires/ConvertSVGtoInlineString\n\nexport default {\n  alert:\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M57,78c0,1.2-1,2.2-2.2,2.2h-9.6 c-1.2,0-2.2-1-2.2-2.2v-9.6c0-1.2,1-2.2,2.2-2.2h9.6c1.2,0,2.2,1,2.2,2.2V78z M56.6,57.8c-0.2,1.1-1.5,2-3.2,2h-6.9 c-1.6,0-3-0.9-3.2-2L38,22.2c-0.1-0.6,0.2-1.2,0.8-1.7c0.6-0.5,1.5-0.7,2.4-0.7h17.6c0.9,0,1.8,0.3,2.4,0.7c0.6,0.5,0.9,1.1,0.8,1.7 L56.6,57.8z',\n  'back-arrow':\n    'M87.4,37.1C76.6,28,63.8,23.3,50.2,20.5c-3.9-0.8-7.9-1.3-12-2c0-3.7,0-7.2,0-10.8c0-1.9-0.5-3.4-2.3-4.3 c-1.8-0.9-3.4-0.3-4.9,1c-9.7,8.5-19.4,17-29.1,25.6c-2.5,2.2-2.5,4.5,0,6.8c9.7,8.5,19.4,17,29.1,25.6c1.5,1.3,3.1,1.8,4.9,1 c1.8-0.8,2.2-2.4,2.2-4.3c-0.1-3.7,0-7.4,0-11.9c6.4,1.3,12.4,2.2,18.3,3.8c7,1.8,13.4,4.9,18.6,10.1c3.6,3.7,5.8,8,5.1,13.3 c-0.6,4.4-2.8,8.1-6.1,10.9c-3.1,2.6-6.6,4.6-10,6.8c-1.2,0.8-2.4,1.6-1.7,3.2c0.7,1.8,2.2,1.6,3.6,1.1c1.7-0.7,3.3-1.3,5-2 c9.1-4.1,17.4-9.2,23.4-17.4c5-6.8,7-14.4,4.8-22.7C97.3,47.3,93,41.7,87.4,37.1z',\n  'back-arrow-circle':\n    'M50,0c27.7,0,50,22.4,50,50c0,27.6-22.5,50-50.1,50C22.3,100-0.1,77.5,0,49.9C0.1,22.3,22.5,0,50,0z M41.9,49.6 c4.3,0.9,8.4,1.5,12.4,2.5c4.7,1.2,9.1,3.3,12.6,6.9c2.5,2.5,3.9,5.4,3.5,9c-0.4,3-1.9,5.5-4.1,7.4c-2.1,1.7-4.5,3.1-6.8,4.6 c-0.8,0.5-1.6,1.1-1.2,2.2c0.5,1.2,1.5,1.1,2.5,0.7c1.1-0.4,2.3-0.9,3.4-1.4c6.1-2.8,11.8-6.2,15.8-11.8c3.4-4.6,4.7-9.7,3.2-15.4 c-1.3-4.8-4.2-8.6-7.9-11.7c-7.3-6.2-16-9.3-25.2-11.2c-2.7-0.5-5.4-0.9-8.1-1.3c0-2.5,0-4.9,0-7.3c0-1.3-0.3-2.3-1.5-2.9 c-1.2-0.6-2.3-0.2-3.3,0.7C30.5,26.5,23.9,32.2,17.3,38c-1.7,1.5-1.7,3.1,0,4.6c6.6,5.8,13.1,11.5,19.7,17.3c1,0.9,2.1,1.2,3.3,0.7 c1.2-0.6,1.5-1.6,1.5-2.9C41.8,55.2,41.9,52.7,41.9,49.6z',\n  check:\n    'M50,0C22.5,0,0,22.5,0,50s22.5,50,50,50s50-22.5,50-50S77.5,0,50,0z M75.6,41.2L47.5,73.1 c-1.2,1.2-3.1,1.2-4.4,0.6L23.1,60c-1.9-1.3-1.9-3.1-0.6-4.4l6.2-8.8c0.6-1.9,2.5-1.9,4.4-1.2l6.9,5c1.2,1.2,3.1,0.6,4.4-0.6 l18.1-20c1.2-1.2,3.1-1.2,4.4,0l8.1,6.9C76.2,38.1,76.2,40,75.6,41.2z',\n  'chevron-down':\n    'M49.8,75c-1.6,0-3.1-0.6-4.4-1.8L6.8,35.7c-2.5-2.4-2.5-6.4-0.1-8.8c2.4-2.5,6.4-2.5,8.8-0.1l34.3,33.3l34.7-33.3 c2.5-2.4,6.4-2.3,8.8,0.2c2.4,2.5,2.3,6.4-0.2,8.8L54.1,73.3C52.9,74.4,51.4,75,49.8,75z',\n  'chevron-left':\n    'M25,49.8c0-1.6,0.6-3.1,1.8-4.4L64.3,6.8c2.4-2.5,6.4-2.5,8.8-0.1c2.5,2.4,2.5,6.4,0.1,8.8L39.9,49.8l33.3,34.7 c2.4,2.5,2.3,6.4-0.2,8.8c-2.5,2.4-6.4,2.3-8.8-0.2L26.7,54.1C25.6,52.9,25,51.4,25,49.8z',\n  'chevron-right':\n    'M75,50.2c0,1.6-0.6,3.1-1.8,4.4L35.7,93.2c-2.4,2.5-6.4,2.5-8.8,0.1c-2.5-2.4-2.5-6.4-0.1-8.8l33.3-34.3L26.7,15.5 C24.4,13,24.4,9,26.9,6.6c2.5-2.4,6.4-2.3,8.8,0.2l37.5,39.1C74.4,47.1,75,48.6,75,50.2z',\n  'chevron-up':\n    'M50.2,25c1.6,0,3.1,0.6,4.4,1.8l38.7,37.5c2.5,2.4,2.5,6.4,0.1,8.8c-2.4,2.5-6.4,2.5-8.8,0.1L50.2,39.9L15.5,73.3 C13,75.6,9,75.6,6.6,73.1c-2.4-2.5-2.3-6.4,0.2-8.8l39.1-37.5C47.1,25.6,48.6,25,50.2,25z',\n  clock:\n    'M100,50c0,9.4-2.2,17.8-6.6,25.1c-4.6,7.6-10.7,13.7-18.3,18.3C67.8,97.8,59.4,100,50,100s-17.8-2.2-25.1-6.6 c-7.6-4.6-13.7-10.7-18.3-18.3C2.2,67.8,0,59.4,0,50s2.2-17.8,6.6-25.1c4.6-7.6,10.7-13.7,18.3-18.3C32.2,2.2,40.6,0,50,0 s17.8,2.2,25.1,6.6c7.6,4.6,13.7,10.7,18.3,18.3C97.8,32.2,100,40.6,100,50z M85.4,50c0-6.2-1.5-12.2-4.6-17.8 c-3.2-5.5-7.5-9.8-13-13c-5.6-3-11.6-4.6-17.8-4.6s-12.2,1.5-17.8,4.6c-5.5,3.2-9.8,7.5-13,13c-3,5.6-4.6,11.6-4.6,17.8 s1.5,12.2,4.6,17.8c3.2,5.5,7.5,9.8,13,13c5.6,3,11.6,4.6,17.8,4.6s12.2-1.5,17.8-4.6c5.5-3.2,9.8-7.5,13-13 C83.9,62.2,85.4,56.2,85.4,50z M58.4,26.9v29.2c0,0.6-0.2,1.1-0.7,1.6c-0.5,0.5-1,0.7-1.6,0.7H35.4c-0.6,0-1.1-0.2-1.6-0.7 c-0.3-0.6-0.5-1.1-0.5-1.6v-4.1c0-0.6,0.2-1.1,0.5-1.4c0.5-0.5,1-0.7,1.6-0.7H50V26.9c0-0.5,0.2-0.9,0.7-1.4 c0.2-0.5,0.6-0.7,1.4-0.7h4.1c0.6,0,1.1,0.2,1.6,0.7C58.2,26,58.4,26.5,58.4,26.9z',\n  default:\n    'M81.2,12.5c3.8,0,6.2,2.5,6.2,6.2v62.5c0,3.8-2.5,6.2-6.2,6.2H18.8c-3.7,0-6.2-2.5-6.2-6.2V18.8 c0-3.7,2.5-6.2,6.2-6.2H81.2 M81.2,0H18.8C8.1,0,0,8.1,0,18.8v62.5C0,91.9,8.1,100,18.8,100h62.5c10.6,0,18.8-8.1,18.8-18.8V18.8 C100,8.1,91.9,0,81.2,0L81.2,0z M35.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,35.7,35.3,33.6,35.3,31.1z M58.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,35.7,58.3,33.6,58.3,31.1z M81.3,31.1v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,35.7,81.3,33.6,81.3,31.1z M35.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,58.3,35.3,56.3,35.3,53.8z M58.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,58.3,58.3,56.3,58.3,53.8z M81.3,53.8v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,58.3,81.3,56.3,81.3,53.8z M35.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C33.3,81,35.3,79,35.3,76.5z M58.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C56.3,81,58.3,79,58.3,76.5z M81.3,76.5v-7.6c0-2.5-2-4.5-4.5-4.5h-7.6c-2.5,0-4.5,2-4.5,4.5v7.6c0,2.5,2,4.5,4.5,4.5h7.6 C79.3,81,81.3,79,81.3,76.5z',\n  error:\n    'M70.7,0H29.3L0,29.3v41.4L29.3,100h41.4L100,70.7V29.3L70.7,0z M45.1,69.6v-6.7c0-0.8,0.7-1.5,1.5-1.5h6.7 c0.8,0,1.5,0.7,1.5,1.5v6.7c0,0.8-0.7,1.5-1.5,1.5h-6.7C45.8,71.2,45.1,70.5,45.1,69.6z M54.6,55.5c-0.1,0.8-1.1,1.4-2.2,1.4h-4.8 c-1.2,0-2.1-0.6-2.2-1.4l-3.7-24.9c-0.1-0.4,0.1-0.9,0.6-1.2c0.4-0.3,1-0.5,1.7-0.5h12.3c0.6,0,1.2,0.2,1.7,0.5 c0.4,0.3,0.6,0.8,0.6,1.2L54.6,55.5z',\n  'hand-negative':\n    'M61.01,72.06c1.49,3.99,3.22,7.93,4.26,12.03c2.28,8.94-4.49,16.89-13.28,15.8c-4.59-0.57-7.71-3.45-10.01-7.24 c-2.28-3.76-4.65-7.49-6.54-11.44c-3.42-7.17-8.8-12.32-15.49-16.34c-2.88-1.73-5.66-3.62-8.43-5.54c-1.76-1.22-2.96-2.81-2.95-5.15 c0.04-11.38-0.03-22.77,0.07-34.15c0.03-3.54,1.91-5.75,5.29-6.81c1.1-0.34,2.26-0.51,3.4-0.67c5.24-0.76,10.34-1.71,14.98-4.7 c6.03-3.88,12.82-6.16,19.88-7.33c5.4-0.9,10.84-0.75,16.06,1.23c5.36,2.03,9.32,5.37,10.85,11.21c0.4,1.52,1.41,3,2.49,4.19 c2.96,3.27,4.18,6.97,3.83,11.36c-0.1,1.29,0.28,2.8,0.94,3.92c1.67,2.87,2.89,5.87,2.52,9.18c-0.24,2.16,0.13,3.95,1.05,5.9 c2.78,5.9,1.6,12.48-2.61,16.48c-2.75,2.6-6.16,3.15-9.68,3.21c-6.06,0.09-12.13,0.03-18.81,0.03 C59.75,69.26,60.48,70.63,61.01,72.06z M14.52,54.03c0.67,0.54,1.43,1.22,2.27,1.79c2.24,1.54,4.43,3.18,6.79,4.51 c7.95,4.5,13.46,11.14,17.52,19.2c1.63,3.23,3.52,6.33,5.39,9.43c0.73,1.21,1.61,2.36,2.62,3.34c1.92,1.85,4.24,2.56,6.76,1.4 c2.56-1.18,4.03-3.25,3.99-6.13c-0.02-1.27-0.26-2.59-0.7-3.78c-1.47-4-3.06-7.95-4.63-11.91c-0.28-0.72-0.67-1.4-0.96-2.12 c-1.77-4.49,0.54-8.2,5.33-8.3c5.56-0.12,11.13-0.03,16.7-0.05c1.16,0,2.34,0.03,3.49-0.14c4.83-0.68,7.08-3.47,6.37-8.31 c-0.25-1.72-1.35-3.29-1.94-4.98c-0.45-1.29-1.25-2.82-0.91-3.96c1.32-4.45-0.14-7.83-3.32-10.78c-0.18-0.17-0.25-0.45-0.5-0.91 c0.93-5.11,2.08-10.58-4.55-13.12c-0.18-0.9-0.35-1.52-0.43-2.15c-0.76-6.1-3.64-9.05-9.69-10.43C56.85,4.97,50,6.5,43.25,8.97 c-2.42,0.89-4.93,1.82-7.01,3.28c-5.48,3.84-11.59,5.48-18.12,6.09c-1.12,0.1-2.21,0.45-3.6,0.75 C14.52,31.05,14.52,42.42,14.52,54.03z',\n  'hand-positive':\n    'M46.01,6c-2.12,3.51-4.26,7.02-6.1,10.68c-4.59,9.12-10.84,16.63-19.83,21.73c-2.67,1.51-5.15,3.37-7.68,5.11 c-0.95,0.65-1.81,1.42-2.57,2.03c0,13.14,0,26.02,0,39.56c1.58,0.34,2.82,0.73,4.08,0.85c7.38,0.69,14.3,2.55,20.51,6.9 c2.36,1.65,5.2,2.71,7.94,3.71c7.64,2.8,15.4,4.53,23.63,2.65c6.84-1.57,10.11-4.9,10.97-11.81c0.09-0.71,0.28-1.41,0.49-2.44 c7.51-2.88,6.2-9.07,5.15-14.85c0.28-0.53,0.36-0.85,0.56-1.04c3.6-3.35,5.26-7.17,3.76-12.21c-0.38-1.28,0.53-3.02,1.03-4.48 c0.66-1.91,1.91-3.69,2.19-5.64c0.8-5.48-1.74-8.64-7.21-9.41c-1.3-0.18-2.63-0.15-3.95-0.15c-6.3-0.02-12.6,0.08-18.9-0.05 c-5.42-0.12-8.04-4.31-6.04-9.4c0.32-0.82,0.76-1.59,1.08-2.4c1.77-4.49,3.57-8.96,5.24-13.49c0.49-1.35,0.77-2.84,0.79-4.27 c0.04-3.25-1.62-5.6-4.52-6.93c-2.86-1.31-5.49-0.51-7.66,1.58C47.84,3.33,46.84,4.64,46.01,6z',\n  heart:\n    'M50,85.5c-1,0-1.9-0.3-2.5-1L12.7,51c-0.1,0-0.4-0.2-0.7-0.6s-0.6-0.7-0.9-0.8c-0.7-0.8-1.7-2-3.1-3.7 c-1.3-1.6-2.5-3.4-3.7-5.5c-1-1.7-2-3.9-2.9-6.6C0.5,31.2,0,28.6,0,26c0-8.1,2.3-14.5,7-19.1C11.6,2.3,18.2,0,26.8,0 c2.2,0,4.6,0.4,7,1.2s4.7,1.8,6.6,3.1c1.8,1.2,3.6,2.5,5.3,3.9c1.6,1.2,3,2.4,4.3,3.7c1.3-1.3,2.7-2.5,4.3-3.7 c1.7-1.4,3.5-2.7,5.3-3.9c2-1.3,4.2-2.3,6.6-3.1C68.7,0.4,71,0,73.2,0C81.8,0,88.4,2.3,93,6.8c4.7,4.7,7,11.1,7,19.1 s-4.2,16.5-12.7,25.2L52.5,84.6C51.9,85.2,51,85.5,50,85.5z',\n  'heart-hollow':\n    'M73.2,8c6.4,0,11,1.5,14.1,4.5C90.5,15.6,92,20.1,92,26c0,5.9-3.5,12.4-10.3,19.5L50,75.9L18.3,45.2 c-0.2-0.2-0.4-0.4-0.6-0.5c-0.3-0.3-0.7-0.7-1-1c-0.6-0.8-1.5-1.7-2.5-3c-1-1.2-1.9-2.6-2.9-4.2c-0.1-0.1-0.1-0.2-0.2-0.3 c-0.5-0.8-1.3-2.3-2.2-5c0,0,0-0.1,0-0.1C8.3,29.4,8,27.7,8,26c0-5.9,1.5-10.3,4.7-13.5c3-3,7.6-4.5,14.1-4.5 c1.4,0,2.9,0.3,4.6,0.8c1.7,0.6,3.3,1.3,4.6,2.2c0,0,0.1,0,0.1,0.1c1.5,1,3,2.1,4.4,3.3c0.1,0.1,0.2,0.2,0.4,0.3 c1.3,0.9,2.4,1.9,3.4,3c1.5,1.5,3.5,2.3,5.7,2.3s4.2-0.8,5.7-2.3c1-1,2.2-2,3.4-3c0.1-0.1,0.2-0.2,0.4-0.3c1.4-1.2,2.9-2.3,4.4-3.3 c0,0,0.1,0,0.1-0.1c1.3-0.9,2.9-1.6,4.6-2.2C70.3,8.3,71.9,8,73.2,8 M73.2,0c-2.2,0-4.6,0.4-7,1.2C63.7,2,61.5,3,59.6,4.3 c-1.8,1.2-3.6,2.5-5.3,3.9c-1.6,1.2-3,2.4-4.3,3.7c-1.3-1.3-2.7-2.5-4.3-3.7c-1.7-1.4-3.5-2.7-5.3-3.9c-2-1.3-4.2-2.3-6.6-3.1 C31.3,0.4,29,0,26.8,0C18.2,0,11.6,2.3,7,6.8C2.3,11.5,0,17.9,0,26c0,2.6,0.5,5.2,1.4,7.8c0.9,2.7,1.9,4.9,2.9,6.6 c1.2,2.1,2.4,3.9,3.7,5.5c1.4,1.7,2.5,2.9,3.1,3.7c0.3,0.1,0.6,0.4,0.9,0.8c0.3,0.4,0.6,0.6,0.7,0.6l34.8,33.6c0.7,0.7,1.5,1,2.5,1 s1.9-0.3,2.5-1l34.8-33.4C95.8,42.4,100,34,100,26c0-8.1-2.3-14.5-7-19.1C88.4,2.3,81.8,0,73.2,0L73.2,0z',\n  info:\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M57.9,78.3c0,1.7-1.3,3-3,3h-9.9 c-1.7,0-3-1.3-3-3V43.6c0-1.7,1.3-3,3-3h9.9c1.7,0,3,1.3,3,3V78.3z M57.9,30.6c0,1.7-1.3,3-3,3h-9.9c-1.7,0-3-1.3-3-3v-9.9 c0-1.7,1.3-3,3-3h9.9c1.7,0,3,1.3,3,3V30.6z',\n  lock:\n    'M20.2,100h59.6c3.5,0,6.4-2.9,6.4-6.4V44.7c0-3.5-2.9-6.4-6.4-6.4h-3.2V26.6C76.6,11.9,64.7,0,50,0S23.4,11.9,23.4,26.6 v11.7h-3.2c-3.5,0-6.4,2.9-6.4,6.4v48.9C13.8,97.1,16.7,100,20.2,100z M50,77.7c-4.7,0-8.5-3.8-8.5-8.5c0-4.7,3.8-8.5,8.5-8.5 s8.5,3.8,8.5,8.5C58.5,73.8,54.7,77.7,50,77.7z M40.4,26.6c0-5.3,4.3-9.6,9.6-9.6s9.6,4.3,9.6,9.6v11.7H40.4V26.6z',\n  login:\n    'M77.2,50c0,1.1-0.5,2.1-1.4,3L40.4,88.4c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H4.1 c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3 c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L75.8,47C76.7,47.9,77.2,48.9,77.2,50z M82,8H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20 c1.7,0,10,0.7,10,11v21v4v21c0,10.3-8.4,11-10,11H62c-2.2,0-4,1.8-4,4s1.8,4,4,4h20c0.5,0,4.6-0.1,8.9-2.3C95,87.4,100,82.7,100,73 V52v-4V27C100,11.4,87,8,82,8z',\n  logout:\n    'M0,27l0,21l0,4l0,21c0,9.7,5,14.4,9.1,16.7c4.3,2.3,8.4,2.3,8.9,2.3h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18c-1.6,0-10-0.7-10-11 V52v-4V27c0-10.3,8.4-11,10-11h20c2.2,0,4-1.8,4-4s-1.8-4-4-4H18C13,8,0,11.4,0,27z M100.2,50c0,1.1-0.5,2.1-1.4,3L63.4,88.4 c-0.9,0.9-1.9,1.4-3,1.4c-1.1,0-2.1-0.5-3-1.4c-0.8-0.8-1.1-1.8-1.1-3V66.7H27.1c-0.9,0-1.9-0.4-3-1.1c-0.8-0.8-1.1-1.8-1.1-3V37.4 c0-1.2,0.4-2.2,1.1-3c1.1-0.8,2.1-1.1,3-1.1h29.2V14.6c0-1.2,0.4-2.2,1.1-3c0.9-0.9,1.9-1.4,3-1.4c1.1,0,2.1,0.5,3,1.4L98.8,47 C99.7,47.9,100.2,48.9,100.2,50z',\n  no:\n    '    M50,0C22.5,0,0,22.5,0,50s22.5,50,50,50s50-22.5,50-50S77.5,0,50,0z M72.5,65.6L65,73.1c-1.2,1.2-3.1,1.2-4.4,0L52.5,65 c-1.2-1.2-3.1-1.2-4.4,0L40,73.1c-1.2,1.2-3.1,1.2-4.4,0l-7.5-7.5c-1.2-1.2-1.2-3.1,0-4.4l8.1-8.1c1.2-1.2,1.2-3.1,0-4.4L26.9,40 c-1.2-1.2-1.2-3.1,0-4.4l7.5-7.5c1.2-1.2,3.1-1.2,4.4,0l8.1,8.1c1.9,1.2,3.8,1.2,5,0l8.1-8.1c1.2-1.2,3.1-1.2,4.4,0l7.5,7.5 c1.2,1.2,1.2,3.1,0,4.4l-8.1,8.1c-1.2,1.2-1.2,3.1,0,4.4l8.1,8.1C73.8,62.5,73.8,64.4,72.5,65.6z',\n  plug:\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,90.5 C27.6,90.5,9.5,72.4,9.5,50C9.5,27.6,27.6,9.5,50,9.5S90.5,27.6,90.5,50C90.5,72.4,72.4,90.5,50,90.5z M34,66H33 c-2.5,0-4.5-2-4.5-4.5V38.5c0-2.5,2-4.5,4.5-4.5H34c2.5,0,4.5,2,4.5,4.5v23.1C38.5,64,36.5,66,34,66z M70,66H69 c-2.5,0-4.5-2-4.5-4.5V38.5c0-2.5,2-4.5,4.5-4.5H70c2.5,0,4.5,2,4.5,4.5v23.1C74.5,64,72.5,66,70,66z',\n  'plug-available':\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,90.5 c-10.3,0-19.7-3.8-26.8-10.1c1.4,0,3.3,0.4,5.6,1.2c0.9,0.3,1.8,0.7,2.7,1.1c2.5,1,5.2,2.1,8.1,2.6c0.6,0.1,1.3,0.2,2.2,0.2 c0.9,0,1.8-0.1,2.8-0.4c3.3-1,5.1-3.7,4.8-7c-0.2-1.8-1-3.6-2.4-5.4c-2.5-3-6.2-5.1-10.2-5.7c-1.6-0.2-3.1-0.1-4.4,0 c-1.7,0.1-2.8,0.2-3.7-0.2c-1.2-0.6-2.1-2.4-2.2-4.6c-0.1-1.5,0.1-2.7,0.6-3.4c0.2-0.2,0.3-0.4,0.4-0.5c1,0.4,2.9,2.8,3.8,3.8 c0.7,0.8,1.3,1.6,1.9,2.2c1.6,1.7,3.3,2,4.4,2c1,0,2.7-0.3,4.2-1.9l1.3-1.3l0.3,0.3c6.3,6.3,16.7,6.3,23.1,0l9.8-9.8 c1.8-1.8,1.8-4.7,0-6.5l-2.9-2.9l6.8-6.8c1.1-1.1,1.1-3,0-4.1h0c-1.1-1.1-3-1.1-4.1,0l-6.8,6.8l-6.8-6.8l6.8-6.8 c1.1-1.1,1.1-3,0-4.1c-1.1-1.1-3-1.1-4.1,0l-6.8,6.8l-2.9-2.9c-1.8-1.8-4.7-1.8-6.5,0L39.1,36c-6,6-6.3,15.7-0.9,22.1 c-0.2,0.2-0.4,0.4-0.6,0.6c-0.3-0.3-0.6-0.7-0.9-1.1c-2.2-2.7-5.2-6.5-9.3-6.5c0,0,0,0-0.1,0c-1.5,0-3.8,0.6-5.8,3.2 c-1.6,2.1-2.3,4.8-2,8.2c0.4,4.8,2.7,8.7,6.2,10.4c2.6,1.2,5.2,1.1,7.2,0.9c1-0.1,2-0.1,2.8,0c2.3,0.3,4.4,1.5,5.8,3.2 c0.5,0.6,0.7,1,0.8,1.3c-0.4,0.1-1,0.1-1.7,0c-2.1-0.3-4.3-1.2-6.6-2.2c-1-0.4-2-0.8-3-1.2c-5.6-2.1-10.1-2.2-13.3-0.4 C12.6,67.8,9.5,59.3,9.5,50C9.5,27.6,27.6,9.5,50,9.5S90.5,27.6,90.5,50C90.5,72.4,72.4,90.5,50,90.5z',\n  'plug-connected':\n    'M92,0H8C3.6,0,0,3.6,0,8v84c0,4.4,3.6,8,8,8h84c4.4,0,8-3.6,8-8V8C100,3.6,96.4,0,92,0z M50,9.5c10.1,0,19.4,3.7,26.4,9.8 l-7,7c-5.2-4.1-12.9-3.8-17.7,1l-8,8c-1.5,1.5-1.5,3.9,0,5.3l2,2l-3,3l-2.4-2.4c-1.5-1.5-3.9-1.5-5.3,0l-8,8 c-4.8,4.8-5.2,12.4-1,17.7l-7,7c-5.9-7-9.5-16.1-9.5-26C9.5,27.6,27.6,9.5,50,9.5z M46.3,49.3l3-3l5,5l-3,3L46.3,49.3z M50,90.5 c-10.1,0-19.3-3.7-26.4-9.8l7-7c5.2,5.2,13.7,5.2,18.8,0l8-8c1.5-1.5,1.5-3.9,0-5.3l-2.6-2.6l3-3l3,3c1.5,1.5,3.9,1.5,5.3,0l8-8 c5.2-5.2,5.2-13.6,0-18.8L81,24c5.9,7,9.5,16.1,9.5,26C90.5,72.4,72.4,90.5,50,90.5z',\n  private:\n    'M41,0C18.4,0,0,18.4,0,41s18.4,41,41,41s41-18.4,41-41S63.6,0,41,0z M58,59.5c0,1.6-1.3,3-3,3H27c-1.7,0-3-1.4-3-3v-23 c0-1.7,1.3-3,3-3h1.5V28c0-6.9,5.6-12.5,12.5-12.5S53.5,21.1,53.5,28v5.5H55c1.7,0,3,1.3,3,3V59.5z M45.5,28v5.5h-9V28 c0-2.5,2-4.5,4.5-4.5S45.5,25.5,45.5,28z M45,48c0,2.2-1.8,4-4,4s-4-1.8-4-4c0-2.2,1.8-4,4-4S45,45.8,45,48z',\n  'question-mark':\n    'M50,0C22.4,0,0,22.4,0,50c0,27.6,22.4,50,50,50s50-22.4,50-50C100,22.4,77.6,0,50,0z M56.5,76.4c0,1-0.8,1.8-1.8,1.8h-9.5 c-1,0-1.8-0.8-1.8-1.8v-9.5c0-1,0.8-1.8,1.8-1.8h9.5c1,0,1.8,0.8,1.8,1.8V76.4z M66,38.3c0,0.9-0.1,1.6-0.3,2.3 c-0.2,0.7-0.3,1.3-0.6,1.8c-0.3,0.6-0.6,1.1-1,1.6l-6.4,7.7c-0.4,0.4-0.7,0.9-0.9,1.3c-0.2,0.3-0.2,0.5-0.2,0.8v5.2 c0,1-0.8,1.8-1.8,1.8h-9.5c-1,0-1.8-0.8-1.8-1.8v-6.1c0-1.2,0.3-2.4,0.8-3.6c0.5-1,1.1-2,1.9-2.9l6-6.9c0.3-0.3,0.5-0.7,0.6-1.1 c0.1-0.5,0.2-1,0.2-1.6v-3.5c0-0.1,0-0.5-0.6-0.9c-0.6-0.4-1.3-0.6-2.2-0.6c-0.8,0-1.6,0.2-2.4,0.6c-0.6,0.3-0.6,0.6-0.6,0.9v3.8 c0,1-0.8,1.8-1.8,1.8h-9.5c-1,0-1.8-0.8-1.8-1.8v-3.9c0-1.7,0.5-3.3,1.4-4.8c0.9-1.4,2.1-2.7,3.6-3.8c1.5-1,3.2-1.8,5.1-2.4 c1.9-0.6,3.9-0.9,6.1-0.9c2.5,0,4.8,0.4,6.9,1.1c2.1,0.7,3.9,1.8,5.3,3.2c0.7,0.7,1.2,1.3,1.7,1.9c0.5,0.6,0.9,1.4,1.2,2.1 c0.5,1.3,0.8,3.1,0.8,5.3C66,36.5,66,37.5,66,38.3z',\n  save:\n    'M100,90c0,1.5-0.5,2.8-1.5,3.8s-2.2,1.5-3.8,1.5H5.2H5c-1.3,0-2.5-0.5-3.5-1.5S0,91.5,0,90V28.2V28c0-1.5,0.3-2.7,1-3.5 l10.5-18c0.8-1.2,1.8-1.8,3-1.8h70.8h0.2c1.8,0,2.9,0.8,3.2,2.5l10,17.2v0.2c0.8,0.8,1.2,1.9,1.2,3.2v0.2V90z M90.5,22.8L83.8,11 H16.2L9.5,22.8H90.5z M67.2,58c-0.2-0.5-0.6-0.8-1.2-0.8h-7.5V37c0-1-0.5-1.5-1.5-1.5H43c-1,0-1.5,0.5-1.5,1.5v20.2H34 c-0.7,0-1.1,0.2-1.2,0.8s-0.2,1,0,1.5l16,22.5c0.3,0.3,0.8,0.5,1.2,0.5s0.9-0.2,1.2-0.5l16-22.5C67.4,59,67.4,58.5,67.2,58z',\n  stop:\n    'M68.3,90.5H31.7c-4.4,0-9.5-3-11.7-6.8L1.6,52c-2.2-3.8-2.2-9.7,0-13.5L20,6.8C22.2,3,27.3,0,31.7,0h36.6 c4.4,0,9.5,3,11.7,6.8l18.3,31.7c2.2,3.8,2.2,9.7,0,13.5L80,83.8C77.9,87.6,72.7,90.5,68.3,90.5z M31.7,5.9c-2.3,0-5.5,1.8-6.6,3.8\tL6.7,41.4c-1.2,2-1.2,5.6,0,7.6l18.3,31.7c1.2,2,4.3,3.8,6.6,3.8h36.6c2.3,0,5.5-1.8,6.6-3.8l18.3-31.7c1.1-2,1.1-5.6,0-7.6 L74.9,9.7c-1.1-2-4.3-3.8-6.6-3.8H31.7z M70.9,30.5c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.8-3.6,4.6c0,4.8,0,9.6,0,14.3 c0,0.7-0.4,1.3-0.7,2c-0.3-0.7-0.9-1.3-0.9-2c-0.1-6,0-11.9-0.1-17.9c0-2.8-1.4-4.5-3.7-4.5c-2.2,0-3.6,1.7-3.6,4.6 c0,6,0,11.9,0,17.9c0,0.6-0.5,1.3-0.8,1.9c-0.3-0.6-0.7-1.2-0.9-1.9c-0.1-0.5,0-1.1,0-1.6c0-7.8,0-15.5,0-23.3 c0-2.1-0.5-3.8-2.8-4.3c-2.5-0.6-4.4,1.1-4.4,4c0,8,0,16,0,24c0,1-0.5,2-0.8,3c-0.3-1-0.8-2-0.8-3.1c-0.1-5.8,0.1-11.6-0.1-17.4 c0-1.2-1.1-2.8-2.1-3.4c-0.8-0.5-2.8-0.2-3.6,0.5c-0.9,0.8-1.3,2.4-1.3,3.7c-0.1,10.6,0,21.2-0.1,31.8c0,0.7-0.5,1.3-0.7,2 c-0.5-0.4-1.1-0.8-1.5-1.3c-2.3-3.6-4.4-7.2-6.7-10.8c-1.5-2.5-3.5-3.2-5.4-2c-2,1.2-2.3,3.2-0.8,5.7c3.2,5.3,6.5,10.5,9.7,15.8 c2.6,4.3,6.4,6.3,11.4,6.3c4.9,0,9.9,0,14.8,0c8.1,0,13.2-5.1,13.3-13.2c0-5,0-10,0-15.1C70.9,41.2,70.9,35.8,70.9,30.5z',\n  'sub-unit':\n    'M81.23,55.11c0,0.98-0.29,1.69-0.87,2.12c-0.58,0.43-1.54,0.65-2.89,0.65h-5.49v-5.53h5.49c1.35,0,2.32,0.22,2.89,0.65 C80.94,53.42,81.23,54.12,81.23,55.11z M79.61,46.63c0.59-0.39,0.88-1.02,0.88-1.88c0-0.91-0.29-1.57-0.88-1.99 c-0.59-0.42-1.52-0.63-2.8-0.63h-4.83v5.09h4.83C78.08,47.22,79.02,47.02,79.61,46.63z M100,34.03v31.94 C100,71.49,95.49,76,89.97,76H10.03C4.51,76,0,71.49,0,65.97V34.03C0,28.51,4.51,24,10.03,24h79.94C95.49,24,100,28.51,100,34.03z  M34.07,55.18c0-1.33-0.28-2.47-0.85-3.43c-0.57-0.96-1.52-1.8-2.88-2.53c-1.35-0.72-3.21-1.35-5.57-1.86 c-1.45-0.29-2.54-0.58-3.28-0.87c-0.74-0.28-1.24-0.57-1.51-0.87s-0.41-0.68-0.41-1.14c0-0.79,0.38-1.42,1.14-1.9 c0.76-0.48,1.77-0.72,3.02-0.72c2.6,0,5.09,0.81,7.45,2.43l2.06-4.79c-0.98-0.84-2.35-1.52-4.11-2.05 c-1.76-0.53-3.57-0.79-5.44-0.79c-2.11,0-3.99,0.36-5.62,1.09c-1.63,0.73-2.9,1.72-3.8,2.99c-0.9,1.27-1.35,2.7-1.35,4.3 c0,1.4,0.28,2.58,0.83,3.54s1.52,1.79,2.89,2.51s3.28,1.33,5.71,1.84c1.97,0.42,3.3,0.84,4,1.25c0.7,0.42,1.05,0.96,1.05,1.62 c0,0.74-0.39,1.31-1.16,1.71c-0.77,0.41-1.9,0.61-3.37,0.61c-1.45,0-2.89-0.21-4.31-0.63c-1.43-0.42-2.77-1.02-4.02-1.81l-2.1,4.79 c1.18,0.86,2.72,1.55,4.61,2.06c1.89,0.52,3.81,0.77,5.75,0.77c3.56,0,6.33-0.72,8.3-2.16C33.09,59.73,34.07,57.74,34.07,55.18z  M60.8,37h-6.67v15.3c0,1.87-0.42,3.31-1.25,4.31c-0.84,1.01-2.04,1.51-3.61,1.51c-1.57,0-2.78-0.5-3.61-1.51 c-0.84-1.01-1.25-2.44-1.25-4.31V37h-6.64v15.04c0,3.69,0.98,6.49,2.93,8.41c1.95,1.92,4.81,2.88,8.57,2.88 c3.74,0,6.59-0.96,8.57-2.89c1.98-1.93,2.97-4.73,2.97-8.39V37z M87.53,55.88c0-1.6-0.41-2.94-1.22-4.04 c-0.81-1.09-1.98-1.87-3.5-2.34c1.28-0.47,2.27-1.21,2.99-2.23c0.71-1.02,1.07-2.19,1.07-3.52c0-2.06-0.81-3.71-2.42-4.92 C82.84,37.61,80.67,37,77.95,37H65.37V63h12.94c1.87,0,3.5-0.29,4.89-0.88c1.39-0.59,2.46-1.42,3.21-2.49 C87.16,58.55,87.53,57.31,87.53,55.88z',\n  trash:\n    'M91.8,18.7v4.1c0,0.5-0.2,1-0.5,1.6c-0.6,0.3-1.1,0.5-1.6,0.5h-6.2v61.9c0,3.7-1.1,6.8-3.2,9.4c-2,2.6-4.4,3.9-7.3,3.9 H18.7c-2.9,0-5.3-1.2-7.3-3.7c-2.1-2.6-3.2-5.7-3.2-9.4V24.9H2.1c-0.5,0-1-0.2-1.6-0.5C0.2,23.8,0,23.3,0,22.8v-4.1 c0-0.5,0.2-1,0.5-1.6c0.6-0.3,1.1-0.5,1.6-0.5h20.1l4.6-11c0.8-1.7,2-3,3.7-4.1c1.5-1.1,3.2-1.6,5-1.6h21c1.8,0,3.5,0.5,5,1.6 c1.7,1.1,2.9,2.4,3.7,4.1l4.6,11h20.1c0.5,0,1,0.2,1.6,0.5C91.6,17.7,91.8,18.3,91.8,18.7z M33.3,81.3V35.4c0-0.5-0.2-1-0.5-1.6 c-0.6-0.3-1.1-0.5-1.6-0.5h-4.1c-0.5,0-1,0.2-1.6,0.5c-0.3,0.3-0.5,0.8-0.5,1.6v45.9c0,0.8,0.2,1.3,0.5,1.6 c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5C33.2,82.3,33.3,81.7,33.3,81.3z M31.3,16.7h29.2l-3.2-7.8 c-0.2-0.2-0.5-0.4-1.1-0.7H35.6c-0.6,0.3-1,0.5-1.1,0.7L31.3,16.7z M50,81.3V35.4c0-0.5-0.2-1-0.5-1.6c-0.6-0.3-1.1-0.5-1.6-0.5 h-4.1c-0.5,0-1,0.2-1.6,0.5c-0.3,0.6-0.5,1.1-0.5,1.6v45.9c0,0.5,0.2,1,0.5,1.6c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5 C49.8,82.3,50,81.7,50,81.3z M66.7,81.3V35.4c0-0.8-0.2-1.3-0.5-1.6c-0.6-0.3-1.1-0.5-1.6-0.5h-4.1c-0.5,0-1,0.2-1.6,0.5 c-0.3,0.6-0.5,1.1-0.5,1.6v45.9c0,0.5,0.2,1,0.5,1.6c0.6,0.3,1.1,0.5,1.6,0.5h4.1c0.5,0,1-0.2,1.6-0.5C66.5,82.6,66.7,82,66.7,81.3 z',\n  youtube:\n    'M16.1,83.3c-2.8-0.2-5.8-1.1-8.3-2.4c-5-2.5-6.4-7.3-6.9-12.5c-1.2-11.2-1.1-22.4-0.3-33.5c0.2-2.7,0.6-5.3,1.2-7.9 c1.2-5.4,6-9.6,12.1-10c10.7-0.7,21.4-1.4,32-1.5C56.9,15.4,68,15.9,79,16.2c2.8,0.1,5.7,0.4,8.5,0.9c6.2,1.1,9.7,4.8,10.8,11 c1.4,7.9,1.8,16,1.5,24c-0.2,6.5-0.7,13-1.6,19.5c-0.8,6.4-5.5,10.9-12,11.3c-11,0.8-22.1,1.1-33.2,1.6c-2,0.1-4,0-6,0 C47.2,84.6,26.4,84,16.1,83.3z M40.6,34.6c0,10.3,0,20.4,0,30.6c8.4-5.2,16.5-10.2,24.9-15.3C57.1,44.8,48.9,39.8,40.6,34.6z',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport constants from '../../../utils/constants';\nimport ICONS from '../../../utils/icons';\n\nconst Icon = ({ type, size, color, inline, title }) => {\n  const margin = inline ? '0 3px' : 0;\n\n  if (!title) title = type;\n\n  const styles = {\n    svg: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      margin,\n      transform: 'translateY(-1px)',\n    },\n    path: {\n      fill: constants.DEFAULT_COLORS[color],\n    },\n  };\n\n  return (\n    <svg\n      title={title}\n      style={styles.svg}\n      width={`${size}px`}\n      height={`${size}px`}\n      viewBox=\"0 0 100 100\"\n    >\n      <path style={styles.path} d={ICONS[type]} className={`icon-${type}`}>\n        <title>{title}</title>\n      </path>\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  color: PropTypes.string,\n  inline: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, null]),\n};\n\nIcon.defaultProps = {\n  type: 'default',\n  size: 12,\n  color: 'default',\n  inline: false,\n  title: null,\n};\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst Loading = ({ message = '' }) => (\n  <main className=\"container container--flex container--center container--requirement-wrapper\">\n    <div className=\"requirement-wrapper__container\">\n      <img\n        className=\"requirement-wrapper__loading-icon\"\n        src={loading}\n        alt=\"Loading Icon\"\n      />\n      <p>{message}</p>\n    </div>\n  </main>\n);\n\nLoading.propTypes = {\n  message: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  message: '',\n};\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst LoadingIcon = ({ size }) => (\n  <span className={`loading-icon loading-icon--${size}`}>\n    <img className=\"loading-icon__image\" src={loading} alt=\"Loading Icon\" />\n  </span>\n);\n\nLoadingIcon.propTypes = {\n  size: PropTypes.string,\n};\n\nLoadingIcon.defaultProps = {\n  size: 'medium',\n};\n\nexport default LoadingIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import images\nimport loading from '../../../images/loading.svg';\n\nconst LoadingWrapper = ({ pending, children, size }) =>\n  pending ? (\n    <span className={`loading-icon loading-icon--${size}`}>\n      <img className=\"loading-icon__image\" src={loading} alt=\"Loading Icon\" />\n    </span>\n  ) : (\n    children\n  );\n\nLoadingWrapper.propTypes = {\n  children: PropTypes.object.isRequired,\n  pending: PropTypes.bool,\n  size: PropTypes.string,\n};\n\nLoadingWrapper.defaultProps = {\n  pending: false,\n  size: 'medium',\n};\n\nexport default LoadingWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport constants from '../../../../utils/constants';\n\nconst MemberNationaltyFlag = ({ nationality }) => {\n  const flag = constants.FLAGS_LIST[nationality];\n\n  let flagUrl = `${process.env.PUBLIC_URL}${\n    constants.NATIONALITY_FLAG_URL\n  }unknown.jpg`;\n\n  if (flag) {\n    flagUrl = `${process.env.PUBLIC_URL}${\n      constants.NATIONALITY_FLAG_URL\n    }${flag}.jpg`;\n  }\n\n  return (\n    <img\n      className=\"card__flag\"\n      src={flagUrl}\n      alt={nationality}\n      title={nationality}\n    />\n  );\n};\n\nMemberNationaltyFlag.propTypes = {\n  nationality: PropTypes.string,\n};\n\nMemberNationaltyFlag.defaultProps = {\n  nationality: 'unknown',\n};\n\nexport default MemberNationaltyFlag;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport constants from '../../../../utils/constants';\nimport utils from '../../../../utils';\n\nclass MemberPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.fallback = () => {\n      this.setState({ failed: true });\n    };\n  }\n\n  render() {\n    const { className, colorId, gender, memberId, name } = this.props;\n\n    const pictureUrl = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }${name.toLowerCase()}${memberId}.jpg`;\n\n    const GENDER_ENUM = gender === 'FEMALE' ? 'f' : 'm';\n\n    const colorNumber = utils.getColorNumber(colorId);\n    const profilePlaceholderCode = (colorNumber % 5) + 1;\n\n    const pictureFallback = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }profile-${GENDER_ENUM}-${profilePlaceholderCode}.png`;\n\n    if (this.state.failed) {\n      console.log(`Missing Member Picture: ${name.toLowerCase()}${memberId}`); // eslint-disable-line\n      return (\n        <img\n          className={`${className} background-color-${colorNumber}`}\n          src={pictureFallback}\n          alt=\"Member\"\n        />\n      );\n    }\n    return (\n      <img\n        className={className}\n        src={pictureUrl}\n        onError={this.fallback}\n        alt=\"Member\"\n      />\n    );\n  }\n}\n\nMemberPicture.propTypes = {\n  className: PropTypes.string,\n  colorId: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  memberId: PropTypes.string.isRequired,\n  name: PropTypes.string,\n};\n\nMemberPicture.defaultProps = {\n  className: 'card__profile-image',\n  name: 'Unkown',\n};\n\nexport default MemberPicture;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import position icons\nimport iconLeader from '../../../../images/icon-leader.svg';\nimport iconMainVocalist from '../../../../images/icon-main-vocalist.svg';\nimport iconMainRapper from '../../../../images/icon-main-rapper.svg';\nimport iconMainDancer from '../../../../images/icon-main-dancer.svg';\nimport iconLeadVocalist from '../../../../images/icon-lead-vocalist.svg';\nimport iconLeadRapper from '../../../../images/icon-lead-rapper.svg';\nimport iconLeadDancer from '../../../../images/icon-lead-dancer.svg';\nimport iconVocalist from '../../../../images/icon-vocalist.svg';\nimport iconDancer from '../../../../images/icon-dancer.svg';\nimport iconRapper from '../../../../images/icon-rapper.svg';\nimport iconCenter from '../../../../images/icon-center.svg';\nimport iconVisual from '../../../../images/icon-visual.svg';\nimport iconMaknae from '../../../../images/icon-maknae.svg';\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst MemberPositions = ({ memberId, positions }) => {\n  // Sort positions by importance\n  const sortedPositions = [];\n\n  const positionPriority = {\n    LEADER: 0,\n    MAIN_VOCALIST: 1,\n    MAIN_RAPPER: 2,\n    MAIN_DANCER: 3,\n    LEAD_VOCALIST: 4,\n    LEAD_RAPPER: 5,\n    LEAD_DANCER: 6,\n    VOCALIST: 7,\n    RAPPER: 8,\n    DANCER: 9,\n    CENTER: 10,\n    VISUAL: 11,\n    MAKNAE: 12,\n  };\n\n  positions.forEach(position => {\n    sortedPositions[positionPriority[position]] = position;\n  });\n\n  const iconBank = {\n    LEADER: iconLeader,\n    MAIN_VOCALIST: iconMainVocalist,\n    MAIN_RAPPER: iconMainRapper,\n    MAIN_DANCER: iconMainDancer,\n    LEAD_VOCALIST: iconLeadVocalist,\n    LEAD_RAPPER: iconLeadRapper,\n    LEAD_DANCER: iconLeadDancer,\n    VOCALIST: iconVocalist,\n    RAPPER: iconDancer,\n    DANCER: iconRapper,\n    CENTER: iconCenter,\n    VISUAL: iconVisual,\n    MAKNAE: iconMaknae,\n  };\n\n  return (\n    <ul className=\"card__positions\">\n      {sortedPositions.map(position => {\n        const positionName = utils.humanize(position, 'Capital');\n        return (\n          <li key={`${memberId}-${position}`} className=\"card__position\">\n            <img\n              className=\"card__position-icon\"\n              src={iconBank[position]}\n              alt={`Position: ${positionName}`}\n              title={position}\n            />\n            {positionName}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMemberPositions.propTypes = {\n  memberId: PropTypes.string.isRequired,\n  positions: PropTypes.array.isRequired,\n};\n\nexport default MemberPositions;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import Member components\nimport MemberNationaltyFlag from './member/MemberNationalityFlag';\nimport MemberPicture from './member/MemberPicture';\nimport MemberPositions from './member/MemberPositions';\n// Import utility functions\nimport utils from '../../../utils';\nimport { FavoriteIcon, Icon } from '..';\n\nconst MemberCard = ({\n  favoriteState,\n  member,\n  updateFavoriteMembers,\n  averages,\n  showId,\n  showReferenceArtist,\n}) => (\n  <div className=\"card\">\n    {showId && (\n      <p className=\"member-id\">\n        {member.name.toLowerCase()}\n        {member.id}\n      </p>\n    )}\n    <MemberPicture\n      className={\n        showReferenceArtist ? 'card__profile-full-image' : 'card__profile-image'\n      }\n      colorId={member.colorId}\n      gender={member.gender}\n      memberId={member.id}\n      name={member.name}\n    />\n    <span\n      className={`card__color-bar background-color-${utils.getColorNumber(\n        member.colorId\n      )}`}\n    />\n    <h3 className=\"card__name\">\n      {member.name}\n      <FavoriteIcon\n        action={updateFavoriteMembers}\n        id={member.id}\n        size=\"20\"\n        state={favoriteState}\n      />\n    </h3>\n    {showReferenceArtist && (\n      <p>\n        {member.private && (\n          <Icon type=\"private\" color=\"red\" inline title=\"private\" size=\"18\" />\n        )}\n        <b>From </b> {member.referenceArtist}\n      </p>\n    )}\n\n    <p>\n      <b>Date of Birth:</b> {utils.parseBirthDate(member.birthdate)} ({\n        member.age\n      }yo)\n    </p>\n    <p>\n      <b>Nationality: </b>\n      <MemberNationaltyFlag nationality={member.nationality} />\n    </p>\n    {averages && (\n      <Fragment>\n        <p>\n          <b>Avg Official Songs: </b>0%\n        </p>\n        <p>\n          <b>Avg Custom Songs: </b>0%\n        </p>\n        <p>\n          <b>Avg All Songs: </b>0%\n        </p>\n      </Fragment>\n    )}\n    <p>\n      <b>Positions:</b>\n    </p>\n    <MemberPositions memberId={member.id} positions={member.positions} />\n  </div>\n);\n\nMemberCard.propTypes = {\n  averages: PropTypes.oneOfType([PropTypes.object, null]),\n  showId: PropTypes.bool,\n  showReferenceArtist: PropTypes.bool,\n  favoriteState: PropTypes.bool,\n  member: PropTypes.object.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n};\n\nMemberCard.defaultProps = {\n  averages: null,\n  showId: false,\n  showReferenceArtist: false,\n  favoriteState: false,\n};\n\nexport default MemberCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ModeWidget = ({ labels, action, disabled, active }) => (\n  <div className=\"mode-widget\">\n    {labels.map(label => {\n      const activeClass = label === active ? 'mode-widget__label--active' : '';\n      const isDisabled = disabled.includes(label)\n        ? 'mode-widget__label--disabled'\n        : '';\n      return (\n        <button\n          key={label}\n          className={`mode-widget__label ${activeClass} ${isDisabled}`}\n          onClick={() => action(label)}\n          disabled={isDisabled}\n        >\n          {label}\n        </button>\n      );\n    })}\n  </div>\n);\n\nModeWidget.propTypes = {\n  action: PropTypes.func.isRequired,\n  active: PropTypes.string.isRequired,\n  disabled: PropTypes.array,\n  labels: PropTypes.array.isRequired,\n};\n\nModeWidget.defaultProps = {\n  disabled: [],\n};\n\nexport default ModeWidget;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import position icons\nimport iconLeader from '../../../images/icon-leader.svg';\nimport iconMainVocalist from '../../../images/icon-main-vocalist.svg';\nimport iconMainRapper from '../../../images/icon-main-rapper.svg';\nimport iconMainDancer from '../../../images/icon-main-dancer.svg';\nimport iconLeadVocalist from '../../../images/icon-lead-vocalist.svg';\nimport iconLeadRapper from '../../../images/icon-lead-rapper.svg';\nimport iconLeadDancer from '../../../images/icon-lead-dancer.svg';\nimport iconVocalist from '../../../images/icon-vocalist.svg';\nimport iconDancer from '../../../images/icon-dancer.svg';\nimport iconRapper from '../../../images/icon-rapper.svg';\nimport iconCenter from '../../../images/icon-center.svg';\nimport iconVisual from '../../../images/icon-visual.svg';\nimport iconMaknae from '../../../images/icon-maknae.svg';\nimport iconAll from '../../../images/icon-all.svg';\nimport iconNone from '../../../images/icon-none.svg';\n\nconst PositionIcon = ({ className, position }) => {\n  const iconBank = {\n    LEADER: iconLeader,\n    MAIN_VOCALIST: iconMainVocalist,\n    MAIN_RAPPER: iconMainRapper,\n    MAIN_DANCER: iconMainDancer,\n    LEAD_VOCALIST: iconLeadVocalist,\n    LEAD_RAPPER: iconLeadRapper,\n    LEAD_DANCER: iconLeadDancer,\n    VOCALIST: iconVocalist,\n    RAPPER: iconDancer,\n    DANCER: iconRapper,\n    CENTER: iconCenter,\n    VISUAL: iconVisual,\n    MAKNAE: iconMaknae,\n    ALL: iconAll,\n    NONE: iconNone,\n  };\n\n  return (\n    <span className={className}>\n      <img\n        className=\"position-icon\"\n        src={iconBank[position]}\n        alt={`Position: ${position}`}\n        title={position}\n      />\n    </span>\n  );\n};\n\nPositionIcon.propTypes = {\n  className: PropTypes.string,\n  position: PropTypes.string.isRequired,\n};\n\nPositionIcon.defaultProps = {\n  className: 'position-icon-container--inline',\n};\n\nexport default PositionIcon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon, Loading } from '..';\n// Import images\nimport logo from '../../../images/logo-neg.svg';\n\nclass RequirementWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: true,\n      authentication: true,\n      admin: false,\n      activeArtist: false,\n      ready: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.ready) {\n      this.parseRequirements();\n    }\n  }\n\n  parseRequirements() {\n    this.props.requirements.forEach(requirement => {\n      this.setState({ [requirement]: true });\n    });\n    this.setState({ ready: true });\n  }\n\n  render() {\n    if (!this.state.ready) {\n      return <Loading message=\"Loading...\" />;\n    }\n\n    // Verify Database\n    if (this.state.database && !this.props.app.databaseReady) {\n      return <Loading message=\"Fecthing database...\" />;\n    }\n\n    // Verify Authentication\n    if (\n      !this.props.app.loading &&\n      this.state.authentication &&\n      !this.props.auth.isAuthenticated\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <img className=\"login-logo\" src={logo} alt=\"Line Distribution\" />\n            <p>You must be logged in to access this page.</p>\n            <button className=\"btn btn-simple\" onClick={this.props.login}>\n              Sign-in now <Icon type=\"login\" color=\"black\" inline />\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Admin\n    if (\n      !this.props.app.loading &&\n      this.state.admin &&\n      !this.props.auth.isAdmin\n    ) {\n      return (\n        <main className=\"container container--flex container--center container--requirement-wrapper\">\n          <div className=\"requirement-wrapper__container\">\n            <div className=\"requirement-wrapper__big-icon\">\n              <Icon type=\"stop\" color=\"red\" size={120} />\n            </div>\n            <p>You must be an administrator to access this page.</p>\n          </div>\n        </main>\n      );\n    }\n\n    // Verify Selected Artist\n    if (\n      !this.props.app.loading &&\n      this.state.selectedArtist &&\n      (!this.props.artists.selectedArtist ||\n        !this.props.artists.selectedArtist.id)\n    ) {\n      if (this.props.app.loading) {\n        return <Loading message=\"Fecthing artist...\" />;\n      }\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group.\n          </p>\n        </main>\n      );\n    }\n\n    // Verify Active Artist\n    if (\n      !this.props.app.loading &&\n      this.state.activeArtist &&\n      this.props.artists.activeArtist &&\n      !this.props.artists.activeArtist.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Artist Required</h1>\n          <p>\n            No artist has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group and then\n            a unit.\n          </p>\n        </main>\n      );\n    }\n\n    // Verify Active Active\n    if (\n      !this.props.app.loading &&\n      this.state.activeUnit &&\n      this.props.distribute.activeUnit &&\n      !this.props.distribute.activeUnit.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Active Unit Required</h1>\n          <p>\n            No unit has been selected. Go to the{' '}\n            <Link to=\"/artists\">Artists Page</Link> and select a group and then\n            a unit.\n          </p>\n        </main>\n      );\n    }\n\n    if (\n      !this.props.app.loading &&\n      this.state.activeSong &&\n      this.props.distribute.activeSong &&\n      !this.props.distribute.activeSong.id\n    ) {\n      return (\n        <main className=\"container container--artist\">\n          <h1>Active Song Required</h1>\n          <p>\n            No song has been selected. Go to the{' '}\n            <Link to=\"/songs\">Songs Page</Link> and select a song.\n          </p>\n        </main>\n      );\n    }\n\n    return <div className=\"wrapper\">{this.props.children}</div>;\n  }\n}\n\nRequirementWrapper.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  children: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  requirements: PropTypes.array,\n};\n\nRequirementWrapper.defaultProps = {\n  requirements: [],\n};\n\nexport default RequirementWrapper;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport RequirementWrapper from '../components/RequirementWrapper';\n\nimport { authOperations } from '../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RequirementWrapper)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nlet selectKey = 0;\n\n/**\n * Select\n * @param {action} action onChange action\n * @param {string} label label for the select\n * @param {array|object} options arrays or objects of objects\n * @param {string} optionValue key on values to be used as an option value\n * @param {string} optionName key on values to be used as an option name\n * @param {string} optionPrefix string to come before optionName\n * @param {string} placeholder string for the first placeholder option name\n * @param {bool} disablePlaceholder makes label unselectable\n * @param {string} type 'normal' or 'slim'\n */\nconst Select = ({\n  action,\n  options,\n  optionValue,\n  optionName,\n  optionPrefix,\n  label,\n  placeholder,\n  disablePlaceholder,\n  type,\n}) => {\n  // Transform options object into array\n  if (!Array.isArray(options)) {\n    options = Object.values(options);\n  }\n\n  const classNameModifier = type === 'slim' ? '--slim' : '';\n\n  return (\n    <div className=\"ld-select-group\">\n      {label ? <label className=\"ld-select__label\">{label}</label> : null}\n      <div className={`ld-select${classNameModifier}`}>\n        <select onChange={action}>\n          {placeholder && (\n            <option value=\"\" disabled={disablePlaceholder}>\n              {placeholder}\n            </option>\n          )}\n          {options.map(option => {\n            const key = `select-${selectKey++}`;\n            return (\n              <option key={key} value={option[optionValue]}>\n                {optionPrefix}\n                {option[optionName]}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nSelect.propTypes = {\n  action: PropTypes.func.isRequired,\n  options: PropTypes.oneOfType([PropTypes.array, PropTypes.object, undefined]),\n  optionValue: PropTypes.string,\n  optionName: PropTypes.string,\n  optionPrefix: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disablePlaceholder: PropTypes.bool,\n  type: PropTypes.oneOf(['slim', undefined]),\n};\n\nSelect.defaultProps = {\n  options: [],\n  optionValue: '',\n  optionName: '',\n  optionPrefix: '',\n  label: '',\n  placeholder: '',\n  disablePlaceholder: false,\n  type: '',\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SwitchToggle = ({ action, labels, checked }) => {\n  if (!labels) {\n    labels = { left: '', right: '' };\n  } else if (Array.isArray(labels)) {\n    labels = { left: labels[0], right: labels[1] };\n  } else if (typeof labels !== 'object') {\n    labels = { left: 'A', right: 'B' };\n  }\n\n  return (\n    <span>\n      <span className=\"slide-text-left\">{labels.left}</span>\n      <label className=\"switch\">\n        <input type=\"checkbox\" onChange={action} checked={checked} />\n        <span className=\"slider\" />\n      </label>\n      <span className=\"slide-text-right\">{labels.right}</span>\n    </span>\n  );\n};\n\nSwitchToggle.propTypes = {\n  action: PropTypes.func.isRequired,\n  labels: PropTypes.object, // eslint-disable-line\n  checked: PropTypes.bool,\n};\n\nSwitchToggle.defaultProps = {\n  checked: false,\n};\n\nexport default SwitchToggle;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../utils';\n\nconst Tabs = ({ tabs, active, action, icons, iconConditions, ...props }) => {\n  // Check for names and ids\n  tabs = tabs.map((tab, index) => {\n    const tabObj = {\n      name: tab.name || tab,\n      id: tab.id || tab,\n    };\n    if (tab.id !== undefined && tab.name === undefined) {\n      tabObj.name = utils.capitalizeWord(tab.id);\n    }\n    if (tab.id === undefined && tab.name !== undefined) {\n      tabObj.id = utils.spinalCaseWord(tab.name);\n    }\n\n    tabObj.key = `${tab.id}-${index}`;\n    tabObj.isActive = active === tab.id || active === tab ? 'selected' : '';\n    tabObj.showIcons = iconConditions.map(condition => tab[condition] || false);\n    return tabObj;\n  });\n\n  // Activate first tab if action paramenter is not available\n  if (!active) {\n    tabs[0].isActive = 'selected';\n  }\n\n  return (\n    <section className=\"tabs-container\">\n      <ul className=\"tabs\" onClick={action}>\n        {tabs.map(tab => (\n          <li\n            key={tab.key}\n            className={utils.bem('tabs', tab.isActive, 'tab')}\n            id={tab.id}\n          >\n            {tab.name}{' '}\n            <Fragment>\n              {tab.showIcons.map((show, index) => {\n                if (show) {\n                  return icons[index];\n                }\n                return null;\n              })}\n            </Fragment>\n          </li>\n        ))}\n      </ul>\n      <div className=\"tabs-content\">{props.children}</div>\n    </section>\n  );\n};\n\nTabs.propTypes = {\n  action: PropTypes.func.isRequired,\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any.isRequired,\n  iconConditions: PropTypes.array,\n  icons: PropTypes.array,\n  tabs: PropTypes.array.isRequired,\n};\n\nTabs.defaultProps = {\n  active: 0,\n  iconConditions: [],\n  icons: [],\n};\n\nexport default Tabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Typeahead = ({ action, className, name, placeholder, suggestions }) => (\n  <div className={`typeahead ${className}`}>\n    <input\n      className=\"typeahead-input\"\n      list={`list-${name}`}\n      onChange={action}\n      placeholder={placeholder}\n    />\n    <datalist className=\"typeahead-datalist\" id={`list-${name}`}>\n      {suggestions.map(suggestion => (\n        <option\n          key={suggestion}\n          className=\"typeahead-option\"\n          value={suggestion}\n        />\n      ))}\n    </datalist>\n  </div>\n);\n\nTypeahead.propTypes = {\n  action: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  suggestions: PropTypes.array,\n};\n\nTypeahead.defaultProps = {\n  className: '',\n  placeholder: 'Search...',\n  suggestions: [],\n};\n\nexport default Typeahead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import shared components\nimport { FavoriteIcon, LoadingIcon } from '../../../common';\n\nconst ArtistsTable = ({\n  artists,\n  favoriteAction,\n  pending,\n  rowAction,\n  searchQuery,\n  user,\n}) => {\n  // Filter table rows based on searchQuery\n  let filteredArtists = artists;\n  if (searchQuery && filteredArtists[0]) {\n    filteredArtists = _.filter(artists, o => o.query.includes(searchQuery));\n  }\n  // Message to be display when table has no rows\n  const emptyTableMessage =\n    searchQuery.length > 0\n      ? 'No artists available within your search'\n      : 'No artists available';\n\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"5\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"5\">{emptyTableMessage}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th className=\"artists-table__favorite-col\" />\n          <th>Name</th>\n          <th>Genre</th>\n          <th>Units</th>\n          <th>Members</th>\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {filteredArtists.length > 0\n          ? filteredArtists.map(entry => (\n              <tr key={`all-artists-${entry.id}`} id={`a-${entry.id}`}>\n                <td\n                  className=\"artists-cell-favorite\"\n                  onClick={() => favoriteAction(entry.id)}\n                >\n                  <FavoriteIcon\n                    action={() => {}}\n                    id={entry.id}\n                    size=\"12\"\n                    state={\n                      user.favoriteArtists && user.favoriteArtists[entry.id]\n                    }\n                  />\n                </td>\n                <td>{entry.name}</td>\n                <td>{entry.genre}</td>\n                <td>{entry.units ? entry.units.length : 0}</td>\n                <td>\n                  {entry.memberList.join(', ')} ({entry.memberList.length})\n                </td>\n              </tr>\n            ))\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nArtistsTable.propTypes = {\n  artists: PropTypes.array.isRequired,\n  favoriteAction: PropTypes.func.isRequired,\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string,\n  user: PropTypes.object.isRequired,\n};\n\nArtistsTable.defaultProps = {\n  pending: false,\n  searchQuery: '',\n};\n\nexport default ArtistsTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import common components\nimport {\n  ActiveUnit,\n  Icon,\n  Switch,\n  RequirementWrapper,\n  ActiveSong,\n} from '../../../common';\nimport ArtistsTable from './ArtistsTable';\n\nclass Artists extends Component {\n  componentDidMount() {\n    this.props.loadArtists();\n    this.props.updateSearchQuery('');\n  }\n  render() {\n    const {\n      app: { pending },\n      artists: { searchQuery, showFavoriteArtistsOnly, userLatestArtists },\n      auth: { user },\n      db,\n      distribute: { activeSong, activeUnit },\n    } = this.props;\n\n    const artistList = db.artists;\n\n    let filteredArtists = artistList;\n    if (showFavoriteArtistsOnly) {\n      filteredArtists = _.filter(artistList, o => user.favoriteArtists[o.id]);\n    }\n\n    // Row click should send user to the selected artist page\n    const handleTableClick = e => {\n      const { id } = e.target.parentNode;\n      const { className } = e.target;\n      if (id && className !== 'artists-cell-favorite') {\n        const artistId = id.substring(2);\n        this.props.history.push(`/artists/${artistId}`);\n      }\n    };\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--artists\">\n          <h1>Artists</h1>\n\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n\n          {userLatestArtists.length > 0 && (\n            <section className=\"artists__section\">\n              <h2>\n                <Icon type=\"clock\" size=\"20\" color=\"blue\" /> Your Recently Used\n                Artists\n              </h2>\n\n              <ArtistsTable\n                artists={filteredArtists}\n                rowAction={handleTableClick}\n                favoriteAction={this.props.updateFavoriteArtists}\n                pending={pending.REQUEST_ARTISTS}\n                user={user}\n              />\n            </section>\n          )}\n\n          <section className=\"artists__section\">\n            <h2>All Artists</h2>\n            <input\n              className=\"artists__search-bar\"\n              type=\"text\"\n              placeholder=\"Filter...\"\n              onChange={e => this.props.updateSearchQuery(e.target.value)}\n            />{' '}\n            Show Favorite Artists Only:{' '}\n            <Switch\n              action={this.props.showFavoriteArtistsOnlyToggle}\n              checked={showFavoriteArtistsOnly}\n            />\n            <ArtistsTable\n              artists={filteredArtists}\n              searchQuery={searchQuery}\n              pending={pending.REQUEST_ARTISTS}\n              rowAction={handleTableClick}\n              favoriteAction={this.props.updateFavoriteArtists}\n              user={user}\n            />\n          </section>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtists.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  showFavoriteArtistsOnlyToggle: PropTypes.func.isRequired,\n  updateSearchQuery: PropTypes.func.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtists.defaultProps = {};\n\nexport default Artists;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artists from '../components/Artists';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artists)\n);\n","import ArtistsContainer from './containers/ArtistsContainer';\n\nexport default ArtistsContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import constants\nimport constants from '../../../../utils/constants';\n// Import images\nimport biasPlaceholder from '../../../../images/bias-placeholder.svg';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass BiasPicture extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.fallback = () => {\n      this.setState({ failed: true });\n    };\n  }\n\n  render() {\n    const { bias } = this.props;\n    // If no bias, display placeholder\n    if (!Object.keys(bias).length) {\n      return (\n        <img\n          className=\"unit-section__bias-placeholder\"\n          src={biasPlaceholder}\n          alt=\"Bias\"\n        />\n      );\n    }\n\n    const pictureUrl = `${process.env.PUBLIC_URL}${\n      constants.PROFILE_PICTURE_URL\n    }${bias.name.toLowerCase()}${bias.id}.jpg`;\n\n    // If picture is not found\n    if (this.state.failed) {\n      return (\n        <div\n          className={`unit-section__bias-no-picture background-color-${utils.getColorNumber(\n            bias.colorId\n          )}`}\n        >\n          <span>{bias.name}</span>\n        </div>\n      );\n    }\n\n    return (\n      <img\n        className=\"unit-section__bias-picture\"\n        src={pictureUrl}\n        onError={this.fallback}\n        alt=\"Bias\"\n      />\n    );\n  }\n}\n\nBiasPicture.propTypes = {\n  bias: PropTypes.object.isRequired,\n};\n\nBiasPicture.defaultProps = {};\n\nexport default BiasPicture;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DistributedSongPreview = ({ rates, members }) => (\n  <div className=\"distribution-rates-preview__container\">\n    {Object.keys(members).map(memberId => {\n      const percentage = (100 * rates[memberId]) / (rates.total - rates.ALL);\n\n      // const percentage = rates[memberId].toFixed(1);\n      const spanWidth = {\n        width: `${percentage}%`,\n      };\n\n      return (\n        <span\n          key={`bar-${memberId}-${percentage}`}\n          className={`distribution-rates-preview__bar background-color-${\n            members[memberId].color.number\n          }`}\n          style={spanWidth}\n        >\n          {percentage.toFixed(1)}%\n        </span>\n      );\n    })}\n  </div>\n);\n\nDistributedSongPreview.propTypes = {\n  rates: PropTypes.object.isRequired,\n  members: PropTypes.object.isRequired,\n};\n\nDistributedSongPreview.defaultProps = {};\n\nexport default DistributedSongPreview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { LoadingIcon } from '../../../common';\nimport DistributedSongPreview from './DistributedSongPreview';\n\nconst DistributedSongsTable = ({\n  distributions,\n  pending,\n  members,\n  rowAction,\n}) => {\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"7\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"3\">This artist have no distributions yet</td>\n      </tr>\n    );\n  };\n\n  const humanizeCategory = (category, originalArtist) => {\n    switch (category) {\n      case 'WOULD':\n        return `How they would sing ${originalArtist}`;\n      case 'SHOULD':\n        return 'How they should sing it';\n      default:\n        return 'Official';\n    }\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Type</th>\n          <th>Distribution Preview</th>\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {distributions.length > 0\n          ? distributions.map(entry => (\n              <tr key={`all-artists-${entry.id}`} id={`a-${entry.id}`}>\n                <td>{entry.title}</td>\n                <td>\n                  {humanizeCategory(entry.category, entry.originalArtist)}\n                </td>\n                <td>\n                  <DistributedSongPreview\n                    rates={entry.rates}\n                    members={members}\n                  />\n                </td>\n              </tr>\n            ))\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nDistributedSongsTable.propTypes = {\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func,\n  distributions: PropTypes.array.isRequired,\n  members: PropTypes.object.isRequired,\n};\n\nDistributedSongsTable.defaultProps = {\n  pending: false,\n  rowAction: () => {},\n};\n\nexport default DistributedSongsTable;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport BiasPicture from './BiasPicture';\n// Import common components\nimport {\n  Tabs,\n  Icon,\n  LoadingWrapper,\n  MemberCard,\n  Select,\n} from '../../../common';\nimport DistributedSongsTable from './DistributedSongsTable';\n\nclass Units extends Component {\n  componentDidMount() {\n    this.props.props.getBias();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.props.artists.selectedUnit.id !==\n      this.props.props.artists.selectedUnit.id\n    ) {\n      this.props.props.getBias();\n    }\n  }\n\n  artistRedirect(page) {\n    this.props.props.activateUnit();\n\n    this.props.props.history.push(`/${page}`);\n  }\n\n  render() {\n    const {\n      props: {\n        app,\n        artists: { artistPageTab, bias, selectedArtist, selectedUnit },\n        auth,\n        switchArtistPageTab,\n        updateBias,\n        updateFavoriteMembers,\n      },\n    } = this.props;\n\n    // If Artist has no unit\n    if (!app.loading && !Object.keys(selectedUnit).length) {\n      return (\n        <section className=\"artist__section\">\n          <div className=\"tabs-container\">\n            <p className=\"tabs-content--empty\">\n              This artist has no units available.\n            </p>\n          </div>\n        </section>\n      );\n    }\n\n    const isUnitPending = app.pending.REQUEST_UNIT;\n\n    const hasLegacyDistributions =\n      selectedUnit.distributions_legacy &&\n      selectedUnit.distributions_legacy.length > 0;\n\n    return (\n      <section className=\"artist__section\">\n        <Tabs\n          tabs={selectedArtist.units || []}\n          action={switchArtistPageTab}\n          active={artistPageTab}\n          icons={[\n            <Icon type=\"check\" color=\"blue\" inline key=\"official\" />,\n            <Icon type=\"sub-unit\" color=\"orange\" key=\"subUnit\" />,\n          ]}\n          iconConditions={['official', 'subUnit']}\n        >\n          {selectedUnit.id ? (\n            <div className=\"unit-section\">\n              <div className=\"unit-section__info\">\n                <div className=\"unit-section__summary\">\n                  <LoadingWrapper pending={isUnitPending}>\n                    <Fragment>\n                      <p>\n                        <b>\n                          {selectedUnit.subUnit ? 'Sub-unit' : ''} Debut Year:\n                        </b>{' '}\n                        {selectedUnit.debutYear || '?'}\n                      </p>\n                      <p>\n                        <b>Official Distributions:</b>{' '}\n                        {selectedUnit.distributions.length || 0}\n                      </p>\n                      <p>\n                        <b>Custom Distributions:</b>{' '}\n                        {selectedUnit.distributions.length || 0}\n                      </p>\n                      {hasLegacyDistributions && (\n                        <p>\n                          <b>Legacy Distributions:</b>{' '}\n                          {selectedUnit.distributions_legacy.length || 0}\n                        </p>\n                      )}\n                      <div className=\"unit-section__actions\">\n                        <button\n                          className=\"btn\"\n                          onClick={() => this.artistRedirect('songs')}\n                        >\n                          Distribute\n                        </button>\n                        <button\n                          className=\"btn\"\n                          onClick={() => this.artistRedirect('lyrics')}\n                        >\n                          Play with Lyrics{' '}\n                          <span className=\"restriction\">*</span>\n                        </button>\n                        <button className=\"btn\" disabled>\n                          Random Song\n                        </button>\n                        <p>\n                          <small>* You won&apos;t be able to save this.</small>\n                        </p>\n                      </div>\n                    </Fragment>\n                  </LoadingWrapper>\n                </div>\n                <div className=\"unit-section__bias\">\n                  <LoadingWrapper pending={isUnitPending}>\n                    <div className=\"unit-section__bias-wrapper\">\n                      <BiasPicture bias={bias} />\n                      <Select\n                        action={updateBias}\n                        options={selectedUnit.members}\n                        optionValue=\"id\"\n                        optionName=\"name\"\n                        optionPrefix=\"Bias: \"\n                        placeholder=\"Select your bias...\"\n                      />\n                    </div>\n                  </LoadingWrapper>\n                </div>\n              </div>\n              <hr className=\"unit-section__ruler\" />\n              <h2>Members:</h2>\n              <LoadingWrapper pending={isUnitPending}>\n                <div className=\"unit-section__members\">\n                  {Object.values(selectedUnit.members).map(member => (\n                    <MemberCard\n                      averages={{}}\n                      key={member.id}\n                      member={member}\n                      favoriteState={\n                        auth.user.favoriteMembers &&\n                        auth.user.favoriteMembers[member.id]\n                      }\n                      updateFavoriteMembers={updateFavoriteMembers}\n                    />\n                  ))}\n                </div>\n              </LoadingWrapper>\n              <hr className=\"unit-section__ruler\" />\n              <h2>Distributions</h2>\n              <LoadingWrapper pending={isUnitPending}>\n                <DistributedSongsTable\n                  distributions={selectedUnit.distributions}\n                  members={selectedUnit.members}\n                />\n              </LoadingWrapper>\n\n              {hasLegacyDistributions && (\n                <Fragment>\n                  <hr />\n                  <h2>Legacy Distributions</h2>{' '}\n                  <p>List of Legacy Distributions</p>\n                </Fragment>\n              )}\n            </div>\n          ) : (\n            <p>The selected Artist has no units.</p>\n          )}\n        </Tabs>\n      </section>\n    );\n  }\n}\n\nUnits.propTypes = {\n  props: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n};\n\nexport default Units;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport Units from './Units';\n// Import common components\nimport {\n  FavoriteIcon,\n  LoadingWrapper,\n  RequirementWrapper,\n} from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Artist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      memberColors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { artistId } = this.props.match.params;\n    if (\n      this.props.artists.selectedArtist &&\n      this.props.artists.selectedArtist.id !== artistId\n    ) {\n      this.props.loadArtist(artistId, this.props.location.search);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.artists.selectedUnit.id !== this.props.artists.selectedUnit.id\n    ) {\n      this.getMemberColors();\n    }\n  }\n\n  getMemberColors() {\n    const memberColors = { ...this.state.memberColors };\n    Object.values(this.props.artists.selectedUnit.members).forEach(member => {\n      memberColors[member.id] = utils.getColorNumber(member.colorId);\n    });\n    this.setState({ memberColors });\n  }\n\n  render() {\n    const {\n      app,\n      artists: { selectedArtist },\n      auth,\n    } = this.props;\n\n    const isArtistPending = app.pending.REQUEST_ARTIST;\n\n    return (\n      <RequirementWrapper requirements={['selectedArtist']}>\n        <main className=\"container container--artist\">\n          <h1>Artist Page</h1>\n          <LoadingWrapper pending={isArtistPending}>\n            <section className=\"artist__section\">\n              <h2 className=\"artist-page__name\">\n                {selectedArtist.name}\n                <FavoriteIcon\n                  action={this.props.updateFavoriteArtists}\n                  id={selectedArtist.id || ''}\n                  className=\"artist-page__name--fav-icon\"\n                  size=\"20\"\n                  state={\n                    selectedArtist &&\n                    selectedArtist.id &&\n                    auth.user &&\n                    auth.user.favoriteArtists[selectedArtist.id]\n                  }\n                />\n              </h2>\n              <p className=\"artist-page__genre\">{selectedArtist.genre}</p>\n              <ul className=\"artist-page__members-list\">\n                {selectedArtist.memberList &&\n                  selectedArtist.memberList.map((memberName, index) => (\n                    <li\n                      className={`artist-page__member-pill background-color-${\n                        this.state.memberColors[selectedArtist.memberIds[index]]\n                      }`}\n                      key={`mp-${memberName}`}\n                    >\n                      {memberName}\n                    </li>\n                  ))}\n              </ul>\n              <Units props={this.props} />\n            </section>\n          </LoadingWrapper>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nArtist.propTypes = {\n  app: PropTypes.object.isRequired,\n  artists: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  loadArtist: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  updateFavoriteArtists: PropTypes.func.isRequired,\n};\n\nArtist.defaultProps = {};\n\nexport default Artist;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Artist from '../components/Artist';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Artist)\n);\n","import ArtistContainer from './containers/ArtistContainer';\n\nexport default ArtistContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import shared components\nimport { Icon, PositionIcon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst DistributeConnect = ({\n  activeMemberPill,\n  activateMemberPill,\n  distributionLines,\n  linkMemberToPart,\n  members,\n  rates,\n  remainder,\n}) => (\n  <section className=\"distribute__section distribute__section--connect\">\n    <div className=\"distribute__section-left\">\n      <div className=\"distribute__content\">\n        <h3>Instructions</h3>\n        <p>\n          Assign members to every single part in the lyrics. You can instantly\n          see the overall percentage. You can overwrite a member by assigning a\n          new one to that part.\n        </p>\n      </div>\n      <div className=\"distribute__content\">\n        <h3>Members &amp; Live Distribution Rates</h3>\n        <p>\n          Click on the member pill then in a lyric connection icon on the right.\n        </p>\n        <ul\n          className={`distribute__rates ${\n            Object.values(members).length > 10 ? 'distribute__rates--half' : ''\n          }`}\n        >\n          {Object.values(members).map(member => {\n            const colorNumber = utils.getColorNumber(member.colorId);\n            const activeClass = activeMemberPill === member.id ? 'active' : '';\n            const percentage = rates[member.id] ? rates[member.id][1] : 0;\n            const percentageWidth = rates[member.id] ? rates[member.id][2] : 0;\n\n            const spanWidth = {\n              width: `${percentageWidth}%`,\n            };\n\n            return (\n              <li className=\"distribute__pill-group\" key={member.id}>\n                <div\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`pill distribute__member-pill background-color-${colorNumber} border-color-${colorNumber} ${activeClass}`}\n                  onClick={() => activateMemberPill(member.id)}\n                >\n                  <PositionIcon\n                    position={utils.getMostImportantPosition(member.positions)}\n                  />{' '}\n                  {member.name}\n                </div>\n                <div className=\"pill distribute__rates__percentage-bar-group\">\n                  <span className=\"distribute__rates__percentage-value\">\n                    {percentage}%\n                  </span>\n                  <span\n                    style={spanWidth}\n                    className={`distribute__rates__percentage-bar background-color-${utils.getColorNumber(\n                      member.colorId\n                    )}`}\n                  />\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n\n        <p>Remaining: {remainder}%</p>\n      </div>\n    </div>\n    <div className=\"distribute__section-right\">\n      <div className=\"distribute__content--lyrics\">\n        {distributionLines.map((line, index) => {\n          const key = `line-${index}`;\n          return line.length > 0 ? (\n            <div className=\"distribution__lyrics__line\" key={key}>\n              {line.map((part, partIndex) => {\n                const partKey = `${key}-${partIndex}`;\n\n                const colors = part.memberId.map(mId => members[mId].color.hex);\n\n                const lineColors = {};\n                if (colors.length === 1) {\n                  [lineColors.background] = colors;\n                  if (colors[0] === '#ebebf2') {\n                    lineColors.fontStyle = 'italic';\n                    lineColors.color = '#7e7e82';\n                  }\n                } else if (colors.length > 1) {\n                  lineColors.background = `linear-gradient(${colors.join(\n                    ', '\n                  )})`;\n                }\n\n                return (\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"distribution__lyrics__line--part\"\n                    style={lineColors}\n                    key={`${partKey}-new`}\n                    onClick={() => linkMemberToPart(part.id)}\n                  >\n                    {part.memberId.map(m => {\n                      const mKey = `${partKey}-${m}`;\n                      return (\n                        <span\n                          key={mKey}\n                          className=\"distribution__lyrics__line--icon\"\n                        >\n                          <Icon type=\"plug-connected\" size=\"12\" color=\"black\" />\n                        </span>\n                      );\n                    })}\n                    <span className=\"distribution__lyrics__line--icon\">\n                      <Icon type=\"plug-available\" size=\"12\" color=\"gray\" />\n                    </span>\n                    <span className=\"distribution__lyrics__line--content\">\n                      {part.content}\n                    </span>\n                  </span>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"distribution__lyrics\" key={key}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  </section>\n);\n\nDistributeConnect.propTypes = {\n  activeMemberPill: PropTypes.string,\n  activateMemberPill: PropTypes.func.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  members: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n  remainder: PropTypes.number,\n};\n\nDistributeConnect.defaultProps = {\n  activeMemberPill: '',\n  remainder: 0,\n};\n\nexport default DistributeConnect;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import page components\nimport DistributeConnect from './DistributeConnect';\n// Import shared components\nimport { ActiveSong, ActiveUnit, ActiveVideoWidget } from '../../../common';\n\nconst DistributeEdit = ({\n  activeDistribution,\n  activateMemberPill,\n  activeMemberPill,\n  activeSong,\n  activeUnit,\n  distributionLines,\n  handleDistributionCategory,\n  handleSaveDistribution,\n  linkMemberToPart,\n  members,\n  rates,\n  remainder,\n}) => (\n  <Fragment>\n    <section className=\"active-widget__group\">\n      <ActiveUnit activeUnit={activeUnit} showMembers />\n      <ActiveSong activeSong={activeSong} />\n      <ActiveVideoWidget videoId={activeSong.videoId} />\n    </section>\n\n    <div className=\"distribute__content-container\">\n      <DistributeConnect\n        activateMemberPill={activateMemberPill}\n        activeMemberPill={activeMemberPill}\n        distributionLines={distributionLines}\n        linkMemberToPart={linkMemberToPart}\n        members={members}\n        rates={rates}\n        remainder={remainder}\n      />\n      <div className=\"distribute__save-section\">\n        <p>\n          <label className=\"distribute__distribution-category\">\n            Category*\n            <select onChange={handleDistributionCategory}>\n              <option value=\"\" disabled>\n                Select a type...\n              </option>\n              <option\n                value=\"OFFICIAL\"\n                selected={activeDistribution.category === 'OFFICIAL'}\n              >\n                Official\n              </option>\n              <option\n                value=\"WOULD\"\n                selected={activeDistribution.category === 'WOULD'}\n              >\n                How they would sing\n              </option>\n              <option\n                value=\"SHOULD\"\n                selected={activeDistribution.category === 'SHOULD'}\n              >\n                How they should sing\n              </option>\n            </select>\n          </label>\n        </p>\n        <p>\n          <button\n            className=\"btn\"\n            onClick={handleSaveDistribution}\n            disabled={remainder}\n          >\n            {activeDistribution.id ? 'Update' : 'Save'}\n          </button>\n        </p>\n      </div>\n    </div>\n  </Fragment>\n);\n\nDistributeEdit.propTypes = {\n  activeDistribution: PropTypes.object,\n  activateMemberPill: PropTypes.func.isRequired,\n  activeMemberPill: PropTypes.string,\n  activeSong: PropTypes.object,\n  activeUnit: PropTypes.object,\n  distributionLines: PropTypes.array.isRequired,\n  handleDistributionCategory: PropTypes.func.isRequired,\n  handleSaveDistribution: PropTypes.func.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  members: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n  remainder: PropTypes.number,\n};\n\nDistributeEdit.defaultProps = {\n  activeDistribution: {},\n  activeMemberPill: '',\n  activeSong: {},\n  activeUnit: {},\n  remainder: 0,\n};\n\nexport default DistributeEdit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DistributeProgressBar = ({\n  active,\n  colorNumber,\n  duration,\n  name,\n  percentage,\n}) => {\n  const widthStyle = {\n    width: `${percentage}%`,\n  };\n\n  // if (active) {\n  //   console.log({\n  //     colorNumber,\n  //     duration,\n  //     name,\n  //     percentage,\n  //   });\n  // }\n  return (\n    <div className=\"distribute-progress-bar\">\n      <div\n        className={`distribute-progress-bar__name foreground-color-${colorNumber}`}\n      >\n        {name}\n      </div>\n      <div className=\"distribute-progress-bar__progress\">\n        <span\n          className={`distribute-progress-bar__bar background-color-${colorNumber}`}\n          style={widthStyle}\n        />\n      </div>\n      <div\n        className={`distribute-progress-bar__active-icon--${\n          active ? 'on' : 'off'\n        }`}\n      />\n      <div className=\"distribute-progress-bar__duration\">\n        {duration.toFixed(1)}s\n      </div>\n    </div>\n  );\n};\n\nDistributeProgressBar.propTypes = {\n  active: PropTypes.bool,\n  name: PropTypes.string,\n  colorNumber: PropTypes.number,\n  duration: PropTypes.number,\n  percentage: PropTypes.number,\n};\n\nDistributeProgressBar.defaultProps = {\n  active: false,\n  name: 'Bob',\n  colorNumber: 1,\n  duration: 15.4,\n  percentage: 40,\n};\n\nexport default DistributeProgressBar;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport YouTube from 'react-youtube';\n\n// Import shared components\nimport { ActiveSong, ActiveUnit } from '../../../common';\n\n// Import utility functions\nimport utils from '../../../../utils';\nimport DistributeProgressBar from './DistributeProgressBar';\n\nlet player = null;\nlet animationInterval;\n// let membersProgress = {};\n\nconst INTERVAL = 1000;\n\nclass DistributeView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: 0,\n      height: 0,\n      isPlaying: false,\n      isReady: false,\n      members: {},\n      activeCache: {},\n      membersProgress: {},\n    };\n\n    this.setDimentions = this.setDimentions.bind(this);\n    this.onStateChange = this.onStateChange.bind(this);\n    this.onReady = this.onReady.bind(this);\n    this.onPlay = this.onPlay.bind(this);\n    this.onPause = this.onPause.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n  }\n\n  componentDidMount() {\n    // Determine player height\n    if (!this.state.height && document.getElementById('video-container-view')) {\n      this.setDimentions();\n    }\n\n    this.setMembers();\n  }\n\n  onReady(e) {\n    player = e.target;\n    this.setState({ isReady: true });\n  }\n\n  onPlay(e) {\n    console.log('PLAY', e);\n    this.setState({ isPlaying: true });\n  }\n\n  onPause(e) {\n    console.log('PAUSE', e);\n    this.setState({ isPlaying: false });\n  }\n\n  onEnd(e) {\n    console.log('END', e);\n    this.setState({ isPlaying: false });\n  }\n\n  onStateChange(e) {\n    console.log('STATE', e);\n\n    // If video is playing\n    if (e.data === 1) {\n      // Lyric Review Animation Interval\n      animationInterval = setInterval(() => {\n        const currentTime = Math.round(e.target.getCurrentTime());\n        this.setState({ currentTime });\n        // this.calculateBars(currentTime);\n      }, INTERVAL);\n    } else {\n      // Kill interval\n      clearInterval(animationInterval);\n    }\n  }\n\n  setDimentions() {\n    let width = document.getElementById('video-container-view').clientWidth;\n    let height = document.getElementById('video-container-view').clientHeight;\n    if (width > height) {\n      width = (16 * height) / 9;\n    } else {\n      height = (9 * width) / 16;\n    }\n\n    this.setState(() => ({ width, height }));\n  }\n\n  setMembers() {\n    const { members } = this.props;\n\n    const membersState = {};\n    Object.values(members).forEach(member => {\n      membersState[member.id] = {\n        id: member.id,\n        name: member.name,\n        colorNumber: member.color.number || 0,\n        percentage: 0,\n        duration: 0,\n        active: false,\n      };\n    });\n\n    this.setState({ membersProgress: membersState });\n  }\n\n  calculateBars(timestamp) {\n    const { timestampsDict, rates } = this.props;\n    let activeCache = { ...this.state.activeCache };\n    const membersProgress = { ...this.state.membersProgress };\n\n    const distributionTotals = {};\n\n    const currentDPS = timestampsDict[timestamp];\n\n    if (currentDPS) {\n      // Encache\n      if (currentDPS.start) {\n        activeCache = { ...activeCache, ...currentDPS.start };\n      }\n\n      // Decache\n      if (currentDPS.stop) {\n        Object.entries(currentDPS.stop).forEach(([id, total]) => {\n          distributionTotals[id] = total;\n          delete activeCache[id];\n        });\n      }\n\n      Object.keys(membersProgress).forEach(memberId => {\n        const currentMember = membersProgress[memberId];\n        if (activeCache[memberId]) {\n          currentMember.active = true;\n          currentMember.duration += INTERVAL / 1000;\n          currentMember.percentage =\n            (100 * membersProgress[memberId].duration) / rates.max;\n        } else {\n          currentMember.active = false;\n          currentMember.duration +=\n            distributionTotals[memberId] || currentMember.duration;\n          currentMember.percentage = (100 * currentMember.duration) / rates.max;\n        }\n      });\n\n      this.setState(() => ({\n        activeCache,\n        distributionTotals,\n        membersProgress,\n      }));\n    }\n  }\n\n  togglePlayPause() {\n    if (this.state.isPlaying) {\n      player.pauseVideo();\n    } else {\n      player.playVideo();\n    }\n  }\n\n  restartVideo() {\n    player.seekTo(0);\n    player.playVideo();\n  }\n\n  rewindFastforward(direction) {\n    if (direction === '+') {\n      player.seekTo(player.getCurrentTime() + 10);\n    } else {\n      player.seekTo(player.getCurrentTime() - 10);\n    }\n  }\n\n  render() {\n    const { activeSong, activeUnit } = this.props;\n\n    // Youtube Player options\n    const opts = {\n      height: this.state.height,\n      width: this.state.width,\n    };\n\n    // const getVideoFloatSize = members => {\n    //   const size = Object.keys(members).length;\n    //   if (size <= 6) return 'small';\n    //   if (size > 12) return 'large';\n    //   return 'medium';\n    // };\n\n    // const videoFloatSize = getVideoFloatSize(members);\n\n    const barsHeight = {\n      height: `${this.state.height / 2}px`,\n    };\n    const barsWidth = {\n      width: `${this.state.width}px`,\n    };\n\n    return (\n      <Fragment>\n        <section className=\"active-widget__group\">\n          <ActiveUnit activeUnit={activeUnit} showMembers />\n          <ActiveSong activeSong={activeSong} />\n        </section>\n        <section className=\"distribute-view__video\" id=\"video-container-view\">\n          <YouTube\n            videoId={activeSong.videoId}\n            opts={opts}\n            onReady={this.onReady}\n            onPlay={this.onPlay}\n            onPause={this.onPause}\n            onEnd={this.onEnd}\n            onStateChange={this.onStateChange}\n          />\n          <div className=\"distribute-view__video-float\" style={barsHeight}>\n            <div\n              className=\"distribute-view__video-float__inner\"\n              style={barsWidth}\n            >\n              {Object.values(this.state.membersProgress).map(member => {\n                if (member.name === 'ALL' || member.name === 'NONE') {\n                  return null;\n                }\n                return (\n                  <DistributeProgressBar\n                    active={member.active}\n                    colorNumber={member.colorNumber}\n                    duration={member.duration}\n                    name={member.name}\n                    percentage={member.percentage}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        </section>\n        <section className=\"distribute-view-controls\">\n          <button className=\"btn\" onClick={() => this.togglePlayPause()}>\n            Play/Pause\n          </button>\n          <button className=\"btn\" onClick={() => this.restartVideo()}>\n            Restart\n          </button>\n          <button className=\"btn\" onClick={() => this.rewindFastforward('-')}>\n            - 10s\n          </button>\n          <button className=\"btn\" onClick={() => this.rewindFastforward('+')}>\n            + 10s\n          </button>\n          <button className=\"btn\">Results</button>\n        </section>\n        <h1>View!</h1>\n      </Fragment>\n    );\n  }\n}\n\nDistributeView.propTypes = {};\n\nDistributeView.defaultProps = {};\n\nexport default DistributeView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import page components\nimport DistributeEdit from './DistributeEdit';\n\n// Import common components\nimport { ModeWidget, RequirementWrapper } from '../../../common';\nimport DistributeView from './DistributeView';\n\nclass Distribute extends Component {\n  componentDidMount() {\n    this.props.prepareSong();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.distribute.activeDistribution !==\n      this.props.distribute.activeDistribution\n    ) {\n      this.props.mergeActiveDistribution();\n    }\n  }\n\n  render() {\n    const {\n      distribute: {\n        activeMemberPill,\n        activeDistribution,\n        activeSong,\n        activeUnit,\n        distributeView,\n        distributionLines,\n        rates,\n        remainder,\n        timestampsDict,\n      },\n      activateMemberPill,\n      handleDistributeView,\n      handleDistributionCategory,\n      handleSaveDistribution,\n      linkMemberToPart,\n    } = this.props;\n\n    const getMembers = () => {\n      const members = { ...activeUnit.members };\n      members.ALL = {\n        id: 'ALL',\n        name: 'ALL',\n        colorId: 'col000000',\n        color: { number: 0, hex: '#b5b5ba' },\n        positions: ['ALL'],\n      };\n      members.NONE = {\n        id: 'NONE',\n        name: 'NONE',\n        colorId: 'col000031',\n        color: { number: 0, hex: '#ebebf2' },\n        positions: ['NONE'],\n      };\n      return members;\n    };\n\n    const members = getMembers();\n\n    return (\n      <RequirementWrapper requirements={['activeUnit', 'activeSong']}>\n        <main className=\"container container--distribute\">\n          <div className=\"distribute__header\">\n            <h1>Distribute</h1>\n            <ModeWidget\n              labels={['view', 'edit']}\n              active={distributeView}\n              action={handleDistributeView}\n            />\n          </div>\n\n          {distributeView === 'view' ? (\n            <DistributeView\n              activeSong={activeSong}\n              activeUnit={activeUnit}\n              members={members}\n              distributionLines={distributionLines}\n              timestampsDict={timestampsDict}\n              rates={activeDistribution.rates}\n            />\n          ) : (\n            <DistributeEdit\n              activeDistribution={activeDistribution}\n              activateMemberPill={activateMemberPill}\n              activeMemberPill={activeMemberPill}\n              activeSong={activeSong}\n              activeUnit={activeUnit}\n              distributionLines={distributionLines}\n              handleDistributionCategory={handleDistributionCategory}\n              handleSaveDistribution={handleSaveDistribution}\n              linkMemberToPart={linkMemberToPart}\n              members={members}\n              rates={rates}\n              remainder={remainder}\n            />\n          )}\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nDistribute.propTypes = {\n  activeDistribution: PropTypes.object,\n  activateMemberPill: PropTypes.func.isRequired,\n  distribute: PropTypes.object.isRequired,\n  handleDistributeView: PropTypes.func.isRequired,\n  handleDistributionCategory: PropTypes.func.isRequired,\n  handleSaveDistribution: PropTypes.func.isRequired,\n  linkMemberToPart: PropTypes.func.isRequired,\n  mergeActiveDistribution: PropTypes.func.isRequired,\n  prepareSong: PropTypes.func.isRequired,\n};\n\nDistribute.defaultProps = {\n  activeDistribution: {},\n};\n\nexport default Distribute;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Distribute from '../components/Distribute';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...artistsOperations,\n  ...authOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Distribute)\n);\n","import DistributeContainer from './containers/DistributeContainer';\n\nexport default DistributeContainer;\n","/* eslint react/require-default-props: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Import common components\nimport { Icon } from '../../../common';\n// Import images\nimport logo from '../../../../images/logo.svg';\nimport userPlaceholder from '../../../../images/user-placeholder.svg';\n\nconst Menu = ({ activeUnit, auth, history, location, login, logout }) => {\n  const handleLogoClick = () => {\n    history.push('/');\n  };\n\n  const { pathname } = location;\n\n  // Hide parts of the menu if user is not authenticaded\n  const authHideClass = auth.isAuthenticated ? '' : 'hidden';\n\n  // Hide parts of the menu if user is not an administrator\n  const adminHideClass = auth.isAdmin ? '' : 'hidden';\n\n  // Hide parts of the menu if user hasn't selected an active unit\n  const activeUnitHideClass = activeUnit.id ? '' : 'hidden';\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-nav\">\n        <img\n          className=\"header-nav__logo\"\n          src={logo}\n          alt=\"Logo\"\n          onClick={() => handleLogoClick()}\n        />\n        <nav className={`header-nav__links ${authHideClass}`}>\n          <Link\n            to=\"/artists\"\n            className={pathname === '/artists' ? 'active' : ''}\n          >\n            Artists\n          </Link>\n          <Link\n            to=\"/distribute\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/distribute' ? 'active' : ''\n            }`}\n          >\n            Distribute\n          </Link>\n          <Link\n            to=\"/lyrics\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/lyrics' ? 'active' : ''\n            }`}\n          >\n            Lyrics\n          </Link>\n          <Link\n            to=\"/songs\"\n            className={`${activeUnitHideClass} ${\n              pathname === '/songs' ? 'active' : ''\n            }`}\n          >\n            Songs\n          </Link>\n          <Link to=\"/idols\" className={pathname === '/idols' ? 'active' : ''}>\n            Idols\n          </Link>\n          <Link to=\"/lab\" className={pathname === '/lab' ? 'active' : ''}>\n            Lab\n          </Link>\n          <div className={`header-admin ${adminHideClass}`}>\n            <button\n              className={\n                pathname.includes('/admin')\n                  ? 'header-admin__nav active'\n                  : 'header-admin__nav'\n              }\n            >\n              Admin Tools\n            </button>\n            <div className=\"header-admin__dropdown\">\n              <Link to=\"/admin/manage\">Manage</Link>\n              <Link to=\"/admin/sync\">Sync</Link>\n              <Link to=\"/admin/temp\">Test/Temp</Link>\n              <Link to=\"/admin/ui-reference\">UI Reference</Link>\n            </div>\n          </div>\n        </nav>\n      </div>\n      {auth.isAuthenticated ? (\n        <div className=\"header-user\">\n          <button className=\"header-user__nav\">\n            <img\n              className=\"header-user__photo\"\n              src={auth.user.photoURL || userPlaceholder}\n              alt=\"user\"\n            />\n            {auth.user.displayName}\n          </button>\n          <div className=\"header-user__dropdown\">\n            <Link to=\"/user/my-artists\">My Artists</Link>\n            <Link to=\"/user/my-distributions\">My Distributions</Link>\n            <hr />\n            <a href=\"/\" onClick={logout}>\n              Sign out <Icon type=\"logout\" inline />\n            </a>\n          </div>\n        </div>\n      ) : (\n        <div className=\"header-user\">\n          <button className=\"btn btn-hollow header-user__btn\" onClick={login}>\n            Sign-in<Icon type=\"login\" color=\"white\" inline />\n          </button>\n        </div>\n      )}\n    </header>\n  );\n};\n\nMenu.propTypes = {\n  activeUnit: PropTypes.object,\n  auth: PropTypes.object,\n  history: PropTypes.object,\n  location: PropTypes.object,\n  login: PropTypes.func,\n  logout: PropTypes.func,\n};\n\nMenu.defaultProps = {\n  activeUnit: {},\n  auth: {},\n  history: {},\n  location: {},\n  login: () => {},\n  logout: () => {},\n};\n\nexport default Menu;\n","import React from 'react';\n\nconst LoadingBar = () => (\n  <div className=\"loading-bar\">\n    <div className=\"bar-container\">\n      <span className=\"bar bar-0\" />\n      <span className=\"bar bar-1\" />\n      <span className=\"bar bar-2\" />\n      <span className=\"bar bar-3\" />\n      <span className=\"bar bar-4\" />\n      <span className=\"bar bar-5\" />\n      <span className=\"bar bar-6\" />\n      <span className=\"bar bar-7\" />\n      <span className=\"bar bar-8\" />\n    </div>\n  </div>\n);\n\nexport default LoadingBar;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport Menu from './Menu';\nimport LoadingBar from './LoadingBar';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.init();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Menu\n          activeUnit={this.props.distribute.activeUnit}\n          auth={this.props.auth}\n          history={this.props.history}\n          location={this.props.location}\n          login={this.props.login}\n          logout={this.props.logout}\n        />\n        {this.props.app.loading && <LoadingBar />}\n      </Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  distribute: PropTypes.object,\n  history: PropTypes.object.isRequired,\n  init: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nApp.defaultProps = {\n  distribute: { activeUnit: {} },\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Header from '../components/Header';\n\nimport { appOperations } from '../../../../reducers/app';\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...appOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Header)\n);\n","import HeaderContainer from './containers/HeaderContainer';\n\nexport default HeaderContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport logo from '../../../../images/logo-alt.svg';\n\nimport constants from '../../../../utils/constants';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nconst Home = props => {\n  // Randomly choose one video in the playlist\n  const youtubeUrl =\n    constants.YOUTUBE_URLS[\n      Math.floor(Math.random() * constants.YOUTUBE_URLS.length)\n    ];\n\n  const handleLearnMoreClick = () => {\n    props.history.push('/learn-more');\n  };\n\n  return (\n    <main className=\"container container--no-padding\">\n      <div className=\"home__video\">\n        <iframe\n          className=\"home__iframe\"\n          title=\"home__video\"\n          src={`https://www.youtube.com/embed/${youtubeUrl}?controls=0&showinfo=0&rel=0&autoplay=1&loop=1&mute=1&playlist=${youtubeUrl}`}\n          frameBorder=\"0\"\n          allowFullScreen\n        />\n      </div>\n      <div className=\"home__content\">\n        <img className=\"home__logo\" src={logo} alt=\"Line Distribution\" />\n        <div className=\"home__buttons\">\n          {!props.auth.isAuthenticated && (\n            <button className=\"btn-home\" onClick={props.login}>\n              Sign-in <Icon type=\"logout\" color=\"white\" inline />\n            </button>\n          )}\n          <button className=\"btn-home\" onClick={() => handleLearnMoreClick()}>\n            Learm more\n          </button>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nHome.propTypes = {\n  auth: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default Home;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Home from '../components/Home';\n\nimport { authOperations } from '../../../../reducers/auth';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = {\n  login: authOperations.login,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Home)\n);\n","import HomeContainer from './containers/HomeContainer';\n\nexport default HomeContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { Checkbox, Form, Option, Select, Text } from 'informed';\n\n// Import common components\nimport { Loading, MemberCard, RequirementWrapper } from '../../../common';\n// Import constants\nimport constants from '../../../../utils/constants';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Idols extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      age: '',\n      color: '',\n      favorite: '',\n      gender: '',\n      name: '',\n      nationality: '',\n      position: '',\n      privacy: '',\n      sort: 'name',\n      order: 'asc',\n      showIds: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadMembers();\n  }\n\n  updateFilters(formState) {\n    this.setState({\n      age: formState.values.age,\n      color: formState.values.color,\n      favorite: formState.values.favorite,\n      gender: formState.values.gender,\n      name: formState.values.name,\n      nationality: formState.values.nationality,\n      position: formState.values.position,\n      privacy: formState.values.privacy,\n      sort: formState.values.sort || 'name',\n      order: formState.values.order || 'asc',\n      showIds: formState.values.showIds || false,\n    });\n  }\n\n  render() {\n    const {\n      app: { pending },\n      auth: { isAdmin, user },\n      db: { members },\n      updateFavoriteMembers,\n    } = this.props;\n\n    if (pending.REQUEST_MEMBERS) {\n      return <Loading message=\"Fecthing Idols...\" />;\n    }\n\n    const filteredMembers = _.filter(members, member => {\n      const evaluation = [];\n\n      if (this.state.favorite) {\n        if (this.state.favorite === 'favorite') {\n          evaluation.push(user.favoriteMembers[member.id]);\n        } else {\n          evaluation.push(!user.favoriteMembers[member.id]);\n        }\n      }\n\n      if (this.state.privacy) {\n        if (this.state.privacy === 'private') {\n          evaluation.push(member.private);\n        } else {\n          evaluation.push(!member.private);\n        }\n      }\n\n      if (this.state.color)\n        evaluation.push(member.colorId === this.state.color);\n      if (this.state.gender)\n        evaluation.push(member.gender === this.state.gender);\n      if (this.state.nationality)\n        evaluation.push(member.nationality === this.state.nationality);\n      if (this.state.position)\n        evaluation.push(member.positions.includes(this.state.position));\n      if (this.state.name)\n        evaluation.push(\n          member.name.toLowerCase().startsWith(this.state.name.toLowerCase())\n        );\n      if (this.state.age) {\n        if (this.state.age === '<18') {\n          evaluation.push(member.age < 18);\n        } else if (this.state.age === '18-28') {\n          evaluation.push(member.age > 17 && member.age < 28);\n        } else {\n          evaluation.push(member.age > 28);\n        }\n      }\n      const res = evaluation.every(e => e);\n      return res;\n    });\n\n    const sortedMembers = _.orderBy(\n      filteredMembers,\n      [this.state.sort],\n      [this.state.order]\n    );\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--idols\">\n          <h1>Idols</h1>\n          <Form\n            onChange={formState => this.updateFilters(formState)}\n            autoComplete=\"off\"\n            className=\"idols__filters-form\"\n          >\n            <div className=\"idols__filters-group\">\n              <div className=\"idols__filters-items\">\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">\n                    Name starts with\n                  </label>\n                  <Text\n                    className=\"idols__filter-input-text\"\n                    field=\"name\"\n                    initialValue={this.state.name}\n                    maxLength=\"3\"\n                  />\n                </div>\n\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Gender</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"gender\"\n                    initialValue={this.state.gender}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {Object.entries(constants.GENDERS).map(gender => (\n                      <Option key={gender[0]} value={gender[0]}>\n                        {gender[1]}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Nationality</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"nationality\"\n                    initialValue={this.state.nationality}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {Object.entries(constants.NATIONALITIES).map(\n                      nationalitie => (\n                        <Option key={nationalitie[0]} value={nationalitie[0]}>\n                          {nationalitie[1]}\n                        </Option>\n                      )\n                    )}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Age Range</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"age\"\n                    initialValue={this.state.age}\n                  >\n                    <Option value=\"\">Any</Option>\n                    <Option value=\"<18\">&lt;18</Option>\n                    <Option value=\"18-28\">18-28</Option>\n                    <Option value=\"28+\">28+</Option>\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Position</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"position\"\n                    initialValue={this.state.position}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {constants.POSITIONS_LIST.map(position => (\n                      <Option key={position} value={position}>\n                        {constants.POSITIONS_LIST_OBJ[position]}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Color</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"color\"\n                    initialValue={this.state.color}\n                  >\n                    <Option value=\"\">Any</Option>\n                    {Object.entries(constants.COLORS).map(color => (\n                      <Option key={color[0]} value={color[0]}>\n                        {utils.humanize(color[1], 'Capital')}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Favorite</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"favorite\"\n                    initialValue={this.state.favorite}\n                  >\n                    <Option value=\"\">Any</Option>\n                    <Option value=\"favorite\">Favorite</Option>\n                    <Option value=\"nonfavorite\">Non-favorite</Option>\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Privacy</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"privacy\"\n                    initialValue={this.state.privacy}\n                  >\n                    <Option value=\"\">Any</Option>\n                    <Option value=\"private\">Private</Option>\n                    <Option value=\"public\">Public</Option>\n                  </Select>\n                </div>\n                {isAdmin && (\n                  <div className=\"idols__filter-select-group\">\n                    <label className=\"idols__filter-label\">Show Ids</label>\n                    <Checkbox field=\"showIds\" initialValue={isAdmin} />\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"idols__filters-group\">\n              <div className=\"idols__filters-items\">\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Sort by</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"sort\"\n                    initialValue={this.state.sort}\n                  >\n                    <Option value=\"age\">Age</Option>\n                    <Option value=\"colorId\">Color</Option>\n                    <Option value=\"gender\">Gender</Option>\n                    <Option value=\"referenceArtist\">Group</Option>\n                    <Option value=\"name\">Name</Option>\n                    <Option value=\"nationality\">Nationality</Option>\n                  </Select>\n                </div>\n                <div className=\"idols__filter-select-group\">\n                  <label className=\"idols__filter-label\">Order by</label>\n                  <Select\n                    className=\"idols__filter-select\"\n                    field=\"order\"\n                    initialValue={this.state.order}\n                  >\n                    <Option value=\"asc\">Ascending</Option>\n                    <Option value=\"desc\">Descending</Option>\n                  </Select>\n                </div>\n              </div>\n            </div>\n          </Form>\n          <h3 className=\"member-count\">\n            Displaying {sortedMembers.length} members\n          </h3>\n          <div className=\"idols__list\">\n            {sortedMembers.map(member => (\n              <MemberCard\n                key={member.id}\n                member={member}\n                showId={this.state.showIds}\n                showReferenceArtist\n                favoriteState={\n                  user.favoriteMembers && user.favoriteMembers[member.id]\n                }\n                updateFavoriteMembers={updateFavoriteMembers}\n              />\n            ))}\n          </div>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nIdols.propTypes = {\n  app: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadMembers: PropTypes.func.isRequired,\n  updateFavoriteMembers: PropTypes.func.isRequired,\n};\n\nexport default Idols;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Idols from '../components/Idols';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...dbOperations,\n  ...artistsOperations,\n  ...authOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Idols)\n);\n","import IdolsContainer from './containers/IdolsContainer';\n\nexport default IdolsContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nlet colorDict = null;\nlet keyNumber = 0;\n\nconst LyricsOutput = ({ lyrics, colorsDB }) => {\n  if (!colorDict || !Object.keys(colorDict).length) {\n    colorDict = colorsDB;\n    colorDict.col000000 = {\n      number: 0,\n      hex: '#b1b1b1',\n    };\n  }\n\n  return (\n    <div className=\"lyrics__output\">\n      {lyrics.map(verse => {\n        keyNumber++;\n        return <Verse key={`verse-${keyNumber}`} verse={verse} />;\n      })}\n    </div>\n  );\n};\n\nLyricsOutput.propTypes = {\n  lyrics: PropTypes.array.isRequired,\n  colorsDB: PropTypes.object.isRequired,\n};\n\nconst Verse = ({ verse }) => (\n  <p className=\"lyrics__verse\">\n    {verse.map(line => {\n      keyNumber++;\n      return (\n        <Fragment key={`line-${keyNumber}`}>\n          <Line line={line} />\n          <br />\n        </Fragment>\n      );\n    })}\n  </p>\n);\n\nVerse.propTypes = {\n  verse: PropTypes.array.isRequired,\n};\n\nconst Line = ({ line }) => (\n  <span className=\"lyrics__line\">\n    {line.map(part => {\n      keyNumber++;\n      if (!part.line || !part.line[0] || !part.adlib) return null;\n\n      return (\n        <Fragment key={`part-${keyNumber}`}>\n          <Bracket part={part} />\n          <Part part={part} />\n        </Fragment>\n      );\n    })}\n  </span>\n);\n\nLine.propTypes = {\n  line: PropTypes.array.isRequired,\n};\n\nconst Part = ({ part }) => (\n  <Fragment>\n    {part.adlib.map((type, index) => {\n      keyNumber++;\n\n      const bitStyle = getBitStyle(part, type, index);\n\n      switch (type) {\n        case 0:\n          // colored line (colors)\n          return (\n            <span\n              key={`bit-${keyNumber}`}\n              className=\"lyrics__bit-normal\"\n              style={bitStyle}\n            >\n              {part.line[index]}\n            </span>\n          );\n        case 1:\n          // colored line with parentheses (subColors)\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              (\n              <span className=\"lyrics__bit-sub\" style={bitStyle}>\n                {part.line[index]}\n              </span>\n              )\n            </Fragment>\n          );\n        case 2:\n          // greyed italic line with parentheses\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              <i>(</i>\n              <span className=\"lyrics__bit-grey\">{part.line[index]}</span>\n              <i>)</i>\n            </Fragment>\n          );\n        case 3:\n          // greyed italitc line\n          return (\n            <span key={`bit-${keyNumber}`} className=\"lyrics__bit-all\">\n              {part.line[index]}\n            </span>\n          );\n        case 4:\n          // colored line with parentheses (choirColors)\n          return (\n            <Fragment key={`bit-${keyNumber}`}>\n              {' '}\n              <i>(</i>\n              <span className=\"lyrics__bit-choir\" style={bitStyle}>\n                {part.line[index]}\n              </span>\n              <i>)</i>\n            </Fragment>\n          );\n        default:\n          return (\n            <span\n              key={`bit-${keyNumber}`}\n              className=\"lyrics__bit-normal\"\n              style={bitStyle}\n            >\n              {part.line[index]}\n            </span>\n          );\n      }\n    })}\n  </Fragment>\n);\n\nPart.propTypes = {\n  part: PropTypes.object.isRequired,\n};\n\nconst Bracket = ({ part }) => {\n  if (part.omit) return null;\n\n  const hasSingers = part.singers && !part.omit;\n  const hasSubSingers = part.subSingers && !part.omitSub;\n  const hasChoirSingers = part.choirSingers && !part.omitChoir;\n\n  if (!hasSingers && !hasSubSingers && !hasChoirSingers) return null;\n\n  return (\n    <span className=\"lyrics__bracket\">\n      {' ['}\n      {hasSingers && part.singers.join('/')}\n      {hasSubSingers && (\n        <span className=\"lyrics__parenthesis\">\n          {' ('}\n          {part.subSingers.join('/')}\n          {')'}\n        </span>\n      )}\n      {hasChoirSingers && (\n        <span className=\"lyrics__braces\">\n          {' {'}\n          {part.choirSingers.join('/')}\n          {'}'}\n        </span>\n      )}\n      {'] '}\n    </span>\n  );\n};\n\nBracket.propTypes = {\n  part: PropTypes.object.isRequired,\n};\n\nconst getBitStyle = (part, type) => {\n  const BASE_COLOR = '#b5b5ba';\n  const styles = {\n    background: '#b1b1b1',\n  };\n\n  if (type === 0 && part.colors && part.colors.length) {\n    if (part.colors.length > 1) {\n      const colorHexes = part.colors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.colors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  if (type === 1 && part.subColors && part.subColors.length) {\n    if (part.subColors.length > 1) {\n      const colorHexes = part.subColors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.subColors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  if (type === 4 && part.choirColors && part.choirColors.length) {\n    if (part.choirColors.length > 1) {\n      const colorHexes = part.choirColors.map(\n        c => (colorDict[c] ? colorDict[c].hex : BASE_COLOR)\n      );\n      styles.background = `linear-gradient(${colorHexes.join(', ')})`;\n    } else {\n      styles.background = colorDict[part.choirColors[0]].hex || BASE_COLOR;\n    }\n  }\n\n  return styles;\n};\n\nexport default LyricsOutput;\n","// Global variables\nconst COLOR_BANK = {\n  ALL: 'col000000',\n};\nlet latestUnitId = null;\nlet errors = [];\n\nlet lastSingers = [];\nlet lastColors = [];\nlet lastSubsingers = [];\nlet lastSubColors = [];\nlet lastChoirSingers = [];\nlet lastChoirColors = [];\nlet wasLastLineEmpty = false;\nlet lastLineHadSubSingers = false;\nlet lastLineHadChoirSings = false;\n\nlet uses = {};\n\nconst updateUses = entry => {\n  function addEntry(name) {\n    if (uses[name]) {\n      uses[name]++;\n    } else {\n      uses[name] = 1;\n    }\n  }\n\n  if (typeof entry === 'string') {\n    addEntry(entry.trim().toUpperCase());\n  } else if (Array.isArray(entry)) {\n    entry.forEach(n => addEntry(n.trim().toUpperCase()));\n  }\n};\n\nclass Part {\n  constructor() {\n    this.singers = null; // type: array\n    this.subSingers = null; // type: array\n    this.line = []; // type: array\n    this.adlib = []; // type: array\n    /**\n     * adlib code reference\n     * 0: regular line colored\n     * 1: surrounded by parenthesis colored\n     * 2: italic greyed surrouneded by parenthesis\n     * 3: italic greyed\n     * 4: italic colored\n     */\n    this.colors = null; // type: array\n    this.subColors = null; // type: array\n    this.omit = false; // type: bool\n    this.omitSub = false; // type: bool\n  }\n}\n\nconst cleanUpPart = part => {\n  if (lastSubsingers.length) lastLineHadSubSingers = true;\n  if (lastChoirSingers.length) lastLineHadChoirSings = true;\n\n  // Keep singer state when not preceeded by an empty line\n  if (part.adlib.includes(0)) {\n    if (!part.singers && wasLastLineEmpty) {\n      part.adlib = part.adlib.map(() => 3);\n    } else if (!part.singers) {\n      updateUses(lastSingers);\n      part.singers = [...lastSingers];\n      part.colors = [...lastColors];\n      part.omit = true;\n    }\n  }\n\n  // Keep subSinger state when not preceeded by an empty line\n  if (part.adlib.includes(1)) {\n    if (!part.subSingers && (wasLastLineEmpty || !lastLineHadSubSingers)) {\n      part.adlib = part.adlib.map(a => (a === 1 ? 2 : a));\n    } else if (!part.subSingers) {\n      updateUses(lastSubsingers);\n      part.subSingers = [...lastSubsingers];\n      part.subColors = [...lastSubColors];\n      part.omitSub = true;\n      lastLineHadSubSingers = true;\n    }\n  }\n\n  if (part.adlib.includes(1)) {\n    lastLineHadSubSingers = true;\n  }\n\n  // Keep choirSinger state when not preceeded by an empty line\n  if (part.adlib.includes(4)) {\n    if (!part.choirSingers && (wasLastLineEmpty || !lastLineHadChoirSings)) {\n      part.adlib = part.adlib.map(a => (a === 4 ? 2 : a));\n    } else if (!part.choirSingers && lastChoirSingers.length) {\n      updateUses(lastChoirSingers);\n      part.choirSingers = [...lastChoirSingers];\n      part.choirColors = [...lastChoirColors];\n      part.omitChoir = true;\n      lastLineHadChoirSings = true;\n    }\n  }\n\n  if (part.adlib.includes(4)) {\n    lastLineHadChoirSings = true;\n  }\n\n  // Clean up unused keys\n  if (!part.singers) delete part.singers;\n  if (Array.isArray(part.singers) && !part.singers.length) delete part.singers;\n  if (!part.subSingers) delete part.subSingers;\n  if (Array.isArray(part.subSingers) && !part.subSingers.length)\n    delete part.subSingers;\n  if (!part.line) delete part.line;\n  if (Array.isArray(part.line) && !part.line.length) delete part.line;\n  if (!part.adlib) delete part.adlib;\n  if (Array.isArray(part.adlib) && !part.adlib.length) delete part.adlib;\n  if (!part.colors) delete part.colors;\n  if (Array.isArray(part.colors) && !part.colors.length) delete part.colors;\n  if (!part.subColors) delete part.subColors;\n  if (Array.isArray(part.subColors) && !part.subColors.length)\n    delete part.subColors;\n  if (!part.omit) delete part.omit;\n  if (!part.omitSub) delete part.omitSub;\n\n  if (Object.keys(part).length) {\n    wasLastLineEmpty = false;\n  } else {\n    part.empty = true;\n    wasLastLineEmpty = true;\n    lastLineHadSubSingers = false;\n    lastLineHadChoirSings = false;\n  }\n\n  // Save last\n  if (!part.empty) {\n    if (part.singers) lastSingers = [...part.singers];\n    if (part.colors) lastColors = [...part.colors];\n    if (part.subSingers) lastSubsingers = [...part.subSingers];\n    if (part.subColors) lastSubColors = [...part.subColors];\n    if (part.choirSingers) lastChoirSingers = [...part.choirSingers];\n    if (part.choirColors) lastChoirColors = [...part.choirColors];\n  } else {\n    lastSingers = [];\n    lastColors = [];\n    lastSubsingers = [];\n    lastSubColors = [];\n    lastChoirSingers = [];\n    lastChoirSingers = [];\n    lastLineHadSubSingers = false;\n    lastLineHadChoirSings = false;\n  }\n  return part;\n};\n\nconst parseLine = line => {\n  const result = [];\n  let insideBracket = false;\n  let insideParentheses = false;\n  let insideCurly = false;\n\n  let names = [];\n  let colors = [];\n\n  let currentString = '';\n  let lastCharacter = '';\n  let currentPart = new Part();\n  for (let i = 0; i < line.length; i++) {\n    const char = line[i];\n\n    // Analyse each character\n    switch (char) {\n      case '[':\n        if (insideBracket) {\n          errors.push(\n            'You should not place an opening square bracket inside another square bracket'\n          );\n        }\n        insideBracket = true;\n        // Push Part and reset variabes\n        if (i !== 0) {\n          if (currentString.trim()) {\n            currentPart.line.push(currentString.trim());\n            currentPart.adlib.push(0);\n          }\n          result.push(cleanUpPart(currentPart));\n          insideParentheses = false;\n          names = [];\n          colors = [];\n          currentString = '';\n          lastCharacter = '';\n        }\n        // Start new Part\n        currentPart = new Part();\n        break;\n\n      case ']':\n        if (!insideBracket) {\n          errors.push(\n            'You should not place an closing square bracket inside another square bracket'\n          );\n        }\n        if (insideBracket && lastCharacter !== ')' && lastCharacter !== '}') {\n          const entry = currentString.trim().toUpperCase();\n          names.push(entry);\n          colors.push(COLOR_BANK[entry] || 'col000000');\n          updateUses(names);\n          currentPart.singers = names;\n          currentPart.colors = colors;\n          names = [];\n          colors = [];\n          currentString = '';\n        }\n        insideBracket = false;\n        break;\n\n      case '(':\n        if (insideParentheses) {\n          errors.push(\n            'You should not place a opening parenthesis inside another parenthesis'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.singers = names;\n            currentPart.colors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(0);\n          currentString = '';\n        }\n        insideParentheses = true;\n        break;\n\n      case ')':\n        if (!insideParentheses) {\n          errors.push(\n            'You should not place a closing parenthesis inside another parenthesis'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.subSingers = names;\n            currentPart.subColors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(1);\n          currentString = '';\n        }\n        insideParentheses = false;\n        break;\n\n      case '{':\n        if (insideCurly) {\n          errors.push(\n            'You should not place a opening curly braces inside another curly braces'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.singers = names;\n            currentPart.colors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(0);\n          currentString = '';\n        }\n        insideCurly = true;\n        break;\n\n      case '}':\n        if (!insideCurly) {\n          errors.push(\n            'You should not place a closing curly braces inside another curly braces'\n          );\n        }\n        if (insideBracket) {\n          if (currentString.trim()) {\n            const entry = currentString.trim().toUpperCase();\n            names.push(entry);\n            colors.push(COLOR_BANK[entry] || 'col000000');\n            currentString = '';\n            updateUses(names);\n            currentPart.choirSingers = names;\n            currentPart.choirColors = colors;\n            names = [];\n            colors = [];\n          }\n        } else if (currentString.trim()) {\n          currentPart.line.push(currentString.trim());\n          currentPart.adlib.push(4);\n          currentString = '';\n        }\n        insideCurly = false;\n        break;\n\n      case '/':\n        // TO-DO\n        if (insideBracket) {\n          const entry = currentString.trim().toUpperCase();\n          names.push(entry);\n          colors.push(COLOR_BANK[entry] || 'col000000');\n          currentString = '';\n        } else {\n          currentString += char;\n        }\n        break;\n      default:\n        currentString += char;\n      // do nothing\n    }\n    lastCharacter = char;\n  }\n  // Push the last part to the result\n  if (currentString) {\n    currentPart.line.push(currentString.trim());\n    currentPart.adlib.push(0);\n  }\n  result.push(cleanUpPart(currentPart));\n\n  if (result.length === 1 && result[0].empty) {\n    return null;\n  }\n  return result;\n};\n\nconst parseLyrics = (input, members, unitId) => {\n  const result = [];\n\n  // Build member color bank if it's a new unitId\n  if (unitId !== latestUnitId) {\n    Object.values(members).forEach(member => {\n      COLOR_BANK[member.name.toUpperCase()] = member.colorId || 'col000000';\n    });\n    latestUnitId = unitId;\n  }\n\n  // Split in linebreaks\n  const lines = input.split('\\n').map(l => l.trim());\n  // Keep track of previous information\n\n  // Iterate through lines\n  for (let i = 0; i < lines.length; i++) {\n    result.push(parseLine(lines[i]));\n  }\n\n  // Reset all variabes\n  lastSingers = [];\n  lastColors = [];\n  lastSubsingers = [];\n  lastSubColors = [];\n  lastChoirSingers = [];\n  lastChoirSingers = [];\n  wasLastLineEmpty = false;\n  lastLineHadSubSingers = false;\n  lastLineHadChoirSings = false;\n\n  // Group lyrics in paragraphs\n  const paragraphedResult = [[]];\n  let paragraphIndex = 0;\n  result.forEach(currentLine => {\n    if (!currentLine) {\n      paragraphedResult.push([]);\n      paragraphIndex++;\n    } else {\n      paragraphedResult[paragraphIndex].push(currentLine);\n    }\n  });\n\n  const response = {\n    result: paragraphedResult,\n    uses: { ...uses },\n  };\n\n  // Add any errors\n  if (errors.length) {\n    response.errors = [...errors];\n  }\n\n  errors = [];\n  uses = [];\n\n  return response;\n};\n\nexport default parseLyrics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\n\n// Import lyrics components\nimport LyricsOutput from './LyricsOutput';\n// Import common components\nimport { Loading, RequirementWrapper } from '../../../common';\n// Import lyric parser\nimport parseLyrics from '../parser';\n\nclass Lyrics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lyrics: {\n        result: [],\n        uses: {},\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadColors();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { colors },\n      distribute: { activeUnit },\n    } = this.props;\n\n    if (pending.REQUEST_COLORS) {\n      return <Loading message=\"Fecthing Colors...\" />;\n    }\n\n    const handleLyricsInput = event => {\n      const { value } = event.target;\n\n      this.setState({\n        lyrics: parseLyrics(value, activeUnit.members || [], activeUnit.id),\n      });\n    };\n\n    return (\n      <RequirementWrapper requirements={['activeUnit']}>\n        <main className=\"container container--lyrics\">\n          <h1>Lyrics</h1>\n          {activeUnit.members ? (\n            <ul className=\"lyrics__members-list\">\n              {Object.values(activeUnit.members).map(member => (\n                <li\n                  className={`pill background-color-${member.color.number ||\n                    0}`}\n                  key={member.id}\n                >\n                  {member.name.toUpperCase()}{' '}\n                  {this.state.lyrics.uses[member.name.toUpperCase()] &&\n                    `(${this.state.lyrics.uses[member.name.toUpperCase()]})`}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <section className=\"lyrics__members-list--empty\">\n              There is no Active Unit Selected.\n            </section>\n          )}\n          <ScrollSync>\n            <section className=\"lyrics__group\">\n              <ScrollSyncPane>\n                <textarea\n                  name=\"lyrics\"\n                  id=\"\"\n                  cols=\"30\"\n                  rows=\"10\"\n                  className=\"lyrics__input\"\n                  onChange={handleLyricsInput}\n                />\n              </ScrollSyncPane>\n              <ScrollSyncPane>\n                <LyricsOutput\n                  lyrics={this.state.lyrics.result}\n                  colorsDB={colors}\n                />\n              </ScrollSyncPane>\n            </section>\n          </ScrollSync>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nLyrics.propTypes = {\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  loadColors: PropTypes.func.isRequired,\n};\n\nexport default Lyrics;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Lyrics from '../components/Lyrics';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Lyrics)\n);\n","import LyricsContainer from './containers/LyricsContainer';\n\nexport default LyricsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ColorReferenceBar = ({ colors, colorsInUse }) => (\n  <ul className=\"color-reference-bar\">\n    {Object.values(colors).map(color => {\n      const isInUse = colorsInUse[color.id]\n        ? 'color-reference-item--in-use'\n        : '';\n      return (\n        <li\n          className={`color-reference-item background-color-${\n            color.number\n          } ${isInUse}`}\n          key={color.id}\n        >\n          {color.name}\n          <br />\n          {color.count}\n        </li>\n      );\n    })}\n  </ul>\n);\n\nColorReferenceBar.propTypes = {\n  colors: PropTypes.object,\n  colorsInUse: PropTypes.object,\n};\n\nColorReferenceBar.defaultProps = {\n  colors: {},\n  colorsInUse: PropTypes.object,\n};\n\nexport default ColorReferenceBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Select, Option, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n// Import constants\nimport constants from '../../../../utils/constants';\n\nconst ManageArtist = ({\n  formState,\n  props,\n  validateTypeahead,\n  isValid,\n  artistId,\n  defaultValues,\n  next,\n}) => {\n  const {\n    admin: { panels },\n    db: { artistsTypeahead },\n    handleEditArtist,\n  } = props;\n\n  // Locked Panel\n  if (panels.artist === 'locked') {\n    return (\n      <section className=\"manage-form__artist\">\n        <h3 className=\"manage-form__button-title\">Artist</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Lock Artist\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Open Panel\n  if (panels.artist === 'open') {\n    return (\n      <section className=\"manage-form__artist\">\n        <h3 className=\"manage-form__button-title\">Artist</h3>\n        <button\n          className=\"manage-form__button-add\"\n          onClick={() => handleEditArtist(artistId)}\n        >\n          <img\n            className=\"manage-form__button-add-image\"\n            src={managePlus}\n            alt=\"Add Artist\"\n          />\n        </button>\n        <Typeahead\n          action={e => validateTypeahead(e)}\n          name=\"artists\"\n          placeholder=\"Search existing artist...\"\n          suggestions={artistsTypeahead}\n        />\n        {isValid && (\n          <p className=\"manage-form__valid\">\n            <Icon type=\"check\" color=\"green\" inline />\n            Selected Artist is valid. Click on the plus button to add it.\n          </p>\n        )}\n      </section>\n    );\n  }\n\n  // Validation classes\n  const isRequired = value => (!value ? 'This field is required' : undefined);\n\n  const isValidName =\n    formState.errors.artist && formState.errors.artist.name\n      ? 'manage-form__input--invalid'\n      : '';\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__artist manage-form__artist-edit\">\n      <div className=\"manage-form__form-group\">\n        <Scope scope=\"artist\">\n          <h3>Artist</h3>\n          <label className=\"manage-form__label\">\n            Name*<Text\n              className={`manage-form__input ${isValidName}`}\n              field=\"name\"\n              validateOnBlur\n              validate={isRequired}\n              required\n              initialValue={defaultValues.name}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Other Names<Text\n              className=\"manage-form__input\"\n              field=\"otherNames\"\n              initialValue={defaultValues.otherNames}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Genre*\n            <Select\n              className=\"manage-form__input\"\n              field=\"genre\"\n              validate={isRequired}\n              initialValue={defaultValues.genre}\n              required\n            >\n              <Option value=\"\" disabled>\n                Select One...\n              </Option>\n              {Object.entries(constants.GENRES).map(genre => (\n                <Option key={genre[0]} value={genre[0]}>\n                  {genre[1]}\n                </Option>\n              ))}\n            </Select>\n          </label>\n          <label className=\"manage-form__label\">\n            Private{' '}\n            <Checkbox field=\"private\" initialValue={defaultValues.private} />\n          </label>\n        </Scope>\n      </div>\n      <div className=\"manage-form__navigation\">\n        <button className=\"btn\" onClick={() => next(formState)}>\n          Unlock Unit\n        </button>\n      </div>\n    </section>\n  );\n};\n\nManageArtist.propTypes = {\n  admin: PropTypes.object,\n  artistId: PropTypes.string,\n  db: PropTypes.object,\n  defaultValues: PropTypes.object.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditArtist: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n  props: PropTypes.object.isRequired,\n  validateTypeahead: PropTypes.func.isRequired,\n};\n\nManageArtist.defaultProps = {\n  admin: {},\n  db: {},\n  artistId: null,\n  handleEditArtist: () => {},\n};\n\nexport default ManageArtist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n\nconst ManageUnit = ({\n  formState,\n  props,\n  validateTypeahead,\n  isValid,\n  unitId,\n  defaultValues,\n  next,\n}) => {\n  const {\n    admin: { unitsTypeahead, panels },\n    handleEditUnit,\n  } = props;\n\n  // Locked Panel\n  if (panels.unit === 'locked') {\n    return (\n      <section className=\"manage-form__unit\">\n        <h3 className=\"manage-form__button-title\">Unit</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Locked Unit\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Open Panel\n  if (panels.unit === 'open') {\n    return (\n      <section className=\"manage-form__unit\">\n        <h3 className=\"manage-form__button-title\">Unit</h3>\n        <button\n          className=\"manage-form__button-add\"\n          onClick={() => handleEditUnit(unitId)}\n        >\n          <img\n            className=\"manage-form__button-add-image\"\n            src={managePlus}\n            alt=\"Add Unit\"\n          />\n        </button>\n        {unitsTypeahead.length && (\n          <Typeahead\n            action={e => validateTypeahead(e)}\n            name=\"units\"\n            placeholder=\"Search existing unit...\"\n            suggestions={unitsTypeahead}\n          />\n        )}\n        {isValid && (\n          <p className=\"manage-form__valid\">\n            <Icon type=\"check\" color=\"green\" inline />\n            Selected Unit is valid. Click on the plus button to add it.\n          </p>\n        )}\n      </section>\n    );\n  }\n\n  // Validation classes\n  const isRequired = value => (!value ? 'This field is required' : undefined);\n  const isYear = value =>\n    value < 1900 || value > new Date().getFullYear()\n      ? 'Value must be a four digit year'\n      : undefined;\n\n  const isValidName =\n    formState.errors.unit && formState.errors.unit.name\n      ? 'manage-form__input--invalid'\n      : '';\n\n  const isValidDebutYear =\n    formState.errors.unit && formState.errors.unit.debutYear\n      ? 'manage-form__input--invalid'\n      : '';\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__unit manage-form__unit-edit\">\n      <div className=\"manage-form__form-group\">\n        <Scope scope=\"unit\">\n          <h3>Unit</h3>\n          <label className=\"manage-form__label\">\n            Unit Name* (e.g. OT4)<Text\n              className={`manage-form__input ${isValidName}`}\n              field=\"name\"\n              validateOnBlur\n              validate={isRequired}\n              required\n              initialValue={defaultValues.name}\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Debut Year*<Text\n              className={`manage-form__input ${isValidDebutYear}`}\n              field=\"debutYear\"\n              validateOnBlur\n              validate={isYear}\n              required\n              initialValue={defaultValues.debutYear}\n              type=\"number\"\n            />\n          </label>\n          <label className=\"manage-form__label\">\n            Official{' '}\n            <Checkbox field=\"official\" initialValue={defaultValues.official} />\n          </label>\n          <label className=\"manage-form__label\">\n            Sub-unit{' '}\n            <Checkbox field=\"subUnit\" initialValue={defaultValues.subUnit} />\n          </label>\n          <label className=\"manage-form__label\">\n            Private{' '}\n            <Checkbox field=\"private\" initialValue={defaultValues.private} />\n          </label>\n        </Scope>\n      </div>\n      <div className=\"manage-form__navigation\">\n        <button className=\"btn\" onClick={() => next(formState)}>\n          Unlock Members\n        </button>\n      </div>\n    </section>\n  );\n};\n\nManageUnit.propTypes = {\n  admin: PropTypes.object,\n  defaultValues: PropTypes.object.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditUnit: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n  props: PropTypes.object.isRequired,\n  validateTypeahead: PropTypes.func.isRequired,\n  unitId: PropTypes.string,\n};\n\nManageUnit.defaultProps = {\n  admin: {},\n  handleEditUnit: () => {},\n  unitId: null,\n};\n\nexport default ManageUnit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Checkbox, Select, Option, Scope } from 'informed';\n\n// Import common components\nimport { Typeahead, Icon } from '../../../common';\n// Import images\nimport manageLock from '../../../../images/manage-lock.svg';\nimport managePlus from '../../../../images/manage-plus.svg';\n// Import utils\nimport utils from '../../../../utils';\n// Import constants\nimport constants from '../../../../utils/constants';\n\nconst ManageMembers = ({\n  formState,\n  props,\n  colorsInUse,\n  defaultValues,\n  handleEditMember,\n  isValid,\n  memberId,\n  validateTypeahead,\n}) => {\n  const {\n    admin: { panels },\n    db: { membersTypeahead },\n    removeMember,\n    updateMemberColor,\n    // updateMemberPositions,\n  } = props;\n\n  // Locked Panel\n  if (panels.members === 'locked') {\n    return (\n      <section className=\"manage-form__members\">\n        <h3 className=\"manage-form__button-title\">Members</h3>\n        <div className=\"manage-form__button-locked\">\n          <img\n            className=\"manage-form__button-lock-image\"\n            src={manageLock}\n            alt=\"Locked Unit\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // Edit Panel\n  return (\n    <section className=\"manage-form__members manage-form__members-edit\">\n      <div className=\"manage-form__form-group-member\">\n        {defaultValues.map((member, index) => {\n          const key = index;\n\n          // Validation classes\n          const isRequired = value =>\n            !value ? 'This field is required' : undefined;\n          const isName = value => {\n            // isRequired\n            if (!value) return 'This field is required';\n            // Cannot have spaces\n            if (value.match(/(\\.|:| |,|;|\\?)/g))\n              return 'Name cannot contain spaces, commas, ., :, ;, or ?';\n            // Max 12 characters\n            if (value.length > 12)\n              return 'Name cannot be longer than 12 characters';\n            return undefined;\n          };\n\n          const isValidName =\n            formState.errors.members &&\n            formState.errors.members[index] &&\n            formState.errors.members[index].name\n              ? 'manage-form__input--invalid'\n              : '';\n\n          if (member) {\n            return (\n              <Scope scope={`members[${index}]`} key={`member-${key}`}>\n                <div className=\"manage-form__form-member manage-member\">\n                  <span\n                    className={`manage-member__title background-color-${utils.getColorNumber(\n                      member.colorId\n                    )}`}\n                  >\n                    Member {index + 1}{' '}\n                    <button\n                      className=\"btn-remove-user\"\n                      onClick={() => removeMember(index)}\n                    >\n                      ×\n                    </button>\n                  </span>\n                  <div className=\"manage-form__inline\">\n                    <label\n                      className=\"manage-form__label\"\n                      title=\"Member names must be less than 12 characters without spaces, commas, colors, semicolons, questions marks or periods\"\n                    >\n                      Name*<Text\n                        className={`manage-form__input ${isValidName}`}\n                        field=\"name\"\n                        validateOnBlur\n                        validate={isName}\n                        required\n                        initialValue={member.name}\n                      />\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--30\">\n                      Initials<Text\n                        className=\"manage-form__input\"\n                        field=\"initials\"\n                        initialValue={member.initials}\n                        maxLength=\"2\"\n                      />\n                    </label>\n                  </div>\n                  <div className=\"manage-form__inline\">\n                    <label className=\"manage-form__label manage-form__label--70\">\n                      Birthdate*<Text\n                        className=\"manage-form__input\"\n                        field=\"birthdate\"\n                        validate={isRequired}\n                        required\n                        initialValue={member.birthdate}\n                        type=\"date\"\n                      />\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--30\">\n                      Color*\n                      <Select\n                        className={`manage-form__input background-color-${utils.getColorNumber(\n                          member.colorId\n                        )}`}\n                        field=\"colorId\"\n                        validate={isRequired}\n                        initialValue={member.colorId}\n                        required\n                        onChange={e => updateMemberColor(e.target.value, index)}\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.COLORS).map(color => (\n                          <Option\n                            key={`${key}-${color[0]}`}\n                            value={color[0]}\n                            disabled={colorsInUse[color[0]]}\n                          >\n                            {color[1]}\n                          </Option>\n                        ))}\n                      </Select>\n                    </label>\n                  </div>\n                  <div className=\"manage-form__inline\">\n                    <label className=\"manage-form__label manage-form__label--50\">\n                      Gender*\n                      <Select\n                        className=\"manage-form__input\"\n                        field=\"gender\"\n                        validate={isRequired}\n                        initialValue={member.gender}\n                        required\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.GENDERS).map(gender => (\n                          <Option key={`${key}-${gender[0]}`} value={gender[0]}>\n                            {gender[1]}\n                          </Option>\n                        ))}\n                      </Select>\n                    </label>\n                    <label className=\"manage-form__label manage-form__label--50\">\n                      Nationality*\n                      <Select\n                        className=\"manage-form__input\"\n                        field=\"nationality\"\n                        validate={isRequired}\n                        initialValue={member.nationality}\n                        required\n                      >\n                        <Option value=\"\" disabled>\n                          Select One...\n                        </Option>\n                        {Object.entries(constants.NATIONALITIES).map(\n                          nationality => (\n                            <Option\n                              key={`${key}-${nationality[0]}`}\n                              value={nationality[0]}\n                            >\n                              {nationality[1]}\n                            </Option>\n                          )\n                        )}\n                      </Select>\n                    </label>\n                  </div>\n                  <label className=\"manage-form__label\">Positions* </label>\n                  <div className=\"position-buttons\">\n                    {constants.POSITIONS_LIST.map(position => (\n                      <Checkbox\n                        key={`${key}-${position}`}\n                        field={position}\n                        initialValue={member[utils.spiralCase(position)]}\n                        className={`position-checkbox position-checkbox-${utils.spiralCase(\n                          position\n                        )}`}\n                        title={position}\n                        // onChange={e =>\n                        //   updateMemberPositions(\n                        //     e.target.checked,\n                        //     position,\n                        //     index\n                        //   )\n                        // }\n                      />\n                    ))}\n                  </div>\n                  <label className=\"manage-form__label\">\n                    Private{' '}\n                    <Checkbox field=\"private\" initialValue={member.private} />\n                  </label>\n                </div>\n              </Scope>\n            );\n          }\n          return null;\n        })}\n        <div className=\"manage-form__form-member manage-member-new\">\n          <h3 className=\"manage-form__button-title\">Add new member</h3>\n          <button\n            className=\"manage-form__button-add\"\n            onClick={() => handleEditMember(memberId, formState)}\n          >\n            <img\n              className=\"manage-form__button-add-image\"\n              src={managePlus}\n              alt=\"Add Unit\"\n            />\n          </button>\n          <Typeahead\n            action={e => validateTypeahead(e)}\n            name=\"members\"\n            placeholder=\"Search existing members...\"\n            suggestions={membersTypeahead}\n          />\n          {isValid && (\n            <p className=\"manage-form__valid\">\n              <Icon type=\"check\" color=\"green\" inline />\n              Selected Member is valid. Click on the plus button to add it.\n            </p>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nManageMembers.propTypes = {\n  admin: PropTypes.object,\n  colorsInUse: PropTypes.object,\n  db: PropTypes.object,\n  defaultValues: PropTypes.array.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleEditMember: PropTypes.func,\n  isValid: PropTypes.bool.isRequired,\n  memberId: PropTypes.string,\n  props: PropTypes.object.isRequired,\n  removeMember: PropTypes.func,\n  updateMemberColor: PropTypes.func,\n  // updateMemberPositions: PropTypes.func,\n  validateTypeahead: PropTypes.func.isRequired,\n};\n\nManageMembers.defaultProps = {\n  admin: {},\n  db: {},\n  colorsInUse: {},\n  handleEditMember: () => {},\n  memberId: null,\n  removeMember: () => {},\n  updateMemberColor: () => {},\n  // updateMemberPositions: () => {},\n};\n\nexport default ManageMembers;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'informed';\n\n// Import components\nimport ColorReferenceBar from './ColorReferenceBar';\nimport ManageArtist from './ManageArtist';\nimport ManageUnit from './ManageUnit';\nimport ManageMembers from './ManageMembers';\n// Import common components\nimport { RequirementWrapper, Loading, Icon } from '../../../common';\n// Import utility functions\nimport utils from '../../../../utils';\n\nclass Manage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artistId: null,\n      validArtist: false,\n      unitId: null,\n      validUnit: false,\n      memberId: null,\n      validMember: false,\n    };\n\n    this.handleEditMemberAndState = this.handleEditMemberAndState.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n    this.validateArtist = this.validateArtist.bind(this);\n    this.validateUnit = this.validateUnit.bind(this);\n    this.validateMembers = this.validateMembers.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.loadArtists();\n    this.props.loadColors();\n    this.props.loadMembers();\n  }\n\n  validateArtist(event) {\n    const { value } = event.target;\n    const dict = this.props.db.artistsTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ artistId: dict[value], validArtist: true });\n    } else {\n      this.setState({ artistId: null, validArtist: false });\n    }\n  }\n\n  validateUnit(event) {\n    const { value } = event.target;\n    const dict = this.props.admin.unitsTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ unitId: dict[value], validUnit: true });\n    } else {\n      this.setState({ unitId: null, validUnit: false });\n    }\n  }\n\n  validateMembers(event) {\n    const { value } = event.target;\n    const dict = this.props.db.membersTypeaheadDict;\n    if (dict[value]) {\n      this.setState({ memberId: dict[value], validMember: true });\n    } else {\n      this.setState({ memberId: null, validMember: false });\n    }\n  }\n\n  handleEditMemberAndState(memberId, formState) {\n    if (memberId) {\n      this.setState({ memberId: null, validMember: false });\n    }\n    this.props.handleEditMember(memberId, formState);\n  }\n\n  resetAll() {\n    this.setState({\n      artistId: null,\n      validArtist: false,\n      unitId: null,\n      validUnit: false,\n      memberId: null,\n      validMember: false,\n    });\n    this.props.resetManage();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      admin: {\n        colorsInUse,\n        editingArtist,\n        editingMembers,\n        editingUnit,\n        manageResult,\n      },\n      db: { colors },\n      handleResyncDB,\n      saveManage,\n      updateManageForm,\n      unlockUnit,\n      unlockMembers,\n    } = this.props;\n\n    const isSaveable =\n      Object.keys(editingArtist).length &&\n      Object.keys(editingUnit).length &&\n      editingMembers.length > 1;\n\n    // Build default values for form\n    const defaultValues = {\n      artist: {\n        name: undefined,\n        otherNames: undefined,\n        genre: undefined,\n        private: undefined,\n      },\n      unit: {\n        debutYear: undefined,\n        name: undefined,\n        official: undefined,\n        private: undefined,\n        subUnit: undefined,\n      },\n      members: [],\n    };\n\n    if (editingArtist && editingArtist.id) {\n      defaultValues.artist = {\n        name: editingArtist.name,\n        otherNames: editingArtist.otherNames,\n        genre: editingArtist.genre,\n        private: editingArtist.private,\n      };\n    }\n\n    if (editingUnit && editingUnit.id) {\n      defaultValues.unit = {\n        debutYear: editingUnit.debutYear,\n        name: editingUnit.name,\n        official: editingUnit.official,\n        private: editingUnit.private,\n        subUnit: editingUnit.subUnit,\n      };\n    }\n\n    if (editingMembers.length) {\n      editingMembers.forEach(member => {\n        if (member) {\n          defaultValues.members.push({\n            colorId: member.colorId || undefined,\n            gender: member.gender || undefined,\n            initials: member.initials || undefined,\n            name: member.name || undefined,\n            nationality: member.nationality || undefined,\n            private: member.private || undefined,\n            referenceArtist: member.referenceArtist || undefined,\n            birthdate: member.birthdate\n              ? utils.spiralBirthdate(member.birthdate)\n              : undefined,\n            ...utils.makePositionsEditable(member.positions || []),\n          });\n        } else {\n          defaultValues.members.push(null);\n        }\n      });\n    }\n\n    // If database is still loading\n    if (\n      pending.REQUEST_ARTISTS ||\n      pending.REQUEST_COLORS ||\n      pending.REQUEST_MEMBERS\n    ) {\n      return <Loading message=\"Preparing manage...\" />;\n    }\n\n    // If database is being resynced\n    if (pending.RESYNC_DATABASE) {\n      return <Loading message=\"Resyncing database...\" />;\n    }\n\n    // If save is in progress\n    if (pending.UPDATE_COMPLETE_ARTIST) {\n      return <Loading message=\"Saving...\" />;\n    }\n\n    // If save is in progress\n    if (manageResult === 'SUCCESS') {\n      return (\n        <main className=\"container container--manage\">\n          <h1>Manage</h1>\n          <div className=\"manage-section--manage-success\">\n            <Icon type=\"check\" color=\"green\" size={96} />\n            <p>Complete Artists Successfully Created/Updated</p>\n            <button className=\"btn\" onClick={this.resetAll}>\n              Create New Artist\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--manage\">\n          <div className=\"manage-header\">\n            <h1>Manage</h1>\n            <button className=\"btn btn-resync-db\" onClick={handleResyncDB}>\n              Resync Database\n            </button>\n            <p>\n              A complete group is required to save with ONE Artist, ONE Unit,\n              and at least TWO members (no solo artists)\n            </p>\n          </div>\n\n          <ColorReferenceBar colors={colors} colorsInUse={colorsInUse} />\n\n          <Form\n            onChange={formState => updateManageForm(formState)}\n            autoComplete=\"off\"\n            className=\"manage-section\"\n          >\n            {({ formState }) => (\n              <Fragment>\n                <div className=\"manage-form\">\n                  <ManageArtist\n                    formState={formState}\n                    props={this.props}\n                    validateTypeahead={this.validateArtist}\n                    isValid={this.state.validArtist}\n                    artistId={this.state.artistId}\n                    defaultValues={defaultValues.artist}\n                    next={unlockUnit}\n                  />\n                  <ManageUnit\n                    formState={formState}\n                    props={this.props}\n                    validateTypeahead={this.validateUnit}\n                    isValid={this.state.validUnit}\n                    unitId={this.state.unitId}\n                    defaultValues={defaultValues.unit}\n                    next={unlockMembers}\n                  />\n                  <ManageMembers\n                    formState={formState}\n                    props={this.props}\n                    defaultValues={defaultValues.members}\n                    validateTypeahead={this.validateMembers}\n                    isValid={this.state.validMember}\n                    memberId={this.state.memberId}\n                    colorsInUse={colorsInUse}\n                    handleEditMember={this.handleEditMemberAndState}\n                  />\n                </div>\n                <div className=\"manage-form-nav\">\n                  <button className=\"btn\" onClick={() => this.resetAll()}>\n                    Reset\n                  </button>\n                  <button\n                    className=\"btn\"\n                    onClick={() => saveManage(formState)}\n                    disabled={!isSaveable}\n                  >\n                    Save\n                  </button>\n                </div>\n              </Fragment>\n            )}\n          </Form>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nManage.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  loadColors: PropTypes.func.isRequired,\n  loadMembers: PropTypes.func.isRequired,\n  handleEditMember: PropTypes.func.isRequired,\n  handleResyncDB: PropTypes.func.isRequired,\n  resetManage: PropTypes.func.isRequired,\n  saveManage: PropTypes.func.isRequired,\n  updateManageForm: PropTypes.func.isRequired,\n  unlockMembers: PropTypes.func.isRequired,\n  unlockUnit: PropTypes.func.isRequired,\n};\n\nManage.defaultProps = {};\n\nexport default Manage;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Manage from '../components/Manage';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Manage)\n);\n","import ManageContainer from './containers/ManageContainer';\n\nexport default ManageContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Import shared components\nimport { LoadingIcon, Icon } from '../../../common';\n\nconst SongsTable = ({\n  songs,\n  pending,\n  rowAction,\n  songSearchQuery,\n  previouslyDistributedSongsDict,\n}) => {\n  // Filter table rows based on searchQuery\n  let filteredSongs = songs;\n  if (songSearchQuery && filteredSongs[0]) {\n    filteredSongs = _.filter(songs, o => o.query.includes(songSearchQuery));\n  }\n  // Message to be display when table has no rows\n  const emptyTableMessage =\n    songSearchQuery.length > 0\n      ? 'No songs available within your search'\n      : 'No songs available';\n\n  const rowFallback = () => {\n    if (pending) {\n      return (\n        <tr>\n          <td colSpan=\"7\">\n            <LoadingIcon />\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td colSpan=\"7\">{emptyTableMessage}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Distributed</th>\n          <th>Title</th>\n          <th>Artist</th>\n          <th>Album</th>\n          <th>Group Size</th>\n          <th>Video</th>\n          <th>Title Song</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody onClick={rowAction}>\n        {filteredSongs.length > 0\n          ? filteredSongs.map(entry => {\n              const previouslyDistributed = previouslyDistributedSongsDict[\n                entry.id\n              ]\n                ? 'previously-distributed-row'\n                : '';\n              return (\n                <tr\n                  key={`all-artists-${entry.id}`}\n                  id={`a-${entry.id}`}\n                  className={previouslyDistributed}\n                >\n                  <td>\n                    {previouslyDistributed ? (\n                      <Icon\n                        type=\"hand-positive\"\n                        color=\"green\"\n                        title=\"Previously Distributed\"\n                        inline\n                      />\n                    ) : (\n                      ''\n                    )}\n                  </td>\n                  <td>{entry.title}</td>\n                  <td>\n                    {entry.originalArtist}{' '}\n                    {entry.originalArtistId && (\n                      <Icon\n                        type=\"check\"\n                        color=\"yellow\"\n                        title=\"Artist in LD\"\n                        inline\n                      />\n                    )}\n                  </td>\n                  <td>\n                    {entry.album !== 'UNKNOWN' ? (\n                      entry.album\n                    ) : (\n                      <Icon\n                        type=\"question-mark\"\n                        color=\"blue\"\n                        title=\"Unkown Album Title\"\n                        inline\n                      />\n                    )}\n                  </td>\n                  <td>{entry.groupSize}</td>\n                  <td>\n                    {entry.videoId ? (\n                      <Icon\n                        type=\"youtube\"\n                        color=\"red\"\n                        title={entry.videoId}\n                        size=\"18\"\n                        inline\n                      />\n                    ) : (\n                      'Unavailable'\n                    )}\n                  </td>\n                  <td>\n                    {entry.single ? (\n                      <Icon\n                        type=\"check\"\n                        color=\"green\"\n                        title=\"Title Song\"\n                        inline\n                      />\n                    ) : (\n                      <Icon\n                        type=\"no\"\n                        color=\"red\"\n                        title=\"Not a Title Song\"\n                        inline\n                      />\n                    )}\n                  </td>\n                  <td>\n                    {entry.private ? (\n                      <Icon type=\"private\" color=\"red\" title=\"Private\" inline />\n                    ) : (\n                      ''\n                    )}\n                  </td>\n                </tr>\n              );\n            })\n          : rowFallback()}\n      </tbody>\n    </table>\n  );\n};\n\nSongsTable.propTypes = {\n  pending: PropTypes.bool,\n  rowAction: PropTypes.func.isRequired,\n  songs: PropTypes.array.isRequired,\n  songSearchQuery: PropTypes.string,\n  previouslyDistributedSongsDict: PropTypes.object,\n};\n\nSongsTable.defaultProps = {\n  pending: false,\n  songSearchQuery: '',\n  previouslyDistributedSongsDict: {},\n};\n\nexport default SongsTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport SongsTable from './SongsTable';\n// Import common components\nimport { ActiveSong, ActiveUnit, RequirementWrapper } from '../../../common';\n\nclass Songs extends Component {\n  componentDidMount() {\n    this.props.loadSongs();\n    this.props.resetSongSearchQuery();\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { songs, songSearchQuery },\n      distribute: { activeSong, activeUnit },\n    } = this.props;\n\n    // Row click should send user to the selected artist page\n    const handleTableClick = e => {\n      const { id } = e.target.parentNode;\n      if (id) {\n        const songId = id.substring(2);\n        this.props.activateSong(songId);\n        this.props.history.push(`/distribute`);\n      }\n    };\n\n    return (\n      <RequirementWrapper requirements={['activeUnit']}>\n        <main className=\"container container--songs\">\n          <h1>Songs</h1>\n          <section className=\"active-widget__group\">\n            <ActiveUnit activeUnit={activeUnit} showMembers />\n            <ActiveSong activeSong={activeSong} />\n          </section>\n          <h2>All Songs</h2>\n          <p>To start a distribution, select a song by clicking on its row.</p>\n          <input\n            className=\"artists__search-bar\"\n            type=\"text\"\n            placeholder=\"Filter songs...\"\n            onChange={e => this.props.updateSongSearchQuery(e.target.value)}\n          />\n          <SongsTable\n            songs={songs}\n            songSearchQuery={songSearchQuery}\n            pending={pending.REQUEST_SONGS}\n            rowAction={handleTableClick}\n            previouslyDistributedSongsDict={activeUnit.songsDict}\n          />\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nSongs.propTypes = {\n  activateSong: PropTypes.func.isRequired,\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  distribute: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  loadSongs: PropTypes.func.isRequired,\n  resetSongSearchQuery: PropTypes.func.isRequired,\n  updateSongSearchQuery: PropTypes.func.isRequired,\n};\n\nexport default Songs;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Songs from '../components/Songs';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { authOperations } from '../../../../reducers/auth';\nimport { dbOperations } from '../../../../reducers/db';\nimport { distributeOperations } from '../../../../reducers/distribute';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  auth: state.auth,\n  db: state.db,\n  distribute: state.distribute,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...authOperations,\n  ...dbOperations,\n  ...distributeOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Songs)\n);\n","import SongsContainer from './containers/SongsContainer';\n\nexport default SongsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SyncStep1VideoId = ({ handleVideoId, loadYoutubeVideo, videoId }) => (\n  <div className=\"sync__step sync__step--1\">\n    <p>Add a youtube link/video id here</p>\n    <input type=\"text\" onChange={handleVideoId} />\n    <p>OR choose a metronome placeholder</p>\n    <select onChange={handleVideoId} disabled>\n      <option value=\"\">Select a btm placeholder</option>\n      <option value=\"90bpm\">90 bpm</option>\n      <option value=\"100bpm\">100 bpm</option>\n      <option value=\"110bpm\">110 bpm</option>\n      <option value=\"120bpm\">120 bpm</option>\n      <option value=\"130bpm\">130 bpm</option>\n    </select>\n\n    <button\n      className=\"btn btn-block\"\n      disabled={!videoId}\n      onClick={() => loadYoutubeVideo()}\n    >\n      Load Video for {videoId}\n    </button>\n  </div>\n);\n\nSyncStep1VideoId.propTypes = {\n  handleVideoId: PropTypes.func.isRequired,\n  loadYoutubeVideo: PropTypes.func.isRequired,\n  videoId: PropTypes.string,\n};\n\nSyncStep1VideoId.defaultProps = {\n  videoId: '',\n};\n\nexport default SyncStep1VideoId;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Form, Text } from 'informed';\n\n// Import common components\nimport { Typeahead } from '../../../common';\n\nclass SyncStep2Info extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalArtist: '',\n    };\n  }\n\n  addToOriginalArtistForm(event) {\n    const { value } = event.target;\n    this.setState({\n      originalArtist: value,\n    });\n  }\n\n  render() {\n    return (\n      <Form autoComplete=\"off\" className=\"sync__step sync__step--2\">\n        {({ formState }) => (\n          <Fragment>\n            <label className=\"sync__form__label\">\n              Song Title*<Text\n                className=\"sync__form__input\"\n                field=\"title\"\n                required\n              />\n            </label>\n            <label className=\"sync__form__label\">\n              Original Artist*{' '}\n              <Typeahead\n                action={e => this.addToOriginalArtistForm(e)}\n                name=\"artists\"\n                placeholder=\"Search existing artist...\"\n                suggestions={this.props.artistsTypeahead}\n              />\n            </label>\n\n            <label className=\"sync__form__label\">\n              Album<Text className=\"sync__form__input\" field=\"album\" />\n            </label>\n            <label className=\"sync__form__label\">\n              Single (Title song){' '}\n              <Checkbox className=\"sync__form__input\" field=\"single\" />\n            </label>\n            <label className=\"sync__form__label\">\n              Original Group Size*<Text\n                className=\"sync__form__input\"\n                field=\"groupSize\"\n                required\n                type=\"number\"\n                min=\"1\"\n                max=\"50\"\n                step=\"1\"\n              />\n            </label>\n            <label className=\"sync__form__label\">\n              Private <Checkbox className=\"sync__form__input\" field=\"private\" />\n            </label>\n\n            <button\n              className=\"btn btn-block\"\n              onClick={() =>\n                this.props.handleFormInfo(formState, this.state.originalArtist)\n              }\n            >\n              Unlock Next Step\n            </button>\n          </Fragment>\n        )}\n      </Form>\n    );\n  }\n}\n\nSyncStep2Info.propTypes = {\n  artistsTypeahead: PropTypes.array.isRequired,\n  handleFormInfo: PropTypes.func.isRequired,\n};\n\nexport default SyncStep2Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst SyncStep3Lyrics = ({\n  handleLyricsEdit,\n  lockLyrics,\n  lyrics,\n  prepareLines,\n}) => {\n  const insertBrackers = () => {\n    const el = document.getElementById('lyrics-editor');\n    const newEl = utils.insertAtCursor(el, ' [] ');\n    handleLyricsEdit(newEl);\n  };\n\n  return (\n    <div className=\"sync__step sync__step--1\">\n      <div className=\"sync__lyrics__controls\">\n        <button className=\"btn btn-50\" onClick={() => prepareLines(true)}>\n          Prepare Lines *\n        </button>{' '}\n        <button className=\"btn btn-50\" onClick={insertBrackers}>\n          Add []\n        </button>\n      </div>\n      <textarea\n        id=\"lyrics-editor\"\n        className=\"sync__lyrics__textarea\"\n        onChange={e => handleLyricsEdit(e)}\n        placeholder=\"Add Lyrics here and press Prepare Lines\"\n        value={lyrics || ''}\n      />\n      <p>\n        <small>\n          * Prepare Lines adds square brackets before each line erasing any\n          numbered id previously created. If you are editing, this will erase\n          any previously linked pill.\n        </small>\n      </p>\n      <button className=\"btn btn-block\" onClick={() => lockLyrics()}>\n        Lock Lyrics &amp; Next Step\n      </button>\n    </div>\n  );\n};\n\nSyncStep3Lyrics.propTypes = {\n  handleLyricsEdit: PropTypes.func.isRequired,\n  lockLyrics: PropTypes.func.isRequired,\n  lyrics: PropTypes.string.isRequired,\n  prepareLines: PropTypes.func.isRequired,\n};\n\nexport default SyncStep3Lyrics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nclass SyncStep4Buttons extends Component {\n  componentDidMount() {\n    if (this.props.location.pathname === '/admin/sync') {\n      window.addEventListener('keydown', event =>\n        this.props.handleSyncKeydown(event, this.props.player)\n      );\n      window.addEventListener('keyup', event =>\n        this.props.handleSyncKeyup(event, this.props.player)\n      );\n    }\n  }\n\n  render() {\n    const boxes = [\n      { color: '1', name: 'Vocal', boxId: '1' },\n      { color: '8', name: 'Sub', boxId: '2' },\n      { color: '12', name: 'Rap', boxId: '3' },\n      { color: '20', name: 'AdLibs', boxId: '4' },\n      { color: '26', name: 'All', boxId: '5' },\n    ];\n\n    const pillColors = {\n      1: '1',\n      2: '8',\n      3: '12',\n      4: '20',\n      5: '26',\n    };\n\n    return (\n      <div className=\"sync__step sync__step--4b\">\n        <p>\n          You can only record distributions when the video is playing, so hit\n          play!\n        </p>\n        <div className=\"sync__distribution__buttons\">\n          {boxes.map((box, index) => (\n            <button\n              key={box.name}\n              className={`box box-25 background-color-${box.color}`}\n              onMouseDown={() =>\n                this.props.handleSyncBoxMouseDown(box.boxId, this.props.player)\n              }\n              onMouseUp={() =>\n                this.props.handleSyncBoxMouseUp(\n                  box.boxId,\n                  this.props.player,\n                  box.color\n                )\n              }\n            >\n              <span className=\"key\">{index + 1}</span>\n              <span className=\"member-name\">{box.name}</span>\n            </button>\n          ))}\n        </div>\n        <div className=\"sync__distribution__pills\">\n          <h3>\n            Log\n            <span\n              role=\"button\"\n              tabIndex={0}\n              className=\"sync__log-trash\"\n              onClick={() => this.props.deleteSyncPill()}\n            >\n              <Icon type=\"trash\" size=\"24\" inline />\n            </span>\n          </h3>\n          <p>\n            When you have enough pills in the log, you can connect them with the\n            lyrics. You will need a pill for each unconnected plug in the\n            lyrics.\n          </p>\n          <div className=\"sync__log\">\n            {Object.keys(this.props.pills).map(key => {\n              const item = this.props.pills[key];\n              const isActive =\n                +this.props.activePill === +item.pillId ? 'active' : '';\n\n              return (\n                <span\n                  key={item.pillId}\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`background-color-${\n                    pillColors[item.key]\n                  } sync__log__pill sync__log__pill--${isActive}`}\n                  onClick={() => this.props.connectSyncPill(item.pillId)}\n                >\n                  <Icon\n                    type={item.link ? 'plug-connected' : 'plug'}\n                    size=\"12\"\n                    inline\n                  />\n                  <span className=\"sync__log__num\">\n                    :{item.timestamp.toFixed(2)}\n                  </span>\n                  <span className=\"sync__log__num\">\n                    :{item.duration.toFixed(2)}\n                  </span>\n                </span>\n              );\n            })}\n          </div>\n          <div className=\"sync__log__controls\">\n            <button className=\"btn btn-50\" onClick={this.props.resetPillLinks}>\n              Reset Links\n            </button>\n            <button\n              className={`btn btn-50 sync__sequence--${\n                this.props.linkSequenceMode\n              }`}\n              onClick={this.props.linkPillsSequence}\n            >\n              Link in Sequence\n            </button>\n          </div>\n          <p className=\"sync__log__stats\">\n            <span>Pills: {this.props.stats.pills} </span>\n            <span>Lines: {this.props.stats.lines} </span>\n            <span>\n              Linked:{' '}\n              {Math.round(\n                (100 * this.props.stats.linked) / this.props.stats.lines\n              )}%{' '}\n            </span>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nSyncStep4Buttons.propTypes = {\n  activePill: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  connectSyncPill: PropTypes.func.isRequired,\n  deleteSyncPill: PropTypes.func.isRequired,\n  handleSyncBoxMouseDown: PropTypes.func.isRequired,\n  handleSyncBoxMouseUp: PropTypes.func.isRequired,\n  handleSyncKeydown: PropTypes.func.isRequired,\n  handleSyncKeyup: PropTypes.func.isRequired,\n  linkPillsSequence: PropTypes.func.isRequired,\n  linkSequenceMode: PropTypes.bool.isRequired,\n  location: PropTypes.object.isRequired,\n  pills: PropTypes.object.isRequired,\n  player: PropTypes.any,\n  resetPillLinks: PropTypes.func.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nSyncStep4Buttons.defaultProps = {\n  activePill: null,\n  player: null,\n};\n\nexport default SyncStep4Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon } from '../../../common';\n\nconst ICON_COLOR_CODE_HASH = {\n  '1': 'red',\n  '8': 'yellow',\n  '12': 'green',\n  '20': 'blue',\n  '26': 'pink',\n};\n\nconst SyncStep4Distributions = ({\n  activeLine,\n  connectSyncLine,\n  distributionLines,\n  isDistributionComplete,\n  unlockSpecificStep,\n  unlockNextStep,\n}) => (\n  <div className=\"sync__step sync__step--4\">\n    <p>\n      This step begins in the left side of this page. You will create\n      syncronizations, then link the pills with each plug in the lyrics here.\n    </p>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(3)}>\n      <Icon type=\"back-arrow\" inline /> Go Back To Lyrics\n    </button>\n    <section className=\"sync__distribution__lyrics\">\n      {distributionLines.map((line, index) => {\n        const key = `line-${index}`;\n        return line.length > 0 ? (\n          <div className=\"sync__distribution__line\" key={key}>\n            {line.map((part, partIndex) => {\n              const partKey = `${key}-${partIndex}`;\n              const isActive = +activeLine === +part.id ? 'active' : '';\n              return (\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className={`sync__distribution__line--part sync__distribution__line--part-${isActive}`}\n                  key={partKey}\n                  onClick={() => connectSyncLine(part.id)}\n                >\n                  <span className=\"sync__distribution__line--icon\">\n                    <Icon\n                      type={part.link ? 'plug-connected' : 'plug-available'}\n                      size=\"12\"\n                      color={\n                        part.color ? ICON_COLOR_CODE_HASH[part.color] : 'gray'\n                      }\n                    />\n                  </span>\n                  <span className=\"sync__distribution__line--content\">\n                    {part.content}\n                  </span>\n                </span>\n              );\n            })}\n          </div>\n        ) : (\n          <div className=\"sync__distribution__line\" key={key}>\n            &nbsp;\n          </div>\n        );\n      })}\n    </section>\n    <button\n      className=\"btn btn-block\"\n      disabled={!isDistributionComplete}\n      onClick={() => unlockNextStep()}\n    >\n      Next Step\n    </button>\n  </div>\n);\n\nSyncStep4Distributions.propTypes = {\n  activeLine: PropTypes.object,\n  connectSyncLine: PropTypes.func.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  isDistributionComplete: PropTypes.bool,\n  unlockSpecificStep: PropTypes.func.isRequired,\n  unlockNextStep: PropTypes.func.isRequired,\n};\n\nSyncStep4Distributions.defaultProps = {\n  activeLine: null,\n  isDistributionComplete: false,\n};\n\nexport default SyncStep4Distributions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst linesOn = {};\n\nconst SyncStep5Verify = ({ currentTime, distributionLines, timestamps }) => {\n  const timestampsList = Object.keys(timestamps);\n  for (let i = 0; i < timestampsList.length; i++) {\n    const key = timestampsList[i];\n\n    // If current time is smaller than the key, stop loop;\n    if (currentTime < key) {\n      i = timestampsList.length;\n    } else if (currentTime >= key) {\n      const tsArray = timestamps[key];\n      tsArray.forEach(tsObj => {\n        if (tsObj.endTime < currentTime) {\n          linesOn[tsObj.partId.substring(5)] = false;\n        } else {\n          linesOn[tsObj.partId.substring(5)] = true;\n        }\n      });\n    }\n  }\n\n  return (\n    <div className=\"sync__step sync__step--5\">\n      <div className=\"sync__distribution__lyrics\">\n        {distributionLines.map((line, index) => {\n          const key = `line-${index}`;\n          return line.length > 0 ? (\n            <div className=\"sync-lyrics-done__line\" key={key}>\n              {line.map((part, partIndex) => {\n                const partKey = `${key}-${partIndex}`;\n                const isActive = linesOn[part.id]\n                  ? 'sync__distribution__line--part-active'\n                  : '';\n                return (\n                  <span\n                    className={`sync__distribution__line--part ${isActive}`}\n                    key={partKey}\n                  >\n                    <span className=\"sync__distribution__line--content\">\n                      {part.content}\n                    </span>\n                  </span>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"sync__distribution__line\" key={key}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nSyncStep5Verify.propTypes = {\n  currentTime: PropTypes.number.isRequired,\n  distributionLines: PropTypes.array.isRequired,\n  timestamps: PropTypes.object.isRequired,\n};\n\nSyncStep5Verify.defaultProps = {};\n\nexport default SyncStep5Verify;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import common components\nimport { Icon, LoadingWrapper } from '../../../common';\n\nconst SyncStep5Save = ({ info, pending, saveSync, unlockSpecificStep }) => (\n  <div className=\"sync__step sync__step--5\">\n    <h3>Info</h3>\n    <ul className=\"sync__verify__info\">\n      <li className=\"sync__verify__info-item\">Title: {info.title}</li>\n      <li className=\"sync__verify__info-item\">Artist: {info.originalArtist}</li>\n      <li className=\"sync__verify__info-item\">\n        ArtistId: {info.artistId ? info.artistId : 'Unavailable'}\n      </li>\n      <li className=\"sync__verify__info-item\">\n        Album: {info.album ? info.album : 'Unknown'}\n      </li>\n      <li className=\"sync__verify__info-item\">\n        Single: {info.single ? 'Yes' : 'No'}\n      </li>\n      <li className=\"sync__verify__info-item\">Group Size: {info.groupSize}</li>\n      <li className=\"sync__verify__info-item\">Video Id: {info.videoId}</li>\n      <li className=\"sync__verify__info-item\">\n        Private: {info.private ? 'Yes' : 'No'}\n      </li>\n    </ul>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(2)}>\n      <Icon type=\"back-arrow\" inline /> Info is wrong. Let me fix it!\n    </button>\n    <p>\n      Play the video and see your distribution in action to see if anything is\n      wrong.\n    </p>\n    <button className=\"btn btn-block\" onClick={() => unlockSpecificStep(3)}>\n      <Icon type=\"back-arrow\" inline /> Lyrics or distribution are wrong. Let me\n      fix it!\n    </button>\n    <p>\n      After everything is good. You can save by clicking on the button below:\n    </p>\n\n    <button className=\"btn btn-block\" onClick={() => saveSync()}>\n      <LoadingWrapper pending={pending} size=\"tiny\">\n        <Icon type=\"save\" color=\"red\" inline /> Save\n      </LoadingWrapper>\n    </button>\n  </div>\n);\n\nSyncStep5Save.propTypes = {\n  info: PropTypes.object.isRequired,\n  pending: PropTypes.bool,\n  saveSync: PropTypes.func.isRequired,\n  unlockSpecificStep: PropTypes.func.isRequired,\n};\n\nSyncStep5Save.defaultProps = {\n  pending: false,\n};\n\nexport default SyncStep5Save;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport SyncStep1VideoId from './SyncStep1VideoId';\nimport SyncStep2Info from './SyncStep2Info';\nimport SyncStep3Lyrics from './SyncStep3Lyrics';\nimport SyncStep4Buttons from './SyncStep4Buttons';\nimport SyncStep4Distributions from './SyncStep4Distribution';\nimport SyncStep5Verify from './SyncStep5Verify';\nimport SyncStep5Save from './SyncStep5Save';\n// Import common components\nimport {\n  Collapsible,\n  Loading,\n  RequirementWrapper,\n  Icon,\n} from '../../../common';\n\nlet loadYT;\nlet player;\nlet animationInterval;\n\nclass Sync extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 0,\n      currentTime: 0,\n    };\n\n    this.loadYoutubeVideo = this.loadYoutubeVideo.bind(this);\n    this.onPlayerStateChange = this.onPlayerStateChange.bind(this);\n    this.setHeight = this.setHeight.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.db.artists.length < 10) {\n      this.props.loadArtists();\n    }\n  }\n\n  componentDidUpdate() {\n    // Determine player height\n    if (!this.state.height && document.getElementById('video-container')) {\n      this.setHeight();\n    }\n  }\n\n  onPlayerStateChange(e) {\n    // If video is playing\n    if (e.data === 1 && this.props.sync.step === 5) {\n      // Lyric Review Animation Interval\n      animationInterval = setInterval(() => {\n        const currentTime = Math.round(player.getCurrentTime());\n        this.setState(() => ({ currentTime }));\n      }, 500);\n    } else {\n      // Kill interval\n      clearInterval(animationInterval);\n    }\n  }\n\n  setHeight() {\n    const width = document.getElementById('video-container').clientWidth;\n    const height = (9 * width) / 16;\n    this.setState(() => ({ width, height }));\n  }\n\n  loadYoutubeVideo() {\n    if (!loadYT && this.props.sync.videoId) {\n      loadYT = new Promise(resolve => {\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => resolve(window.YT);\n      });\n\n      loadYT.then(YT => {\n        player = new YT.Player(this.youtubePlayerAnchor, {\n          height: this.state.height || 390,\n          width: this.state.width || 640,\n          videoId: this.props.sync.videoId,\n          events: {\n            onStateChange: e => this.onPlayerStateChange(e),\n          },\n        });\n        this.props.unlockNextStep();\n      });\n    }\n  }\n\n  render() {\n    const {\n      app: { pending },\n      db: { artistsTypeahead },\n      sync: {\n        activeLine,\n        activePill,\n        distributionLines,\n        info,\n        isDistributionComplete,\n        linkSequenceMode,\n        lyrics,\n        pills,\n        step,\n        steps,\n        stats,\n        timestamps,\n        videoId,\n      },\n      connectSyncLine,\n      connectSyncPill,\n      deleteSyncPill,\n      handleFormInfo,\n      handleLyricsEdit,\n      handleSyncBoxMouseDown,\n      handleSyncBoxMouseUp,\n      handleSyncKeydown,\n      handleSyncKeyup,\n      handleResetSync,\n      handleVideoId,\n      linkPillsSequence,\n      location,\n      lockLyrics,\n      prepareLines,\n      resetPillLinks,\n      saveSync,\n      unlockNextStep,\n      unlockSpecificStep,\n    } = this.props;\n\n    if (pending.REQUEST_ARTISTS) {\n      return <Loading message=\"Preparing Sync...\" />;\n    }\n\n    // If save is in progress\n    if (step === 6) {\n      return (\n        <main className=\"container container--sync\">\n          <h1>Manage</h1>\n          <div className=\"manage-section--manage-success\">\n            <Icon type=\"check\" color=\"green\" size={96} />\n            <p>Song Successfully Created</p>\n            <button className=\"btn\" onClick={handleResetSync}>\n              Create New Song Distribution\n            </button>\n          </div>\n        </main>\n      );\n    }\n\n    return (\n      <RequirementWrapper>\n        <main className=\"container container--sync\">\n          <h1>Sync</h1>\n          <section className=\"sync__container\">\n            <div className=\"sync__group sync__group--left\">\n              <section\n                className=\"sync__video\"\n                id=\"video-container\"\n                ref={r => {\n                  this.youtubePlayerAnchor = r;\n                }}\n              >\n                <Icon type=\"youtube\" color=\"white\" size=\"72\" />\n              </section>\n              <Collapsible\n                title=\"4. Distribution Buttons\"\n                locked={steps[4].locked}\n                expanded={steps[4].expanded}\n                collapsed={!steps[4].expanded}\n                synced\n              >\n                <SyncStep4Buttons\n                  activePill={activePill}\n                  connectSyncPill={connectSyncPill}\n                  deleteSyncPill={deleteSyncPill}\n                  handleSyncBoxMouseDown={handleSyncBoxMouseDown}\n                  handleSyncBoxMouseUp={handleSyncBoxMouseUp}\n                  handleSyncKeydown={handleSyncKeydown}\n                  handleSyncKeyup={handleSyncKeyup}\n                  linkPillsSequence={linkPillsSequence}\n                  linkSequenceMode={linkSequenceMode}\n                  location={location}\n                  pills={pills}\n                  player={player}\n                  resetPillLinks={resetPillLinks}\n                  stats={stats}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"5. Confirm &amp; Save\"\n                locked={steps[5].locked}\n                expanded={steps[5].expanded}\n                collapsed={!steps[5].expanded}\n                synced\n              >\n                <SyncStep5Save\n                  info={info}\n                  pending={pending.SEND_SONG}\n                  saveSync={saveSync}\n                  unlockSpecificStep={unlockSpecificStep}\n                />\n              </Collapsible>\n            </div>\n            <div className=\"sync__group sync__group--right\">\n              <Collapsible\n                title=\"1. Video Id\"\n                locked={steps[1].locked}\n                expanded={steps[1].expanded}\n                collapsed={!steps[1].expanded}\n                synced\n              >\n                <SyncStep1VideoId\n                  handleVideoId={handleVideoId}\n                  loadYoutubeVideo={this.loadYoutubeVideo}\n                  videoId={videoId}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"2. Info\"\n                locked={steps[2].locked}\n                expanded={steps[2].expanded}\n                collapsed={!steps[2].expanded}\n                synced\n              >\n                <SyncStep2Info\n                  artistsTypeahead={artistsTypeahead}\n                  handleFormInfo={handleFormInfo}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"3. Lyrics\"\n                locked={steps[3].locked}\n                expanded={steps[3].expanded}\n                collapsed={!steps[3].expanded}\n                synced\n              >\n                <SyncStep3Lyrics\n                  handleLyricsEdit={handleLyricsEdit}\n                  lockLyrics={lockLyrics}\n                  lyrics={lyrics}\n                  prepareLines={prepareLines}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"4. Distribution\"\n                locked={steps[4].locked}\n                expanded={steps[4].expanded}\n                collapsed={!steps[4].expanded}\n                synced\n              >\n                <SyncStep4Distributions\n                  activeLine={activeLine}\n                  connectSyncLine={connectSyncLine}\n                  distributionLines={distributionLines}\n                  isDistributionComplete={isDistributionComplete}\n                  unlockSpecificStep={unlockSpecificStep}\n                  unlockNextStep={unlockNextStep}\n                />\n              </Collapsible>\n              <Collapsible\n                title=\"5. Verify\"\n                locked={steps[5].locked}\n                expanded={steps[5].expanded}\n                collapsed={!steps[5].expanded}\n                synced\n              >\n                <SyncStep5Verify\n                  currentTime={this.state.currentTime}\n                  distributionLines={distributionLines}\n                  timestamps={timestamps}\n                />\n              </Collapsible>\n            </div>\n          </section>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nSync.propTypes = {\n  db: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  connectSyncLine: PropTypes.func.isRequired,\n  connectSyncPill: PropTypes.func.isRequired,\n  deleteSyncPill: PropTypes.func.isRequired,\n  handleFormInfo: PropTypes.func.isRequired,\n  handleLyricsEdit: PropTypes.func.isRequired,\n  handleSyncBoxMouseDown: PropTypes.func.isRequired,\n  handleSyncBoxMouseUp: PropTypes.func.isRequired,\n  handleSyncKeydown: PropTypes.func.isRequired,\n  handleSyncKeyup: PropTypes.func.isRequired,\n  handleResetSync: PropTypes.func.isRequired,\n  handleVideoId: PropTypes.func.isRequired,\n  linkPillsSequence: PropTypes.func.isRequired,\n  loadArtists: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  lockLyrics: PropTypes.func.isRequired,\n  prepareLines: PropTypes.func.isRequired,\n  resetPillLinks: PropTypes.func.isRequired,\n  saveSync: PropTypes.func.isRequired,\n  sync: PropTypes.object.isRequired,\n  unlockNextStep: PropTypes.func.isRequired,\n  unlockSpecificStep: PropTypes.func.isRequired,\n};\n\nexport default Sync;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Sync from '../components/Sync';\n\nimport { artistsOperations } from '../../../../reducers/artists';\nimport { dbOperations } from '../../../../reducers/db';\nimport { syncOperations } from '../../../../reducers/sync';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  artists: state.artists,\n  db: state.db,\n  sync: state.sync,\n});\n\nconst mapDispatchToProps = {\n  ...artistsOperations,\n  ...dbOperations,\n  ...syncOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Sync)\n);\n","import SyncContainer from './containers/SyncContainer';\n\nexport default SyncContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import utility functions\nimport utils from '../../../../utils';\n\nconst ColorSheet = ({ colors }) => {\n  colors = Object.values(colors);\n  return (\n    <main className=\"container\">\n      <ul className=\"color-palette\">\n        {colors &&\n          colors.map(colorObj => (\n            <li\n              key={colorObj.id}\n              className={`palette background-color-${colorObj.number}`}\n            >\n              {colorObj.id}\n              <br />\n              {utils.humanize(colorObj.name, 'Capital')}\n              <br />\n              {colorObj.count} uses\n            </li>\n          ))}\n      </ul>\n    </main>\n  );\n};\n\nColorSheet.propTypes = {\n  colors: PropTypes.object,\n};\n\nColorSheet.defaultProps = {\n  colors: {},\n};\n\nexport default ColorSheet;\n","import React from 'react';\n\n// Import common components\nimport {\n  FavoriteIcon,\n  Icon,\n  LoadingIcon,\n  Switch,\n  Tabs,\n  Typeahead,\n  Collapsible,\n} from '../../../common';\n\nconst NOOP = () => {};\n\nconst ComponentSheet = () => (\n  <main className=\"container\">\n    <ul className=\"component-list\">\n      <li className=\"component-list__item\">\n        <h3 className=\"component-list__name\">Favorite Icon</h3>\n        <div className=\"component-list__example\">\n          <FavoriteIcon action={NOOP} id=\"1\" />\n          <FavoriteIcon action={NOOP} id=\"2\" state />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Heart shaped favorite icon</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: onClick function\n            </li>\n            <li className=\"component-list__argument\">\n              id: value the action function calls\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              className: additional classes (default: &#39;&#39;)\n            </li>\n            <li className=\"component-list__argument\">\n              size: string or number (default: 12)\n            </li>\n            <li className=\"component-list__argument\">\n              state: boolean that determines if heart is red or gray (default:\n              false)\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Icon</h3>\n        <div className=\"component-list__example\">\n          <Icon size={36} />\n        </div>\n        <div className=\"component-list__description\">\n          <p>See Icon tab for list of icons</p>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              type: the name of the icon (default: default)\n            </li>\n            <li className=\"component-list__argument\">\n              color: one of the default colors (default: default)\n            </li>\n            <li className=\"component-list__argument\">\n              size: string or number (default: 12)\n            </li>\n            <li className=\"component-list__argument\">\n              inline: boolean that determines if icon will be inline with text\n              (default: false)\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Loading Icon</h3>\n        <div className=\"component-list__example\">\n          <LoadingIcon />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Colored loading icon</p>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              size: tiny, small, medium (Default), large\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Switch</h3>\n        <div className=\"component-list__example\">\n          <Switch action={NOOP} /> <Switch action={NOOP} checked />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Switch button to indicate if a feature is on</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: function to be exectued when switch is triggers\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              labels: object with left and right values\n            </li>\n            <li className=\"component-list__argument\">\n              checked: boolean that determines if switch is on\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Tabs</h3>\n        <div className=\"component-list__example\">\n          <Tabs action={NOOP} tabs={['Tab 1', 'Tab 2']}>\n            Content goes here as a component child\n          </Tabs>\n        </div>\n\n        <div className=\"component-list__description\">\n          <p>Wrapper component with selectable tabs</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              active: what tab is active (default: the first tab)\n            </li>\n            <li className=\"component-list__argument\">\n              iconCondition: boolean to display the icon\n            </li>\n            <li className=\"component-list__argument\">\n              icon: icon component to be displayed\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Typeahead</h3>\n        <div className=\"component-list__example\">\n          <Typeahead\n            action={NOOP}\n            name=\"example\"\n            suggestions={['Avocado', 'Banana', 'Cranberry']}\n          />\n        </div>\n        <div className=\"component-list__description\">\n          <p>Input field with autocomplete datalist option</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              action: function trigged when input is selected\n            </li>\n            <li className=\"component-list__argument\">\n              name: name of the datalist/input\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              className: additional classes (default: &#39;&#39;)\n            </li>\n            <li className=\"component-list__argument\">\n              placeholder: input field placeholder (default: Searching...)\n            </li>\n            <li className=\"component-list__argument\">\n              suggestions: list of suggestions to autocomplete in the datalist\n              (default: [])\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>Collapsible</h3>\n        <div className=\"component-list__example\">\n          <Collapsible title=\"Locked Collapsible\" locked>\n            Content\n          </Collapsible>\n          <Collapsible title=\"Locked Expanded Collapsible\" locked expanded>\n            Content\n          </Collapsible>\n          <Collapsible title=\"Collapsed Collapsible\">Content</Collapsible>\n          <Collapsible title=\"Expanded Collapsible\" expanded>\n            Content\n          </Collapsible>\n        </div>\n        <div className=\"component-list__description\">\n          <p>Collapsible panel with children content</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              title: the header of the panel\n            </li>\n            <li className=\"component-list__argument\">\n              children elements to be rendered when expanded\n            </li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">\n              collapsed: makes panel collapse (default)\n            </li>\n            <li className=\"component-list__argument\">\n              expanded: makes panel expand\n            </li>\n            <li className=\"component-list__argument\">\n              locked: locks panel action keeping it expanded or collapsed\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li className=\"component-list__item\">\n        <h3>New Component</h3>\n        <div className=\"component-list__example\">\n          {/* Component goes here */}\n        </div>\n        <div className=\"component-list__description\">\n          <p>Description</p>\n          <b>Requires:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n          <b>Accepts:</b>\n          <ul className=\"component-list__arguments\">\n            <li className=\"component-list__argument\">?</li>\n          </ul>\n        </div>\n      </li>\n    </ul>\n  </main>\n);\n\nexport default ComponentSheet;\n","import React from 'react';\n\n// Import common components\nimport { Icon } from '../../../common';\n// Import utility functions\nimport ICONS from '../../../../utils/icons';\n\nconst IconSheet = () => (\n  <main className=\"container\">\n    <ul className=\"icon-list\">\n      {Object.keys(ICONS).map(name => (\n        <li key={name} className=\"icon-list__item\">\n          <span className=\"icon-list__name\">{name.toLowerCase()}</span>\n          <Icon type={name} size=\"36\" />\n        </li>\n      ))}\n    </ul>\n  </main>\n);\n\nexport default IconSheet;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport ColorSheet from './ColorSheet';\nimport ComponentSheet from './ComponentsSheet';\nimport IconSheet from './IconSheet';\n// Import common components\nimport { RequirementWrapper, Tabs, LoadingWrapper } from '../../../common';\n\nclass UIReference extends Component {\n  componentDidMount() {\n    this.props.loadColors();\n  }\n\n  render() {\n    const {\n      admin: { uiReferenceTab },\n      app,\n      db: { colors },\n    } = this.props;\n\n    const TABS = ['Colors', 'Components', 'Icons'];\n\n    let tabContent = null;\n    switch (uiReferenceTab) {\n      case 'Components':\n        tabContent = <ComponentSheet />;\n        break;\n      case 'Icons':\n        tabContent = <IconSheet />;\n        break;\n      default:\n        tabContent = <ColorSheet colors={colors} />;\n    }\n\n    return (\n      <RequirementWrapper requirements={['admin']}>\n        <main className=\"container container--artists\">\n          <h1>UI Reference</h1>\n          <Tabs\n            tabs={TABS}\n            action={this.props.switchUIReferenceTab}\n            active={uiReferenceTab}\n          >\n            <LoadingWrapper pending={app.pending.REQUEST_COLORS}>\n              {tabContent}\n            </LoadingWrapper>\n          </Tabs>\n        </main>\n      </RequirementWrapper>\n    );\n  }\n}\n\nUIReference.propTypes = {\n  admin: PropTypes.object.isRequired,\n  app: PropTypes.object.isRequired,\n  db: PropTypes.object.isRequired,\n  loadColors: PropTypes.func.isRequired,\n  switchUIReferenceTab: PropTypes.func.isRequired,\n};\n\nUIReference.defaultProps = {};\n\nexport default UIReference;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport UIReference from '../components/UIReference';\n\nimport { adminOperations } from '../../../../reducers/admin';\nimport { dbOperations } from '../../../../reducers/db';\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  app: state.app,\n  auth: state.auth,\n  db: state.db,\n});\n\nconst mapDispatchToProps = {\n  ...adminOperations,\n  ...dbOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UIReference)\n);\n","import UIReferenceContainer from './containers/UIReferenceContainer';\n\nexport default UIReferenceContainer;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass Lab extends Component {\n  render() {\n    return <h1>Lab</h1>;\n  }\n}\n\nLab.propTypes = {};\n\nLab.defaultProps = {};\n\nexport default Lab;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Lab from '../components/Lab';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Lab)\n);\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass LearnMore extends Component {\n  render() {\n    return <h1>LearnMore</h1>;\n  }\n}\n\nLearnMore.propTypes = {};\n\nLearnMore.defaultProps = {};\n\nexport default LearnMore;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport LearnMore from '../components/LearnMore';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LearnMore)\n);\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass MyArtists extends Component {\n  render() {\n    return <h1>MyArtists</h1>;\n  }\n}\n\nMyArtists.propTypes = {};\n\nMyArtists.defaultProps = {};\n\nexport default MyArtists;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport MyArtists from '../components/MyArtists';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MyArtists)\n);\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass MyDistributions extends Component {\n  render() {\n    return <h1>MyDistributions</h1>;\n  }\n}\n\nMyDistributions.propTypes = {};\n\nMyDistributions.defaultProps = {};\n\nexport default MyDistributions;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport MyDistributions from '../components/MyDistributions';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MyDistributions)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Test extends Component {\n  componentDidMount() {\n    // nothing\n  }\n  render() {\n    console.log(this.props);\n\n    const stringify = json =>\n      JSON.stringify(JSON.parse(JSON.stringify(json)), null, 2);\n\n    return (\n      <main className=\"container\">\n        <h1>Test/Temp</h1>\n        <div className=\"textareas\">\n          <textarea readOnly value={stringify(this.props.temp.test1)} />\n          <textarea readOnly value={stringify(this.props.temp.test2)} />\n          <textarea readOnly value={stringify(this.props.temp.test3)} />\n          <textarea readOnly value={stringify(this.props.temp.test4)} />\n          <textarea readOnly value={stringify(this.props.temp.test5)} />\n        </div>\n        <div className=\"buttons\">\n          <button onClick={() => this.props.testFunction1()}>\n            Run Test Function1\n          </button>\n          <button onClick={() => this.props.testFunction2()}>\n            Run Test Function2\n          </button>\n        </div>\n      </main>\n    );\n  }\n}\n\nTest.propTypes = {\n  temp: PropTypes.object.isRequired,\n  test1: PropTypes.string.isRequired,\n  test2: PropTypes.number.isRequired,\n  test3: PropTypes.bool.isRequired,\n  test4: PropTypes.array.isRequired,\n  test5: PropTypes.object.isRequired,\n  testFunction1: PropTypes.func.isRequired,\n  testFunction2: PropTypes.func.isRequired,\n};\n\nTest.defaultProps = {};\n\nexport default Test;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Temp from '../components/Temp';\n\nimport { tempOperations } from '../reducers/temp';\n\nconst mapStateToProps = state => ({\n  temp: state.temp,\n});\n\nconst mapDispatchToProps = {\n  ...tempOperations,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Temp)\n);\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Artists from './app/pages/artists';\nimport Artist from './app/pages/artist';\nimport Distribute from './app/pages/distribute';\nimport Header from './app/pages/header';\nimport Home from './app/pages/home';\nimport Idols from './app/pages/idols';\nimport Lyrics from './app/pages/lyrics';\nimport Manage from './app/pages/manage';\nimport Songs from './app/pages/songs';\nimport Sync from './app/pages/sync';\nimport UIReference from './app/pages/ui-reference';\n\nimport { ErrorModal } from './app/common/index';\n\nimport LabContainer from './containers/LabContainer';\nimport LearnMoreContainer from './containers/LearnMoreContainer';\nimport MyArtistsContainer from './containers/MyArtistsContainer';\nimport MyDistributionsContainer from './containers/MyDistributionsContainer';\nimport TempContainer from './containers/TempContainer';\n\nimport './stylesheets/index.css';\n\nconst routes = (\n  <Router className=\"bola\">\n    <div className=\"app\">\n      <Header />\n      <ErrorModal />\n      <Route path=\"/artists/:artistId\" component={Artist} />\n      <Route exact path=\"/artists\" component={Artists} />\n      <Route path=\"/distribute\" component={Distribute} />\n      <Route path=\"/idols\" component={Idols} />\n      <Route path=\"/lab\" component={LabContainer} />\n      <Route path=\"/learn-more\" component={LearnMoreContainer} />\n      <Route path=\"/lyrics\" component={Lyrics} />\n      <Route path=\"/songs\" component={Songs} />\n\n      <Route path=\"/admin/manage\" component={Manage} />\n      <Route path=\"/admin/sync\" component={Sync} />\n      <Route path=\"/admin/temp\" component={TempContainer} />\n      <Route path=\"/admin/ui-reference\" component={UIReference} />\n\n      <Route path=\"/user/my-artists\" component={MyArtistsContainer} />\n      <Route\n        path=\"/user/my-distributions\"\n        component={MyDistributionsContainer}\n      />\n\n      <Route exact path=\"/\" component={Home} />\n    </div>\n  </Router>\n);\n\nexport default routes;\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ReduxToastr from 'react-redux-toastr';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport store from './store';\nimport routes from './routes';\n\nimport './stylesheets/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Fragment>\n      {routes}\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates\n        position=\"bottom-center\"\n        transitionIn=\"bounceIn\"\n        transitionOut=\"bounceOut\"\n        progressBar\n      />\n    </Fragment>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/loading.d6605f0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-lock.4e4f8dbd.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-plus.5cbc8658.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-leader.6a295198.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-vocalist.a995fa3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-rapper.269fbdb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-main-dancer.581fc18e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-vocalist.7c410976.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-rapper.0735854b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lead-dancer.b38316e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-vocalist.131d4b70.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-dancer.a9fd47b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rapper.cb032f09.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-center.83737fe1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-visual.187fc8b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-maknae.afb2e497.svg\";"],"sourceRoot":""}